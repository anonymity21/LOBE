{
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/ratte_seed_v5/arithsem.b779ba46bc4360fa.mlir --test-func-erase-arg --remove-dead-values --test-arith-emulate-wide-int=\"widest-int-supported=8\" --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-vector-chained-reduction-folding-patterns --test-vector-transferop-opt --arith-emulate-unsupported-floats --test-scf-for-utils=\"test-replace-with-new-yields\" --test-function-pass --composite-fixed-point-pass --sroa --canonicalize=\"test-convergence top-down=0\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-result --inline --symbol-dce --test-func-set-type -lower-vector-mask --symbol-dce --canonicalize --loop-invariant-code-motion --cse --test-function-pass --test-create-vector-broadcast --duplicate-function-elimination --inline --test-function-pass --loop-invariant-subset-hoisting --loop-invariant-subset-hoisting --test-vector-to-vector-lowering -lower-vector-multi-reduction=\"lowering-strategy=inner-parallel\" --test-vector-contraction-prepare-for-mmt-lowering --test-func-set-type --duplicate-function-elimination --mem2reg=\"region-simplify\" --remove-dead-values --test-function-pass --test-vector-unrolling-patterns --test-func-erase-result --test-vector-chained-reduction-folding-patterns --test-func-erase-arg --sccp --test-func-insert-arg --test-vector-extract-strided-slice-lowering --test-vector-transfer-collapse-inner-most-dims --mem2reg=\"region-simplify\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-vector-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sroa --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "%403=0",
        "test_line": "%403=140066053973984"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/ratte_seed_v5/arithsem.b779ba46bc4360fa.mlir --scf-for-loop-specialization --scf-for-loop-specialization --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-func-erase-arg --test-vector-contraction-prepare-for-mmt-lowering --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --scf-for-loop-specialization --test-vector-to-vector-lowering --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-scf-for-utils --test-func-insert-result --control-flow-sink --topological-sort --test-vector-chained-reduction-folding-patterns --test-vector-unrolling-patterns=\"unroll-based-on-type unroll-order=0,3,1,2\" --test-vector-chained-reduction-folding-patterns --scf-for-loop-peeling=\"peel-front\" --test-func-set-type --test-func-insert-result --scf-for-loop-specialization --canonicalize --control-flow-sink --test-vector-unrolling-patterns --mem2reg --int-range-optimizations --arith-int-range-narrowing --arith-int-range-narrowing=\"int-bitwidths-supported=32\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-vector-chained-reduction-folding-patterns --test-function-pass --remove-dead-values --test-vector-extract-strided-slice-lowering --mem2reg=\"region-simplify\" --topological-sort --test-vector-linearize=\"target-vector-bitwidth=0\" --sroa --test-vector-extract-strided-slice-lowering --sccp --test-func-insert-result --test-vector-unrolling-patterns --test-vector-linearize=\"target-vector-bitwidth=128\" --test-func-erase-arg --test-vector-transferop-opt --test-vector-transferop-opt --sroa --test-vector-unrolling-patterns=\"unroll-based-on-type unroll-order=0,3,1,2\" --inline --test-func-insert-arg --sroa --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-vector-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --topological-sort --symbol-dce --arith-unsigned-when-equivalent --int-range-optimizations --test-func-insert-arg --control-flow-sink --topological-sort --composite-fixed-point-pass --sccp --canonicalize=\"test-convergence top-down=0\" --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "%403=0",
        "test_line": "%403=140403919349728"
    }
}
