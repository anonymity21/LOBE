{
    "llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) \nSignalHandler(int, siginfo_t*, void*) Signals.cpp:0:0\n__restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x14420)\nraise /build/glibc-e2p3jK/glibc-2.31/signal/../sysdeps/unix/sysv/linux/raise.c:51:1\nabort /build/glibc-e2p3jK/glibc-2.31/stdlib/abort.c:81:7\nget_sysdep_segment_value /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:509:8\n_nl_load_domain /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:970:34\n(/lib/x86_64-linux-gnu/libc.so.6+0x33fd6)\n(anonymous namespace)::TestMemRefStrideCalculation::runOnOperation() TestMemRefStrideCalculation.cpp:0:0\nmlir::detail::OpToOpPassAdaptor::run(mlir::Pass*, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int) \nmlir::detail::OpToOpPassAdaptor::runPipeline(mlir::OpPassManager&, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int, mlir::PassInstrumentor*, mlir::PassInstrumentation::PipelineParentInfo const*) \nmlir::PassManager::run(mlir::Operation*) \nperformActions(llvm::raw_ostream&, std::shared_ptr<llvm::SourceMgr> const&, mlir::MLIRContext*, mlir::MlirOptMainConfig const&) MlirOptMain.cpp:0:0\nprocessBuffer(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::MlirOptMainConfig const&, mlir::DialectRegistry&, llvm::ThreadPoolInterface*) MlirOptMain.cpp:0:0\nllvm::LogicalResult llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>::callback_fn<mlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&)::'lambda'(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>(long, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&) MlirOptMain.cpp:0:0\nmlir::splitAndProcessBuffer(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>, llvm::raw_ostream&, llvm::StringRef, llvm::StringRef) \nmlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, llvm::StringRef, mlir::DialectRegistry&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, mlir::DialectRegistry&) \nmain \n__libc_start_main /build/glibc-e2p3jK/glibc-2.31/csu/../csu/libc-start.c:342:3\n_start ": [
        "//workspace/mlir-inconsistent/crash_file/tosa.d265a16c412cf5bb.mlir.4a542318185fc74c.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.d265a16c412cf5bb.mlir.4a542318185fc74c.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.d265a16c412cf5bb.mlir.bf89b1ca17f4ec23.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.d265a16c412cf5bb.mlir.acd44e303b211da7.mlir"
    ],
    "llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) \nSignalHandler(int, siginfo_t*, void*) Signals.cpp:0:0\n__restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x14420)\nraise /build/glibc-e2p3jK/glibc-2.31/signal/../sysdeps/unix/sysv/linux/raise.c:51:1\nabort /build/glibc-e2p3jK/glibc-2.31/stdlib/abort.c:81:7\nget_sysdep_segment_value /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:509:8\n_nl_load_domain /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:970:34\n(/lib/x86_64-linux-gnu/libc.so.6+0x33fd6)\n(anonymous namespace)::aliasingFuncOpBBArgsAnalysis(mlir::func::FuncOp, mlir::bufferization::OneShotAnalysisState&, mlir::bufferization::func_ext::FuncAnalysisState&) OneShotModuleBufferize.cpp:0:0\nmlir::bufferization::analyzeModuleOp(mlir::ModuleOp, mlir::bufferization::OneShotAnalysisState&, mlir::bufferization::BufferizationStatistics*) \nmlir::bufferization::insertTensorCopies(mlir::Operation*, mlir::bufferization::OneShotBufferizationOptions const&, mlir::bufferization::BufferizationStatistics*) \nmlir::bufferization::runOneShotModuleBufferize(mlir::ModuleOp, mlir::bufferization::OneShotBufferizationOptions const&, mlir::bufferization::BufferizationStatistics*) \n(anonymous namespace)::OneShotBufferizePass::runOnOperation() Bufferize.cpp:0:0\nmlir::detail::OpToOpPassAdaptor::run(mlir::Pass*, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int) \nmlir::detail::OpToOpPassAdaptor::runPipeline(mlir::OpPassManager&, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int, mlir::PassInstrumentor*, mlir::PassInstrumentation::PipelineParentInfo const*) \nmlir::PassManager::run(mlir::Operation*) \nperformActions(llvm::raw_ostream&, std::shared_ptr<llvm::SourceMgr> const&, mlir::MLIRContext*, mlir::MlirOptMainConfig const&) MlirOptMain.cpp:0:0\nprocessBuffer(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::MlirOptMainConfig const&, mlir::DialectRegistry&, llvm::ThreadPoolInterface*) MlirOptMain.cpp:0:0\nllvm::LogicalResult llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>::callback_fn<mlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&)::'lambda'(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>(long, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&) MlirOptMain.cpp:0:0\nmlir::splitAndProcessBuffer(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>, llvm::raw_ostream&, llvm::StringRef, llvm::StringRef) \nmlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, llvm::StringRef, mlir::DialectRegistry&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, mlir::DialectRegistry&) \nmain \n__libc_start_main /build/glibc-e2p3jK/glibc-2.31/csu/../csu/libc-start.c:342:3\n_start ": [
        "//workspace/mlir-inconsistent/crash_file/tosa.d265a16c412cf5bb.mlir.badc1638293121f0.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.d265a16c412cf5bb.mlir.badc1638293121f0.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.d265a16c412cf5bb.mlir.56bfbb4cc973ab89.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.d265a16c412cf5bb.mlir.2566b5426a89c659.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.d265a16c412cf5bb.mlir.fb4c7602172d1ec4.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.d265a16c412cf5bb.mlir.043767d16827ea30.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.d265a16c412cf5bb.mlir.77316b8500bf7e46.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.d265a16c412cf5bb.mlir.c523f864ef7f4731.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.d265a16c412cf5bb.mlir.916bc954cd372a1b.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.d265a16c412cf5bb.mlir.159a5b4b8ca753e7.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.d265a16c412cf5bb.mlir.8fc5edf0577eb31c.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.d265a16c412cf5bb.mlir.9804237bef7e7e63.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.d265a16c412cf5bb.mlir.4153b7a188c5bb2d.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.d265a16c412cf5bb.mlir.903d419c8000466a.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.d265a16c412cf5bb.mlir.ecad4544f1048bfb.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.d265a16c412cf5bb.mlir.1c7e976ce1070c8f.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.d265a16c412cf5bb.mlir.2433b64bca056d24.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.d265a16c412cf5bb.mlir.be08a3d0e8a6097d.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.d265a16c412cf5bb.mlir.72560554f891c465.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.d265a16c412cf5bb.mlir.52b6f11c09911105.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.d265a16c412cf5bb.mlir.69e788cdf1c9d035.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.d265a16c412cf5bb.mlir.fd57fa4bc01e68bf.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.d265a16c412cf5bb.mlir.225957a420c0f827.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.d265a16c412cf5bb.mlir.43dc1ed619dc8297.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.d265a16c412cf5bb.mlir.6852a99b734e14b8.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.d265a16c412cf5bb.mlir.dbe5cf4aa287aaf7.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.d265a16c412cf5bb.mlir.751d38da7f340a8f.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.d265a16c412cf5bb.mlir.7f6f601beda8530e.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.d265a16c412cf5bb.mlir.5e70cf1088a20067.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.d265a16c412cf5bb.mlir.d3da81ef7c978b68.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.d265a16c412cf5bb.mlir.ef69adafedb47868.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.d265a16c412cf5bb.mlir.f94bed3d525e85d0.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.d265a16c412cf5bb.mlir.4b5a9c91bb7fd81f.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.d265a16c412cf5bb.mlir.7827225cc76b33f4.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.d265a16c412cf5bb.mlir.24c6e6842911d5cc.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.d265a16c412cf5bb.mlir.f50addfd452d5135.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.d265a16c412cf5bb.mlir.af8dad307656a2b3.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.d265a16c412cf5bb.mlir.2601cef0ef36f633.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.d265a16c412cf5bb.mlir.fac52eab0b9653cd.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.d265a16c412cf5bb.mlir.d43b4e38923c748b.mlir"
    ]
}
{
    "llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) \nSignalHandler(int, siginfo_t*, void*) Signals.cpp:0:0\n__restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x14420)\nraise /build/glibc-e2p3jK/glibc-2.31/signal/../sysdeps/unix/sysv/linux/raise.c:51:1\nabort /build/glibc-e2p3jK/glibc-2.31/stdlib/abort.c:81:7\nget_sysdep_segment_value /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:509:8\n_nl_load_domain /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:970:34\n(/lib/x86_64-linux-gnu/libc.so.6+0x33fd6)\n(anonymous namespace)::TestMemRefStrideCalculation::runOnOperation() TestMemRefStrideCalculation.cpp:0:0\nmlir::detail::OpToOpPassAdaptor::run(mlir::Pass*, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int) \nmlir::detail::OpToOpPassAdaptor::runPipeline(mlir::OpPassManager&, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int, mlir::PassInstrumentor*, mlir::PassInstrumentation::PipelineParentInfo const*) \nmlir::PassManager::run(mlir::Operation*) \nperformActions(llvm::raw_ostream&, std::shared_ptr<llvm::SourceMgr> const&, mlir::MLIRContext*, mlir::MlirOptMainConfig const&) MlirOptMain.cpp:0:0\nprocessBuffer(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::MlirOptMainConfig const&, mlir::DialectRegistry&, llvm::ThreadPoolInterface*) MlirOptMain.cpp:0:0\nllvm::LogicalResult llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>::callback_fn<mlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&)::'lambda'(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>(long, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&) MlirOptMain.cpp:0:0\nmlir::splitAndProcessBuffer(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>, llvm::raw_ostream&, llvm::StringRef, llvm::StringRef) \nmlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, llvm::StringRef, mlir::DialectRegistry&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, mlir::DialectRegistry&) \nmain \n__libc_start_main /build/glibc-e2p3jK/glibc-2.31/csu/../csu/libc-start.c:342:3\n_start ": [
        "//workspace/mlir-inconsistent/crash_file/tosa.04875f49a20fd15f.mlir.e0b9321b8292b444.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.04875f49a20fd15f.mlir.e0b9321b8292b444.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.04875f49a20fd15f.mlir.a7db715e14ff114a.mlir"
    ],
    "llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) \nSignalHandler(int, siginfo_t*, void*) Signals.cpp:0:0\n__restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x14420)\nraise /build/glibc-e2p3jK/glibc-2.31/signal/../sysdeps/unix/sysv/linux/raise.c:51:1\nabort /build/glibc-e2p3jK/glibc-2.31/stdlib/abort.c:81:7\nget_sysdep_segment_value /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:509:8\n_nl_load_domain /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:970:34\n(/lib/x86_64-linux-gnu/libc.so.6+0x33fd6)\n(anonymous namespace)::aliasingFuncOpBBArgsAnalysis(mlir::func::FuncOp, mlir::bufferization::OneShotAnalysisState&, mlir::bufferization::func_ext::FuncAnalysisState&) OneShotModuleBufferize.cpp:0:0\nmlir::bufferization::analyzeModuleOp(mlir::ModuleOp, mlir::bufferization::OneShotAnalysisState&, mlir::bufferization::BufferizationStatistics*) \nmlir::bufferization::insertTensorCopies(mlir::Operation*, mlir::bufferization::OneShotBufferizationOptions const&, mlir::bufferization::BufferizationStatistics*) \n(anonymous namespace)::TestTensorCopyInsertionPass::runOnOperation() TestTensorCopyInsertion.cpp:0:0\nmlir::detail::OpToOpPassAdaptor::run(mlir::Pass*, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int) \nmlir::detail::OpToOpPassAdaptor::runPipeline(mlir::OpPassManager&, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int, mlir::PassInstrumentor*, mlir::PassInstrumentation::PipelineParentInfo const*) \nmlir::PassManager::run(mlir::Operation*) \nperformActions(llvm::raw_ostream&, std::shared_ptr<llvm::SourceMgr> const&, mlir::MLIRContext*, mlir::MlirOptMainConfig const&) MlirOptMain.cpp:0:0\nprocessBuffer(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::MlirOptMainConfig const&, mlir::DialectRegistry&, llvm::ThreadPoolInterface*) MlirOptMain.cpp:0:0\nllvm::LogicalResult llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>::callback_fn<mlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&)::'lambda'(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>(long, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&) MlirOptMain.cpp:0:0\nmlir::splitAndProcessBuffer(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>, llvm::raw_ostream&, llvm::StringRef, llvm::StringRef) \nmlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, llvm::StringRef, mlir::DialectRegistry&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, mlir::DialectRegistry&) \nmain \n__libc_start_main /build/glibc-e2p3jK/glibc-2.31/csu/../csu/libc-start.c:342:3\n_start ": [
        "//workspace/mlir-inconsistent/crash_file/tosa.04875f49a20fd15f.mlir.a33f875061a63863.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.04875f49a20fd15f.mlir.a33f875061a63863.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.04875f49a20fd15f.mlir.760231ce547f2214.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.04875f49a20fd15f.mlir.d45731869c5c2114.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.04875f49a20fd15f.mlir.95942c7113542411.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.04875f49a20fd15f.mlir.2b41cb69dee26e1b.mlir"
    ],
    "llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) \nSignalHandler(int, siginfo_t*, void*) Signals.cpp:0:0\n__restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x14420)\nraise /build/glibc-e2p3jK/glibc-2.31/signal/../sysdeps/unix/sysv/linux/raise.c:51:1\nabort /build/glibc-e2p3jK/glibc-2.31/stdlib/abort.c:81:7\nget_sysdep_segment_value /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:509:8\n_nl_load_domain /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:970:34\n(/lib/x86_64-linux-gnu/libc.so.6+0x33fd6)\n(anonymous namespace)::aliasingFuncOpBBArgsAnalysis(mlir::func::FuncOp, mlir::bufferization::OneShotAnalysisState&, mlir::bufferization::func_ext::FuncAnalysisState&) OneShotModuleBufferize.cpp:0:0\nmlir::bufferization::analyzeModuleOp(mlir::ModuleOp, mlir::bufferization::OneShotAnalysisState&, mlir::bufferization::BufferizationStatistics*) \nmlir::bufferization::insertTensorCopies(mlir::Operation*, mlir::bufferization::OneShotBufferizationOptions const&, mlir::bufferization::BufferizationStatistics*) \nmlir::bufferization::runOneShotModuleBufferize(mlir::ModuleOp, mlir::bufferization::OneShotBufferizationOptions const&, mlir::bufferization::BufferizationStatistics*) \n(anonymous namespace)::OneShotBufferizePass::runOnOperation() Bufferize.cpp:0:0\nmlir::detail::OpToOpPassAdaptor::run(mlir::Pass*, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int) \nmlir::detail::OpToOpPassAdaptor::runPipeline(mlir::OpPassManager&, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int, mlir::PassInstrumentor*, mlir::PassInstrumentation::PipelineParentInfo const*) \nmlir::PassManager::run(mlir::Operation*) \nperformActions(llvm::raw_ostream&, std::shared_ptr<llvm::SourceMgr> const&, mlir::MLIRContext*, mlir::MlirOptMainConfig const&) MlirOptMain.cpp:0:0\nprocessBuffer(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::MlirOptMainConfig const&, mlir::DialectRegistry&, llvm::ThreadPoolInterface*) MlirOptMain.cpp:0:0\nllvm::LogicalResult llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>::callback_fn<mlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&)::'lambda'(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>(long, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&) MlirOptMain.cpp:0:0\nmlir::splitAndProcessBuffer(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>, llvm::raw_ostream&, llvm::StringRef, llvm::StringRef) \nmlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, llvm::StringRef, mlir::DialectRegistry&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, mlir::DialectRegistry&) \nmain \n__libc_start_main /build/glibc-e2p3jK/glibc-2.31/csu/../csu/libc-start.c:342:3\n_start ": [
        "//workspace/mlir-inconsistent/crash_file/tosa.04875f49a20fd15f.mlir.a33f875061a63863.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.04875f49a20fd15f.mlir.a33f875061a63863.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.04875f49a20fd15f.mlir.a33f875061a63863.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.04875f49a20fd15f.mlir.a33f875061a63863.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.04875f49a20fd15f.mlir.96e06dc7fded9e7a.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.04875f49a20fd15f.mlir.d11b8904bf5e1039.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.04875f49a20fd15f.mlir.d11b8904bf5e1039.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.04875f49a20fd15f.mlir.1dfadb4b50ef4eff.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.04875f49a20fd15f.mlir.1dfadb4b50ef4eff.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.04875f49a20fd15f.mlir.1dfadb4b50ef4eff.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.04875f49a20fd15f.mlir.756e1fcc96b19c16.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.04875f49a20fd15f.mlir.92d1df9ebcd46745.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.04875f49a20fd15f.mlir.8150e40448693647.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.04875f49a20fd15f.mlir.8a582d168eb8818c.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.04875f49a20fd15f.mlir.760231ce547f2214.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.04875f49a20fd15f.mlir.f8ccd80939e33292.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.04875f49a20fd15f.mlir.4ce4f30cb8f38709.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.04875f49a20fd15f.mlir.c294db6a06867ad9.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.04875f49a20fd15f.mlir.c294db6a06867ad9.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.04875f49a20fd15f.mlir.7384dcb0ab8fe843.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.04875f49a20fd15f.mlir.6cba37ec1d9dd14a.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.04875f49a20fd15f.mlir.1219a74375f87072.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.04875f49a20fd15f.mlir.d45731869c5c2114.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.04875f49a20fd15f.mlir.d45731869c5c2114.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.04875f49a20fd15f.mlir.ec93b3484e47a200.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.04875f49a20fd15f.mlir.65794c315c550552.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.04875f49a20fd15f.mlir.65794c315c550552.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.04875f49a20fd15f.mlir.ca70da85898bd43a.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.04875f49a20fd15f.mlir.95942c7113542411.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.04875f49a20fd15f.mlir.95942c7113542411.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.04875f49a20fd15f.mlir.2b41cb69dee26e1b.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.04875f49a20fd15f.mlir.6c9aa58e6e4917a9.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.04875f49a20fd15f.mlir.6c9aa58e6e4917a9.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.04875f49a20fd15f.mlir.1f42191399e19cc1.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.04875f49a20fd15f.mlir.af21bfd12f2463c6.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.04875f49a20fd15f.mlir.af21bfd12f2463c6.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.04875f49a20fd15f.mlir.cc42dc9cc86b399d.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.04875f49a20fd15f.mlir.cc42dc9cc86b399d.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.04875f49a20fd15f.mlir.c7aa7925d2a85848.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.04875f49a20fd15f.mlir.557cedd3c8d2ba1a.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.04875f49a20fd15f.mlir.557cedd3c8d2ba1a.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.04875f49a20fd15f.mlir.4875e566c6bf15f6.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.04875f49a20fd15f.mlir.108ca887deaf31ec.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.04875f49a20fd15f.mlir.2e8fb86cc64f8ea4.mlir"
    ]
}
