{
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v3/tosa.417942caad18b023.mlir --composite-fixed-point-pass --test-func-erase-arg --test-func-erase-arg --tosa-reduce-transposes --tosa-optional-decompositions --topological-sort --loop-invariant-subset-hoisting --symbol-dce --inline --tosa-make-broadcastable --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --sccp --loop-invariant-code-motion --test-func-erase-result --test-func-erase-result --arith-unsigned-when-equivalent --test-func-insert-result --fold-tensor-subset-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --linalg-fold-unit-extent-dims --linalg-fuse-elementwise-ops --linalg-generalize-named-ops --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --resolve-ranked-shaped-type-result-dims --arith-expand=\"include-bf16\" --test-linalg-pad-fusion --normalize-memrefs --resolve-ranked-shaped-type-result-dims --int-range-optimizations --linalg-named-op-conversion --sroa --control-flow-sink --expand-strided-metadata --arith-unsigned-when-equivalent --cse --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --expand-strided-metadata --scf-forall-to-parallel --test-function-pass --test-func-erase-arg --test-memref-dependence-check --memref-expand --expand-strided-metadata --scf-parallel-loop-tiling=\"parallel-loop-tile-sizes=1,4 no-min-max-bounds=true\" --arith-emulate-wide-int --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --fold-memref-alias-ops --expand-realloc --scf-parallel-loop-fusion --loop-invariant-code-motion --scf-forall-to-for --test-func-insert-arg --topological-sort --scf-for-loop-range-folding --loop-invariant-subset-hoisting --canonicalize --scf-forall-to-parallel --test-scf-pipelining --test-scf-if-utils --test-func-set-type --test-arith-emulate-wide-int --duplicate-function-elimination --test-scf-while-op-builder --arith-expand --mem2reg=\"region-simplify\" --fold-memref-alias-ops --loop-invariant-code-motion --scf-parallel-loop-tiling=\"parallel-loop-tile-sizes=1,4 no-min-max-bounds=true\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --sccp --control-flow-sink --test-func-erase-arg --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-arg --test-func-erase-arg --symbol-dce --loop-invariant-code-motion --loop-invariant-subset-hoisting --mem2reg=\"region-simplify\" --sccp --loop-invariant-code-motion --test-func-erase-result --duplicate-function-elimination --test-func-erase-result --sccp --test-func-erase-arg --loop-invariant-subset-hoisting --mem2reg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22],\n[22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22],\n[22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22],\n[22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22],\n[22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22],\n[22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22],\n[22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22],\n[22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22],\n[22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22],\n[22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22],\n[22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22],\n[22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22],\n[22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22],\n[22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22],\n[22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22],\n[22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22],\n[22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22],\n[22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22],\n[22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22],\n[22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22],\n[22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22],\n[22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22],\n[22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22],\n[22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22,    22]]]",
        "test_line": "[[[22,    22,    22,    22,    22,    22,    22,    22,    -9.56653e+08,    21907,    -9.56651e+08,    21907,    -9.56645e+08,    21907,    -9.56641e+08,    21907,    22,    22,    22],\n[22,    22,    22,    22,    22,    22,    22,    22,    0,    0,    0,    0,    0,    0,    0,    -9.4111e+08,    22,    22,    22],\n[22,    22,    22,    22,    22,    22,    22,    22,    0,    0,    21907,    -9.5649e+08,    21907,    -9.56863e+08,    21907,    -9.56653e+08,    22,    22,    22],\n[22,    22,    22,    22,    22,    22,    22,    22,    -9.56858e+08,    -9.4111e+08,    21907,    0,    32,    21907,    -9.56858e+08,    21907,    22,    22,    22],\n[22,    22,    22,    22,    22,    22,    22,    22,    21907,    -9.56641e+08,    21907,    0,    0,    -9.56664e+08,    21907,    -9.56663e+08,    22,    22,    22],\n[22,    22,    22,    22,    22,    22,    22,    22,    0,    0,    0,    0,    0,    0,    0,    0,    22,    22,    22],\n[22,    22,    22,    22,    22,    22,    22,    22,    0,    0,    0,    0,    0,    0,    0,    0,    22,    22,    22],\n[22,    22,    22,    22,    22,    22,    22,    22,    0,    0,    0,    0,    0,    0,    0,    0,    22,    22,    22],\n[22,    22,    22,    22,    22,    22,    22,    22,    21907,    0,    0,    29,    0,    -9.56656e+08,    21907,    -9.56656e+08,    22,    22,    22],\n[22,    22,    22,    22,    22,    22,    22,    22,    -9.56804e+08,    21907,    -9.56676e+08,    21907,    -9.5684e+08,    21907,    -9.5649e+08,    21907,    22,    22,    22],\n[22,    22,    22,    22,    22,    22,    22,    22,    21907,    -9.56676e+08,    21907,    -9.56858e+08,    21907,    -9.56858e+08,    21907,    -9.56865e+08,    22,    22,    22],\n[22,    22,    22,    22,    22,    22,    22,    22,    -9.56651e+08,    21907,    -9.56645e+08,    21907,    -9.56641e+08,    21907,    0,    0,    22,    22,    22],\n[22,    22,    22,    22,    22,    22,    22,    22,    0,    0,    0,    0,    0,    0,    0,    0,    22,    22,    22],\n[22,    22,    22,    22,    22,    22,    22,    22,    0,    0,    0,    0,    0,    0,    0,    1,    22,    22,    22],\n[22,    22,    22,    22,    22,    22,    22,    22,    0,    0,    0,    0,    0,    0,    0,    0,    22,    22,    22],\n[22,    22,    22,    22,    22,    22,    22,    22,    0,    0,    0,    0,    0,    0,    0,    0,    22,    22,    22],\n[22,    22,    22,    22,    22,    22,    22,    22,    0,    0,    0,    0,    0,    0,    0,    0,    22,    22,    22],\n[22,    22,    22,    22,    22,    22,    22,    22,    0,    0,    0,    0,    0,    1280,    0,    96,    22,    22,    22],\n[22,    22,    22,    22,    22,    22,    22,    22,    -9.56664e+08,    21907,    -9.56663e+08,    21907,    -9.56653e+08,    21907,    -9.56651e+08,    21907,    22,    22,    22],\n[22,    22,    22,    22,    22,    22,    22,    22,    21907,    -9.4117e+08,    21907,    0,    0,    225,    0,    -9.4111e+08,    22,    22,    22],\n[22,    22,    22,    22,    22,    22,    22,    22,    0,    0,    148,    0,    -9.39793e+08,    21907,    0,    0,    22,    22,    22],\n[22,    22,    22,    22,    22,    22,    22,    22,    21907,    -9.41108e+08,    21907,    1,    4,    -9.39805e+08,    21907,    -9.40268e+08,    22,    22,    22],\n[22,    22,    22,    22,    22,    22,    22,    22,    1,    0,    272,    0,    96,    0,    -9.41109e+08,    21907,    22,    22,    22],\n[22,    22,    22,    22,    22,    22,    22,    22,    21907,    -9.56653e+08,    21907,    -9.56651e+08,    21907,    -9.56645e+08,    21907,    -9.56641e+08,    22,    22,    22]]]"
    }
}
