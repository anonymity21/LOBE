{
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v3/tosa.43e83446d40af484.mlir --topological-sort --tosa-optional-decompositions --tosa-optional-decompositions --test-func-set-type --composite-fixed-point-pass --inline --test-tensor-copy-insertion=\"must-infer-memory-space\" --test-tensor-transform-patterns=\"use-foreach\" --test-func-set-type --tosa-infer-shapes --composite-fixed-point-pass --tosa-test-quant-utils --mem2reg --test-func-insert-result --loop-invariant-subset-hoisting --symbol-dce --tosa-test-quant-utils --fold-tensor-subset-ops --test-func-insert-result --duplicate-function-elimination --tosa-optional-decompositions --test-func-erase-result --control-flow-sink --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --tosa-test-quant-utils --tosa-reduce-transposes --tosa-validate --sroa --mem2reg=\"region-simplify\" --tosa-optional-decompositions | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-fuse-elementwise-ops --scf-parallel-loop-specialization --scf-parallel-loop-specialization --test-scf-uplift-while-to-for --arith-expand=\"include-bf16\" --scf-for-to-while --int-range-optimizations --math-extend-to-supported-types --test-scf-if-utils --tosa-infer-shapes --loop-invariant-code-motion --test-func-erase-arg --tosa-optional-decompositions --loop-invariant-subset-hoisting --test-func-insert-arg --math-uplift-to-fma --test-scf-for-utils --test-math-algebraic-simplification --linalg-specialize-generic-ops --test-arith-emulate-wide-int --test-expand-math --test-function-pass --sccp --test-func-erase-result --duplicate-function-elimination --scf-parallel-loop-tiling=\"parallel-loop-tile-sizes=1,4 no-min-max-bounds=true\" --sccp --symbol-dce --test-scf-pipelining=\"annotate\" --linalg-specialize-generic-ops --test-func-erase-result --test-linalg-data-layout-propagation --linalg-fuse-elementwise-ops --fold-tensor-subset-ops --scf-parallel-loop-tiling --test-scf-pipelining=\"annotate\" --test-func-insert-arg --test-linalg-pad-fusion --arith-unsigned-when-equivalent --test-scf-pipelining=\"no-epilogue-peeling\" --test-linalg-elementwise-fusion-patterns=\"control-fusion-by-expansion\" --loop-invariant-code-motion --test-scf-for-utils --control-flow-sink --fold-tensor-subset-ops --test-math-polynomial-approximation --sroa --int-range-optimizations --test-func-insert-arg --math-uplift-to-fma --test-math-to-vcix --test-func-insert-arg --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-linalg-greedy-fusion --test-func-insert-arg --mem2reg --mem2reg --convert-elementwise-to-linalg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-for-to-while | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --topological-sort --duplicate-function-elimination --test-linalg-data-layout-propagation | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-arg --symbol-dce --inline --duplicate-function-elimination --sroa --mem2reg --sroa --test-func-set-type --test-func-erase-arg --test-func-set-type --loop-invariant-subset-hoisting --symbol-dce --loop-invariant-code-motion --test-linalg-transform-patterns=\"test-erase-unused-operands-and-results\" --test-linalg-rank-reduce-contraction-ops --cse --topological-sort --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --resolve-shaped-type-result-dims --scf-for-loop-canonicalization --test-scf-pipelining --memref-expand --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --mem2reg --scf-for-loop-specialization --control-flow-sink --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --memref-emulate-wide-int --duplicate-function-elimination --int-range-optimizations --arith-unsigned-when-equivalent --test-arith-emulate-wide-int=\"widest-int-supported=8\" --memref-expand --sccp --sccp --normalize-memrefs --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --loop-invariant-code-motion --mem2reg --fold-memref-alias-ops --topological-sort --expand-strided-metadata --arith-expand --test-memref-dependence-check --canonicalize=\"test-convergence top-down=0\" --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-arg --loop-invariant-code-motion --composite-fixed-point-pass --test-func-insert-result --loop-invariant-code-motion --test-func-erase-result --control-flow-sink --test-func-erase-result --duplicate-function-elimination --sccp --inline --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728]]]",
        "test_line": "[[[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v3/tosa.43e83446d40af484.mlir --tosa-infer-shapes --tosa-layerwise-constant-fold --mem2reg --tosa-optional-decompositions --sccp --fold-tensor-subset-ops --symbol-dce --tosa-infer-shapes --control-flow-sink --sroa --topological-sort --test-func-insert-result --tosa-layerwise-constant-fold --tosa-infer-shapes --canonicalize=\"test-convergence\" --tosa-layerwise-constant-fold --composite-fixed-point-pass --composite-fixed-point-pass --test-tensor-copy-insertion --loop-invariant-subset-hoisting --loop-invariant-code-motion --test-func-set-type --canonicalize=\"test-convergence\" --loop-invariant-subset-hoisting --tosa-validate --test-func-set-type --canonicalize --topological-sort --canonicalize=\"test-convergence\" --test-func-insert-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --scf-for-loop-canonicalization --test-func-insert-arg --tosa-make-broadcastable --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sroa --duplicate-function-elimination --scf-for-loop-canonicalization --canonicalize --scf-for-loop-canonicalization --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --scf-parallel-loop-fusion --test-math-algebraic-simplification --test-func-insert-arg --linalg-inline-scalar-operands --test-linalg-data-layout-propagation --linalg-named-op-conversion --test-linalg-drop-unit-dims --test-scf-for-utils=\"test-replace-with-new-yields\" --scf-forall-to-for | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-math-polynomial-approximation=\"enable-avx2\" --sroa --loop-invariant-code-motion --mem2reg=\"region-simplify\" --linalg-specialize-generic-ops --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --linalg-inline-scalar-operands --linalg-generalize-named-ops --loop-invariant-subset-hoisting --test-func-insert-result --test-expand-math --test-tensor-transform-patterns=\"test-rewrite-extract-slice-from-collapse-shape\" --test-linalg-greedy-fusion --sroa --test-function-pass --cse --test-math-to-vcix --sccp --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --fold-memref-alias-ops --test-func-insert-result --linalg-fuse-elementwise-ops --test-math-polynomial-approximation --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --test-func-set-type --test-math-algebraic-simplification --canonicalize --test-linalg-transform-patterns=\"test-swap-subtensor-padtensor\" --linalg-named-op-conversion --test-memref-bound-check | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-greedy-fusion --test-memref-bound-check | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-named-op-conversion --test-expand-math --expand-realloc --linalg-generalize-named-ops --test-func-set-type --test-memref-dependence-check --test-func-set-type --test-linalg-drop-unit-dims --sccp --symbol-dce --linalg-inline-scalar-operands --mem2reg=\"region-simplify\" --test-function-pass --linalg-fuse-elementwise-ops --loop-invariant-subset-hoisting --expand-strided-metadata --sroa --duplicate-function-elimination --mem2reg --test-math-algebraic-simplification --loop-invariant-code-motion --convert-elementwise-to-linalg --control-flow-sink --memref-expand --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --arith-unsigned-when-equivalent --test-scf-while-op-builder --test-func-erase-arg --remove-dead-values --test-func-insert-result --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-scf-for-utils --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --scf-forall-to-parallel --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --int-range-optimizations --arith-unsigned-when-equivalent --test-function-pass --mem2reg=\"region-simplify\" --composite-fixed-point-pass --arith-int-range-narrowing | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --topological-sort --topological-sort --duplicate-function-elimination --loop-invariant-subset-hoisting --canonicalize --symbol-dce --test-function-pass --test-function-pass --cse --test-func-insert-arg --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728]]]",
        "test_line": "[[[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v3/tosa.43e83446d40af484.mlir --loop-invariant-subset-hoisting --sccp --sroa --test-function-pass --tosa-test-quant-utils --remove-dead-values --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-for-loop-peeling | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-make-broadcastable --tosa-optional-decompositions --control-flow-sink --loop-invariant-subset-hoisting --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --loop-invariant-subset-hoisting --tosa-reduce-transposes --tosa-test-quant-utils --test-func-set-type --test-tensor-copy-insertion=\"must-infer-memory-space\" --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-optional-decompositions --test-tensor-copy-insertion=\"must-infer-memory-space\" --sroa --cse --test-tensor-transform-patterns=\"test-fold-consecutive-insert-extract-slice\" --sroa --tosa-make-broadcastable --remove-dead-values --topological-sort --mem2reg --test-func-insert-result --sroa --canonicalize --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --test-linalg-pad-fusion --test-math-algebraic-simplification --linalg-inline-scalar-operands --test-arith-emulate-wide-int --sccp --tosa-test-quant-utils --fold-tensor-subset-ops --duplicate-function-elimination --test-linalg-rank-reduce-contraction-ops --mem2reg --test-tensor-transform-patterns --test-arith-emulate-wide-int | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-fuse-elementwise-ops --tosa-reduce-transposes --linalg-specialize-generic-ops --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-arg --sccp --math-uplift-to-fma | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --math-uplift-to-fma --test-math-polynomial-approximation=\"enable-avx2\" --test-function-pass --normalize-memrefs --expand-strided-metadata --normalize-memrefs --resolve-ranked-shaped-type-result-dims --test-linalg-drop-unit-dims --linalg-specialize-generic-ops --sccp --expand-realloc=\"emit-deallocs\" --test-memref-bound-check --test-linalg-pad-fusion --test-func-set-type --test-linalg-data-layout-propagation --test-func-insert-result --resolve-shaped-type-result-dims --linalg-fuse-elementwise-ops --test-linalg-rank-reduce-contraction-ops --linalg-specialize-generic-ops --test-linalg-elementwise-fusion-patterns --test-func-erase-result --test-math-polynomial-approximation=\"enable-avx2\" --fold-memref-alias-ops --test-math-algebraic-simplification --fold-memref-alias-ops --test-func-insert-arg --cse --test-memref-dependence-check --cse --linalg-fold-unit-extent-dims | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-fuse-elementwise-ops --inline --symbol-dce --test-func-set-type --linalg-generalize-named-ops --normalize-memrefs --sroa --test-function-pass --test-math-algebraic-simplification --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-collapsing-control\" --loop-invariant-subset-hoisting --canonicalize | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-result --inline --symbol-dce --test-math-to-vcix --loop-invariant-subset-hoisting --test-expand-math --test-scf-pipelining=\"no-epilogue-peeling\" --scf-parallel-loop-specialization --test-scf-uplift-while-to-for --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --arith-emulate-wide-int=\"widest-int-supported=32\" --duplicate-function-elimination --scf-for-loop-specialization --test-scf-pipelining=\"no-epilogue-peeling\" --test-emulate-narrow-int --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --arith-emulate-wide-int=\"widest-int-supported=32\" --scf-for-loop-range-folding --scf-for-loop-peeling --test-scf-if-utils --test-func-erase-result --test-func-insert-result --test-func-insert-result --loop-invariant-subset-hoisting --test-func-insert-arg --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-unsigned-when-equivalent --test-math-polynomial-approximation=\"enable-avx2\" --math-extend-to-supported-types --arith-expand --math-extend-to-supported-types --control-flow-sink --control-flow-sink --arith-unsigned-when-equivalent --test-math-algebraic-simplification --loop-invariant-subset-hoisting --arith-emulate-wide-int --test-func-insert-arg --test-math-algebraic-simplification --sroa --arith-expand --topological-sort --test-func-set-type --test-math-polynomial-approximation --test-math-polynomial-approximation --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-result --test-func-insert-arg --canonicalize=\"test-convergence top-down=0\" --test-func-insert-result --inline --control-flow-sink --arith-emulate-unsupported-floats --loop-invariant-subset-hoisting --test-func-erase-arg --topological-sort --test-func-insert-result --int-range-optimizations --loop-invariant-subset-hoisting --arith-emulate-wide-int=\"widest-int-supported=32\" --test-func-erase-result --test-arith-emulate-wide-int --arith-emulate-wide-int=\"widest-int-supported=32\" --sccp --inline --inline --canonicalize=\"test-convergence top-down=0\" --sroa --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728]]]",
        "test_line": "[[[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v3/tosa.43e83446d40af484.mlir --loop-invariant-subset-hoisting --test-function-pass --cse --test-func-insert-result --loop-invariant-code-motion --fold-tensor-subset-ops --test-func-erase-result --tosa-optional-decompositions --tosa-reduce-transposes --symbol-dce --test-function-pass --canonicalize=\"test-convergence\" --tosa-validate --loop-invariant-code-motion --sccp --test-func-erase-result --tosa-validate --test-tensor-copy-insertion=\"must-infer-memory-space\" --test-func-insert-result --test-func-erase-result --tosa-optional-decompositions --tosa-optional-decompositions --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-greedy-fusion --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --test-func-set-type --topological-sort --test-math-to-vcix --test-linalg-rank-reduce-contraction-ops --test-func-set-type --test-tensor-transform-patterns=\"test-rewrite-extract-slice-from-collapse-shape\" --test-scf-while-op-builder --duplicate-function-elimination --test-function-pass --test-func-set-type --arith-emulate-wide-int --test-function-pass --tosa-test-quant-utils --scf-for-loop-peeling --sroa --test-function-pass --test-linalg-pad-fusion --test-func-erase-result --fold-tensor-subset-ops --test-linalg-decompose-ops --test-scf-uplift-while-to-for --cse --control-flow-sink --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --loop-invariant-subset-hoisting --linalg-fuse-elementwise-ops --cse --linalg-specialize-generic-ops --arith-expand --test-math-polynomial-approximation --sroa --test-linalg-elementwise-fusion-patterns=\"collapse-dimensions-control=2,3\" --tosa-make-broadcastable --sroa --canonicalize=\"test-convergence top-down=0\" --control-flow-sink --linalg-specialize-generic-ops --test-linalg-drop-unit-dims --test-math-to-vcix --topological-sort --inline --linalg-generalize-named-ops --test-linalg-data-layout-propagation --test-linalg-greedy-fusion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --inline --memref-emulate-wide-int --arith-int-range-narrowing --arith-unsigned-when-equivalent --cse --canonicalize --test-func-erase-result --test-scf-while-op-builder --sroa --test-scf-pipelining=\"no-epilogue-peeling\" --scf-forall-to-parallel --resolve-ranked-shaped-type-result-dims --scf-for-loop-canonicalization --math-extend-to-supported-types --scf-forall-to-parallel --topological-sort --test-scf-while-op-builder --topological-sort --resolve-ranked-shaped-type-result-dims --test-math-algebraic-simplification --arith-expand=\"include-bf16\" --scf-parallel-loop-tiling --sroa --mem2reg=\"region-simplify\" --test-scf-if-utils --memref-expand --test-func-erase-arg --test-memref-bound-check --memref-expand --scf-for-loop-canonicalization --loop-invariant-subset-hoisting --scf-for-loop-peeling=\"peel-front\" --test-math-to-vcix --normalize-memrefs --expand-realloc=\"emit-deallocs\" --test-func-insert-result --normalize-memrefs --scf-parallel-loop-fusion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-for-loop-peeling=\"skip-partial\" --memref-emulate-wide-int=\"widest-int-supported=32\" --scf-forall-to-parallel --test-func-erase-result --scf-for-loop-canonicalization --duplicate-function-elimination --memref-emulate-wide-int=\"widest-int-supported=32\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --sccp --control-flow-sink --test-func-insert-arg --arith-expand=\"include-bf16\" --sroa --inline --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --inline --cse --int-range-optimizations --resolve-shaped-type-result-dims | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-memref-bound-check --canonicalize=\"test-convergence top-down=0\" --topological-sort --inline --loop-invariant-subset-hoisting --test-memref-bound-check --test-func-insert-result --test-func-erase-result --canonicalize=\"test-convergence\" --memref-expand | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sroa --canonicalize --sccp --sccp --sccp --loop-invariant-code-motion --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728]]]",
        "test_line": "[[[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v3/tosa.43e83446d40af484.mlir --inline --topological-sort --test-func-insert-result --test-tensor-transform-patterns=\"test-fold-constant-extract-slice\" --test-function-pass --tosa-infer-shapes --tosa-layerwise-constant-fold --mem2reg=\"region-simplify\" --duplicate-function-elimination --topological-sort --test-func-insert-result --tosa-test-quant-utils --tosa-infer-shapes --duplicate-function-elimination --loop-invariant-code-motion --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-infer-shapes --tosa-make-broadcastable --test-function-pass --test-func-insert-arg --loop-invariant-code-motion --test-func-erase-result --loop-invariant-code-motion --control-flow-sink --tosa-make-broadcastable --test-tensor-copy-insertion=\"must-infer-memory-space\" --test-func-set-type --tosa-reduce-transposes --tosa-reduce-transposes --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse --fold-tensor-subset-ops --test-tensor-transform-patterns=\"test-rewrite-extract-slice-from-collapse-shape\" --control-flow-sink --mem2reg=\"region-simplify\" --tosa-layerwise-constant-fold --duplicate-function-elimination --topological-sort --test-function-pass --tosa-make-broadcastable --symbol-dce --duplicate-function-elimination --symbol-dce --test-func-set-type --sroa --test-func-erase-arg --test-function-pass --fold-tensor-subset-ops --control-flow-sink --duplicate-function-elimination --mem2reg --sroa --loop-invariant-code-motion --tosa-optional-decompositions --inline --loop-invariant-code-motion --control-flow-sink --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --test-func-insert-result --mem2reg --mem2reg=\"region-simplify\" --canonicalize=\"test-convergence top-down=0\" --test-func-insert-result --sroa --duplicate-function-elimination --test-func-set-type --composite-fixed-point-pass --sroa --tosa-make-broadcastable --test-func-erase-result --cse --tosa-optional-decompositions --canonicalize=\"test-convergence top-down=0\" --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-make-broadcastable --inline --test-func-erase-result --control-flow-sink --duplicate-function-elimination --mem2reg=\"region-simplify\" --test-function-pass --tosa-make-broadcastable --tosa-make-broadcastable --test-func-insert-result --tosa-infer-shapes --duplicate-function-elimination --canonicalize=\"test-convergence\" --tosa-optional-decompositions --test-function-pass --inline --mem2reg=\"region-simplify\" --test-func-erase-result --tosa-reduce-transposes --test-func-set-type --test-tensor-transform-patterns=\"test-rewrite-extract-slice-from-collapse-shape\" --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-test-quant-utils --math-uplift-to-fma --test-linalg-transform-patterns=\"test-bubble-up-extract-slice-op-pattern\" --convert-elementwise-to-linalg --sccp --topological-sort --test-func-insert-arg --composite-fixed-point-pass --test-linalg-drop-unit-dims --composite-fixed-point-pass --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --control-flow-sink --loop-invariant-code-motion --test-func-insert-result --test-linalg-greedy-fusion --test-linalg-rank-reduce-contraction-ops --arith-expand --control-flow-sink --test-tensor-transform-patterns=\"test-fold-consecutive-insert-extract-slice\" --topological-sort --arith-emulate-wide-int --loop-invariant-code-motion --test-linalg-pad-fusion --test-func-erase-result --test-expand-math --canonicalize --test-func-erase-result --test-func-set-type --test-arith-emulate-wide-int --linalg-generalize-named-ops --test-tensor-transform-patterns=\"test-rewrite-extract-slice-from-collapse-shape\" --loop-invariant-subset-hoisting --canonicalize=\"test-convergence\" --control-flow-sink --linalg-fuse-elementwise-ops --sroa --math-extend-to-supported-types --linalg-inline-scalar-operands --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-expansion\" --sroa --math-extend-to-supported-types --test-linalg-drop-unit-dims --loop-invariant-subset-hoisting --test-math-algebraic-simplification --int-range-optimizations --test-function-pass --mem2reg --linalg-inline-scalar-operands --test-func-erase-arg --test-tensor-copy-insertion=\"must-infer-memory-space\" --linalg-fuse-elementwise-ops --test-func-erase-arg --duplicate-function-elimination --linalg-named-op-conversion --test-func-set-type --convert-elementwise-to-linalg --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-inline-scalar-operands --test-math-polynomial-approximation --composite-fixed-point-pass --test-memref-dependence-check --math-uplift-to-fma --cse --test-linalg-data-layout-propagation --linalg-fold-unit-extent-dims --linalg-generalize-named-ops --cse --loop-invariant-code-motion --test-linalg-rank-reduce-contraction-ops --test-func-insert-result --memref-expand --test-function-pass --expand-realloc --arith-expand=\"include-bf16\" --linalg-specialize-generic-ops --resolve-ranked-shaped-type-result-dims --mem2reg=\"region-simplify\" --loop-invariant-code-motion --test-func-erase-result --linalg-fuse-elementwise-ops --test-function-pass --test-func-erase-arg --int-range-optimizations --arith-int-range-narrowing --loop-invariant-code-motion --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-collapsing\" --int-range-optimizations --test-arith-emulate-wide-int --test-expand-math --test-math-algebraic-simplification --convert-elementwise-to-linalg --linalg-named-op-conversion --test-math-algebraic-simplification --memref-emulate-wide-int --sccp --linalg-named-op-conversion --linalg-generalize-named-ops --canonicalize=\"test-convergence\" --loop-invariant-code-motion --test-expand-math --expand-strided-metadata --expand-strided-metadata --test-math-to-vcix | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --linalg-specialize-generic-ops --test-func-erase-arg --fold-memref-alias-ops --test-math-to-vcix --test-func-set-type --linalg-specialize-generic-ops --sccp --test-linalg-transform-patterns=\"test-erase-unused-operands-and-results\" --test-memref-bound-check --linalg-fold-unit-extent-dims --loop-invariant-code-motion --test-func-insert-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --loop-invariant-code-motion --scf-for-loop-specialization --duplicate-function-elimination --test-scf-while-op-builder | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg --sccp --cse --test-function-pass --remove-dead-values --loop-invariant-subset-hoisting --arith-expand --test-func-erase-arg --arith-expand=\"include-bf16\" --topological-sort --arith-emulate-wide-int=\"widest-int-supported=32\" --arith-expand --duplicate-function-elimination --arith-int-range-narrowing | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --control-flow-sink --sccp --loop-invariant-code-motion --topological-sort --canonicalize --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-result --canonicalize=\"test-convergence\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728]]]",
        "test_line": "[[[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v3/tosa.43e83446d40af484.mlir -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -test-math-polynomial-approximation | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-specialize-generic-ops --arith-int-range-narrowing --test-scf-pipelining --scf-for-loop-peeling=\"peel-front\" --scf-for-to-while --canonicalize=\"test-convergence top-down=0\" --linalg-fuse-elementwise-ops --composite-fixed-point-pass --loop-invariant-code-motion --scf-for-loop-range-folding --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --linalg-generalize-named-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-drop-unit-dims --expand-strided-metadata --expand-realloc --test-expand-math --composite-fixed-point-pass --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-collapsing-control\" --linalg-named-op-conversion --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-decompose-ops --test-func-erase-result --test-memref-bound-check | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --fold-memref-alias-ops --fold-memref-alias-ops --test-scf-while-op-builder --resolve-ranked-shaped-type-result-dims --sroa --expand-realloc=\"emit-deallocs\" --scf-for-loop-canonicalization --memref-emulate-wide-int --sroa --scf-forall-to-for --scf-for-loop-range-folding --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --loop-invariant-code-motion --test-memref-dependence-check --test-func-set-type --resolve-shaped-type-result-dims | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --test-memref-dependence-check --normalize-memrefs --resolve-ranked-shaped-type-result-dims --test-memref-bound-check --test-memref-dependence-check --canonicalize=\"test-convergence\" --loop-invariant-subset-hoisting --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --duplicate-function-elimination --symbol-dce --test-func-erase-result --sccp --test-memref-dependence-check --test-function-pass --cse --control-flow-sink --arith-expand --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --topological-sort --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-arith-emulate-wide-int=\"widest-int-supported=8\" --duplicate-function-elimination --loop-invariant-code-motion --test-func-insert-arg --test-function-pass --test-func-insert-result --duplicate-function-elimination --test-function-pass --control-flow-sink --mem2reg=\"region-simplify\" --loop-invariant-code-motion --sroa --remove-dead-values --composite-fixed-point-pass --arith-unsigned-when-equivalent --remove-dead-values --arith-emulate-unsupported-floats --canonicalize=\"test-convergence top-down=0\" --control-flow-sink --test-func-set-type --symbol-dce --sroa --duplicate-function-elimination --test-func-insert-arg --canonicalize --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --topological-sort --sroa --cse --test-func-erase-arg --test-func-insert-result --test-func-insert-result --control-flow-sink --composite-fixed-point-pass --canonicalize --test-func-insert-result --symbol-dce --loop-invariant-code-motion --topological-sort --control-flow-sink --inline --test-func-set-type --remove-dead-values | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728]]]",
        "test_line": "[[[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v3/tosa.43e83446d40af484.mlir -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize --tosa-infer-shapes --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --fold-tensor-subset-ops --test-func-insert-result --inline --composite-fixed-point-pass --test-func-insert-arg --inline --composite-fixed-point-pass --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --mem2reg=\"region-simplify\" --duplicate-function-elimination --tosa-make-broadcastable --symbol-dce --control-flow-sink --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --remove-dead-values --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize=\"test-convergence\" --loop-invariant-subset-hoisting --test-function-pass --tosa-layerwise-constant-fold --test-func-erase-arg --remove-dead-values --tosa-optional-decompositions --remove-dead-values --remove-dead-values --loop-invariant-code-motion --tosa-test-quant-utils --test-func-erase-arg --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-infer-shapes --tosa-infer-shapes --test-func-insert-result --tosa-infer-shapes --tosa-reduce-transposes --loop-invariant-subset-hoisting --test-func-set-type --tosa-test-quant-utils --symbol-dce --mem2reg --test-func-insert-arg --tosa-make-broadcastable | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --tosa-test-quant-utils | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse --sccp --canonicalize=\"test-convergence\" --test-function-pass --test-func-set-type --cse --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --sccp --fold-tensor-subset-ops --test-func-insert-arg --duplicate-function-elimination --composite-fixed-point-pass --test-func-erase-result --test-func-erase-result --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-wide-int --test-scf-for-utils=\"test-replace-with-new-yields\" --test-math-polynomial-approximation=\"enable-avx2\" --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --test-scf-pipelining=\"annotate\" --int-range-optimizations --scf-for-loop-peeling=\"skip-partial\" --scf-for-loop-range-folding --topological-sort --test-math-polynomial-approximation=\"enable-avx2\" --tosa-optional-decompositions --test-func-erase-result --scf-for-loop-specialization --scf-parallel-loop-tiling --fold-tensor-subset-ops --scf-for-to-while --scf-for-loop-specialization --test-scf-while-op-builder --int-range-optimizations --test-func-set-type --test-expand-math --scf-for-loop-canonicalization --canonicalize=\"test-convergence\" --topological-sort --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-collapsing\" --scf-for-loop-range-folding --composite-fixed-point-pass --test-math-algebraic-simplification --math-uplift-to-fma --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --test-linalg-drop-unit-dims --tosa-test-quant-utils --test-scf-uplift-while-to-for --sroa --test-linalg-greedy-fusion --test-func-erase-result --control-flow-sink --tosa-validate --test-func-set-type --test-scf-pipelining=\"annotate\" --linalg-named-op-conversion --scf-for-loop-canonicalization --scf-for-to-while --scf-parallel-loop-fusion --tosa-test-quant-utils --mem2reg=\"region-simplify\" --test-math-polynomial-approximation --test-expand-math --topological-sort --cse --test-func-insert-result --arith-emulate-unsupported-floats --int-range-optimizations --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --linalg-fuse-elementwise-ops --expand-realloc | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize=\"test-convergence\" --scf-for-loop-canonicalization --arith-unsigned-when-equivalent --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --scf-for-loop-range-folding | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --symbol-dce --inline --loop-invariant-subset-hoisting --sccp --test-func-erase-result --test-func-erase-result --loop-invariant-subset-hoisting --arith-expand --arith-expand=\"include-bf16\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --test-function-pass --test-func-erase-arg --remove-dead-values --sccp --mem2reg --test-func-insert-arg --test-func-insert-arg --test-func-set-type --canonicalize --test-func-erase-result --canonicalize=\"test-convergence\" --sroa --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728]]]",
        "test_line": "[[[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v3/tosa.43e83446d40af484.mlir -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --scf-forall-to-parallel --topological-sort --sccp --composite-fixed-point-pass --tosa-reduce-transposes --scf-forall-to-parallel --test-scf-if-utils --test-func-erase-result --sroa --symbol-dce --test-scf-pipelining=\"no-epilogue-peeling\" --scf-for-loop-peeling --scf-for-loop-specialization --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-transform-patterns=\"test-erase-unnecessary-inputs\" --fold-tensor-subset-ops --test-expand-math --mem2reg --sroa --tosa-optional-decompositions --loop-invariant-subset-hoisting --test-math-polynomial-approximation=\"enable-avx2\" --sccp --control-flow-sink --test-func-insert-arg --symbol-dce --convert-elementwise-to-linalg --inline --control-flow-sink --linalg-fold-unit-extent-dims --fold-tensor-subset-ops --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --tosa-reduce-transposes --math-extend-to-supported-types --test-func-erase-arg --tosa-infer-shapes --test-func-insert-result --loop-invariant-subset-hoisting --canonicalize=\"test-convergence\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --test-linalg-data-layout-propagation --convert-elementwise-to-linalg --test-arith-emulate-wide-int --convert-elementwise-to-linalg --topological-sort --test-function-pass --test-linalg-rank-reduce-contraction-ops --int-range-optimizations --test-func-insert-result --linalg-inline-scalar-operands | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-specialize-generic-ops --linalg-fuse-elementwise-ops --test-linalg-data-layout-propagation --linalg-specialize-generic-ops --sccp --linalg-fuse-elementwise-ops --canonicalize=\"test-convergence\" --cse --linalg-specialize-generic-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --inline --test-function-pass --inline --canonicalize=\"test-convergence top-down=0\" --loop-invariant-code-motion --symbol-dce --sccp --symbol-dce --mem2reg --control-flow-sink --loop-invariant-subset-hoisting --mem2reg --mem2reg --canonicalize=\"test-convergence top-down=0\" --inline --remove-dead-values | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --remove-dead-values --composite-fixed-point-pass --inline --topological-sort --test-func-insert-result --test-func-erase-result --cse --loop-invariant-subset-hoisting --loop-invariant-subset-hoisting --loop-invariant-subset-hoisting --control-flow-sink --loop-invariant-code-motion --inline --symbol-dce --symbol-dce --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728]]]",
        "test_line": "[[[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v3/tosa.43e83446d40af484.mlir --cse --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --test-function-pass --test-function-pass --loop-invariant-code-motion --loop-invariant-code-motion --duplicate-function-elimination --sroa --test-func-erase-result --test-tensor-transform-patterns=\"test-fold-constant-extract-slice\" --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-arg --test-func-erase-result --test-func-erase-result --tosa-optional-decompositions --test-func-insert-result --tosa-test-quant-utils --tosa-reduce-transposes --symbol-dce --mem2reg --mem2reg=\"region-simplify\" --tosa-reduce-transposes --control-flow-sink --loop-invariant-subset-hoisting --inline --control-flow-sink --topological-sort --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --tosa-reduce-transposes --duplicate-function-elimination --tosa-optional-decompositions | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --test-function-pass --inline --test-func-set-type --arith-unsigned-when-equivalent --composite-fixed-point-pass --tosa-reduce-transposes --arith-expand=\"include-bf16\" --arith-expand --composite-fixed-point-pass --tosa-test-quant-utils --int-range-optimizations --topological-sort --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --sroa --duplicate-function-elimination --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sroa --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --canonicalize --tosa-test-quant-utils --int-range-optimizations --duplicate-function-elimination --scf-forall-to-parallel --canonicalize --test-arith-emulate-wide-int --scf-for-loop-range-folding --scf-for-loop-peeling=\"peel-front\" --loop-invariant-code-motion --test-arith-emulate-wide-int=\"widest-int-supported=8\" --scf-for-loop-peeling=\"skip-partial\" --test-scf-uplift-while-to-for --mem2reg=\"region-simplify\" --test-func-insert-arg --scf-parallel-loop-fusion --test-func-set-type --tosa-make-broadcastable --loop-invariant-subset-hoisting --tosa-reduce-transposes --scf-for-loop-canonicalization --scf-for-loop-range-folding --duplicate-function-elimination --tosa-optional-decompositions --test-func-insert-result --canonicalize=\"test-convergence top-down=0\" --tosa-test-quant-utils --scf-for-loop-canonicalization --tosa-infer-shapes --tosa-validate --test-func-erase-arg --int-range-optimizations --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --scf-parallel-loop-specialization --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --mem2reg --test-linalg-decompose-ops --math-uplift-to-fma --test-func-erase-arg --linalg-fuse-elementwise-ops --test-func-set-type --arith-emulate-unsupported-floats --sccp --test-math-polynomial-approximation=\"enable-avx2\" --test-func-erase-arg --test-func-insert-result --arith-expand=\"include-bf16\" --test-expand-math --canonicalize --math-uplift-to-fma --cse --mem2reg=\"region-simplify\" --test-func-erase-arg --test-linalg-drop-unit-dims --linalg-fuse-elementwise-ops --test-math-polynomial-approximation=\"enable-avx2\" --test-func-insert-result --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-func-erase-arg --linalg-named-op-conversion --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --convert-elementwise-to-linalg --loop-invariant-code-motion --test-math-algebraic-simplification --sroa --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-drop-unit-dims --linalg-fuse-elementwise-ops --mem2reg=\"region-simplify\" --expand-strided-metadata --memref-expand --topological-sort --resolve-shaped-type-result-dims --linalg-fold-unit-extent-dims --test-linalg-pad-fusion --normalize-memrefs --expand-strided-metadata --test-linalg-pad-fusion --linalg-generalize-named-ops --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --sroa --test-linalg-rank-reduce-contraction-ops --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --cse --test-func-insert-result --linalg-inline-scalar-operands --test-func-erase-result --loop-invariant-subset-hoisting --composite-fixed-point-pass --topological-sort --sccp --memref-expand --memref-expand --test-linalg-rank-reduce-contraction-ops --cse --test-linalg-drop-unit-dims --duplicate-function-elimination --sroa --test-memref-dependence-check --linalg-inline-scalar-operands --fold-memref-alias-ops --linalg-fuse-elementwise-ops --composite-fixed-point-pass --memref-expand --memref-expand --test-linalg-pad-fusion --test-func-erase-result --expand-realloc --test-function-pass --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-pad-fusion --test-func-insert-result --test-memref-bound-check --loop-invariant-code-motion --test-func-insert-arg --normalize-memrefs --test-function-pass --canonicalize=\"test-convergence top-down=0\" --inline --test-func-erase-arg --test-linalg-elementwise-fusion-patterns=\"control-fusion-by-expansion\" --fold-memref-alias-ops --test-linalg-decompose-ops --test-linalg-data-layout-propagation --composite-fixed-point-pass --test-linalg-data-layout-propagation --loop-invariant-code-motion --loop-invariant-subset-hoisting --test-linalg-transform-patterns=\"test-patterns\" --test-linalg-greedy-fusion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --resolve-ranked-shaped-type-result-dims --cse --memref-emulate-wide-int --arith-expand --fold-memref-alias-ops --resolve-shaped-type-result-dims --resolve-ranked-shaped-type-result-dims --test-arith-emulate-wide-int --test-func-erase-arg --duplicate-function-elimination --duplicate-function-elimination --test-function-pass --test-func-insert-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --test-func-insert-result --test-func-insert-result --int-range-optimizations --memref-expand --resolve-ranked-shaped-type-result-dims --test-function-pass --test-memref-dependence-check --loop-invariant-code-motion --test-func-erase-arg --test-func-set-type --memref-expand --resolve-shaped-type-result-dims --int-range-optimizations --loop-invariant-code-motion --test-function-pass --arith-unsigned-when-equivalent --test-memref-bound-check --arith-int-range-narrowing --sroa --loop-invariant-subset-hoisting --test-func-insert-result --topological-sort --control-flow-sink --expand-strided-metadata --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --sccp --int-range-optimizations | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --control-flow-sink --inline --expand-realloc --test-memref-bound-check --expand-realloc --topological-sort --topological-sort --expand-strided-metadata --normalize-memrefs --normalize-memrefs --test-memref-dependence-check --loop-invariant-subset-hoisting --control-flow-sink --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg=\"region-simplify\" --remove-dead-values --test-func-erase-arg --control-flow-sink --test-func-set-type --test-func-erase-arg --cse --composite-fixed-point-pass --loop-invariant-subset-hoisting --test-func-insert-arg --sroa --mem2reg --test-func-erase-arg --loop-invariant-subset-hoisting --sccp --test-func-erase-arg --test-func-insert-arg --test-func-insert-arg --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728]]]",
        "test_line": "[[[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v3/tosa.43e83446d40af484.mlir --sroa --tosa-optional-decompositions --tosa-reduce-transposes --test-function-pass --tosa-reduce-transposes --tosa-make-broadcastable --loop-invariant-code-motion --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --loop-invariant-code-motion --test-func-insert-arg --control-flow-sink --test-func-erase-result --symbol-dce --mem2reg --tosa-make-broadcastable --tosa-reduce-transposes --fold-tensor-subset-ops --loop-invariant-subset-hoisting --tosa-test-quant-utils --duplicate-function-elimination --tosa-validate --test-func-insert-arg --test-function-pass --inline --test-func-erase-result --loop-invariant-subset-hoisting --symbol-dce --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --mem2reg --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --fold-tensor-subset-ops --composite-fixed-point-pass --mem2reg --scf-for-to-while --sccp --inline --mem2reg --fold-tensor-subset-ops --test-scf-if-utils --fold-tensor-subset-ops --control-flow-sink --loop-invariant-subset-hoisting --tosa-infer-shapes --duplicate-function-elimination --test-scf-pipelining --tosa-optional-decompositions --scf-for-loop-canonicalization --scf-for-loop-canonicalization | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-pad-fusion --math-extend-to-supported-types --convert-elementwise-to-linalg --linalg-generalize-named-ops --topological-sort --inline --linalg-specialize-generic-ops --test-arith-emulate-wide-int --test-tensor-copy-insertion --math-uplift-to-fma --test-func-erase-result --test-math-polynomial-approximation=\"enable-avx2\" --arith-expand --test-linalg-data-layout-propagation --loop-invariant-code-motion --cse --linalg-inline-scalar-operands --fold-tensor-subset-ops --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --math-extend-to-supported-types --test-func-insert-arg --linalg-inline-scalar-operands --math-extend-to-supported-types --topological-sort --linalg-generalize-named-ops --test-math-to-vcix --test-arith-emulate-wide-int --math-uplift-to-fma --test-math-algebraic-simplification --test-tensor-transform-patterns=\"test-fold-consecutive-insert-extract-slice\" --loop-invariant-code-motion --fold-tensor-subset-ops --test-func-insert-result --test-func-insert-arg --linalg-specialize-generic-ops --linalg-generalize-named-ops --test-linalg-elementwise-fusion-patterns=\"collapse-dimensions-control=2,3\" --test-linalg-data-layout-propagation --linalg-fuse-elementwise-ops --topological-sort --control-flow-sink --sroa --test-linalg-transform-patterns=\"test-vector-transfer-forwarding-patterns\" --canonicalize=\"test-convergence top-down=0\" --test-func-insert-arg --test-expand-math --linalg-specialize-generic-ops --fold-tensor-subset-ops --test-linalg-drop-unit-dims --loop-invariant-subset-hoisting --test-linalg-data-layout-propagation | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-collapsing-control\" --test-function-pass --test-linalg-greedy-fusion --topological-sort --linalg-fuse-elementwise-ops --test-func-erase-result --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --memref-emulate-wide-int --test-linalg-decompose-ops --test-func-erase-arg --test-memref-dependence-check --linalg-generalize-named-ops --control-flow-sink --expand-strided-metadata --linalg-named-op-conversion --test-linalg-transform-patterns=\"test-vector-transfer-forwarding-patterns\" --linalg-fuse-elementwise-ops --control-flow-sink --test-func-insert-arg --linalg-specialize-generic-ops --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --test-func-insert-result --expand-realloc | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --normalize-memrefs --expand-realloc=\"emit-deallocs\" --test-arith-emulate-wide-int=\"widest-int-supported=8\" --arith-int-range-narrowing --test-func-set-type --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --memref-expand --expand-strided-metadata --remove-dead-values --composite-fixed-point-pass --test-func-set-type --symbol-dce --test-func-erase-result --arith-unsigned-when-equivalent --loop-invariant-code-motion --test-function-pass --arith-expand --sroa --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --arith-unsigned-when-equivalent --test-memref-bound-check --test-func-erase-arg --scf-parallel-loop-specialization --arith-expand=\"include-bf16\" --expand-strided-metadata --resolve-ranked-shaped-type-result-dims --sccp --duplicate-function-elimination --test-scf-if-utils --remove-dead-values --expand-strided-metadata --fold-memref-alias-ops --scf-for-loop-specialization --test-func-erase-result --memref-emulate-wide-int=\"widest-int-supported=32\" --scf-forall-to-for --test-func-set-type --test-memref-dependence-check --scf-forall-to-for --inline --arith-emulate-wide-int=\"widest-int-supported=32\" --memref-emulate-wide-int --int-range-optimizations --arith-int-range-narrowing --test-memref-bound-check --symbol-dce --test-func-insert-arg --test-function-pass --sccp --arith-unsigned-when-equivalent --resolve-ranked-shaped-type-result-dims --test-func-erase-result --memref-emulate-wide-int | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-result --sccp --composite-fixed-point-pass --test-func-insert-arg --arith-int-range-narrowing --int-range-optimizations --composite-fixed-point-pass --test-func-erase-arg --arith-unsigned-when-equivalent --test-func-erase-result --test-func-erase-result --composite-fixed-point-pass --composite-fixed-point-pass --arith-emulate-unsupported-floats --composite-fixed-point-pass --mem2reg --composite-fixed-point-pass --composite-fixed-point-pass --test-func-erase-arg --topological-sort --arith-expand --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-func-set-type --symbol-dce --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --int-range-optimizations --mem2reg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --duplicate-function-elimination --composite-fixed-point-pass --duplicate-function-elimination --remove-dead-values --symbol-dce --test-func-erase-arg --cse --topological-sort --duplicate-function-elimination --control-flow-sink --cse --control-flow-sink --test-func-erase-arg --duplicate-function-elimination --test-function-pass --topological-sort --symbol-dce --loop-invariant-subset-hoisting --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728]]]",
        "test_line": "[[[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v3/tosa.43e83446d40af484.mlir -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --tosa-infer-shapes --fold-tensor-subset-ops --test-arith-emulate-wide-int=\"widest-int-supported=8\" --remove-dead-values --test-arith-emulate-wide-int=\"widest-int-supported=8\" --topological-sort --tosa-infer-shapes --tosa-infer-shapes --tosa-layerwise-constant-fold --arith-emulate-wide-int=\"widest-int-supported=32\" --tosa-infer-shapes --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --tosa-optional-decompositions --test-emulate-narrow-int --tosa-test-quant-utils --tosa-make-broadcastable --tosa-layerwise-constant-fold --test-tensor-copy-insertion=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sroa --scf-forall-to-for --scf-for-loop-range-folding --scf-parallel-loop-specialization --test-scf-while-op-builder --test-func-insert-result --test-scf-if-utils --fold-tensor-subset-ops --scf-for-loop-canonicalization --linalg-generalize-named-ops --test-scf-while-op-builder --test-func-set-type --arith-unsigned-when-equivalent --inline --test-linalg-data-layout-propagation --test-scf-while-op-builder --test-func-erase-result --test-expand-math --scf-for-loop-specialization --test-func-insert-arg --test-math-algebraic-simplification --test-math-to-vcix --int-range-optimizations --canonicalize=\"test-convergence\" --test-math-polynomial-approximation --math-uplift-to-fma --scf-for-loop-peeling=\"skip-partial\" --arith-unsigned-when-equivalent --linalg-named-op-conversion --cse --composite-fixed-point-pass --arith-expand=\"include-bf16\" --test-scf-for-utils --inline --test-func-erase-arg --test-func-erase-result --test-scf-uplift-while-to-for --test-scf-while-op-builder | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --canonicalize=\"test-convergence top-down=0\" --test-func-insert-arg --test-function-pass --linalg-generalize-named-ops --test-expand-math --symbol-dce --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-math-to-vcix --loop-invariant-subset-hoisting --canonicalize=\"test-convergence\" --test-expand-math --test-linalg-drop-unit-dims --test-math-algebraic-simplification --composite-fixed-point-pass --test-math-to-vcix --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --test-math-to-vcix --loop-invariant-subset-hoisting --inline --int-range-optimizations --fold-tensor-subset-ops --linalg-generalize-named-ops --linalg-inline-scalar-operands --arith-expand --test-func-erase-arg --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --test-func-set-type --fold-tensor-subset-ops --inline --sccp --math-extend-to-supported-types --sccp --arith-unsigned-when-equivalent --composite-fixed-point-pass --test-function-pass --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --sccp --math-uplift-to-fma --loop-invariant-code-motion --linalg-named-op-conversion --linalg-generalize-named-ops --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-collapsing-control\" --test-function-pass --test-linalg-elementwise-fusion-patterns=\"collapse-dimensions-control=2,3\" --test-function-pass --test-linalg-rank-reduce-contraction-ops --test-math-to-vcix --linalg-named-op-conversion --sroa --int-range-optimizations --linalg-fuse-elementwise-ops --test-func-insert-result --test-tensor-copy-insertion=\"must-infer-memory-space\" --test-func-set-type --test-linalg-greedy-fusion --test-linalg-data-layout-propagation --int-range-optimizations --mem2reg=\"region-simplify\" --linalg-named-op-conversion --cse --cse --sccp --test-func-insert-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --test-func-erase-result --symbol-dce --test-func-erase-arg --loop-invariant-subset-hoisting --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-func-erase-arg --sroa --remove-dead-values --arith-expand=\"include-bf16\" --arith-expand --sroa --test-function-pass --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-func-insert-arg --control-flow-sink --canonicalize=\"test-convergence top-down=0\" --arith-emulate-wide-int=\"widest-int-supported=32\" --arith-emulate-unsupported-floats --test-arith-emulate-wide-int --remove-dead-values --canonicalize --int-range-optimizations --inline --test-func-set-type --arith-expand --test-func-insert-arg --remove-dead-values | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --canonicalize --sroa --test-function-pass --loop-invariant-subset-hoisting --sroa --loop-invariant-subset-hoisting --symbol-dce --duplicate-function-elimination --canonicalize --test-function-pass --test-func-insert-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728]]]",
        "test_line": "[[[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v3/tosa.43e83446d40af484.mlir --test-func-insert-result --test-func-insert-arg --loop-invariant-code-motion --composite-fixed-point-pass --test-func-insert-result --tosa-layerwise-constant-fold --remove-dead-values --test-func-insert-arg --fold-tensor-subset-ops --symbol-dce --control-flow-sink --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --tosa-infer-shapes --control-flow-sink --test-function-pass --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-arith-emulate-wide-int=\"widest-int-supported=8\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-layerwise-constant-fold --test-func-erase-result --topological-sort --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --loop-invariant-subset-hoisting --test-tensor-transform-patterns=\"test-reassociative-reshape-folding\" --arith-emulate-unsupported-floats --topological-sort --test-tensor-copy-insertion=\"must-infer-memory-space\" --test-arith-emulate-wide-int --arith-emulate-wide-int --test-func-erase-arg --composite-fixed-point-pass --control-flow-sink --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --test-arith-emulate-wide-int=\"widest-int-supported=8\" --control-flow-sink --sroa --test-func-insert-arg --arith-emulate-unsupported-floats | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --test-func-set-type --remove-dead-values --cse --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --tosa-test-quant-utils --mem2reg=\"region-simplify\" --tosa-infer-shapes --cse --test-emulate-narrow-int=\"memref-load-bitwidth=8\" --tosa-test-quant-utils --test-arith-emulate-wide-int=\"widest-int-supported=8\" --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --tosa-test-quant-utils --tosa-test-quant-utils --duplicate-function-elimination --composite-fixed-point-pass --inline --symbol-dce --test-tensor-transform-patterns=\"test-reassociative-reshape-folding\" --fold-tensor-subset-ops --loop-invariant-code-motion --test-func-erase-result --fold-tensor-subset-ops --loop-invariant-subset-hoisting --tosa-infer-shapes --test-function-pass --arith-emulate-wide-int --int-range-optimizations --canonicalize=\"test-convergence\" --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --test-func-set-type --tosa-infer-shapes | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --test-function-pass --tosa-test-quant-utils --arith-expand=\"include-bf16\" --composite-fixed-point-pass --inline --remove-dead-values | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-scf-if-utils --linalg-specialize-generic-ops --test-scf-for-utils --test-math-algebraic-simplification --scf-parallel-loop-tiling --test-scf-pipelining=\"annotate\" --int-range-optimizations --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --scf-parallel-loop-fusion --composite-fixed-point-pass --arith-expand=\"include-bf16\" --arith-expand --test-math-algebraic-simplification --test-linalg-data-layout-propagation --canonicalize=\"test-convergence top-down=0\" --scf-forall-to-parallel --convert-elementwise-to-linalg --math-extend-to-supported-types --test-func-insert-result --test-math-polynomial-approximation --test-linalg-elementwise-fusion-patterns=\"collapse-dimensions-control=2,3\" --mem2reg --topological-sort --loop-invariant-code-motion --test-func-set-type --linalg-generalize-named-ops --test-func-insert-arg --test-linalg-pad-fusion --test-math-algebraic-simplification --scf-parallel-loop-fusion --math-uplift-to-fma --test-linalg-data-layout-propagation --arith-int-range-narrowing --scf-parallel-loop-fusion --test-expand-math --test-linalg-greedy-fusion --canonicalize=\"test-convergence\" --test-linalg-rank-reduce-contraction-ops --test-linalg-data-layout-propagation --test-scf-while-op-builder --test-func-set-type --math-extend-to-supported-types | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --test-scf-pipelining=\"no-epilogue-peeling\" --cse --test-emulate-narrow-int=\"memref-load-bitwidth=8\" --sroa --test-func-erase-arg --cse --test-func-erase-arg --topological-sort --remove-dead-values --scf-for-to-while --scf-forall-to-parallel --test-scf-pipelining=\"annotate\" --composite-fixed-point-pass --scf-parallel-loop-fusion --canonicalize=\"test-convergence\" --control-flow-sink --composite-fixed-point-pass --scf-for-loop-canonicalization --test-func-erase-result --test-function-pass --test-scf-uplift-while-to-for --remove-dead-values --cse --test-scf-for-utils --test-func-erase-arg --topological-sort --scf-for-loop-peeling=\"skip-partial\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --int-range-optimizations --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --duplicate-function-elimination --test-func-insert-arg --loop-invariant-subset-hoisting --control-flow-sink --test-func-set-type --test-function-pass --control-flow-sink --test-func-set-type --test-function-pass --topological-sort --loop-invariant-subset-hoisting --canonicalize --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728]]]",
        "test_line": "[[[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v3/tosa.43e83446d40af484.mlir --tosa-reduce-transposes --tosa-test-quant-utils --loop-invariant-code-motion --test-function-pass --loop-invariant-subset-hoisting --test-func-erase-result --fold-tensor-subset-ops --tosa-optional-decompositions --test-func-insert-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-for-to-while --scf-forall-to-parallel --test-linalg-rank-reduce-contraction-ops --loop-invariant-subset-hoisting --test-math-algebraic-simplification --test-func-insert-arg --test-linalg-drop-unit-dims --scf-parallel-loop-tiling --scf-for-to-while --composite-fixed-point-pass --test-func-set-type --math-extend-to-supported-types --test-func-erase-result --scf-parallel-loop-tiling --control-flow-sink --mem2reg=\"region-simplify\" --test-func-insert-arg --tosa-optional-decompositions --duplicate-function-elimination --loop-invariant-code-motion --test-math-polynomial-approximation --test-linalg-drop-unit-dims --scf-parallel-loop-fusion --math-extend-to-supported-types --test-linalg-decompose-ops --sroa --scf-for-loop-canonicalization --tosa-validate --linalg-named-op-conversion --tosa-infer-shapes --scf-for-loop-specialization --canonicalize=\"test-convergence\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-math-algebraic-simplification --arith-unsigned-when-equivalent --fold-tensor-subset-ops --arith-emulate-wide-int=\"widest-int-supported=32\" --test-function-pass --test-linalg-decompose-ops --sroa --test-linalg-drop-unit-dims --math-extend-to-supported-types --composite-fixed-point-pass --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-func-insert-arg --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --expand-realloc --test-math-to-vcix --expand-strided-metadata --cse --test-func-erase-arg --scf-for-loop-range-folding --test-scf-if-utils --test-function-pass --arith-emulate-wide-int=\"widest-int-supported=32\" --math-uplift-to-fma | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-func-insert-arg --test-function-pass --scf-forall-to-parallel --arith-unsigned-when-equivalent --test-scf-if-utils --duplicate-function-elimination --test-scf-if-utils --scf-for-loop-specialization --arith-emulate-wide-int=\"widest-int-supported=32\" --test-scf-if-utils --test-scf-pipelining=\"no-epilogue-peeling\" --arith-unsigned-when-equivalent --inline --composite-fixed-point-pass --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-for-loop-range-folding --mem2reg=\"region-simplify\" --memref-expand --test-func-erase-result --cse --scf-for-loop-specialization --sccp --test-scf-pipelining --test-func-set-type --fold-memref-alias-ops --sroa --inline --scf-forall-to-for --test-scf-uplift-while-to-for --test-scf-uplift-while-to-for --fold-memref-alias-ops --sccp --test-function-pass --scf-parallel-loop-specialization --scf-for-loop-canonicalization --canonicalize=\"test-convergence\" --control-flow-sink --scf-parallel-loop-fusion --test-func-insert-arg --test-scf-while-op-builder --resolve-shaped-type-result-dims --resolve-shaped-type-result-dims --scf-for-to-while --expand-strided-metadata --test-scf-while-op-builder --canonicalize=\"test-convergence\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-parallel-loop-fusion --symbol-dce --scf-for-to-while --test-scf-for-utils=\"test-replace-with-new-yields\" --canonicalize=\"test-convergence\" --scf-parallel-loop-specialization --inline --test-function-pass --scf-forall-to-for --test-scf-uplift-while-to-for --scf-parallel-loop-fusion --scf-for-loop-canonicalization --test-scf-for-utils --test-scf-for-utils --duplicate-function-elimination --test-func-set-type --sroa --canonicalize=\"test-convergence top-down=0\" --composite-fixed-point-pass --test-func-set-type --scf-for-loop-canonicalization --scf-parallel-loop-fusion --scf-forall-to-for --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-result --test-func-insert-arg --duplicate-function-elimination --loop-invariant-code-motion --topological-sort --arith-expand --loop-invariant-subset-hoisting --arith-emulate-wide-int=\"widest-int-supported=32\" --mem2reg=\"region-simplify\" --duplicate-function-elimination --sroa --int-range-optimizations --test-func-insert-result --duplicate-function-elimination --mem2reg --mem2reg --arith-emulate-unsupported-floats --inline --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-arg --duplicate-function-elimination --control-flow-sink --test-func-insert-result --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728]]]",
        "test_line": "[[[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v3/tosa.43e83446d40af484.mlir --sroa --duplicate-function-elimination --test-func-insert-result --test-function-pass --cse --topological-sort --tosa-reduce-transposes --duplicate-function-elimination --symbol-dce --fold-tensor-subset-ops --test-function-pass --control-flow-sink --canonicalize=\"test-convergence\" --test-func-erase-arg --canonicalize --sroa --test-func-insert-result --tosa-optional-decompositions --test-func-insert-result --test-function-pass --inline --test-function-pass --test-func-erase-arg --test-func-set-type --tosa-make-broadcastable --test-tensor-transform-patterns=\"use-foreach\" --tosa-infer-shapes | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg --remove-dead-values --composite-fixed-point-pass --test-func-erase-arg --test-func-insert-arg --loop-invariant-code-motion --test-function-pass --mem2reg --control-flow-sink --symbol-dce --canonicalize=\"test-convergence top-down=0\" --fold-tensor-subset-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-reduce-transposes | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-drop-unit-dims --tosa-make-broadcastable --test-linalg-decompose-ops --test-func-erase-result --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-tensor-transform-patterns=\"test-reassociative-reshape-folding\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-math-to-vcix --int-range-optimizations --test-linalg-pad-fusion --canonicalize --test-func-insert-arg --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --symbol-dce --test-func-erase-result --test-func-erase-arg --canonicalize --test-linalg-elementwise-fusion-patterns=\"control-fusion-by-expansion\" --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --test-linalg-drop-unit-dims --test-expand-math --test-function-pass --test-func-erase-result --test-function-pass --test-linalg-drop-unit-dims --arith-emulate-unsupported-floats --control-flow-sink --inline --linalg-generalize-named-ops --test-func-set-type --test-func-insert-result --linalg-named-op-conversion --test-math-polynomial-approximation --topological-sort --canonicalize --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-collapsing\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --test-function-pass --control-flow-sink --math-extend-to-supported-types --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-collapsing\" --test-math-algebraic-simplification --duplicate-function-elimination --arith-unsigned-when-equivalent --linalg-generalize-named-ops --test-linalg-rank-reduce-contraction-ops --sccp --test-linalg-rank-reduce-contraction-ops --canonicalize=\"test-convergence\" --linalg-generalize-named-ops --test-emulate-narrow-int=\"memref-load-bitwidth=8\" --topological-sort --test-linalg-decompose-ops --test-linalg-data-layout-propagation --mem2reg --test-func-erase-result --arith-int-range-narrowing --test-linalg-data-layout-propagation --mem2reg=\"region-simplify\" --duplicate-function-elimination --test-func-insert-result --fold-tensor-subset-ops --test-linalg-decompose-ops --math-uplift-to-fma --topological-sort --test-function-pass --test-math-algebraic-simplification --linalg-fuse-elementwise-ops --canonicalize --test-tensor-transform-patterns=\"test-reassociative-reshape-folding\" --test-linalg-elementwise-fusion-patterns --mem2reg=\"region-simplify\" --math-uplift-to-fma --mem2reg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-transform-patterns=\"test-bubble-up-extract-slice-op-pattern\" --test-linalg-data-layout-propagation --topological-sort --test-emulate-narrow-int=\"memref-load-bitwidth=8\" --linalg-inline-scalar-operands --mem2reg=\"region-simplify\" --test-linalg-elementwise-fusion-patterns=\"collapse-dimensions-control=2,3\" --arith-emulate-wide-int=\"widest-int-supported=32\" --linalg-inline-scalar-operands --test-func-erase-arg --test-func-insert-result --test-linalg-transform-patterns=\"test-patterns\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --test-arith-emulate-wide-int=\"widest-int-supported=8\" --duplicate-function-elimination --test-linalg-transform-patterns=\"test-swap-subtensor-padtensor\" --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-decompose-ops --test-linalg-pad-fusion --linalg-inline-scalar-operands --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --test-func-erase-arg --topological-sort --composite-fixed-point-pass --test-function-pass --test-linalg-elementwise-fusion-patterns --control-flow-sink --test-func-erase-arg --linalg-generalize-named-ops --linalg-fuse-elementwise-ops --linalg-named-op-conversion --linalg-inline-scalar-operands --test-linalg-greedy-fusion --cse --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --test-linalg-data-layout-propagation --test-func-erase-result --test-linalg-decompose-ops --test-linalg-rank-reduce-contraction-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-pad-fusion --expand-realloc --memref-expand --arith-emulate-wide-int --test-arith-emulate-wide-int=\"widest-int-supported=8\" --fold-memref-alias-ops --test-func-set-type --test-linalg-decompose-ops=\"remove-dead-args-and-results\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-fold-unit-extent-dims --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --loop-invariant-subset-hoisting --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --arith-emulate-unsupported-floats --mem2reg=\"region-simplify\" --test-func-erase-arg --topological-sort --test-linalg-data-layout-propagation --arith-emulate-wide-int --test-linalg-data-layout-propagation --test-linalg-greedy-fusion --test-linalg-greedy-fusion --test-func-insert-arg --convert-elementwise-to-linalg --linalg-specialize-generic-ops --symbol-dce --resolve-shaped-type-result-dims --canonicalize --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --fold-memref-alias-ops --control-flow-sink --control-flow-sink --test-memref-bound-check --symbol-dce --test-scf-uplift-while-to-for --resolve-ranked-shaped-type-result-dims --scf-parallel-loop-tiling --composite-fixed-point-pass --test-memref-dependence-check --test-func-set-type --resolve-ranked-shaped-type-result-dims --test-scf-if-utils | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-arg --composite-fixed-point-pass --topological-sort --sroa --resolve-ranked-shaped-type-result-dims --remove-dead-values --sccp --mem2reg --resolve-ranked-shaped-type-result-dims --test-memref-dependence-check --composite-fixed-point-pass --sroa --test-func-insert-result --memref-emulate-wide-int=\"widest-int-supported=32\" --duplicate-function-elimination --test-func-erase-arg --duplicate-function-elimination --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --control-flow-sink --test-func-insert-arg --symbol-dce --loop-invariant-code-motion --control-flow-sink --test-func-insert-result --sccp --duplicate-function-elimination --control-flow-sink --symbol-dce --canonicalize | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg=\"region-simplify\" --test-func-set-type --duplicate-function-elimination --sccp --test-func-erase-arg --inline --inline --loop-invariant-subset-hoisting --topological-sort --test-func-set-type --test-func-set-type --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728]]]",
        "test_line": "[[[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v3/tosa.43e83446d40af484.mlir --canonicalize --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --symbol-dce --tosa-reduce-transposes --tosa-test-quant-utils | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --test-scf-pipelining=\"no-epilogue-peeling\" --test-tensor-transform-patterns --tosa-optional-decompositions --test-function-pass --test-function-pass --scf-forall-to-parallel --test-function-pass --scf-for-loop-canonicalization --tosa-reduce-transposes --remove-dead-values --duplicate-function-elimination --test-func-insert-arg --scf-for-loop-peeling --loop-invariant-code-motion --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-make-broadcastable --test-tensor-transform-patterns=\"use-foreach\" --tosa-reduce-transposes --test-func-erase-arg --math-uplift-to-fma --sroa --composite-fixed-point-pass --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --sccp --topological-sort --tosa-validate --linalg-fold-unit-extent-dims --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --sccp --test-func-insert-result --sroa --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --linalg-named-op-conversion --test-linalg-greedy-fusion --test-linalg-greedy-fusion --test-func-insert-result --loop-invariant-subset-hoisting --cse --test-func-erase-arg --math-uplift-to-fma --test-math-polynomial-approximation=\"enable-avx2\" --test-math-polynomial-approximation=\"enable-avx2\" --sroa --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-scf-uplift-while-to-for | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-func-erase-arg --arith-unsigned-when-equivalent --sroa --memref-emulate-wide-int --test-func-insert-result --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --test-memref-dependence-check --loop-invariant-code-motion --fold-memref-alias-ops --mem2reg --arith-expand=\"include-bf16\" --test-func-erase-result --arith-emulate-unsupported-floats --expand-strided-metadata --resolve-ranked-shaped-type-result-dims --expand-strided-metadata --inline --memref-expand --sroa --arith-unsigned-when-equivalent --memref-expand | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-unsigned-when-equivalent --canonicalize=\"test-convergence\" --loop-invariant-subset-hoisting --loop-invariant-code-motion --arith-expand --inline --remove-dead-values --canonicalize --test-func-insert-result --test-arith-emulate-wide-int --arith-emulate-wide-int --arith-int-range-narrowing --loop-invariant-subset-hoisting --test-func-insert-arg --loop-invariant-subset-hoisting --mem2reg --sroa --cse --remove-dead-values --topological-sort --arith-unsigned-when-equivalent --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-result --loop-invariant-code-motion --test-func-erase-result --test-func-set-type --test-func-erase-result --sccp --test-func-insert-result --control-flow-sink --loop-invariant-subset-hoisting --test-func-set-type --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --test-func-erase-result --composite-fixed-point-pass --loop-invariant-subset-hoisting --topological-sort --test-func-set-type --composite-fixed-point-pass --test-function-pass --symbol-dce --sroa --test-func-set-type --test-func-insert-arg --sroa --test-func-insert-result --test-func-set-type --test-func-set-type --sccp --remove-dead-values | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728]]]",
        "test_line": "[[[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v3/tosa.43e83446d40af484.mlir --test-func-set-type --test-func-set-type --fold-tensor-subset-ops --test-tensor-copy-insertion --composite-fixed-point-pass --cse --test-function-pass --mem2reg --loop-invariant-subset-hoisting --fold-tensor-subset-ops --tosa-optional-decompositions | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --composite-fixed-point-pass --cse --test-func-set-type --loop-invariant-subset-hoisting --fold-tensor-subset-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-scf-uplift-while-to-for --canonicalize=\"test-convergence\" --duplicate-function-elimination --test-tensor-transform-patterns=\"test-reassociative-reshape-folding\" --test-func-set-type --scf-parallel-loop-tiling=\"parallel-loop-tile-sizes=1,4 no-min-max-bounds=true\" --sccp --sroa --test-math-polynomial-approximation --int-range-optimizations --test-linalg-decompose-ops --canonicalize=\"test-convergence\" --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --test-function-pass --test-func-set-type --arith-unsigned-when-equivalent | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-specialize-generic-ops --test-linalg-data-layout-propagation --linalg-inline-scalar-operands --symbol-dce --math-extend-to-supported-types --symbol-dce --linalg-inline-scalar-operands --sccp --test-linalg-greedy-fusion --topological-sort --resolve-ranked-shaped-type-result-dims --test-function-pass --resolve-shaped-type-result-dims --test-func-set-type --test-linalg-greedy-fusion --test-linalg-drop-unit-dims --loop-invariant-subset-hoisting --resolve-ranked-shaped-type-result-dims --test-linalg-pad-fusion --inline --symbol-dce --linalg-generalize-named-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-data-layout-propagation --test-linalg-greedy-fusion --resolve-shaped-type-result-dims --expand-strided-metadata --linalg-inline-scalar-operands | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --test-function-pass --cse --sroa --loop-invariant-subset-hoisting --sccp --loop-invariant-subset-hoisting --sroa --test-func-erase-result --sccp --inline --test-func-erase-result --cse --test-func-insert-arg --test-function-pass --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728]]]",
        "test_line": "[[[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v3/tosa.43e83446d40af484.mlir --test-func-insert-result --tosa-reduce-transposes --control-flow-sink --test-func-insert-arg --cse --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --test-func-erase-result --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize --duplicate-function-elimination --test-func-insert-arg --tosa-infer-shapes --test-func-erase-result --test-func-set-type --remove-dead-values --symbol-dce --control-flow-sink --tosa-layerwise-constant-fold --control-flow-sink --fold-tensor-subset-ops --mem2reg --tosa-make-broadcastable --fold-tensor-subset-ops --tosa-infer-shapes --mem2reg=\"region-simplify\" --test-function-pass --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --test-tensor-copy-insertion --test-func-erase-result --duplicate-function-elimination --sroa --test-func-erase-arg --composite-fixed-point-pass --fold-tensor-subset-ops --topological-sort --tosa-reduce-transposes --canonicalize=\"test-convergence\" --test-func-insert-result --tosa-test-quant-utils | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-expand=\"include-bf16\" --cse --test-func-insert-arg --test-func-insert-arg --linalg-fuse-elementwise-ops --scf-forall-to-parallel --tosa-reduce-transposes --int-range-optimizations --linalg-named-op-conversion --duplicate-function-elimination --test-tensor-transform-patterns=\"test-fold-consecutive-insert-extract-slice\" --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-named-op-conversion --composite-fixed-point-pass --canonicalize --arith-unsigned-when-equivalent --mem2reg --test-math-polynomial-approximation=\"enable-avx2\" --test-linalg-drop-unit-dims --test-memref-bound-check --linalg-named-op-conversion --test-function-pass --control-flow-sink --arith-emulate-wide-int=\"widest-int-supported=32\" --expand-strided-metadata --symbol-dce --linalg-specialize-generic-ops --test-linalg-elementwise-fusion-patterns=\"control-fusion-by-expansion\" --linalg-named-op-conversion --loop-invariant-subset-hoisting --arith-expand --duplicate-function-elimination --test-func-erase-result --linalg-generalize-named-ops --cse --loop-invariant-subset-hoisting --expand-realloc=\"emit-deallocs\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-memref-bound-check --test-math-algebraic-simplification --symbol-dce --composite-fixed-point-pass --symbol-dce --arith-emulate-unsupported-floats --test-memref-dependence-check --canonicalize=\"test-convergence\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-arg --resolve-ranked-shaped-type-result-dims --mem2reg=\"region-simplify\" --expand-realloc --resolve-ranked-shaped-type-result-dims --test-math-algebraic-simplification --resolve-shaped-type-result-dims --resolve-shaped-type-result-dims --fold-memref-alias-ops --topological-sort --loop-invariant-code-motion --sccp --normalize-memrefs --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-math-to-vcix --composite-fixed-point-pass --test-func-erase-arg --topological-sort --test-func-erase-result --canonicalize=\"test-convergence top-down=0\" --loop-invariant-code-motion --loop-invariant-subset-hoisting --test-func-erase-arg --inline --test-function-pass --duplicate-function-elimination --mem2reg=\"region-simplify\" --loop-invariant-code-motion --canonicalize=\"test-convergence\" --test-func-erase-result --control-flow-sink --cse --test-func-erase-result --duplicate-function-elimination --test-math-algebraic-simplification --test-math-algebraic-simplification --cse --test-func-erase-arg --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-result --symbol-dce --loop-invariant-code-motion --inline --sroa --symbol-dce --sroa --duplicate-function-elimination --sccp --test-func-erase-arg --loop-invariant-code-motion --sroa --mem2reg=\"region-simplify\" --cse --duplicate-function-elimination --test-func-erase-result --sccp --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --remove-dead-values --sccp --mem2reg=\"region-simplify\" --canonicalize=\"test-convergence top-down=0\" --topological-sort --test-func-set-type --test-func-set-type --duplicate-function-elimination --remove-dead-values --test-func-insert-result --control-flow-sink --symbol-dce --canonicalize=\"test-convergence\" --test-function-pass --canonicalize --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728]]]",
        "test_line": "[[[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v3/tosa.43e83446d40af484.mlir --tosa-optional-decompositions --test-func-erase-result --composite-fixed-point-pass --tosa-infer-shapes --test-func-set-type --tosa-layerwise-constant-fold --tosa-optional-decompositions --duplicate-function-elimination --test-func-insert-result --symbol-dce --control-flow-sink --tosa-layerwise-constant-fold --test-tensor-copy-insertion=\"must-infer-memory-space\" --remove-dead-values --test-func-erase-arg --remove-dead-values --symbol-dce --canonicalize --test-func-set-type --test-function-pass --topological-sort --mem2reg --loop-invariant-subset-hoisting --duplicate-function-elimination --control-flow-sink --inline --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-named-op-conversion --scf-for-to-while --test-expand-math --symbol-dce --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --test-math-polynomial-approximation=\"enable-avx2\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --scf-parallel-loop-specialization --composite-fixed-point-pass --cse --test-func-insert-result --resolve-shaped-type-result-dims --test-memref-dependence-check --expand-strided-metadata --test-arith-emulate-wide-int=\"widest-int-supported=8\" --fold-memref-alias-ops --arith-unsigned-when-equivalent --expand-strided-metadata --arith-unsigned-when-equivalent --canonicalize=\"test-convergence top-down=0\" --memref-emulate-wide-int=\"widest-int-supported=32\" --test-func-set-type --resolve-ranked-shaped-type-result-dims --test-func-erase-result --mem2reg=\"region-simplify\" --normalize-memrefs --arith-emulate-unsupported-floats --expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --scf-for-loop-canonicalization --test-func-insert-result --test-function-pass --canonicalize=\"test-convergence top-down=0\" --test-function-pass --scf-for-loop-canonicalization | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --control-flow-sink --control-flow-sink --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --topological-sort --arith-emulate-wide-int --topological-sort --int-range-optimizations --duplicate-function-elimination --test-func-erase-result --inline --cse --control-flow-sink --symbol-dce --test-func-insert-arg --topological-sort --test-func-insert-arg --test-func-insert-result --remove-dead-values --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --canonicalize=\"test-convergence top-down=0\" --sccp --canonicalize=\"test-convergence top-down=0\" --cse --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize --test-func-set-type --loop-invariant-subset-hoisting --loop-invariant-code-motion --mem2reg --symbol-dce --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728]]]",
        "test_line": "[[[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v3/tosa.43e83446d40af484.mlir --tosa-reduce-transposes --sroa --tosa-infer-shapes --composite-fixed-point-pass --sroa --test-function-pass --inline --sroa --inline --tosa-reduce-transposes --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --tosa-optional-decompositions --test-func-erase-arg --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-infer-shapes --test-function-pass --tosa-optional-decompositions --tosa-test-quant-utils --inline --cse --tosa-optional-decompositions --test-func-erase-result --test-func-set-type --test-func-erase-result --cse --loop-invariant-subset-hoisting --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --duplicate-function-elimination --symbol-dce --test-function-pass --remove-dead-values --test-func-erase-result --test-tensor-copy-insertion --composite-fixed-point-pass --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-tensor-copy-insertion=\"must-infer-memory-space\" --canonicalize=\"test-convergence top-down=0\" --test-func-set-type --test-func-set-type --cse --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --loop-invariant-subset-hoisting --test-func-insert-result --topological-sort --symbol-dce --duplicate-function-elimination --fold-tensor-subset-ops --topological-sort --control-flow-sink --canonicalize=\"test-convergence\" --tosa-test-quant-utils --tosa-validate --mem2reg --duplicate-function-elimination --symbol-dce --tosa-reduce-transposes --fold-tensor-subset-ops --tosa-make-broadcastable --test-func-erase-result --test-func-erase-arg --tosa-reduce-transposes --fold-tensor-subset-ops --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-optional-decompositions --test-func-set-type --symbol-dce --tosa-test-quant-utils --composite-fixed-point-pass --canonicalize=\"test-convergence\" --test-func-insert-result --tosa-reduce-transposes --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-tensor-copy-insertion=\"must-infer-memory-space\" --test-func-set-type --sccp --loop-invariant-subset-hoisting --loop-invariant-code-motion --tosa-reduce-transposes --sccp --duplicate-function-elimination --mem2reg --sccp --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --test-func-insert-result --sroa --fold-tensor-subset-ops --symbol-dce --test-func-erase-result --tosa-make-broadcastable --test-function-pass --remove-dead-values --test-func-insert-arg --tosa-infer-shapes --composite-fixed-point-pass --tosa-optional-decompositions --remove-dead-values --test-func-erase-arg --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --test-func-insert-arg --test-func-insert-result --test-scf-while-op-builder --remove-dead-values --test-scf-uplift-while-to-for | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-math-algebraic-simplification --test-linalg-drop-unit-dims --test-linalg-drop-unit-dims --test-scf-for-utils=\"test-replace-with-new-yields\" --test-scf-pipelining --scf-forall-to-parallel --test-func-set-type --test-func-erase-arg --arith-expand=\"include-bf16\" --test-func-erase-result --tosa-make-broadcastable --scf-parallel-loop-specialization --scf-for-loop-specialization --test-math-algebraic-simplification --arith-emulate-wide-int --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-math-to-vcix --topological-sort --test-linalg-drop-unit-dims --test-linalg-greedy-fusion --loop-invariant-subset-hoisting --cse --scf-forall-to-parallel --linalg-specialize-generic-ops --mem2reg=\"region-simplify\" --control-flow-sink --test-scf-while-op-builder --test-arith-emulate-wide-int --convert-elementwise-to-linalg --test-math-polynomial-approximation=\"enable-avx2\" --tosa-layerwise-constant-fold | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --normalize-memrefs --test-linalg-elementwise-fusion-patterns=\"collapse-dimensions-control=2,3\" --resolve-shaped-type-result-dims --linalg-named-op-conversion --sroa --test-func-set-type --test-linalg-pad-fusion --control-flow-sink --memref-emulate-wide-int --sccp --test-linalg-transform-patterns=\"test-swap-subtensor-padtensor\" --test-linalg-decompose-ops=\"remove-dead-args-and-results\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --sroa --test-function-pass --control-flow-sink --loop-invariant-subset-hoisting --expand-strided-metadata --composite-fixed-point-pass --memref-emulate-wide-int --test-func-insert-result --test-memref-bound-check --test-memref-dependence-check --test-function-pass --resolve-ranked-shaped-type-result-dims --mem2reg --test-function-pass --test-memref-bound-check --test-function-pass --fold-memref-alias-ops --remove-dead-values --test-expand-math --sccp --cse --sroa --math-uplift-to-fma --test-func-erase-arg --resolve-shaped-type-result-dims --expand-strided-metadata --control-flow-sink --test-math-to-vcix --mem2reg=\"region-simplify\" --remove-dead-values --expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --inline --loop-invariant-code-motion --test-func-insert-arg --sccp --test-func-erase-arg --test-function-pass --test-math-algebraic-simplification --canonicalize=\"test-convergence\" --test-math-polynomial-approximation | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --loop-invariant-subset-hoisting --symbol-dce --cse --sroa --test-func-insert-arg --test-func-erase-result --sccp --remove-dead-values --topological-sort --loop-invariant-code-motion --sroa --math-extend-to-supported-types --test-func-insert-arg --test-function-pass --test-function-pass --test-math-polynomial-approximation | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-result --test-func-set-type --cse --test-func-insert-result --inline --inline --duplicate-function-elimination --mem2reg=\"region-simplify\" --topological-sort --duplicate-function-elimination --control-flow-sink --remove-dead-values --mem2reg --test-func-set-type --sccp --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728]]]",
        "test_line": "[[[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v3/tosa.43e83446d40af484.mlir --remove-dead-values --tosa-optional-decompositions --test-func-erase-arg --canonicalize --sccp --tosa-make-broadcastable --test-func-erase-arg --test-func-insert-result --loop-invariant-subset-hoisting --test-func-erase-arg --fold-tensor-subset-ops --canonicalize=\"test-convergence top-down=0\" --test-tensor-transform-patterns=\"test-rewrite-extract-slice-from-collapse-shape\" --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-for-loop-peeling --topological-sort --test-function-pass --scf-for-loop-range-folding --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --test-tensor-copy-insertion --tosa-layerwise-constant-fold --mem2reg --remove-dead-values --canonicalize --topological-sort --tosa-layerwise-constant-fold --inline --sccp --fold-tensor-subset-ops --test-func-erase-result --tosa-optional-decompositions --sroa --sroa --loop-invariant-subset-hoisting --test-tensor-transform-patterns=\"test-reassociative-reshape-folding\" --test-func-insert-arg --sroa --tosa-make-broadcastable --control-flow-sink --test-func-insert-arg --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-result --sroa --test-math-polynomial-approximation --inline --canonicalize --composite-fixed-point-pass --loop-invariant-subset-hoisting --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --sccp --linalg-fold-unit-extent-dims --test-func-erase-result --test-func-set-type --test-linalg-rank-reduce-contraction-ops --topological-sort --linalg-inline-scalar-operands --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --expand-realloc --test-linalg-drop-unit-dims --linalg-generalize-named-ops --test-memref-bound-check --test-func-erase-arg --cse --loop-invariant-code-motion --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --test-linalg-transform-patterns=\"test-erase-unused-operands-and-results\" --test-func-insert-arg --test-func-set-type --linalg-generalize-named-ops --expand-realloc --control-flow-sink --canonicalize=\"test-convergence\" --fold-memref-alias-ops --math-uplift-to-fma --memref-expand --linalg-inline-scalar-operands --expand-strided-metadata --math-uplift-to-fma --test-linalg-rank-reduce-contraction-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-result --test-arith-emulate-wide-int=\"widest-int-supported=8\" --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --fold-memref-alias-ops --arith-expand=\"include-bf16\" --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --composite-fixed-point-pass --canonicalize=\"test-convergence\" --memref-expand --test-func-set-type --cse --arith-emulate-wide-int --memref-emulate-wide-int --composite-fixed-point-pass --test-func-set-type --mem2reg=\"region-simplify\" --test-function-pass --cse --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-arith-emulate-wide-int --memref-emulate-wide-int=\"widest-int-supported=32\" --cse --sccp --test-memref-dependence-check --test-func-erase-arg --test-func-erase-arg --cse --memref-emulate-wide-int=\"widest-int-supported=32\" --arith-expand --fold-memref-alias-ops --arith-int-range-narrowing=\"int-bitwidths-supported=32\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-arg --inline --loop-invariant-subset-hoisting --int-range-optimizations --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --control-flow-sink --mem2reg=\"region-simplify\" --mem2reg --cse --arith-int-range-narrowing | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --topological-sort --test-func-erase-arg --test-function-pass --mem2reg --sroa --test-func-insert-result --duplicate-function-elimination --canonicalize=\"test-convergence\" --test-function-pass --test-func-erase-result --cse --sccp --test-function-pass --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --symbol-dce --composite-fixed-point-pass --duplicate-function-elimination --loop-invariant-code-motion --composite-fixed-point-pass --mem2reg=\"region-simplify\" --duplicate-function-elimination --test-func-set-type --test-function-pass --loop-invariant-subset-hoisting --test-func-erase-result --loop-invariant-subset-hoisting --test-func-set-type --test-func-insert-arg --symbol-dce --test-func-set-type --mem2reg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728]]]",
        "test_line": "[[[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v3/tosa.43e83446d40af484.mlir --tosa-infer-shapes --symbol-dce --test-tensor-copy-insertion=\"must-infer-memory-space\" --duplicate-function-elimination --remove-dead-values --canonicalize=\"test-convergence top-down=0\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --inline --tosa-optional-decompositions --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --tosa-make-broadcastable --test-func-insert-result --mem2reg --test-function-pass --mem2reg=\"region-simplify\" --canonicalize=\"test-convergence top-down=0\" --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --cse --symbol-dce --remove-dead-values --loop-invariant-code-motion --tosa-optional-decompositions --canonicalize=\"test-convergence\" --tosa-test-quant-utils --test-func-erase-arg --test-func-erase-arg --sroa --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --test-func-set-type --tosa-make-broadcastable --test-func-insert-result --test-func-insert-arg --composite-fixed-point-pass --test-func-insert-arg --test-func-erase-arg --control-flow-sink --canonicalize=\"test-convergence\" --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-expand --test-math-polynomial-approximation=\"enable-avx2\" --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --test-math-to-vcix --scf-parallel-loop-specialization --test-func-insert-result --linalg-named-op-conversion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --math-extend-to-supported-types --test-func-set-type --expand-realloc --test-math-polynomial-approximation --inline --test-func-insert-result --resolve-ranked-shaped-type-result-dims | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --composite-fixed-point-pass --symbol-dce --scf-for-loop-specialization --expand-realloc=\"emit-deallocs\" --symbol-dce --composite-fixed-point-pass --arith-unsigned-when-equivalent --topological-sort --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --memref-expand --inline --normalize-memrefs --normalize-memrefs --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse --loop-invariant-code-motion --int-range-optimizations --test-func-erase-result --test-func-erase-result --arith-expand=\"include-bf16\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --sccp --test-func-insert-arg --mem2reg --control-flow-sink --test-function-pass --sroa --test-func-erase-arg --mem2reg --remove-dead-values --loop-invariant-subset-hoisting --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728]]]",
        "test_line": "[[[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v3/tosa.43e83446d40af484.mlir --tosa-layerwise-constant-fold --mem2reg=\"region-simplify\" --loop-invariant-code-motion --loop-invariant-subset-hoisting --tosa-layerwise-constant-fold --tosa-reduce-transposes --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --test-tensor-transform-patterns=\"use-foreach\" --tosa-infer-shapes --test-tensor-transform-patterns=\"test-reassociative-reshape-folding\" --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --test-tensor-copy-insertion --test-func-set-type --tosa-layerwise-constant-fold --sccp --test-func-insert-arg --symbol-dce --loop-invariant-subset-hoisting --tosa-reduce-transposes --test-tensor-copy-insertion=\"must-infer-memory-space\" --test-func-erase-arg --tosa-layerwise-constant-fold --tosa-optional-decompositions --test-func-erase-result --mem2reg --canonicalize=\"test-convergence top-down=0\" --topological-sort --tosa-test-quant-utils --fold-tensor-subset-ops --fold-tensor-subset-ops --cse --tosa-make-broadcastable --test-func-insert-result --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --duplicate-function-elimination --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --symbol-dce --sroa --canonicalize --control-flow-sink --tosa-make-broadcastable --tosa-layerwise-constant-fold --topological-sort --tosa-optional-decompositions --test-tensor-copy-insertion --test-func-erase-arg --tosa-test-quant-utils --topological-sort --tosa-reduce-transposes --sccp --duplicate-function-elimination --composite-fixed-point-pass --test-func-set-type --tosa-optional-decompositions --cse --inline --fold-tensor-subset-ops --test-func-set-type --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-tensor-transform-patterns=\"test-fold-constant-extract-slice\" --test-function-pass --symbol-dce --composite-fixed-point-pass --cse --test-func-erase-result --sccp --tosa-test-quant-utils --tosa-layerwise-constant-fold --test-func-erase-arg --symbol-dce --test-func-insert-arg --sccp --symbol-dce --test-function-pass --test-func-erase-result --tosa-test-quant-utils --test-func-erase-arg --test-func-insert-result --test-func-erase-arg --canonicalize --tosa-reduce-transposes --test-tensor-copy-insertion --test-func-set-type --symbol-dce --loop-invariant-subset-hoisting --loop-invariant-subset-hoisting --test-func-erase-result --sccp --test-tensor-copy-insertion=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --sccp --tosa-optional-decompositions --tosa-layerwise-constant-fold --test-function-pass --sroa --loop-invariant-subset-hoisting --test-func-insert-arg --fold-tensor-subset-ops --loop-invariant-subset-hoisting --cse --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --test-func-insert-result --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --tosa-optional-decompositions --composite-fixed-point-pass --test-func-insert-arg --duplicate-function-elimination --duplicate-function-elimination --mem2reg --test-func-erase-result --tosa-reduce-transposes --tosa-test-quant-utils --symbol-dce --symbol-dce --test-function-pass --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --sroa --test-scf-while-op-builder --scf-parallel-loop-tiling=\"parallel-loop-tile-sizes=1,4 no-min-max-bounds=true\" --scf-parallel-loop-fusion --sroa --loop-invariant-subset-hoisting --scf-for-loop-specialization | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-expand-math --test-func-erase-result --convert-elementwise-to-linalg --loop-invariant-code-motion --scf-parallel-loop-tiling=\"parallel-loop-tile-sizes=1,4 no-min-max-bounds=true\" --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --linalg-specialize-generic-ops --scf-for-loop-peeling=\"peel-front\" --symbol-dce --test-func-erase-arg --scf-for-loop-canonicalization --control-flow-sink --composite-fixed-point-pass --test-func-erase-arg --math-uplift-to-fma --test-function-pass --fold-tensor-subset-ops --tosa-infer-shapes --mem2reg=\"region-simplify\" --linalg-generalize-named-ops --sccp --inline --symbol-dce --scf-parallel-loop-fusion --test-scf-pipelining=\"annotate\" --test-math-polynomial-approximation --composite-fixed-point-pass --test-linalg-data-layout-propagation --test-scf-uplift-while-to-for --sccp --test-function-pass --scf-parallel-loop-tiling=\"parallel-loop-tile-sizes=1,4 no-min-max-bounds=true\" --tosa-test-quant-utils --scf-for-loop-peeling=\"peel-front\" --scf-for-to-while --test-scf-uplift-while-to-for --test-linalg-decompose-ops --tosa-optional-decompositions --scf-parallel-loop-tiling --linalg-fuse-elementwise-ops --test-linalg-transform-patterns=\"test-bubble-up-extract-slice-op-pattern\" --test-math-to-vcix --mem2reg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sroa --linalg-generalize-named-ops --convert-elementwise-to-linalg --linalg-generalize-named-ops --canonicalize=\"test-convergence\" --test-function-pass --test-linalg-greedy-fusion --test-linalg-drop-unit-dims --topological-sort --linalg-inline-scalar-operands --inline --canonicalize=\"test-convergence top-down=0\" --arith-expand=\"include-bf16\" --linalg-named-op-conversion --symbol-dce --loop-invariant-subset-hoisting --test-linalg-pad-fusion --symbol-dce --mem2reg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-forall-to-for --duplicate-function-elimination --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-func-set-type --test-emulate-narrow-int=\"memref-load-bitwidth=8\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-scf-for-utils --loop-invariant-code-motion --control-flow-sink --scf-parallel-loop-fusion --scf-for-to-while --test-function-pass --scf-parallel-loop-fusion --test-func-erase-arg --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --test-func-insert-arg --topological-sort --inline --test-func-insert-arg --test-func-erase-result --symbol-dce --loop-invariant-code-motion --symbol-dce --sccp --symbol-dce --duplicate-function-elimination --cse --control-flow-sink --control-flow-sink --inline --mem2reg --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728]]]",
        "test_line": "[[[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v3/tosa.43e83446d40af484.mlir --test-func-insert-arg --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-unsigned-when-equivalent --test-func-erase-result --symbol-dce --test-arith-emulate-wide-int=\"widest-int-supported=8\" --tosa-layerwise-constant-fold --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-expand=\"include-bf16\" --control-flow-sink --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --control-flow-sink --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --loop-invariant-subset-hoisting --arith-expand --test-func-erase-result --loop-invariant-code-motion --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --test-scf-pipelining=\"annotate\" --test-linalg-rank-reduce-contraction-ops --linalg-named-op-conversion --scf-forall-to-for --arith-expand=\"include-bf16\" --linalg-named-op-conversion --canonicalize --scf-forall-to-parallel --linalg-fold-unit-extent-dims --composite-fixed-point-pass --test-func-erase-result --test-scf-if-utils --linalg-fold-unit-extent-dims --linalg-specialize-generic-ops --math-uplift-to-fma --test-math-algebraic-simplification --test-expand-math --test-scf-uplift-while-to-for --test-linalg-pad-fusion --sroa --scf-for-loop-range-folding --test-func-erase-result --sccp --test-tensor-transform-patterns=\"test-rewrite-extract-slice-from-collapse-shape\" --test-linalg-transform-patterns=\"test-vector-transfer-forwarding-patterns\" --scf-for-loop-specialization --scf-parallel-loop-fusion --scf-for-loop-canonicalization --test-expand-math --loop-invariant-code-motion --test-math-algebraic-simplification --test-scf-if-utils --arith-emulate-wide-int=\"widest-int-supported=32\" --test-function-pass --test-tensor-transform-patterns=\"test-reassociative-reshape-folding\" --duplicate-function-elimination --scf-parallel-loop-fusion --test-func-erase-result --canonicalize --test-linalg-transform-patterns=\"test-erase-unused-operands-and-results\" --scf-for-to-while --test-func-insert-arg --scf-forall-to-parallel --test-scf-for-utils --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-expand=\"include-bf16\" --mem2reg=\"region-simplify\" --control-flow-sink --fold-tensor-subset-ops --test-math-polynomial-approximation --test-math-to-vcix --arith-int-range-narrowing --test-expand-math --test-linalg-transform-patterns=\"test-erase-unnecessary-inputs\" --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-math-polynomial-approximation | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --memref-expand --test-function-pass --control-flow-sink --test-func-erase-arg --symbol-dce --expand-realloc=\"emit-deallocs\" --test-func-set-type --test-func-insert-arg --memref-emulate-wide-int | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --remove-dead-values --resolve-shaped-type-result-dims --expand-realloc=\"emit-deallocs\" --loop-invariant-subset-hoisting --remove-dead-values --sroa --mem2reg --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --test-func-insert-result --inline --loop-invariant-subset-hoisting --test-function-pass --test-function-pass --test-func-erase-arg --composite-fixed-point-pass --topological-sort --canonicalize=\"test-convergence\" --control-flow-sink --test-func-erase-arg --symbol-dce --inline --test-func-erase-arg --symbol-dce --control-flow-sink --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728]]]",
        "test_line": "[[[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v3/tosa.43e83446d40af484.mlir --sroa --duplicate-function-elimination --test-func-insert-arg --test-tensor-copy-insertion --test-func-set-type --test-func-insert-arg --remove-dead-values --loop-invariant-subset-hoisting --symbol-dce --test-function-pass --test-tensor-copy-insertion --tosa-make-broadcastable --tosa-layerwise-constant-fold --inline --tosa-make-broadcastable --topological-sort --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg=\"region-simplify\" --linalg-specialize-generic-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sroa --composite-fixed-point-pass --test-expand-math --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --linalg-generalize-named-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --test-memref-bound-check --test-linalg-data-layout-propagation --expand-strided-metadata --test-func-insert-arg --test-memref-dependence-check --loop-invariant-subset-hoisting --test-linalg-transform-patterns=\"test-bubble-up-extract-slice-op-pattern\" --math-uplift-to-fma --control-flow-sink --sroa --test-linalg-data-layout-propagation | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --test-func-set-type --test-math-to-vcix --mem2reg --test-linalg-drop-unit-dims --test-func-insert-arg --test-math-polynomial-approximation=\"enable-avx2\" --test-function-pass --test-function-pass --loop-invariant-code-motion --linalg-named-op-conversion --test-func-erase-result --symbol-dce --mem2reg=\"region-simplify\" --test-linalg-elementwise-fusion-patterns=\"fuse-multiuse-producer\" --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-rank-reduce-contraction-ops --linalg-inline-scalar-operands --mem2reg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --loop-invariant-subset-hoisting --arith-emulate-unsupported-floats | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --remove-dead-values --int-range-optimizations --cse --canonicalize=\"test-convergence top-down=0\" --topological-sort --loop-invariant-code-motion --test-func-erase-result --loop-invariant-subset-hoisting --test-func-insert-arg --sroa --topological-sort --arith-expand=\"include-bf16\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --cse --sroa --test-func-set-type --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --test-function-pass --composite-fixed-point-pass --control-flow-sink --topological-sort --canonicalize=\"test-convergence top-down=0\" --duplicate-function-elimination --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728]]]",
        "test_line": "[[[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v3/tosa.43e83446d40af484.mlir --cse --topological-sort --sroa --symbol-dce --loop-invariant-code-motion --canonicalize=\"test-convergence\" --test-tensor-transform-patterns=\"test-drop-redundant-insert-slice-rank-expansion\" --tosa-test-quant-utils --test-func-set-type --test-function-pass --mem2reg=\"region-simplify\" --loop-invariant-code-motion --sroa --tosa-infer-shapes --loop-invariant-code-motion --test-func-erase-result --test-tensor-copy-insertion --test-tensor-copy-insertion --fold-tensor-subset-ops --duplicate-function-elimination --fold-tensor-subset-ops --tosa-optional-decompositions --loop-invariant-subset-hoisting --test-func-erase-result --tosa-optional-decompositions --duplicate-function-elimination --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-result --test-func-set-type --topological-sort --tosa-test-quant-utils --remove-dead-values --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --test-func-erase-arg --tosa-make-broadcastable --loop-invariant-subset-hoisting --loop-invariant-subset-hoisting --test-func-erase-result --tosa-make-broadcastable --tosa-layerwise-constant-fold --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --test-function-pass --test-func-set-type --test-function-pass --test-func-erase-arg --symbol-dce --canonicalize=\"test-convergence\" --test-func-erase-arg --test-function-pass --tosa-reduce-transposes --test-func-erase-arg --tosa-reduce-transposes --remove-dead-values --tosa-infer-shapes --tosa-layerwise-constant-fold | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --inline --sccp --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --tosa-infer-shapes --test-func-erase-result --topological-sort --tosa-infer-shapes --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --arith-unsigned-when-equivalent --sroa --test-function-pass --remove-dead-values --tosa-optional-decompositions --loop-invariant-code-motion --test-func-erase-result --canonicalize --sroa --tosa-make-broadcastable --sroa --arith-expand --test-func-erase-arg --test-tensor-copy-insertion --symbol-dce --fold-tensor-subset-ops --remove-dead-values --test-func-erase-arg --test-tensor-copy-insertion=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --duplicate-function-elimination --test-func-erase-arg --topological-sort --loop-invariant-code-motion --sccp --loop-invariant-code-motion --tosa-reduce-transposes --test-function-pass --test-func-set-type --test-function-pass --tosa-make-broadcastable | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --test-func-set-type --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-function-pass --tosa-make-broadcastable --loop-invariant-code-motion --test-function-pass --sroa --arith-unsigned-when-equivalent --tosa-layerwise-constant-fold --test-tensor-transform-patterns=\"use-foreach\" --test-func-insert-arg --canonicalize=\"test-convergence top-down=0\" --int-range-optimizations --test-func-set-type --cse --sccp --tosa-validate --loop-invariant-subset-hoisting --test-tensor-copy-insertion --canonicalize=\"test-convergence\" --test-func-insert-result --arith-unsigned-when-equivalent --remove-dead-values --loop-invariant-subset-hoisting --test-tensor-transform-patterns=\"test-fold-consecutive-insert-extract-slice\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --arith-emulate-unsupported-floats --arith-emulate-wide-int=\"widest-int-supported=32\" --test-scf-if-utils --test-func-set-type --arith-emulate-wide-int --canonicalize=\"test-convergence\" --test-arith-emulate-wide-int=\"widest-int-supported=8\" --int-range-optimizations --sccp --inline --test-function-pass --test-scf-while-op-builder --test-function-pass --scf-for-loop-peeling=\"peel-front\" --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --scf-parallel-loop-tiling=\"parallel-loop-tile-sizes=1,4 no-min-max-bounds=true\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --canonicalize=\"test-convergence top-down=0\" --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --sccp --loop-invariant-code-motion --linalg-fuse-elementwise-ops --test-linalg-rank-reduce-contraction-ops --int-range-optimizations --test-func-insert-arg --arith-emulate-wide-int=\"widest-int-supported=32\" --test-linalg-drop-unit-dims --arith-int-range-narrowing --test-expand-math --linalg-generalize-named-ops --test-linalg-drop-unit-dims --test-function-pass --test-function-pass --test-tensor-transform-patterns --composite-fixed-point-pass --linalg-inline-scalar-operands --test-math-polynomial-approximation --test-linalg-pad-fusion --test-math-to-vcix --linalg-fuse-elementwise-ops --sroa --test-func-insert-result --linalg-generalize-named-ops --test-linalg-pad-fusion --test-linalg-data-layout-propagation --test-func-insert-result --math-uplift-to-fma --convert-elementwise-to-linalg --sccp --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-memref-dependence-check --test-func-erase-arg --test-scf-while-op-builder --scf-forall-to-parallel --test-arith-emulate-wide-int | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-for-loop-canonicalization --scf-for-loop-specialization --test-func-erase-result --scf-forall-to-for --test-func-erase-result --scf-parallel-loop-fusion --test-func-set-type --duplicate-function-elimination --sccp --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --remove-dead-values --control-flow-sink --cse --loop-invariant-subset-hoisting --canonicalize=\"test-convergence top-down=0\" --inline --cse --remove-dead-values --composite-fixed-point-pass --topological-sort --test-func-insert-arg --test-func-erase-result --mem2reg --test-func-set-type --remove-dead-values --control-flow-sink --test-func-erase-arg --sroa --test-func-insert-result --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize=\"test-convergence top-down=0\" --test-function-pass --test-function-pass --test-func-erase-arg --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728],\n[0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728,    0.975728]]]",
        "test_line": "[[[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744],\n[0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744,    0.975744]]]"
    }
}
