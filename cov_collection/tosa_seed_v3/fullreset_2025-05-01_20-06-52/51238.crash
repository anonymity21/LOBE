{
    "llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) \nSignalHandler(int, siginfo_t*, void*) Signals.cpp:0:0\n__restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x14420)\nraise /build/glibc-e2p3jK/glibc-2.31/signal/../sysdeps/unix/sysv/linux/raise.c:51:1\nabort /build/glibc-e2p3jK/glibc-2.31/stdlib/abort.c:81:7\nget_sysdep_segment_value /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:509:8\n_nl_load_domain /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:970:34\n(/lib/x86_64-linux-gnu/libc.so.6+0x33fd6)\n(anonymous namespace)::TestMemRefStrideCalculation::runOnOperation() TestMemRefStrideCalculation.cpp:0:0\nmlir::detail::OpToOpPassAdaptor::run(mlir::Pass*, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int) \nmlir::detail::OpToOpPassAdaptor::runPipeline(mlir::OpPassManager&, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int, mlir::PassInstrumentor*, mlir::PassInstrumentation::PipelineParentInfo const*) \nmlir::PassManager::run(mlir::Operation*) \nperformActions(llvm::raw_ostream&, std::shared_ptr<llvm::SourceMgr> const&, mlir::MLIRContext*, mlir::MlirOptMainConfig const&) MlirOptMain.cpp:0:0\nprocessBuffer(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::MlirOptMainConfig const&, mlir::DialectRegistry&, llvm::ThreadPoolInterface*) MlirOptMain.cpp:0:0\nllvm::LogicalResult llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>::callback_fn<mlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&)::'lambda'(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>(long, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&) MlirOptMain.cpp:0:0\nmlir::splitAndProcessBuffer(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>, llvm::raw_ostream&, llvm::StringRef, llvm::StringRef) \nmlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, llvm::StringRef, mlir::DialectRegistry&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, mlir::DialectRegistry&) \nmain \n__libc_start_main /build/glibc-e2p3jK/glibc-2.31/csu/../csu/libc-start.c:342:3\n_start ": [
        "//workspace/mlir-inconsistent/crash_file/tosa.43e83446d40af484.mlir.b7736c867b07f9d7.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.43e83446d40af484.mlir.b7736c867b07f9d7.mlir"
    ],
    "llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) \nSignalHandler(int, siginfo_t*, void*) Signals.cpp:0:0\n__restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x14420)\nraise /build/glibc-e2p3jK/glibc-2.31/signal/../sysdeps/unix/sysv/linux/raise.c:51:1\nabort /build/glibc-e2p3jK/glibc-2.31/stdlib/abort.c:81:7\nget_sysdep_segment_value /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:509:8\n_nl_load_domain /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:970:34\n(/lib/x86_64-linux-gnu/libc.so.6+0x33fd6)\n(anonymous namespace)::aliasingFuncOpBBArgsAnalysis(mlir::func::FuncOp, mlir::bufferization::OneShotAnalysisState&, mlir::bufferization::func_ext::FuncAnalysisState&) OneShotModuleBufferize.cpp:0:0\nmlir::bufferization::analyzeModuleOp(mlir::ModuleOp, mlir::bufferization::OneShotAnalysisState&, mlir::bufferization::BufferizationStatistics*) \nmlir::bufferization::insertTensorCopies(mlir::Operation*, mlir::bufferization::OneShotBufferizationOptions const&, mlir::bufferization::BufferizationStatistics*) \nmlir::bufferization::runOneShotModuleBufferize(mlir::ModuleOp, mlir::bufferization::OneShotBufferizationOptions const&, mlir::bufferization::BufferizationStatistics*) \n(anonymous namespace)::OneShotBufferizePass::runOnOperation() Bufferize.cpp:0:0\nmlir::detail::OpToOpPassAdaptor::run(mlir::Pass*, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int) \nmlir::detail::OpToOpPassAdaptor::runPipeline(mlir::OpPassManager&, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int, mlir::PassInstrumentor*, mlir::PassInstrumentation::PipelineParentInfo const*) \nmlir::PassManager::run(mlir::Operation*) \nperformActions(llvm::raw_ostream&, std::shared_ptr<llvm::SourceMgr> const&, mlir::MLIRContext*, mlir::MlirOptMainConfig const&) MlirOptMain.cpp:0:0\nprocessBuffer(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::MlirOptMainConfig const&, mlir::DialectRegistry&, llvm::ThreadPoolInterface*) MlirOptMain.cpp:0:0\nllvm::LogicalResult llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>::callback_fn<mlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&)::'lambda'(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>(long, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&) MlirOptMain.cpp:0:0\nmlir::splitAndProcessBuffer(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>, llvm::raw_ostream&, llvm::StringRef, llvm::StringRef) \nmlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, llvm::StringRef, mlir::DialectRegistry&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, mlir::DialectRegistry&) \nmain \n__libc_start_main /build/glibc-e2p3jK/glibc-2.31/csu/../csu/libc-start.c:342:3\n_start ": [
        "//workspace/mlir-inconsistent/crash_file/tosa.43e83446d40af484.mlir.e9ac8efa0d3ab13a.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.43e83446d40af484.mlir.e9ac8efa0d3ab13a.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.43e83446d40af484.mlir.dc244f7900db244d.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.43e83446d40af484.mlir.dc244f7900db244d.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.43e83446d40af484.mlir.1d26346003350244.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.43e83446d40af484.mlir.1d26346003350244.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.43e83446d40af484.mlir.1d26346003350244.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.43e83446d40af484.mlir.107cc489c88b0ddc.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.43e83446d40af484.mlir.88d54bd133a76c22.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.43e83446d40af484.mlir.88d54bd133a76c22.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.43e83446d40af484.mlir.ab1aa0faeb249829.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.43e83446d40af484.mlir.158f307875c453e8.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.43e83446d40af484.mlir.6cdfe120d924d4c8.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.43e83446d40af484.mlir.80cb455bae8fdda4.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.43e83446d40af484.mlir.80cb455bae8fdda4.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.43e83446d40af484.mlir.5652556d8845dfc8.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.43e83446d40af484.mlir.5652556d8845dfc8.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.43e83446d40af484.mlir.5ead3aba63487b25.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.43e83446d40af484.mlir.4efa2231f9a1708f.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.43e83446d40af484.mlir.8d07826a6ae49444.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.43e83446d40af484.mlir.8d07826a6ae49444.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.43e83446d40af484.mlir.8dc031f3c1b8380d.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.43e83446d40af484.mlir.8dc031f3c1b8380d.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.43e83446d40af484.mlir.8dc031f3c1b8380d.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.43e83446d40af484.mlir.802228dcf235b404.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.43e83446d40af484.mlir.65cc43061db242b2.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.43e83446d40af484.mlir.8c846ffb9557abdf.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.43e83446d40af484.mlir.0b988bdfd4bbab94.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.43e83446d40af484.mlir.0b988bdfd4bbab94.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.43e83446d40af484.mlir.95659b9313a726ec.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.43e83446d40af484.mlir.898c2ccf633a67a7.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.43e83446d40af484.mlir.ebeb120fd0a3545c.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.43e83446d40af484.mlir.fbf9352a0fe92eb6.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.43e83446d40af484.mlir.fbf9352a0fe92eb6.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.43e83446d40af484.mlir.fdb2232413ec6dfa.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.43e83446d40af484.mlir.fdb2232413ec6dfa.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.43e83446d40af484.mlir.fdb2232413ec6dfa.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.43e83446d40af484.mlir.fdb2232413ec6dfa.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.43e83446d40af484.mlir.1c4550a0f732c9d7.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.43e83446d40af484.mlir.ec47157ddeb83026.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.43e83446d40af484.mlir.6f302c9a9eb1d257.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.43e83446d40af484.mlir.fb17b98f59ebd0dc.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.43e83446d40af484.mlir.fb17b98f59ebd0dc.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.43e83446d40af484.mlir.fb17b98f59ebd0dc.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.43e83446d40af484.mlir.29789629c548313d.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.43e83446d40af484.mlir.29789629c548313d.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.43e83446d40af484.mlir.29789629c548313d.mlir"
    ],
    "llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) \nSignalHandler(int, siginfo_t*, void*) Signals.cpp:0:0\n__restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x14420)\nraise /build/glibc-e2p3jK/glibc-2.31/signal/../sysdeps/unix/sysv/linux/raise.c:51:1\nabort /build/glibc-e2p3jK/glibc-2.31/stdlib/abort.c:81:7\nget_sysdep_segment_value /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:509:8\n_nl_load_domain /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:970:34\n(/lib/x86_64-linux-gnu/libc.so.6+0x33fd6)\n(anonymous namespace)::aliasingFuncOpBBArgsAnalysis(mlir::func::FuncOp, mlir::bufferization::OneShotAnalysisState&, mlir::bufferization::func_ext::FuncAnalysisState&) OneShotModuleBufferize.cpp:0:0\nmlir::bufferization::analyzeModuleOp(mlir::ModuleOp, mlir::bufferization::OneShotAnalysisState&, mlir::bufferization::BufferizationStatistics*) \nmlir::bufferization::insertTensorCopies(mlir::Operation*, mlir::bufferization::OneShotBufferizationOptions const&, mlir::bufferization::BufferizationStatistics*) \n(anonymous namespace)::TestTensorCopyInsertionPass::runOnOperation() TestTensorCopyInsertion.cpp:0:0\nmlir::detail::OpToOpPassAdaptor::run(mlir::Pass*, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int) \nmlir::detail::OpToOpPassAdaptor::runPipeline(mlir::OpPassManager&, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int, mlir::PassInstrumentor*, mlir::PassInstrumentation::PipelineParentInfo const*) \nmlir::PassManager::run(mlir::Operation*) \nperformActions(llvm::raw_ostream&, std::shared_ptr<llvm::SourceMgr> const&, mlir::MLIRContext*, mlir::MlirOptMainConfig const&) MlirOptMain.cpp:0:0\nprocessBuffer(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::MlirOptMainConfig const&, mlir::DialectRegistry&, llvm::ThreadPoolInterface*) MlirOptMain.cpp:0:0\nllvm::LogicalResult llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>::callback_fn<mlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&)::'lambda'(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>(long, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&) MlirOptMain.cpp:0:0\nmlir::splitAndProcessBuffer(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>, llvm::raw_ostream&, llvm::StringRef, llvm::StringRef) \nmlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, llvm::StringRef, mlir::DialectRegistry&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, mlir::DialectRegistry&) \nmain \n__libc_start_main /build/glibc-e2p3jK/glibc-2.31/csu/../csu/libc-start.c:342:3\n_start ": [
        "//workspace/mlir-inconsistent/crash_file/tosa.43e83446d40af484.mlir.107cc489c88b0ddc.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.43e83446d40af484.mlir.107cc489c88b0ddc.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.43e83446d40af484.mlir.88d54bd133a76c22.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.43e83446d40af484.mlir.8dc031f3c1b8380d.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.43e83446d40af484.mlir.ebeb120fd0a3545c.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.43e83446d40af484.mlir.ec47157ddeb83026.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.43e83446d40af484.mlir.29789629c548313d.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.43e83446d40af484.mlir.29789629c548313d.mlir"
    ]
}
{
    "llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) \nSignalHandler(int, siginfo_t*, void*) Signals.cpp:0:0\n__restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x14420)\nraise /build/glibc-e2p3jK/glibc-2.31/signal/../sysdeps/unix/sysv/linux/raise.c:51:1\nabort /build/glibc-e2p3jK/glibc-2.31/stdlib/abort.c:81:7\nget_sysdep_segment_value /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:509:8\n_nl_load_domain /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:970:34\n(/lib/x86_64-linux-gnu/libc.so.6+0x33fd6)\n(anonymous namespace)::TestMemRefStrideCalculation::runOnOperation() TestMemRefStrideCalculation.cpp:0:0\nmlir::detail::OpToOpPassAdaptor::run(mlir::Pass*, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int) \nmlir::detail::OpToOpPassAdaptor::runPipeline(mlir::OpPassManager&, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int, mlir::PassInstrumentor*, mlir::PassInstrumentation::PipelineParentInfo const*) \nmlir::PassManager::run(mlir::Operation*) \nperformActions(llvm::raw_ostream&, std::shared_ptr<llvm::SourceMgr> const&, mlir::MLIRContext*, mlir::MlirOptMainConfig const&) MlirOptMain.cpp:0:0\nprocessBuffer(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::MlirOptMainConfig const&, mlir::DialectRegistry&, llvm::ThreadPoolInterface*) MlirOptMain.cpp:0:0\nllvm::LogicalResult llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>::callback_fn<mlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&)::'lambda'(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>(long, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&) MlirOptMain.cpp:0:0\nmlir::splitAndProcessBuffer(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>, llvm::raw_ostream&, llvm::StringRef, llvm::StringRef) \nmlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, llvm::StringRef, mlir::DialectRegistry&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, mlir::DialectRegistry&) \nmain \n__libc_start_main /build/glibc-e2p3jK/glibc-2.31/csu/../csu/libc-start.c:342:3\n_start ": [
        "//workspace/mlir-inconsistent/crash_file/tosa.ae2bd375915e63a5.mlir.78fb16e0c8f6a909.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.ae2bd375915e63a5.mlir.78fb16e0c8f6a909.mlir"
    ],
    "llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) \nSignalHandler(int, siginfo_t*, void*) Signals.cpp:0:0\n__restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x14420)\nraise /build/glibc-e2p3jK/glibc-2.31/signal/../sysdeps/unix/sysv/linux/raise.c:51:1\nabort /build/glibc-e2p3jK/glibc-2.31/stdlib/abort.c:81:7\nget_sysdep_segment_value /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:509:8\n_nl_load_domain /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:970:34\n(/lib/x86_64-linux-gnu/libc.so.6+0x33fd6)\n(anonymous namespace)::aliasingFuncOpBBArgsAnalysis(mlir::func::FuncOp, mlir::bufferization::OneShotAnalysisState&, mlir::bufferization::func_ext::FuncAnalysisState&) OneShotModuleBufferize.cpp:0:0\nmlir::bufferization::analyzeModuleOp(mlir::ModuleOp, mlir::bufferization::OneShotAnalysisState&, mlir::bufferization::BufferizationStatistics*) \nmlir::bufferization::insertTensorCopies(mlir::Operation*, mlir::bufferization::OneShotBufferizationOptions const&, mlir::bufferization::BufferizationStatistics*) \nmlir::bufferization::runOneShotModuleBufferize(mlir::ModuleOp, mlir::bufferization::OneShotBufferizationOptions const&, mlir::bufferization::BufferizationStatistics*) \n(anonymous namespace)::OneShotBufferizePass::runOnOperation() Bufferize.cpp:0:0\nmlir::detail::OpToOpPassAdaptor::run(mlir::Pass*, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int) \nmlir::detail::OpToOpPassAdaptor::runPipeline(mlir::OpPassManager&, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int, mlir::PassInstrumentor*, mlir::PassInstrumentation::PipelineParentInfo const*) \nmlir::PassManager::run(mlir::Operation*) \nperformActions(llvm::raw_ostream&, std::shared_ptr<llvm::SourceMgr> const&, mlir::MLIRContext*, mlir::MlirOptMainConfig const&) MlirOptMain.cpp:0:0\nprocessBuffer(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::MlirOptMainConfig const&, mlir::DialectRegistry&, llvm::ThreadPoolInterface*) MlirOptMain.cpp:0:0\nllvm::LogicalResult llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>::callback_fn<mlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&)::'lambda'(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>(long, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&) MlirOptMain.cpp:0:0\nmlir::splitAndProcessBuffer(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>, llvm::raw_ostream&, llvm::StringRef, llvm::StringRef) \nmlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, llvm::StringRef, mlir::DialectRegistry&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, mlir::DialectRegistry&) \nmain \n__libc_start_main /build/glibc-e2p3jK/glibc-2.31/csu/../csu/libc-start.c:342:3\n_start ": [
        "//workspace/mlir-inconsistent/crash_file/tosa.ae2bd375915e63a5.mlir.4e8d2c41eff28097.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.ae2bd375915e63a5.mlir.4e8d2c41eff28097.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.ae2bd375915e63a5.mlir.6d9c1bbecea71897.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.ae2bd375915e63a5.mlir.141c5c17630b4256.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.ae2bd375915e63a5.mlir.fa1b973d8a57d79b.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.ae2bd375915e63a5.mlir.365d8097579f5442.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.ae2bd375915e63a5.mlir.2ceec4fecb4fbce1.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.ae2bd375915e63a5.mlir.8e9791450c9510c7.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.ae2bd375915e63a5.mlir.e0ab4d06e80178a9.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.ae2bd375915e63a5.mlir.68103d4d1ae18c87.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.ae2bd375915e63a5.mlir.b9832f5233ee3b70.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.ae2bd375915e63a5.mlir.ae1bc37bc4d56ce6.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.ae2bd375915e63a5.mlir.ae065ddce0333919.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.ae2bd375915e63a5.mlir.1d92d1b6bd3af4d1.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.ae2bd375915e63a5.mlir.08347f346137ccf9.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.ae2bd375915e63a5.mlir.2fc4fbb8192d0e42.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.ae2bd375915e63a5.mlir.cfaecd5b743b2e1c.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.ae2bd375915e63a5.mlir.fbccf2ff8f4fa857.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.ae2bd375915e63a5.mlir.526f06d69edeef59.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.ae2bd375915e63a5.mlir.5823f1d308199a75.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.ae2bd375915e63a5.mlir.c69d60b7ff1b43a2.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.ae2bd375915e63a5.mlir.c17cc34fbf423b54.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.ae2bd375915e63a5.mlir.fe775a70e4f29dfd.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.ae2bd375915e63a5.mlir.749e4e665161fc40.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.ae2bd375915e63a5.mlir.e5454dc0b6e51bcd.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.ae2bd375915e63a5.mlir.6aa16c0aee5be160.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.ae2bd375915e63a5.mlir.0dd72873ba2dc924.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.ae2bd375915e63a5.mlir.030676ab45337208.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.ae2bd375915e63a5.mlir.e68d097a496435e6.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.ae2bd375915e63a5.mlir.fe77c7945625bf5a.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.ae2bd375915e63a5.mlir.d5bdfd18ffe281f0.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.ae2bd375915e63a5.mlir.7cb41eba4e60b36a.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.ae2bd375915e63a5.mlir.3ab151e77e673207.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.ae2bd375915e63a5.mlir.b37937a05c8bf623.mlir"
    ],
    "llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) \nSignalHandler(int, siginfo_t*, void*) Signals.cpp:0:0\n__restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x14420)\nraise /build/glibc-e2p3jK/glibc-2.31/signal/../sysdeps/unix/sysv/linux/raise.c:51:1\nabort /build/glibc-e2p3jK/glibc-2.31/stdlib/abort.c:81:7\nget_sysdep_segment_value /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:509:8\n_nl_load_domain /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:970:34\n(/lib/x86_64-linux-gnu/libc.so.6+0x33fd6)\n(anonymous namespace)::aliasingFuncOpBBArgsAnalysis(mlir::func::FuncOp, mlir::bufferization::OneShotAnalysisState&, mlir::bufferization::func_ext::FuncAnalysisState&) OneShotModuleBufferize.cpp:0:0\nmlir::bufferization::analyzeModuleOp(mlir::ModuleOp, mlir::bufferization::OneShotAnalysisState&, mlir::bufferization::BufferizationStatistics*) \nmlir::bufferization::insertTensorCopies(mlir::Operation*, mlir::bufferization::OneShotBufferizationOptions const&, mlir::bufferization::BufferizationStatistics*) \n(anonymous namespace)::TestTensorCopyInsertionPass::runOnOperation() TestTensorCopyInsertion.cpp:0:0\nmlir::detail::OpToOpPassAdaptor::run(mlir::Pass*, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int) \nmlir::detail::OpToOpPassAdaptor::runPipeline(mlir::OpPassManager&, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int, mlir::PassInstrumentor*, mlir::PassInstrumentation::PipelineParentInfo const*) \nmlir::PassManager::run(mlir::Operation*) \nperformActions(llvm::raw_ostream&, std::shared_ptr<llvm::SourceMgr> const&, mlir::MLIRContext*, mlir::MlirOptMainConfig const&) MlirOptMain.cpp:0:0\nprocessBuffer(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::MlirOptMainConfig const&, mlir::DialectRegistry&, llvm::ThreadPoolInterface*) MlirOptMain.cpp:0:0\nllvm::LogicalResult llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>::callback_fn<mlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&)::'lambda'(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>(long, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&) MlirOptMain.cpp:0:0\nmlir::splitAndProcessBuffer(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>, llvm::raw_ostream&, llvm::StringRef, llvm::StringRef) \nmlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, llvm::StringRef, mlir::DialectRegistry&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, mlir::DialectRegistry&) \nmain \n__libc_start_main /build/glibc-e2p3jK/glibc-2.31/csu/../csu/libc-start.c:342:3\n_start ": [
        "//workspace/mlir-inconsistent/crash_file/tosa.ae2bd375915e63a5.mlir.f82c836588022358.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.ae2bd375915e63a5.mlir.f82c836588022358.mlir"
    ]
}
