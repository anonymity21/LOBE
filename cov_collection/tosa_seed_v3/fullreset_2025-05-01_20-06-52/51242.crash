{
    "llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) \nSignalHandler(int, siginfo_t*, void*) Signals.cpp:0:0\n__restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x14420)\nraise /build/glibc-e2p3jK/glibc-2.31/signal/../sysdeps/unix/sysv/linux/raise.c:51:1\nabort /build/glibc-e2p3jK/glibc-2.31/stdlib/abort.c:81:7\nget_sysdep_segment_value /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:509:8\n_nl_load_domain /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:970:34\n(/lib/x86_64-linux-gnu/libc.so.6+0x33fd6)\n(anonymous namespace)::TestMemRefStrideCalculation::runOnOperation() TestMemRefStrideCalculation.cpp:0:0\nmlir::detail::OpToOpPassAdaptor::run(mlir::Pass*, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int) \nmlir::detail::OpToOpPassAdaptor::runPipeline(mlir::OpPassManager&, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int, mlir::PassInstrumentor*, mlir::PassInstrumentation::PipelineParentInfo const*) \nmlir::PassManager::run(mlir::Operation*) \nperformActions(llvm::raw_ostream&, std::shared_ptr<llvm::SourceMgr> const&, mlir::MLIRContext*, mlir::MlirOptMainConfig const&) MlirOptMain.cpp:0:0\nprocessBuffer(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::MlirOptMainConfig const&, mlir::DialectRegistry&, llvm::ThreadPoolInterface*) MlirOptMain.cpp:0:0\nllvm::LogicalResult llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>::callback_fn<mlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&)::'lambda'(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>(long, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&) MlirOptMain.cpp:0:0\nmlir::splitAndProcessBuffer(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>, llvm::raw_ostream&, llvm::StringRef, llvm::StringRef) \nmlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, llvm::StringRef, mlir::DialectRegistry&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, mlir::DialectRegistry&) \nmain \n__libc_start_main /build/glibc-e2p3jK/glibc-2.31/csu/../csu/libc-start.c:342:3\n_start ": [
        "//workspace/mlir-inconsistent/crash_file/tosa.417942caad18b023.mlir.a759469e0770a982.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.417942caad18b023.mlir.a759469e0770a982.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.417942caad18b023.mlir.049ed581a21650e5.mlir"
    ],
    "llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) \nSignalHandler(int, siginfo_t*, void*) Signals.cpp:0:0\n__restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x14420)\nraise /build/glibc-e2p3jK/glibc-2.31/signal/../sysdeps/unix/sysv/linux/raise.c:51:1\nabort /build/glibc-e2p3jK/glibc-2.31/stdlib/abort.c:81:7\nget_sysdep_segment_value /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:509:8\n_nl_load_domain /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:970:34\n(/lib/x86_64-linux-gnu/libc.so.6+0x33fd6)\n(anonymous namespace)::aliasingFuncOpBBArgsAnalysis(mlir::func::FuncOp, mlir::bufferization::OneShotAnalysisState&, mlir::bufferization::func_ext::FuncAnalysisState&) OneShotModuleBufferize.cpp:0:0\nmlir::bufferization::analyzeModuleOp(mlir::ModuleOp, mlir::bufferization::OneShotAnalysisState&, mlir::bufferization::BufferizationStatistics*) \nmlir::bufferization::insertTensorCopies(mlir::Operation*, mlir::bufferization::OneShotBufferizationOptions const&, mlir::bufferization::BufferizationStatistics*) \nmlir::bufferization::runOneShotModuleBufferize(mlir::ModuleOp, mlir::bufferization::OneShotBufferizationOptions const&, mlir::bufferization::BufferizationStatistics*) \n(anonymous namespace)::OneShotBufferizePass::runOnOperation() Bufferize.cpp:0:0\nmlir::detail::OpToOpPassAdaptor::run(mlir::Pass*, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int) \nmlir::detail::OpToOpPassAdaptor::runPipeline(mlir::OpPassManager&, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int, mlir::PassInstrumentor*, mlir::PassInstrumentation::PipelineParentInfo const*) \nmlir::PassManager::run(mlir::Operation*) \nperformActions(llvm::raw_ostream&, std::shared_ptr<llvm::SourceMgr> const&, mlir::MLIRContext*, mlir::MlirOptMainConfig const&) MlirOptMain.cpp:0:0\nprocessBuffer(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::MlirOptMainConfig const&, mlir::DialectRegistry&, llvm::ThreadPoolInterface*) MlirOptMain.cpp:0:0\nllvm::LogicalResult llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>::callback_fn<mlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&)::'lambda'(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>(long, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&) MlirOptMain.cpp:0:0\nmlir::splitAndProcessBuffer(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>, llvm::raw_ostream&, llvm::StringRef, llvm::StringRef) \nmlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, llvm::StringRef, mlir::DialectRegistry&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, mlir::DialectRegistry&) \nmain \n__libc_start_main /build/glibc-e2p3jK/glibc-2.31/csu/../csu/libc-start.c:342:3\n_start ": [
        "//workspace/mlir-inconsistent/crash_file/tosa.417942caad18b023.mlir.37c0c7c1eea09913.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.417942caad18b023.mlir.37c0c7c1eea09913.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.417942caad18b023.mlir.d94de173fca67fa2.mlir"
    ]
}
{
    "llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) \nSignalHandler(int, siginfo_t*, void*) Signals.cpp:0:0\n__restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x14420)\nraise /build/glibc-e2p3jK/glibc-2.31/signal/../sysdeps/unix/sysv/linux/raise.c:51:1\nabort /build/glibc-e2p3jK/glibc-2.31/stdlib/abort.c:81:7\nget_sysdep_segment_value /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:509:8\n_nl_load_domain /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:970:34\n(/lib/x86_64-linux-gnu/libc.so.6+0x33fd6)\n(anonymous namespace)::TestMemRefStrideCalculation::runOnOperation() TestMemRefStrideCalculation.cpp:0:0\nmlir::detail::OpToOpPassAdaptor::run(mlir::Pass*, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int) \nmlir::detail::OpToOpPassAdaptor::runPipeline(mlir::OpPassManager&, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int, mlir::PassInstrumentor*, mlir::PassInstrumentation::PipelineParentInfo const*) \nmlir::PassManager::run(mlir::Operation*) \nperformActions(llvm::raw_ostream&, std::shared_ptr<llvm::SourceMgr> const&, mlir::MLIRContext*, mlir::MlirOptMainConfig const&) MlirOptMain.cpp:0:0\nprocessBuffer(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::MlirOptMainConfig const&, mlir::DialectRegistry&, llvm::ThreadPoolInterface*) MlirOptMain.cpp:0:0\nllvm::LogicalResult llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>::callback_fn<mlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&)::'lambda'(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>(long, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&) MlirOptMain.cpp:0:0\nmlir::splitAndProcessBuffer(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>, llvm::raw_ostream&, llvm::StringRef, llvm::StringRef) \nmlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, llvm::StringRef, mlir::DialectRegistry&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, mlir::DialectRegistry&) \nmain \n__libc_start_main /build/glibc-e2p3jK/glibc-2.31/csu/../csu/libc-start.c:342:3\n_start ": [
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.1d5205f6e73d9349.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.1d5205f6e73d9349.mlir"
    ],
    "llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) \nSignalHandler(int, siginfo_t*, void*) Signals.cpp:0:0\n__restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x14420)\nraise /build/glibc-e2p3jK/glibc-2.31/signal/../sysdeps/unix/sysv/linux/raise.c:51:1\nabort /build/glibc-e2p3jK/glibc-2.31/stdlib/abort.c:81:7\nget_sysdep_segment_value /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:509:8\n_nl_load_domain /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:970:34\n(/lib/x86_64-linux-gnu/libc.so.6+0x33fd6)\n(anonymous namespace)::aliasingFuncOpBBArgsAnalysis(mlir::func::FuncOp, mlir::bufferization::OneShotAnalysisState&, mlir::bufferization::func_ext::FuncAnalysisState&) OneShotModuleBufferize.cpp:0:0\nmlir::bufferization::analyzeModuleOp(mlir::ModuleOp, mlir::bufferization::OneShotAnalysisState&, mlir::bufferization::BufferizationStatistics*) \nmlir::bufferization::insertTensorCopies(mlir::Operation*, mlir::bufferization::OneShotBufferizationOptions const&, mlir::bufferization::BufferizationStatistics*) \nmlir::bufferization::runOneShotModuleBufferize(mlir::ModuleOp, mlir::bufferization::OneShotBufferizationOptions const&, mlir::bufferization::BufferizationStatistics*) \n(anonymous namespace)::OneShotBufferizePass::runOnOperation() Bufferize.cpp:0:0\nmlir::detail::OpToOpPassAdaptor::run(mlir::Pass*, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int) \nmlir::detail::OpToOpPassAdaptor::runPipeline(mlir::OpPassManager&, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int, mlir::PassInstrumentor*, mlir::PassInstrumentation::PipelineParentInfo const*) \nmlir::PassManager::run(mlir::Operation*) \nperformActions(llvm::raw_ostream&, std::shared_ptr<llvm::SourceMgr> const&, mlir::MLIRContext*, mlir::MlirOptMainConfig const&) MlirOptMain.cpp:0:0\nprocessBuffer(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::MlirOptMainConfig const&, mlir::DialectRegistry&, llvm::ThreadPoolInterface*) MlirOptMain.cpp:0:0\nllvm::LogicalResult llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>::callback_fn<mlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&)::'lambda'(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>(long, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&) MlirOptMain.cpp:0:0\nmlir::splitAndProcessBuffer(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>, llvm::raw_ostream&, llvm::StringRef, llvm::StringRef) \nmlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, llvm::StringRef, mlir::DialectRegistry&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, mlir::DialectRegistry&) \nmain \n__libc_start_main /build/glibc-e2p3jK/glibc-2.31/csu/../csu/libc-start.c:342:3\n_start ": [
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.5b733d6fa6712f14.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.5b733d6fa6712f14.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.5b733d6fa6712f14.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.192a84d3e366b4a7.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.192a84d3e366b4a7.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.192a84d3e366b4a7.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.462a864fa70e81c9.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.462a864fa70e81c9.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.8ca9479b98109a93.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.ff4201175cbb0dd9.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.ff4201175cbb0dd9.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.ff4201175cbb0dd9.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.ff4201175cbb0dd9.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.9d6e5a200eaae57d.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.9d6e5a200eaae57d.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.7c403060c037b18a.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.298e882a23cdb29d.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.cbf982642030b0b1.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.13ab2b9ea8df27f6.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.13ab2b9ea8df27f6.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.15d64983910cc70f.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.56795add8fb03a17.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.56795add8fb03a17.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.0a9453de3d36be9f.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.0a9453de3d36be9f.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.d2767755627117da.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.d2767755627117da.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.d2767755627117da.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.d2767755627117da.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.d2767755627117da.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.3a9cc50531d301e1.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.3a9cc50531d301e1.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.3a9cc50531d301e1.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.e28af75d2b234ba4.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.e28af75d2b234ba4.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.d1be8223762fa388.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.d1be8223762fa388.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.d1be8223762fa388.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.bac7af13838f7838.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.d00a97c04cc64ed7.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.8116434afa36acd7.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.000c04cf10721d9d.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.000c04cf10721d9d.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.000c04cf10721d9d.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.000c04cf10721d9d.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.000c04cf10721d9d.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.000c04cf10721d9d.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.000c04cf10721d9d.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.9b7493d44ea4669f.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.9b7493d44ea4669f.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.9b7493d44ea4669f.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.7c8194ed47d756ad.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.7c8194ed47d756ad.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.be4a22c6f1f0a97a.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.1420dd190e43ee87.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.1420dd190e43ee87.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.1420dd190e43ee87.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.ca50cf6a90683801.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.ca50cf6a90683801.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.69a4912d00cacf50.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.7c18aa6cafff7884.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.7c18aa6cafff7884.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.7d0aae99579a7da0.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.325e3c89f3fecbda.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.325e3c89f3fecbda.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.325e3c89f3fecbda.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.08eaf5c0a1356f61.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.08eaf5c0a1356f61.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.08eaf5c0a1356f61.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.08eaf5c0a1356f61.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.08eaf5c0a1356f61.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.350c5911e72dba6d.mlir"
    ],
    "llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) \nSignalHandler(int, siginfo_t*, void*) Signals.cpp:0:0\n__restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x14420)\nraise /build/glibc-e2p3jK/glibc-2.31/signal/../sysdeps/unix/sysv/linux/raise.c:51:1\nabort /build/glibc-e2p3jK/glibc-2.31/stdlib/abort.c:81:7\nget_sysdep_segment_value /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:509:8\n_nl_load_domain /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:970:34\n(/lib/x86_64-linux-gnu/libc.so.6+0x33fd6)\n(anonymous namespace)::aliasingFuncOpBBArgsAnalysis(mlir::func::FuncOp, mlir::bufferization::OneShotAnalysisState&, mlir::bufferization::func_ext::FuncAnalysisState&) OneShotModuleBufferize.cpp:0:0\nmlir::bufferization::analyzeModuleOp(mlir::ModuleOp, mlir::bufferization::OneShotAnalysisState&, mlir::bufferization::BufferizationStatistics*) \nmlir::bufferization::insertTensorCopies(mlir::Operation*, mlir::bufferization::OneShotBufferizationOptions const&, mlir::bufferization::BufferizationStatistics*) \n(anonymous namespace)::TestTensorCopyInsertionPass::runOnOperation() TestTensorCopyInsertion.cpp:0:0\nmlir::detail::OpToOpPassAdaptor::run(mlir::Pass*, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int) \nmlir::detail::OpToOpPassAdaptor::runPipeline(mlir::OpPassManager&, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int, mlir::PassInstrumentor*, mlir::PassInstrumentation::PipelineParentInfo const*) \nmlir::PassManager::run(mlir::Operation*) \nperformActions(llvm::raw_ostream&, std::shared_ptr<llvm::SourceMgr> const&, mlir::MLIRContext*, mlir::MlirOptMainConfig const&) MlirOptMain.cpp:0:0\nprocessBuffer(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::MlirOptMainConfig const&, mlir::DialectRegistry&, llvm::ThreadPoolInterface*) MlirOptMain.cpp:0:0\nllvm::LogicalResult llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>::callback_fn<mlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&)::'lambda'(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>(long, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&) MlirOptMain.cpp:0:0\nmlir::splitAndProcessBuffer(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>, llvm::raw_ostream&, llvm::StringRef, llvm::StringRef) \nmlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, llvm::StringRef, mlir::DialectRegistry&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, mlir::DialectRegistry&) \nmain \n__libc_start_main /build/glibc-e2p3jK/glibc-2.31/csu/../csu/libc-start.c:342:3\n_start ": [
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.5b733d6fa6712f14.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.5b733d6fa6712f14.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.e28af75d2b234ba4.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.d1be8223762fa388.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.000c04cf10721d9d.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.000c04cf10721d9d.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aaf1dac5cc29dd0b.mlir.1420dd190e43ee87.mlir"
    ]
}
