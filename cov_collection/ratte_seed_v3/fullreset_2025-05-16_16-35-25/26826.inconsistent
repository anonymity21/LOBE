{
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/ratte_seed_v3/arithsem.3f8c34dcc6f91347.mlir --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --topological-sort -lower-vector-mask --scf-for-loop-canonicalization --test-func-insert-arg --scf-forall-to-for --test-scf-while-op-builder --test-scf-for-utils=\"test-replace-with-new-yields\" --arith-unsigned-when-equivalent --sccp --test-scf-for-utils --test-scf-uplift-while-to-for --test-vector-contraction-prepare-for-mmt-lowering --arith-unsigned-when-equivalent --scf-for-loop-peeling=\"peel-front\" --arith-expand=\"include-bf16\" -lower-vector-multi-reduction=\"lowering-strategy=inner-parallel\" --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --test-vector-contraction-prepare-for-mmt-lowering --scf-forall-to-for --scf-for-loop-range-folding --scf-parallel-loop-fusion --scf-parallel-loop-fusion --test-vector-contraction-prepare-for-mmt-lowering --symbol-dce --test-vector-extract-strided-slice-lowering --test-func-insert-result --test-scf-if-utils -lower-vector-multi-reduction --test-func-insert-arg --scf-for-to-while --test-vector-extract-strided-slice-lowering --test-scf-uplift-while-to-for --test-scf-for-utils=\"test-replace-with-new-yields\" --test-vector-to-vector-lowering=\"unroll\" --test-func-set-type --test-scf-while-op-builder --test-vector-to-vector-lowering=\"unroll\" --test-func-erase-arg --loop-invariant-code-motion --scf-for-loop-canonicalization --test-vector-gather-lowering --scf-for-to-while -lower-vector-mask | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-vector-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "%34=0",
        "test_line": "%34=139822222600160"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/ratte_seed_v3/arithsem.3f8c34dcc6f91347.mlir --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-scf-while-op-builder --topological-sort --sroa --scf-for-loop-range-folding --sccp --test-vector-gather-lowering --test-scf-if-utils --test-vector-gather-lowering -lower-vector-mask --mem2reg=\"region-simplify\" --mem2reg --control-flow-sink --test-func-insert-result --scf-forall-to-for --scf-parallel-loop-specialization | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-vector-mask --scf-for-to-while --test-vector-transferop-opt --test-func-insert-result --composite-fixed-point-pass --scf-parallel-loop-specialization --sccp --scf-parallel-loop-specialization --composite-fixed-point-pass --scf-for-to-while | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-vector-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "%34=0",
        "test_line": "%34=139920674871264"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/ratte_seed_v3/arithsem.3f8c34dcc6f91347.mlir --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-vector-transfer-collapse-inner-most-dims --test-scf-uplift-while-to-for --inline --sccp --sccp --test-scf-uplift-while-to-for --test-vector-to-vector-lowering=\"unroll\" -lower-vector-multi-reduction --test-scf-for-utils | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-vector-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --remove-dead-values --test-func-set-type --test-func-insert-result --test-function-pass --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "%34=0",
        "test_line": "%34=140604141086688"
    }
}
