{
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/ratte_seed_v3/linalggeneric.2911e3c742274ae4.mlir -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --test-func-set-type --test-func-erase-arg --memref-expand --test-memref-dependence-check --test-vector-chained-reduction-folding-patterns -lower-vector-multi-reduction --test-func-insert-arg --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-vector-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-scf-if-utils --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-arith-emulate-wide-int=\"widest-int-supported=8\" --int-range-optimizations --expand-strided-metadata --resolve-shaped-type-result-dims --scf-for-loop-peeling=\"peel-front\" --arith-emulate-unsupported-floats --mem2reg --sroa --arith-emulate-wide-int=\"widest-int-supported=32\" --resolve-shaped-type-result-dims --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --scf-for-loop-canonicalization --test-func-insert-arg --composite-fixed-point-pass --arith-emulate-wide-int=\"widest-int-supported=32\" --test-scf-pipelining --arith-emulate-unsupported-floats --test-func-insert-arg --arith-unsigned-when-equivalent --loop-invariant-code-motion --scf-parallel-loop-fusion --test-memref-bound-check --test-scf-pipelining=\"annotate\" --test-scf-if-utils --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --scf-parallel-loop-fusion --expand-strided-metadata --scf-parallel-loop-specialization --test-memref-bound-check | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --test-func-set-type --loop-invariant-subset-hoisting --arith-int-range-narrowing=\"int-bitwidths-supported=32\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --topological-sort --symbol-dce --canonicalize=\"test-convergence top-down=0\" --mem2reg=\"region-simplify\" --canonicalize | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "%606[0]=-16",
        "test_line": "%606[0]=0"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/ratte_seed_v3/linalggeneric.2911e3c742274ae4.mlir -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --resolve-shaped-type-result-dims --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --duplicate-function-elimination --test-function-pass --mem2reg=\"region-simplify\" --test-vector-extract-strided-slice-lowering --sccp --cse --test-func-erase-arg --test-vector-contraction-prepare-for-mmt-lowering --test-function-pass --sccp --canonicalize --test-function-pass --test-vector-to-vector-lowering --cse --test-function-pass --inline --test-func-set-type --test-function-pass --test-vector-to-vector-lowering=\"unroll\" --sccp --sccp -lower-vector-mask --canonicalize=\"test-convergence top-down=0\" --test-vector-extract-strided-slice-lowering -lower-vector-multi-reduction=\"lowering-strategy=inner-parallel\" --test-func-erase-arg --test-create-vector-broadcast -lower-vector-multi-reduction=\"lowering-strategy=inner-parallel\" --control-flow-sink --sccp --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --scf-parallel-loop-tiling --test-scf-for-utils --test-func-set-type --test-scalar-vector-transfer-lowering=\"allow-multiple-uses\" --topological-sort --scf-forall-to-for --test-vector-extract-strided-slice-lowering --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-vector-chained-reduction-folding-patterns --scf-parallel-loop-specialization --test-vector-transfer-collapse-inner-most-dims --sroa --test-vector-extract-strided-slice-lowering --canonicalize=\"test-convergence top-down=0\" --scf-forall-to-for --scf-for-loop-specialization --scf-forall-to-parallel --canonicalize=\"test-convergence\" --int-range-optimizations | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-vector-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg=\"region-simplify\" --inline --loop-invariant-subset-hoisting --scf-parallel-loop-specialization --scf-for-loop-peeling=\"skip-partial\" --int-range-optimizations --int-range-optimizations --scf-for-loop-peeling=\"peel-front\" --scf-for-loop-specialization --int-range-optimizations --scf-parallel-loop-fusion --test-scf-if-utils --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg=\"region-simplify\" --sccp --control-flow-sink --cse --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "%606[0]=-16",
        "test_line": "%606[0]=0"
    }
}
