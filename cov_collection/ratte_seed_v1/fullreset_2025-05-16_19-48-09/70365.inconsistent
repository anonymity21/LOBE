{
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/ratte_seed_v1/tensor.8c2bf57effc960f2.mlir -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-memref-bound-check --test-memref-dependence-check --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-parallel-loop-tiling=\"parallel-loop-tile-sizes=1,4 no-min-max-bounds=true\" --scf-parallel-loop-fusion --loop-invariant-subset-hoisting --control-flow-sink --test-vector-unrolling-patterns=\"unroll-based-on-type unroll-order=0,3,1,2\" --test-scalar-vector-transfer-lowering --normalize-memrefs --test-scf-uplift-while-to-for --test-func-insert-result --test-scalar-vector-transfer-lowering --sroa --test-vector-transfer-collapse-inner-most-dims --cse --test-vector-extract-strided-slice-lowering --scf-for-loop-peeling=\"peel-front\" -lower-vector-multi-reduction --resolve-ranked-shaped-type-result-dims --test-scf-uplift-while-to-for --test-func-insert-arg --scf-parallel-loop-fusion --test-func-set-type --control-flow-sink --composite-fixed-point-pass --loop-invariant-code-motion --duplicate-function-elimination --scf-for-to-while --test-scf-uplift-while-to-for --remove-dead-values --fold-memref-alias-ops --test-vector-contraction-prepare-for-mmt-lowering --scf-for-loop-peeling=\"skip-partial\" --scf-for-loop-peeling=\"skip-partial\" --test-memref-bound-check --loop-invariant-code-motion --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-vector-mask --test-create-vector-broadcast --arith-unsigned-when-equivalent --test-vector-gather-lowering --test-vector-chained-reduction-folding-patterns --test-func-erase-arg --test-vector-gather-lowering --duplicate-function-elimination --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-vector-chained-reduction-folding-patterns --mem2reg --loop-invariant-subset-hoisting --test-vector-to-vector-lowering --test-func-insert-result --test-vector-transfer-collapse-inner-most-dims --test-function-pass --test-func-set-type --test-vector-linearize=\"target-vector-bitwidth=128\" --test-vector-unrolling-patterns=\"unroll-based-on-type unroll-order=2,0,1\" --test-vector-transfer-collapse-inner-most-dims --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-func-insert-result --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --symbol-dce --cse --test-arith-emulate-wide-int --test-vector-transferop-opt -lower-vector-mask -lower-vector-multi-reduction --test-vector-linearize=\"target-vector-bitwidth=0\" --test-function-pass --test-func-insert-arg --test-vector-extract-strided-slice-lowering | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-vector-transferop-opt --test-vector-transferop-opt --test-func-erase-arg --canonicalize=\"test-convergence\" --test-vector-extract-strided-slice-lowering -lower-vector-multi-reduction=\"lowering-strategy=inner-reduction\" --test-func-erase-result --mem2reg --test-func-insert-result --test-func-insert-result --test-scalar-vector-transfer-lowering --test-func-set-type --sroa --sroa --composite-fixed-point-pass --test-create-vector-broadcast --symbol-dce --test-func-set-type --composite-fixed-point-pass --test-func-insert-arg --test-func-insert-result --inline --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-vector-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse --remove-dead-values --symbol-dce --inline --test-func-insert-result --mem2reg=\"region-simplify\" --sroa --topological-sort --sroa --test-func-set-type --test-func-set-type --test-func-insert-arg --remove-dead-values --mem2reg --sroa --inline --topological-sort --mem2reg=\"region-simplify\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "%370=\n[[[5,    5]],\n[[5,    5]]]",
        "test_line": "%370=\n[[[5,    0]],\n[[5,    5]]]"
    }
}
