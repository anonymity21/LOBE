{
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/ratte_seed_v1/arithsem.62c0335071acadb8.mlir --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --arith-emulate-unsupported-floats --test-func-erase-result --test-func-erase-arg --test-func-insert-result --test-func-insert-arg --test-vector-gather-lowering --int-range-optimizations --test-vector-chained-reduction-folding-patterns --scf-forall-to-for --test-arith-emulate-wide-int --scf-for-loop-range-folding --test-vector-linearize --test-func-insert-result --symbol-dce -lower-vector-multi-reduction=\"lowering-strategy=inner-reduction\" --inline --sroa --test-arith-emulate-wide-int=\"widest-int-supported=8\" --scf-parallel-loop-specialization --test-scf-if-utils --int-range-optimizations --test-vector-chained-reduction-folding-patterns --arith-expand --arith-int-range-narrowing --scf-for-loop-canonicalization --test-vector-to-vector-lowering=\"unroll\" --test-scalar-vector-transfer-lowering=\"allow-multiple-uses\" --test-scf-for-utils=\"test-replace-with-new-yields\" --canonicalize=\"test-convergence top-down=0\" --mem2reg --test-scalar-vector-transfer-lowering=\"allow-multiple-uses\" -lower-vector-multi-reduction=\"lowering-strategy=inner-reduction\" --symbol-dce --control-flow-sink --test-vector-transferop-opt | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-create-vector-broadcast --test-function-pass --test-scalar-vector-transfer-lowering --remove-dead-values --test-func-erase-arg --control-flow-sink --cse --test-vector-chained-reduction-folding-patterns --test-vector-extract-strided-slice-lowering --canonicalize --test-func-erase-arg --test-func-insert-result --test-vector-to-vector-lowering --remove-dead-values -lower-vector-multi-reduction=\"lowering-strategy=inner-reduction\" --symbol-dce --sroa -lower-vector-multi-reduction --test-func-insert-arg --inline --symbol-dce --test-vector-to-vector-lowering=\"unroll\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-vector-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "%87=0",
        "test_line": "%87=140601092048864"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/ratte_seed_v1/arithsem.62c0335071acadb8.mlir --test-func-insert-arg --scf-forall-to-parallel --loop-invariant-subset-hoisting --scf-parallel-loop-fusion -lower-vector-multi-reduction=\"lowering-strategy=inner-parallel\" --scf-for-loop-specialization --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-func-insert-arg --test-scalar-vector-transfer-lowering --test-vector-extract-strided-slice-lowering --symbol-dce --test-func-insert-arg --test-vector-unrolling-patterns=\"unroll-based-on-type\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sroa --test-vector-gather-lowering --scf-for-loop-range-folding --test-vector-transferop-opt --test-vector-transferop-opt --test-vector-transferop-opt --test-vector-to-vector-lowering=\"unroll\" --cse --test-scf-while-op-builder --test-func-erase-arg --test-vector-contraction-prepare-for-mmt-lowering --test-func-insert-arg --canonicalize=\"test-convergence top-down=0\" --sccp --scf-parallel-loop-specialization --test-func-erase-result --scf-forall-to-parallel --sroa --symbol-dce --loop-invariant-subset-hoisting --test-vector-extract-strided-slice-lowering | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-vector-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "%818=0",
        "test_line": "%818=140125424228320"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/ratte_seed_v1/arithsem.62c0335071acadb8.mlir --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --scf-forall-to-parallel --topological-sort --mem2reg --sccp --scf-parallel-loop-fusion --test-vector-to-vector-lowering=\"unroll\" -lower-vector-mask --composite-fixed-point-pass --test-vector-linearize --test-func-insert-arg --test-scalar-vector-transfer-lowering=\"allow-multiple-uses\" --control-flow-sink --test-func-erase-result --test-vector-to-vector-lowering --duplicate-function-elimination --scf-for-loop-canonicalization --mem2reg --sccp --scf-forall-to-parallel --test-func-insert-arg --sroa --composite-fixed-point-pass --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-function-pass --test-func-erase-result --test-vector-chained-reduction-folding-patterns -lower-vector-multi-reduction --test-func-erase-result --arith-int-range-narrowing --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-func-erase-arg --sccp --inline --test-function-pass -lower-vector-mask --scf-parallel-loop-fusion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-vector-gather-lowering --test-vector-unrolling-patterns=\"unroll-based-on-type\" --remove-dead-values --test-scalar-vector-transfer-lowering=\"allow-multiple-uses\" --topological-sort --remove-dead-values --test-vector-transferop-opt --test-vector-linearize --test-vector-to-vector-lowering --inline --composite-fixed-point-pass --test-vector-unrolling-patterns=\"unroll-based-on-type unroll-order=2,0,1\" --test-create-vector-broadcast -lower-vector-multi-reduction=\"lowering-strategy=inner-reduction\" --test-vector-unrolling-patterns=\"unroll-based-on-type unroll-order=2,0,1\" --test-create-vector-broadcast --test-func-insert-result --symbol-dce --test-vector-transfer-collapse-inner-most-dims --test-vector-transfer-collapse-inner-most-dims --loop-invariant-subset-hoisting --duplicate-function-elimination --test-func-insert-result --loop-invariant-code-motion --test-vector-extract-strided-slice-lowering --test-vector-extract-strided-slice-lowering --sccp --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-vector-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "%87=0",
        "test_line": "%87=139839670278112"
    }
}
