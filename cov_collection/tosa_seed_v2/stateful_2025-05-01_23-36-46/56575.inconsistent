{
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.a6f71f6722055c48.mlir -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-wide-int --test-func-insert-arg --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-tensor-transform-patterns=\"test-drop-redundant-insert-slice-rank-expansion\" --test-tensor-copy-insertion --test-math-algebraic-simplification --test-expand-math --test-func-erase-result --composite-fixed-point-pass --inline --loop-invariant-code-motion --test-emulate-narrow-int=\"memref-load-bitwidth=32\" --math-uplift-to-fma --arith-int-range-narrowing --symbol-dce --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --arith-int-range-narrowing --cse --arith-unsigned-when-equivalent --test-math-algebraic-simplification --arith-emulate-wide-int=\"widest-int-supported=32\" --inline --control-flow-sink --cse --composite-fixed-point-pass --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --composite-fixed-point-pass --inline --arith-expand=\"include-bf16\" --fold-tensor-subset-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-arg --loop-invariant-code-motion --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --memref-emulate-wide-int --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --memref-expand --test-func-erase-arg --normalize-memrefs --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --test-func-erase-arg --expand-strided-metadata --test-function-pass --resolve-ranked-shaped-type-result-dims --test-arith-emulate-wide-int --normalize-memrefs --normalize-memrefs | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse --control-flow-sink --arith-int-range-narrowing --test-func-insert-result --topological-sort --test-function-pass --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --symbol-dce --test-arith-emulate-wide-int=\"widest-int-supported=8\" --loop-invariant-code-motion --loop-invariant-subset-hoisting --topological-sort --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --inline --loop-invariant-subset-hoisting --arith-expand=\"include-bf16\" --test-func-erase-arg --test-function-pass --arith-emulate-wide-int=\"widest-int-supported=32\" --canonicalize --arith-expand --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-function-pass --cse --test-func-erase-result --test-arith-emulate-wide-int | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --remove-dead-values --loop-invariant-code-motion --control-flow-sink --test-func-insert-arg --loop-invariant-subset-hoisting --test-func-insert-result --test-func-insert-result --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596]]]",
        "test_line": "[[[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.a6f71f6722055c48.mlir -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-wide-int --test-func-insert-arg --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-tensor-transform-patterns=\"test-drop-redundant-insert-slice-rank-expansion\" --test-tensor-copy-insertion --test-math-algebraic-simplification --test-expand-math --test-func-erase-result --composite-fixed-point-pass --inline --loop-invariant-code-motion --test-emulate-narrow-int=\"memref-load-bitwidth=32\" --math-uplift-to-fma --arith-int-range-narrowing --symbol-dce --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --arith-int-range-narrowing --cse --arith-unsigned-when-equivalent --test-math-algebraic-simplification --arith-emulate-wide-int=\"widest-int-supported=32\" --inline --control-flow-sink --cse --composite-fixed-point-pass --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --composite-fixed-point-pass --inline --arith-expand=\"include-bf16\" --fold-tensor-subset-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-scf-uplift-while-to-for --scf-for-to-while --test-func-insert-arg --normalize-memrefs --normalize-memrefs --scf-parallel-loop-specialization --inline --arith-expand --test-func-insert-arg --remove-dead-values --arith-emulate-wide-int=\"widest-int-supported=32\" --memref-expand --topological-sort --memref-expand --test-memref-dependence-check --scf-forall-to-parallel --memref-expand --scf-for-to-while --symbol-dce --resolve-ranked-shaped-type-result-dims --arith-emulate-wide-int=\"widest-int-supported=32\" --test-scf-for-utils=\"test-replace-with-new-yields\" --test-scf-pipelining=\"annotate\" --scf-for-to-while --scf-for-to-while --memref-expand --test-func-insert-result --scf-parallel-loop-specialization --test-scf-uplift-while-to-for --test-memref-dependence-check --scf-for-loop-peeling --symbol-dce --test-scf-while-op-builder --test-scf-for-utils --normalize-memrefs --control-flow-sink --loop-invariant-subset-hoisting --test-memref-bound-check --canonicalize=\"test-convergence top-down=0\" --test-scf-if-utils --test-func-erase-result --resolve-shaped-type-result-dims --normalize-memrefs --scf-forall-to-for --arith-expand=\"include-bf16\" --scf-for-to-while --test-scf-while-op-builder --test-function-pass --scf-for-loop-canonicalization --scf-for-to-while --resolve-shaped-type-result-dims --remove-dead-values | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --control-flow-sink --test-func-erase-result --test-func-insert-result --topological-sort --loop-invariant-subset-hoisting --test-func-insert-result --loop-invariant-code-motion --test-func-insert-result --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596]]]",
        "test_line": "[[[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.a6f71f6722055c48.mlir -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --test-function-pass --symbol-dce --canonicalize=\"test-convergence\" --test-tensor-copy-insertion --sroa --topological-sort --inline --sroa --cse --composite-fixed-point-pass --sroa --arith-expand=\"include-bf16\" --sccp --duplicate-function-elimination --int-range-optimizations --loop-invariant-subset-hoisting --loop-invariant-subset-hoisting --cse --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --loop-invariant-code-motion --fold-tensor-subset-ops --loop-invariant-subset-hoisting --control-flow-sink --test-func-insert-result --int-range-optimizations --test-emulate-narrow-int=\"memref-load-bitwidth=32\" --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-unsigned-when-equivalent --sroa --control-flow-sink --duplicate-function-elimination --arith-emulate-wide-int=\"widest-int-supported=32\" --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --control-flow-sink --symbol-dce --arith-emulate-wide-int --cse --arith-int-range-narrowing --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse --mem2reg=\"region-simplify\" --test-func-insert-arg --cse --composite-fixed-point-pass --test-func-set-type --control-flow-sink --test-func-erase-result --loop-invariant-code-motion --composite-fixed-point-pass --test-func-insert-result --sccp --inline --mem2reg --test-func-insert-arg --canonicalize=\"test-convergence\" --test-func-erase-result --test-func-insert-result --control-flow-sink --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596]]]",
        "test_line": "[[[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.a6f71f6722055c48.mlir -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-wide-int --test-func-insert-arg --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-tensor-transform-patterns=\"test-drop-redundant-insert-slice-rank-expansion\" --test-tensor-copy-insertion --test-math-algebraic-simplification --test-expand-math --test-func-erase-result --composite-fixed-point-pass --inline --loop-invariant-code-motion --test-emulate-narrow-int=\"memref-load-bitwidth=32\" --math-uplift-to-fma --arith-int-range-narrowing --symbol-dce --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --arith-int-range-narrowing --cse --arith-unsigned-when-equivalent --test-math-algebraic-simplification --arith-emulate-wide-int=\"widest-int-supported=32\" --inline --control-flow-sink --cse --composite-fixed-point-pass --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --composite-fixed-point-pass --inline --arith-expand=\"include-bf16\" --fold-tensor-subset-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-result --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --loop-invariant-code-motion --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --sccp --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --loop-invariant-subset-hoisting --test-func-erase-arg --sroa --test-function-pass --loop-invariant-subset-hoisting --duplicate-function-elimination --test-func-insert-arg --remove-dead-values --test-func-erase-result --test-func-insert-arg --composite-fixed-point-pass --test-func-insert-arg --duplicate-function-elimination --duplicate-function-elimination --topological-sort --test-func-erase-arg --test-func-insert-arg --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596]]]",
        "test_line": "[[[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.a6f71f6722055c48.mlir -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --topological-sort --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --test-expand-math | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-arg --arith-emulate-wide-int --topological-sort --loop-invariant-subset-hoisting --test-func-erase-arg --arith-expand=\"include-bf16\" --sroa --test-function-pass --test-emulate-narrow-int=\"memref-load-bitwidth=8\" --symbol-dce --test-func-erase-result --arith-emulate-unsupported-floats --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --sroa --topological-sort --test-emulate-narrow-int=\"arith-compute-bitwidth=8\" --arith-int-range-narrowing --composite-fixed-point-pass --loop-invariant-subset-hoisting --test-function-pass --topological-sort --test-function-pass --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --arith-emulate-unsupported-floats --cse --canonicalize=\"test-convergence top-down=0\" --arith-unsigned-when-equivalent --test-func-insert-result --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --composite-fixed-point-pass --arith-emulate-wide-int=\"widest-int-supported=32\" --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-func-insert-result --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --symbol-dce --symbol-dce --sccp --duplicate-function-elimination --arith-emulate-wide-int=\"widest-int-supported=32\" --control-flow-sink --test-func-erase-result --control-flow-sink --test-func-insert-result --control-flow-sink --mem2reg --loop-invariant-subset-hoisting --control-flow-sink --arith-expand --inline --test-func-insert-result --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --control-flow-sink --control-flow-sink --arith-expand=\"include-bf16\" --sroa --topological-sort --loop-invariant-code-motion --arith-int-range-narrowing --arith-unsigned-when-equivalent | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-arith-emulate-wide-int | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --duplicate-function-elimination --topological-sort --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596]]]",
        "test_line": "[[[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.a6f71f6722055c48.mlir -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --fold-tensor-subset-ops --test-func-set-type --test-func-set-type --test-function-pass --test-func-set-type --sccp --arith-unsigned-when-equivalent --arith-unsigned-when-equivalent --canonicalize=\"test-convergence top-down=0\" --control-flow-sink --test-func-set-type --canonicalize=\"test-convergence top-down=0\" --test-func-insert-arg --arith-expand=\"include-bf16\" --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --int-range-optimizations --cse --arith-unsigned-when-equivalent --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --arith-unsigned-when-equivalent | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --resolve-ranked-shaped-type-result-dims --test-function-pass --test-func-insert-arg --sccp --memref-emulate-wide-int --composite-fixed-point-pass --expand-realloc=\"emit-deallocs\" --test-func-erase-arg --arith-expand=\"include-bf16\" --resolve-shaped-type-result-dims --test-func-insert-arg --expand-realloc --symbol-dce --test-func-erase-arg --expand-realloc --loop-invariant-subset-hoisting --loop-invariant-code-motion --control-flow-sink --test-emulate-narrow-int --resolve-shaped-type-result-dims --mem2reg --mem2reg --int-range-optimizations --composite-fixed-point-pass --canonicalize=\"test-convergence\" --arith-unsigned-when-equivalent --expand-strided-metadata --expand-realloc --composite-fixed-point-pass --resolve-ranked-shaped-type-result-dims --test-func-erase-result --memref-emulate-wide-int | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize --canonicalize=\"test-convergence top-down=0\" --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --mem2reg=\"region-simplify\" --test-func-insert-arg --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --loop-invariant-code-motion --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --composite-fixed-point-pass --symbol-dce --test-func-insert-arg --cse --test-function-pass --sccp --inline --mem2reg=\"region-simplify\" --duplicate-function-elimination --loop-invariant-code-motion --sccp --test-func-erase-arg --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse --inline --test-emulate-narrow-int=\"memref-load-bitwidth=32\" --scf-parallel-loop-fusion --test-func-insert-result --sroa --test-scf-for-utils=\"test-replace-with-new-yields\" --test-func-insert-result --scf-forall-to-for --loop-invariant-subset-hoisting --scf-forall-to-for --loop-invariant-subset-hoisting --test-scf-pipelining=\"annotate\" --sccp --loop-invariant-subset-hoisting --test-function-pass --scf-for-to-while --normalize-memrefs --int-range-optimizations --test-scf-uplift-while-to-for --arith-int-range-narrowing --test-scf-pipelining=\"annotate\" --remove-dead-values --arith-unsigned-when-equivalent --sroa --fold-memref-alias-ops --cse --loop-invariant-subset-hoisting --test-scf-uplift-while-to-for --expand-strided-metadata --resolve-ranked-shaped-type-result-dims --loop-invariant-subset-hoisting --cse --normalize-memrefs --loop-invariant-subset-hoisting --test-func-insert-result --test-func-set-type --test-scf-for-utils --inline --expand-realloc=\"emit-deallocs\" --expand-realloc=\"emit-deallocs\" --test-scf-for-utils --arith-emulate-wide-int --sroa --duplicate-function-elimination --int-range-optimizations --int-range-optimizations --test-scf-for-utils=\"test-replace-with-new-yields\" --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --arith-emulate-wide-int=\"widest-int-supported=32\" --loop-invariant-code-motion --control-flow-sink --cse --sroa --topological-sort --test-arith-emulate-wide-int | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --int-range-optimizations --arith-emulate-unsupported-floats --int-range-optimizations --inline --cse --cse --cse --arith-expand=\"include-bf16\" --loop-invariant-code-motion --test-function-pass --test-func-set-type --composite-fixed-point-pass --test-func-insert-arg --arith-emulate-wide-int --arith-emulate-wide-int --test-func-insert-arg --arith-expand --cse --mem2reg --mem2reg --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --canonicalize=\"test-convergence top-down=0\" --loop-invariant-subset-hoisting --arith-expand | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg --composite-fixed-point-pass --remove-dead-values --control-flow-sink --remove-dead-values --test-func-insert-arg --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596]]]",
        "test_line": "[[[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.a6f71f6722055c48.mlir -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --math-uplift-to-fma --math-extend-to-supported-types --test-func-insert-arg --sccp --test-emulate-narrow-int=\"arith-compute-bitwidth=8\" --arith-int-range-narrowing --test-tensor-copy-insertion --math-uplift-to-fma --test-emulate-narrow-int=\"memref-load-bitwidth=32\" --cse --mem2reg --composite-fixed-point-pass --test-func-insert-arg --topological-sort --test-tensor-copy-insertion --test-expand-math --cse --math-uplift-to-fma --mem2reg=\"region-simplify\" --math-extend-to-supported-types --test-math-to-vcix --test-expand-math --control-flow-sink --topological-sort --loop-invariant-code-motion --math-uplift-to-fma --test-func-erase-result --inline --test-func-erase-result --test-func-insert-arg --math-uplift-to-fma --math-uplift-to-fma | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg --sccp --topological-sort --loop-invariant-subset-hoisting --inline --test-func-erase-result --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --test-func-insert-arg --test-func-insert-result --test-function-pass --inline --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-result --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --control-flow-sink --arith-unsigned-when-equivalent --arith-emulate-wide-int --arith-unsigned-when-equivalent --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --arith-expand --remove-dead-values --arith-expand --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-func-insert-arg --test-function-pass --arith-expand --cse --arith-expand=\"include-bf16\" --sccp --topological-sort --symbol-dce --mem2reg=\"region-simplify\" --composite-fixed-point-pass --test-func-insert-arg --cse --control-flow-sink --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-func-insert-arg --remove-dead-values --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sroa --test-func-set-type --sroa --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --inline --remove-dead-values --sroa --test-function-pass --mem2reg --arith-emulate-unsupported-floats --cse --arith-emulate-wide-int=\"widest-int-supported=32\" --test-func-insert-result --test-func-insert-result --int-range-optimizations --arith-emulate-wide-int --test-func-erase-arg --canonicalize=\"test-convergence top-down=0\" --sroa --symbol-dce --sroa --test-func-insert-arg --arith-expand=\"include-bf16\" --inline --test-func-set-type --arith-emulate-wide-int=\"widest-int-supported=32\" --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --loop-invariant-subset-hoisting --loop-invariant-subset-hoisting --canonicalize=\"test-convergence top-down=0\" --test-func-erase-arg --remove-dead-values --sccp --mem2reg=\"region-simplify\" --sccp --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596]]]",
        "test_line": "[[[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.a6f71f6722055c48.mlir -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-tensor-copy-insertion=\"must-infer-memory-space\" --sroa --loop-invariant-subset-hoisting --composite-fixed-point-pass --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sroa --test-func-insert-arg --test-func-erase-arg --test-function-pass --fold-tensor-subset-ops --loop-invariant-code-motion --test-tensor-transform-patterns=\"test-rewrite-extract-slice-from-collapse-shape\" --arith-emulate-wide-int=\"widest-int-supported=32\" --mem2reg=\"region-simplify\" --arith-emulate-wide-int=\"widest-int-supported=32\" --arith-expand --sroa --test-func-insert-result --test-func-insert-result --test-func-insert-arg --cse --mem2reg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-scf-pipelining=\"no-epilogue-peeling\" --arith-int-range-narrowing --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-function-pass --composite-fixed-point-pass --remove-dead-values --control-flow-sink --test-scf-while-op-builder --scf-forall-to-parallel --symbol-dce --expand-strided-metadata --scf-forall-to-parallel --expand-realloc --loop-invariant-subset-hoisting --loop-invariant-subset-hoisting --test-emulate-narrow-int=\"arith-compute-bitwidth=8\" --test-scf-pipelining --cse --test-func-set-type --expand-realloc --test-func-erase-arg --test-scf-uplift-while-to-for --canonicalize=\"test-convergence\" --arith-unsigned-when-equivalent | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-parallel-loop-specialization --composite-fixed-point-pass --topological-sort --canonicalize --arith-unsigned-when-equivalent --scf-parallel-loop-specialization --scf-parallel-loop-specialization --loop-invariant-subset-hoisting --scf-for-to-while --test-scf-uplift-while-to-for --arith-expand --scf-for-loop-peeling --test-function-pass --arith-emulate-unsupported-floats --arith-int-range-narrowing --inline --test-func-insert-arg --topological-sort --arith-expand=\"include-bf16\" --loop-invariant-subset-hoisting --topological-sort --arith-expand=\"include-bf16\" --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse --duplicate-function-elimination --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596]]]",
        "test_line": "[[[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.a6f71f6722055c48.mlir -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --sroa --test-function-pass --test-math-to-vcix --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --tosa-layerwise-constant-fold --math-extend-to-supported-types --loop-invariant-code-motion --test-expand-math --topological-sort --test-func-set-type --arith-unsigned-when-equivalent --math-uplift-to-fma --duplicate-function-elimination --composite-fixed-point-pass --test-func-erase-arg --math-extend-to-supported-types --tosa-infer-shapes --duplicate-function-elimination --math-uplift-to-fma --symbol-dce --tosa-make-broadcastable --math-uplift-to-fma | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --test-tensor-copy-insertion --cse --test-tensor-transform-patterns=\"test-drop-redundant-insert-slice-rank-expansion\" --test-tensor-copy-insertion --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --test-tensor-transform-patterns=\"use-foreach\" --test-func-set-type --test-func-insert-result --canonicalize=\"test-convergence\" --test-func-insert-arg --sroa --sccp --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --control-flow-sink --mem2reg=\"region-simplify\" --arith-unsigned-when-equivalent | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-memref-dependence-check --arith-unsigned-when-equivalent --int-range-optimizations --remove-dead-values --canonicalize=\"test-convergence top-down=0\" --test-memref-bound-check --arith-expand=\"include-bf16\" --test-memref-dependence-check --test-func-insert-result --fold-memref-alias-ops --remove-dead-values --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --control-flow-sink --test-function-pass --mem2reg --symbol-dce --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-result --sroa --test-func-erase-result --test-func-insert-arg --mem2reg=\"region-simplify\" --inline --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596]]]",
        "test_line": "[[[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.a6f71f6722055c48.mlir --test-function-pass --duplicate-function-elimination --composite-fixed-point-pass --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --test-func-erase-result --tosa-make-broadcastable --remove-dead-values --duplicate-function-elimination --test-tensor-transform-patterns=\"test-rewrite-extract-slice-from-collapse-shape\" --canonicalize | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --loop-invariant-subset-hoisting --arith-emulate-wide-int=\"widest-int-supported=32\" --symbol-dce --inline --tosa-validate --tosa-make-broadcastable --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --test-tensor-transform-patterns=\"test-rewrite-extract-slice-from-collapse-shape\" --tosa-reduce-transposes --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --topological-sort --symbol-dce --fold-tensor-subset-ops --topological-sort --test-func-set-type --test-func-insert-arg --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --int-range-optimizations --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --cse --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --mem2reg=\"region-simplify\" --symbol-dce --loop-invariant-subset-hoisting --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --int-range-optimizations --test-func-insert-result --arith-expand=\"include-bf16\" --arith-emulate-wide-int --test-arith-emulate-wide-int --fold-memref-alias-ops --topological-sort --normalize-memrefs --loop-invariant-code-motion --mem2reg=\"region-simplify\" --sccp --int-range-optimizations --topological-sort --test-function-pass --fold-memref-alias-ops --test-func-set-type --cse --mem2reg=\"region-simplify\" --test-func-insert-arg --control-flow-sink --symbol-dce --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --test-func-erase-arg --memref-expand --resolve-ranked-shaped-type-result-dims --memref-expand --symbol-dce --normalize-memrefs --resolve-shaped-type-result-dims --sroa --cse --arith-unsigned-when-equivalent --test-func-erase-result --fold-memref-alias-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sroa --inline --mem2reg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596]]]",
        "test_line": "[[[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.a6f71f6722055c48.mlir --test-function-pass --duplicate-function-elimination --composite-fixed-point-pass --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --test-func-erase-result --tosa-make-broadcastable --remove-dead-values --duplicate-function-elimination --test-tensor-transform-patterns=\"test-rewrite-extract-slice-from-collapse-shape\" --canonicalize | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --loop-invariant-subset-hoisting --arith-emulate-wide-int=\"widest-int-supported=32\" --symbol-dce --inline --tosa-validate --tosa-make-broadcastable --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --test-tensor-transform-patterns=\"test-rewrite-extract-slice-from-collapse-shape\" --tosa-reduce-transposes --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --topological-sort --symbol-dce --fold-tensor-subset-ops --topological-sort --test-func-set-type --test-func-insert-arg --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-result --canonicalize --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --scf-for-to-while --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --arith-emulate-wide-int=\"widest-int-supported=32\" --scf-for-to-while --test-scf-while-op-builder --control-flow-sink --scf-for-to-while --loop-invariant-subset-hoisting --scf-for-loop-peeling | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-unsigned-when-equivalent --topological-sort --arith-emulate-unsupported-floats --test-func-erase-result --test-function-pass --test-func-erase-arg --arith-unsigned-when-equivalent --test-func-erase-arg --arith-int-range-narrowing --test-arith-emulate-wide-int=\"widest-int-supported=8\" --duplicate-function-elimination --arith-emulate-wide-int --int-range-optimizations --symbol-dce --sroa --mem2reg --test-function-pass --sccp --arith-expand --loop-invariant-subset-hoisting --remove-dead-values --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --test-func-insert-arg --topological-sort --symbol-dce --sroa --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596]]]",
        "test_line": "[[[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.a6f71f6722055c48.mlir --test-function-pass --duplicate-function-elimination --composite-fixed-point-pass --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --test-func-erase-result --tosa-make-broadcastable --remove-dead-values --duplicate-function-elimination --test-tensor-transform-patterns=\"test-rewrite-extract-slice-from-collapse-shape\" --canonicalize | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --loop-invariant-subset-hoisting --arith-emulate-wide-int=\"widest-int-supported=32\" --symbol-dce --inline --tosa-validate --tosa-make-broadcastable --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --test-tensor-transform-patterns=\"test-rewrite-extract-slice-from-collapse-shape\" --tosa-reduce-transposes --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --topological-sort --symbol-dce --fold-tensor-subset-ops --topological-sort --test-func-set-type --test-func-insert-arg --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --arith-emulate-wide-int --composite-fixed-point-pass --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --int-range-optimizations --int-range-optimizations --loop-invariant-code-motion --test-func-erase-result --topological-sort --test-emulate-narrow-int=\"arith-compute-bitwidth=8\" --test-func-insert-arg --arith-emulate-wide-int=\"widest-int-supported=32\" --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-arg --sccp --sccp --test-func-erase-arg --sccp --inline --loop-invariant-subset-hoisting --topological-sort --duplicate-function-elimination --test-function-pass --sccp --mem2reg=\"region-simplify\" --symbol-dce --cse --test-function-pass --mem2reg=\"region-simplify\" --test-func-erase-arg --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-forall-to-parallel --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --scf-for-loop-canonicalization --composite-fixed-point-pass --sccp --composite-fixed-point-pass --symbol-dce --test-func-erase-arg --scf-for-loop-peeling --loop-invariant-subset-hoisting --topological-sort --test-scf-uplift-while-to-for --test-arith-emulate-wide-int=\"widest-int-supported=8\" --int-range-optimizations --scf-parallel-loop-specialization --test-arith-emulate-wide-int --scf-parallel-loop-specialization --test-scf-pipelining --inline --duplicate-function-elimination --sccp --test-func-insert-result --scf-for-loop-canonicalization --symbol-dce --loop-invariant-code-motion --test-scf-while-op-builder --arith-unsigned-when-equivalent --scf-for-loop-specialization --scf-forall-to-for --test-func-erase-result --test-func-erase-result --control-flow-sink --cse --scf-for-loop-range-folding --test-emulate-narrow-int --scf-for-loop-canonicalization --symbol-dce --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --remove-dead-values --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-func-erase-result --test-func-erase-arg --sccp --duplicate-function-elimination --sccp --arith-unsigned-when-equivalent --arith-emulate-wide-int=\"widest-int-supported=32\" --arith-int-range-narrowing --int-range-optimizations --topological-sort --cse --test-func-insert-arg --test-func-insert-result --test-func-erase-result --canonicalize --test-func-erase-arg --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse --control-flow-sink --sroa --inline --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596]]]",
        "test_line": "[[[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.a6f71f6722055c48.mlir -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-tensor-copy-insertion=\"must-infer-memory-space\" --sroa --loop-invariant-subset-hoisting --composite-fixed-point-pass --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --resolve-shaped-type-result-dims --arith-emulate-wide-int --sroa --resolve-shaped-type-result-dims --test-func-insert-arg --memref-emulate-wide-int=\"widest-int-supported=32\" --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize=\"test-convergence top-down=0\" --symbol-dce --test-function-pass --composite-fixed-point-pass --cse --test-function-pass --loop-invariant-code-motion --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-func-erase-arg --sroa --test-arith-emulate-wide-int --arith-emulate-wide-int=\"widest-int-supported=32\" --inline --test-arith-emulate-wide-int=\"widest-int-supported=8\" --arith-expand=\"include-bf16\" --arith-unsigned-when-equivalent --duplicate-function-elimination --loop-invariant-code-motion --cse --composite-fixed-point-pass --test-function-pass --test-func-insert-result --canonicalize --test-func-erase-result --symbol-dce --topological-sort --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-arg --loop-invariant-code-motion --symbol-dce --test-func-insert-result --sccp --mem2reg=\"region-simplify\" --cse --test-func-erase-arg --test-function-pass --test-func-insert-arg --cse --duplicate-function-elimination --test-func-set-type --loop-invariant-subset-hoisting --test-func-erase-result --test-function-pass --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596]]]",
        "test_line": "[[[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.a6f71f6722055c48.mlir -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-tensor-transform-patterns=\"test-reassociative-reshape-folding\" --arith-emulate-unsupported-floats --arith-expand --loop-invariant-code-motion --arith-expand --arith-expand=\"include-bf16\" --loop-invariant-code-motion --topological-sort --arith-unsigned-when-equivalent --symbol-dce --test-func-set-type --sccp --test-tensor-copy-insertion --int-range-optimizations --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-arg --control-flow-sink --test-function-pass --test-func-erase-arg --test-func-insert-result --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --test-func-insert-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596]]]",
        "test_line": "[[[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.a6f71f6722055c48.mlir --test-function-pass --duplicate-function-elimination --composite-fixed-point-pass --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --test-func-erase-result --tosa-make-broadcastable --remove-dead-values --duplicate-function-elimination --test-tensor-transform-patterns=\"test-rewrite-extract-slice-from-collapse-shape\" --canonicalize | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-tensor-transform-patterns=\"test-fold-constant-extract-slice\" --test-emulate-narrow-int | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-tensor-transform-patterns=\"test-reassociative-reshape-folding\" --canonicalize --test-arith-emulate-wide-int=\"widest-int-supported=8\" --fold-tensor-subset-ops --topological-sort --loop-invariant-code-motion --topological-sort --inline --control-flow-sink --arith-unsigned-when-equivalent --sccp --arith-expand=\"include-bf16\" --test-func-set-type --topological-sort --arith-emulate-wide-int --arith-int-range-narrowing --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --symbol-dce --test-func-set-type --sccp --test-func-erase-result --inline --test-func-erase-result --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-func-set-type --canonicalize=\"test-convergence top-down=0\" --inline --fold-tensor-subset-ops --canonicalize=\"test-convergence\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --arith-emulate-unsupported-floats --symbol-dce --test-func-erase-arg --topological-sort --int-range-optimizations --canonicalize=\"test-convergence\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --test-function-pass --duplicate-function-elimination --mem2reg --test-function-pass --symbol-dce --loop-invariant-subset-hoisting --topological-sort --canonicalize=\"test-convergence\" --test-func-set-type --canonicalize=\"test-convergence top-down=0\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-forall-to-parallel --composite-fixed-point-pass --test-scf-pipelining --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-func-insert-result --test-func-erase-arg --scf-for-to-while --arith-int-range-narrowing --test-func-set-type --test-memref-dependence-check --test-memref-bound-check --scf-forall-to-for --test-scf-pipelining=\"no-epilogue-peeling\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse --remove-dead-values --loop-invariant-subset-hoisting --arith-int-range-narrowing --cse --composite-fixed-point-pass --topological-sort --test-function-pass --sroa --resolve-shaped-type-result-dims --normalize-memrefs --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --canonicalize=\"test-convergence\" --arith-unsigned-when-equivalent --expand-strided-metadata --test-func-erase-arg --sccp --loop-invariant-subset-hoisting --arith-emulate-unsupported-floats --memref-expand --normalize-memrefs --test-func-insert-result --symbol-dce --arith-emulate-wide-int --test-func-erase-arg --canonicalize=\"test-convergence top-down=0\" --arith-int-range-narrowing --int-range-optimizations --loop-invariant-subset-hoisting --fold-memref-alias-ops --test-func-insert-arg --loop-invariant-subset-hoisting --test-func-insert-arg --arith-emulate-wide-int --test-func-set-type --canonicalize --control-flow-sink --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --test-function-pass --test-function-pass --control-flow-sink --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596]]]",
        "test_line": "[[[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.a6f71f6722055c48.mlir -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --arith-expand=\"include-bf16\" --int-range-optimizations --test-expand-math --int-range-optimizations --test-func-erase-arg --test-func-set-type --sroa --test-function-pass --composite-fixed-point-pass --inline --test-tensor-copy-insertion=\"must-infer-memory-space\" --fold-tensor-subset-ops --arith-int-range-narrowing --loop-invariant-subset-hoisting --arith-expand=\"include-bf16\" --inline --symbol-dce --symbol-dce --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --resolve-ranked-shaped-type-result-dims --canonicalize=\"test-convergence\" --sroa --symbol-dce --int-range-optimizations --control-flow-sink --loop-invariant-code-motion --test-function-pass --topological-sort --sroa --arith-emulate-wide-int=\"widest-int-supported=32\" --resolve-ranked-shaped-type-result-dims --resolve-ranked-shaped-type-result-dims --test-func-insert-result --test-emulate-narrow-int=\"arith-compute-bitwidth=8\" --memref-emulate-wide-int --resolve-shaped-type-result-dims --memref-emulate-wide-int=\"widest-int-supported=32\" --control-flow-sink --expand-strided-metadata --test-func-insert-result --expand-realloc --sroa --test-memref-bound-check | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --symbol-dce --scf-for-loop-range-folding --scf-forall-to-for --test-scf-for-utils=\"test-replace-with-new-yields\" --scf-forall-to-parallel --test-scf-if-utils --scf-for-loop-range-folding --arith-emulate-wide-int=\"widest-int-supported=32\" --test-emulate-narrow-int=\"memref-load-bitwidth=8\" --test-func-erase-result --test-arith-emulate-wide-int --topological-sort --resolve-ranked-shaped-type-result-dims --normalize-memrefs --test-function-pass --loop-invariant-subset-hoisting --arith-emulate-wide-int=\"widest-int-supported=32\" --cse --test-scf-uplift-while-to-for --test-func-erase-arg --canonicalize=\"test-convergence\" --test-emulate-narrow-int=\"memref-load-bitwidth=32\" --arith-unsigned-when-equivalent --resolve-ranked-shaped-type-result-dims --normalize-memrefs --symbol-dce --scf-parallel-loop-fusion --loop-invariant-code-motion --expand-strided-metadata --symbol-dce --resolve-shaped-type-result-dims | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --test-func-insert-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --inline --duplicate-function-elimination --mem2reg --composite-fixed-point-pass --composite-fixed-point-pass --mem2reg --arith-emulate-wide-int=\"widest-int-supported=32\" --sccp --test-func-erase-arg --arith-emulate-unsupported-floats --remove-dead-values --symbol-dce --arith-unsigned-when-equivalent --symbol-dce --int-range-optimizations --int-range-optimizations --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-arg --test-func-insert-arg --topological-sort --symbol-dce --test-func-erase-arg --control-flow-sink --test-func-set-type --sroa --topological-sort --test-func-erase-result --mem2reg=\"region-simplify\" --topological-sort --canonicalize=\"test-convergence top-down=0\" --loop-invariant-code-motion --test-func-insert-arg --mem2reg=\"region-simplify\" --cse --test-func-insert-arg --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596]]]",
        "test_line": "[[[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.a6f71f6722055c48.mlir -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-tensor-copy-insertion=\"must-infer-memory-space\" --sroa --loop-invariant-subset-hoisting --composite-fixed-point-pass --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --test-tensor-transform-patterns=\"test-reassociative-reshape-folding\" --test-tensor-copy-insertion=\"must-infer-memory-space\" --test-func-set-type --symbol-dce --arith-int-range-narrowing --int-range-optimizations --sccp --test-function-pass --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --int-range-optimizations --test-func-set-type --loop-invariant-code-motion --test-func-erase-arg --composite-fixed-point-pass --arith-emulate-unsupported-floats --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --symbol-dce --test-function-pass --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --arith-expand --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg --expand-realloc --duplicate-function-elimination --canonicalize --duplicate-function-elimination --test-function-pass --loop-invariant-code-motion --loop-invariant-code-motion --sroa --memref-expand --topological-sort --expand-realloc=\"emit-deallocs\" --test-function-pass --resolve-shaped-type-result-dims --mem2reg --test-memref-bound-check --composite-fixed-point-pass --test-func-insert-result --test-memref-dependence-check --expand-realloc=\"emit-deallocs\" --test-func-erase-result --cse --fold-memref-alias-ops --composite-fixed-point-pass --canonicalize=\"test-convergence top-down=0\" --symbol-dce --test-function-pass --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --topological-sort --test-func-erase-result --control-flow-sink --inline --mem2reg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --symbol-dce --loop-invariant-code-motion --composite-fixed-point-pass --sroa --remove-dead-values --loop-invariant-subset-hoisting --test-function-pass --test-func-erase-arg --mem2reg --test-func-erase-arg --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-func-erase-arg --topological-sort --canonicalize=\"test-convergence\" --arith-expand --memref-emulate-wide-int=\"widest-int-supported=32\" --test-func-erase-arg --topological-sort --remove-dead-values --expand-strided-metadata --remove-dead-values --composite-fixed-point-pass --mem2reg --loop-invariant-code-motion --mem2reg --test-func-erase-result --mem2reg --resolve-shaped-type-result-dims --int-range-optimizations | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --test-func-erase-arg --symbol-dce --test-func-insert-arg --test-func-erase-result --test-func-erase-result --test-function-pass --loop-invariant-code-motion --canonicalize=\"test-convergence\" --remove-dead-values --control-flow-sink --cse --sroa --test-func-insert-result --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596]]]",
        "test_line": "[[[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.a6f71f6722055c48.mlir --tosa-test-quant-utils --test-function-pass --test-func-erase-arg --test-func-insert-result --loop-invariant-subset-hoisting --test-func-erase-result --fold-tensor-subset-ops --canonicalize=\"test-convergence\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-tensor-copy-insertion --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-func-insert-result --inline --arith-emulate-wide-int --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --test-tensor-transform-patterns --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --int-range-optimizations | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --inline --topological-sort --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-tensor-transform-patterns=\"test-fold-constant-extract-slice\" --inline --test-tensor-copy-insertion --loop-invariant-code-motion --arith-emulate-unsupported-floats --sccp --inline --test-func-insert-result --loop-invariant-subset-hoisting --topological-sort --test-func-erase-result --arith-emulate-unsupported-floats --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse --test-func-insert-result --topological-sort --sroa --test-arith-emulate-wide-int --test-func-insert-arg --inline --composite-fixed-point-pass --canonicalize=\"test-convergence top-down=0\" --sccp --canonicalize --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --sroa --mem2reg=\"region-simplify\" --loop-invariant-code-motion --inline --test-func-erase-arg --int-range-optimizations | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize=\"test-convergence\" --composite-fixed-point-pass --loop-invariant-subset-hoisting --test-func-set-type --control-flow-sink --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --mem2reg --test-func-erase-result --duplicate-function-elimination --sccp --test-func-set-type --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --test-arith-emulate-wide-int=\"widest-int-supported=8\" --arith-int-range-narrowing --test-function-pass --remove-dead-values --composite-fixed-point-pass --test-func-insert-result --arith-expand=\"include-bf16\" --arith-expand=\"include-bf16\" --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-expand=\"include-bf16\" --test-func-insert-result --mem2reg --cse --sccp --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --inline --duplicate-function-elimination --cse --remove-dead-values --symbol-dce --mem2reg=\"region-simplify\" --test-func-set-type --symbol-dce --test-func-set-type --test-func-insert-result --loop-invariant-subset-hoisting --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596]]]",
        "test_line": "[[[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.a6f71f6722055c48.mlir -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-wide-int --test-func-insert-arg --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-tensor-transform-patterns=\"test-drop-redundant-insert-slice-rank-expansion\" --test-tensor-copy-insertion --test-math-algebraic-simplification --test-expand-math --test-func-erase-result --composite-fixed-point-pass --inline --loop-invariant-code-motion --test-emulate-narrow-int=\"memref-load-bitwidth=32\" --math-uplift-to-fma --arith-int-range-narrowing --symbol-dce --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --arith-int-range-narrowing --cse --arith-unsigned-when-equivalent --test-math-algebraic-simplification --arith-emulate-wide-int=\"widest-int-supported=32\" --inline --control-flow-sink --cse --composite-fixed-point-pass --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --composite-fixed-point-pass --inline --arith-expand=\"include-bf16\" --fold-tensor-subset-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --memref-expand --memref-emulate-wide-int=\"widest-int-supported=32\" --inline --fold-memref-alias-ops --sroa --sroa --test-arith-emulate-wide-int --composite-fixed-point-pass --sroa --resolve-ranked-shaped-type-result-dims --fold-memref-alias-ops --arith-expand=\"include-bf16\" --expand-realloc=\"emit-deallocs\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-arg --control-flow-sink --test-func-erase-result --test-func-erase-arg --test-func-insert-arg --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-arg --loop-invariant-code-motion --test-arith-emulate-wide-int=\"widest-int-supported=8\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --remove-dead-values --test-func-set-type --duplicate-function-elimination --test-func-erase-result --loop-invariant-subset-hoisting --symbol-dce --canonicalize --mem2reg=\"region-simplify\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596]]]",
        "test_line": "[[[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.a6f71f6722055c48.mlir -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-wide-int --test-func-insert-arg --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-tensor-transform-patterns=\"test-drop-redundant-insert-slice-rank-expansion\" --test-tensor-copy-insertion --test-math-algebraic-simplification --test-expand-math --test-func-erase-result --composite-fixed-point-pass --inline --loop-invariant-code-motion --test-emulate-narrow-int=\"memref-load-bitwidth=32\" --math-uplift-to-fma --arith-int-range-narrowing --symbol-dce --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --arith-int-range-narrowing --cse --arith-unsigned-when-equivalent --test-math-algebraic-simplification --arith-emulate-wide-int=\"widest-int-supported=32\" --inline --control-flow-sink --cse --composite-fixed-point-pass --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --composite-fixed-point-pass --inline --arith-expand=\"include-bf16\" --fold-tensor-subset-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --loop-invariant-subset-hoisting --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --test-func-insert-arg --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-arg --mem2reg --test-func-insert-result --test-func-insert-result --loop-invariant-subset-hoisting --remove-dead-values --arith-emulate-unsupported-floats --arith-expand=\"include-bf16\" --canonicalize=\"test-convergence\" --inline --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --arith-emulate-wide-int=\"widest-int-supported=32\" --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --remove-dead-values --composite-fixed-point-pass --canonicalize=\"test-convergence\" --test-function-pass --symbol-dce --composite-fixed-point-pass --remove-dead-values --mem2reg --sccp --control-flow-sink --sccp --arith-unsigned-when-equivalent --loop-invariant-code-motion --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-func-insert-result --canonicalize=\"test-convergence top-down=0\" --canonicalize --test-func-erase-result --arith-emulate-wide-int --test-func-insert-result --arith-unsigned-when-equivalent --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --int-range-optimizations | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-arg --canonicalize --test-func-insert-result --test-function-pass --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596]]]",
        "test_line": "[[[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.a6f71f6722055c48.mlir -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-wide-int --test-func-insert-arg --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-tensor-transform-patterns=\"test-drop-redundant-insert-slice-rank-expansion\" --test-tensor-copy-insertion --test-math-algebraic-simplification --test-expand-math --test-func-erase-result --composite-fixed-point-pass --inline --loop-invariant-code-motion --test-emulate-narrow-int=\"memref-load-bitwidth=32\" --math-uplift-to-fma --arith-int-range-narrowing --symbol-dce --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --arith-int-range-narrowing --cse --arith-unsigned-when-equivalent --test-math-algebraic-simplification --arith-emulate-wide-int=\"widest-int-supported=32\" --inline --control-flow-sink --cse --composite-fixed-point-pass --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --composite-fixed-point-pass --inline --arith-expand=\"include-bf16\" --fold-tensor-subset-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --test-function-pass --inline --int-range-optimizations --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-parallel-loop-fusion --mem2reg --scf-for-loop-specialization --resolve-ranked-shaped-type-result-dims --sccp --composite-fixed-point-pass --memref-emulate-wide-int --test-scf-uplift-while-to-for --composite-fixed-point-pass --test-scf-pipelining=\"annotate\" --arith-expand=\"include-bf16\" --scf-for-to-while --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --test-function-pass --int-range-optimizations --test-func-insert-result --loop-invariant-subset-hoisting --test-func-insert-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-result --inline --test-func-set-type --sroa --mem2reg --loop-invariant-code-motion --test-func-insert-result --sccp --test-func-erase-result --canonicalize --test-func-insert-arg --test-func-erase-arg --symbol-dce --test-func-erase-arg --duplicate-function-elimination --canonicalize=\"test-convergence top-down=0\" --duplicate-function-elimination --duplicate-function-elimination --composite-fixed-point-pass --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596]]]",
        "test_line": "[[[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.a6f71f6722055c48.mlir -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --arith-emulate-wide-int=\"widest-int-supported=32\" --test-arith-emulate-wide-int --test-math-to-vcix --test-tensor-transform-patterns=\"test-reassociative-reshape-folding\" --test-tensor-copy-insertion=\"must-infer-memory-space\" --test-func-erase-arg --mem2reg --inline --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --math-uplift-to-fma --sccp --test-math-polynomial-approximation --test-arith-emulate-wide-int --sccp --arith-expand=\"include-bf16\" --test-func-insert-result --test-func-erase-arg --test-function-pass --math-uplift-to-fma --control-flow-sink --test-func-set-type --symbol-dce --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --resolve-ranked-shaped-type-result-dims --test-emulate-narrow-int=\"memref-load-bitwidth=8\" --test-memref-dependence-check --arith-emulate-wide-int=\"widest-int-supported=32\" --expand-strided-metadata --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --sccp --normalize-memrefs --arith-expand=\"include-bf16\" --inline --test-memref-bound-check --control-flow-sink --test-func-insert-result --int-range-optimizations --memref-emulate-wide-int --loop-invariant-code-motion --mem2reg --expand-realloc --test-func-insert-result --test-func-insert-arg --inline --loop-invariant-code-motion --test-func-insert-arg --arith-unsigned-when-equivalent | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-arg --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-for-to-while --arith-unsigned-when-equivalent --composite-fixed-point-pass --cse --scf-for-loop-canonicalization --remove-dead-values --symbol-dce --duplicate-function-elimination --scf-forall-to-parallel --sccp --expand-realloc --test-memref-bound-check --scf-parallel-loop-fusion --test-scf-for-utils --expand-realloc=\"emit-deallocs\" --remove-dead-values --expand-realloc=\"emit-deallocs\" --test-scf-if-utils --arith-emulate-wide-int=\"widest-int-supported=32\" --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --test-func-insert-result --loop-invariant-subset-hoisting --sccp --topological-sort --arith-emulate-wide-int --arith-unsigned-when-equivalent --test-arith-emulate-wide-int --test-func-erase-arg --int-range-optimizations --int-range-optimizations --inline --remove-dead-values --arith-emulate-wide-int --test-func-erase-arg --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --arith-expand --test-function-pass --loop-invariant-subset-hoisting --control-flow-sink --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --loop-invariant-code-motion --symbol-dce --arith-emulate-unsupported-floats --loop-invariant-code-motion --sroa --test-func-set-type --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --remove-dead-values --loop-invariant-code-motion --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596]]]",
        "test_line": "[[[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.a6f71f6722055c48.mlir -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-wide-int --test-func-insert-arg --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-tensor-transform-patterns=\"test-drop-redundant-insert-slice-rank-expansion\" --test-tensor-copy-insertion --test-math-algebraic-simplification --test-expand-math --test-func-erase-result --composite-fixed-point-pass --inline --loop-invariant-code-motion --test-emulate-narrow-int=\"memref-load-bitwidth=32\" --math-uplift-to-fma --arith-int-range-narrowing --symbol-dce --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --arith-int-range-narrowing --cse --arith-unsigned-when-equivalent --test-math-algebraic-simplification --arith-emulate-wide-int=\"widest-int-supported=32\" --inline --control-flow-sink --cse --composite-fixed-point-pass --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --composite-fixed-point-pass --inline --arith-expand=\"include-bf16\" --fold-tensor-subset-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-scf-for-utils --int-range-optimizations --sroa --scf-for-to-while --sroa --test-func-insert-result --cse --arith-emulate-wide-int=\"widest-int-supported=32\" --scf-parallel-loop-tiling --test-emulate-narrow-int | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --test-func-insert-result --control-flow-sink --arith-emulate-unsupported-floats --remove-dead-values --arith-emulate-unsupported-floats --test-arith-emulate-wide-int --cse --test-func-insert-arg --arith-emulate-unsupported-floats --arith-int-range-narrowing --inline --arith-int-range-narrowing --loop-invariant-subset-hoisting --mem2reg --test-function-pass --test-func-insert-result --test-func-insert-arg --remove-dead-values --topological-sort --test-func-insert-result --test-function-pass --test-func-insert-arg --test-function-pass --int-range-optimizations --duplicate-function-elimination --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse --test-func-set-type --remove-dead-values --canonicalize --loop-invariant-subset-hoisting --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596]]]",
        "test_line": "[[[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.a6f71f6722055c48.mlir -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-wide-int --test-func-insert-arg --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-tensor-transform-patterns=\"test-drop-redundant-insert-slice-rank-expansion\" --test-tensor-copy-insertion --test-math-algebraic-simplification --test-expand-math --test-func-erase-result --composite-fixed-point-pass --inline --loop-invariant-code-motion --test-emulate-narrow-int=\"memref-load-bitwidth=32\" --math-uplift-to-fma --arith-int-range-narrowing --symbol-dce --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --arith-int-range-narrowing --cse --arith-unsigned-when-equivalent --test-math-algebraic-simplification --arith-emulate-wide-int=\"widest-int-supported=32\" --inline --control-flow-sink --cse --composite-fixed-point-pass --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --composite-fixed-point-pass --inline --arith-expand=\"include-bf16\" --fold-tensor-subset-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-arg --arith-expand --sccp --test-arith-emulate-wide-int --topological-sort --arith-emulate-wide-int --test-func-erase-arg --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --inline --sroa --control-flow-sink --test-func-insert-arg --test-func-insert-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596]]]",
        "test_line": "[[[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.a6f71f6722055c48.mlir -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-wide-int --test-func-insert-arg --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-tensor-transform-patterns=\"test-drop-redundant-insert-slice-rank-expansion\" --test-tensor-copy-insertion --test-math-algebraic-simplification --test-expand-math --test-func-erase-result --composite-fixed-point-pass --inline --loop-invariant-code-motion --test-emulate-narrow-int=\"memref-load-bitwidth=32\" --math-uplift-to-fma --arith-int-range-narrowing --symbol-dce --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --arith-int-range-narrowing --cse --arith-unsigned-when-equivalent --test-math-algebraic-simplification --arith-emulate-wide-int=\"widest-int-supported=32\" --inline --control-flow-sink --cse --composite-fixed-point-pass --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --composite-fixed-point-pass --inline --arith-expand=\"include-bf16\" --fold-tensor-subset-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --test-func-insert-arg --test-func-set-type --composite-fixed-point-pass --test-function-pass --test-func-erase-arg --cse --test-func-erase-arg --test-func-set-type --cse --sccp --symbol-dce --inline --canonicalize | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg --arith-emulate-wide-int=\"widest-int-supported=32\" --arith-unsigned-when-equivalent --mem2reg=\"region-simplify\" --int-range-optimizations --arith-unsigned-when-equivalent --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --remove-dead-values --loop-invariant-code-motion --topological-sort --test-func-insert-arg --test-func-insert-arg --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --canonicalize=\"test-convergence\" --test-func-insert-arg --arith-unsigned-when-equivalent --remove-dead-values --arith-emulate-unsupported-floats --loop-invariant-code-motion --canonicalize=\"test-convergence top-down=0\" --arith-int-range-narrowing | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-result --mem2reg --loop-invariant-subset-hoisting --composite-fixed-point-pass --test-function-pass --control-flow-sink --duplicate-function-elimination --test-func-set-type --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596]]]",
        "test_line": "[[[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.a6f71f6722055c48.mlir --test-function-pass --duplicate-function-elimination --composite-fixed-point-pass --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --test-func-erase-result --tosa-make-broadcastable --remove-dead-values --duplicate-function-elimination --test-tensor-transform-patterns=\"test-rewrite-extract-slice-from-collapse-shape\" --canonicalize | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --loop-invariant-subset-hoisting --arith-emulate-wide-int=\"widest-int-supported=32\" --symbol-dce --inline --tosa-validate --tosa-make-broadcastable --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --test-tensor-transform-patterns=\"test-rewrite-extract-slice-from-collapse-shape\" --tosa-reduce-transposes --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --topological-sort --symbol-dce --fold-tensor-subset-ops --topological-sort --test-func-set-type --test-func-insert-arg --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --mem2reg=\"region-simplify\" --test-func-set-type --test-function-pass --mem2reg --loop-invariant-code-motion --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --int-range-optimizations --sroa --loop-invariant-subset-hoisting --mem2reg --topological-sort --arith-int-range-narrowing --arith-int-range-narrowing --test-func-insert-arg --symbol-dce --sccp --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --test-func-erase-result --test-function-pass --test-func-set-type --duplicate-function-elimination --test-func-insert-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse --loop-invariant-subset-hoisting --arith-int-range-narrowing --test-func-set-type --test-func-erase-arg --inline --arith-emulate-unsupported-floats --fold-tensor-subset-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-result --test-func-set-type --duplicate-function-elimination --mem2reg=\"region-simplify\" --arith-unsigned-when-equivalent --test-func-set-type --test-func-set-type --arith-expand --test-function-pass --arith-expand --arith-expand --arith-emulate-wide-int=\"widest-int-supported=32\" --int-range-optimizations --test-func-erase-result --sccp --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --loop-invariant-subset-hoisting --symbol-dce --test-func-erase-result --test-func-erase-result --topological-sort --test-func-set-type --loop-invariant-subset-hoisting --symbol-dce --fold-tensor-subset-ops --topological-sort --cse --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --composite-fixed-point-pass --canonicalize=\"test-convergence\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-for-loop-range-folding --test-memref-dependence-check --inline --scf-for-loop-peeling=\"skip-partial\" --scf-for-loop-specialization --scf-parallel-loop-tiling=\"parallel-loop-tile-sizes=1,4 no-min-max-bounds=true\" --topological-sort --memref-expand --test-function-pass --duplicate-function-elimination --sccp --loop-invariant-subset-hoisting --cse --expand-realloc=\"emit-deallocs\" --fold-memref-alias-ops --composite-fixed-point-pass --test-memref-dependence-check --scf-for-loop-specialization --resolve-ranked-shaped-type-result-dims --int-range-optimizations --loop-invariant-code-motion --test-memref-dependence-check --scf-parallel-loop-tiling=\"parallel-loop-tile-sizes=1,4 no-min-max-bounds=true\" --control-flow-sink --scf-for-to-while --scf-parallel-loop-fusion --cse --control-flow-sink --mem2reg=\"region-simplify\" --fold-memref-alias-ops --loop-invariant-code-motion --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --topological-sort --duplicate-function-elimination --inline --arith-expand=\"include-bf16\" --test-arith-emulate-wide-int --test-function-pass --composite-fixed-point-pass --test-arith-emulate-wide-int --test-func-insert-arg --composite-fixed-point-pass --topological-sort --mem2reg --control-flow-sink --loop-invariant-subset-hoisting --arith-unsigned-when-equivalent | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --test-func-erase-result --test-func-erase-result --mem2reg --mem2reg=\"region-simplify\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596]]]",
        "test_line": "[[[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.a6f71f6722055c48.mlir -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-wide-int --test-func-insert-arg --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-tensor-transform-patterns=\"test-drop-redundant-insert-slice-rank-expansion\" --test-tensor-copy-insertion --test-math-algebraic-simplification --test-expand-math --test-func-erase-result --composite-fixed-point-pass --inline --loop-invariant-code-motion --test-emulate-narrow-int=\"memref-load-bitwidth=32\" --math-uplift-to-fma --arith-int-range-narrowing --symbol-dce --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --arith-int-range-narrowing --cse --arith-unsigned-when-equivalent --test-math-algebraic-simplification --arith-emulate-wide-int=\"widest-int-supported=32\" --inline --control-flow-sink --cse --composite-fixed-point-pass --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --composite-fixed-point-pass --inline --arith-expand=\"include-bf16\" --fold-tensor-subset-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --inline --control-flow-sink --sroa --test-func-set-type --arith-emulate-wide-int --arith-emulate-wide-int | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-emulate-narrow-int=\"arith-compute-bitwidth=8\" --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --sroa --test-func-set-type --test-func-set-type --canonicalize=\"test-convergence top-down=0\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --test-func-erase-arg --test-func-insert-arg --sccp --test-func-insert-result --topological-sort --remove-dead-values --topological-sort --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-wide-int --int-range-optimizations --symbol-dce --arith-expand=\"include-bf16\" --remove-dead-values --duplicate-function-elimination --cse --sccp --topological-sort --duplicate-function-elimination --loop-invariant-subset-hoisting --canonicalize --arith-int-range-narrowing --test-func-set-type --remove-dead-values --canonicalize=\"test-convergence\" --duplicate-function-elimination --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --loop-invariant-code-motion --test-func-insert-result --canonicalize=\"test-convergence top-down=0\" --test-func-erase-arg --cse --loop-invariant-code-motion --test-func-insert-result --remove-dead-values --inline --mem2reg --remove-dead-values --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596]]]",
        "test_line": "[[[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.a6f71f6722055c48.mlir -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-tensor-copy-insertion=\"must-infer-memory-space\" --sroa --loop-invariant-subset-hoisting --composite-fixed-point-pass --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --test-function-pass --test-func-insert-result --arith-expand --int-range-optimizations --test-func-insert-result --canonicalize=\"test-convergence\" --loop-invariant-code-motion --inline --test-func-set-type --test-func-insert-arg --test-func-set-type --test-func-insert-arg --test-func-erase-arg --inline --test-emulate-narrow-int --arith-emulate-wide-int=\"widest-int-supported=32\" --canonicalize=\"test-convergence top-down=0\" --test-func-set-type --loop-invariant-subset-hoisting --arith-expand --control-flow-sink --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize --inline --test-func-insert-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --test-func-erase-result --loop-invariant-code-motion --test-function-pass --duplicate-function-elimination --topological-sort --duplicate-function-elimination --canonicalize=\"test-convergence\" --cse --inline --inline --control-flow-sink --test-func-set-type --topological-sort --remove-dead-values --test-func-erase-arg --loop-invariant-subset-hoisting --composite-fixed-point-pass --sroa --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-scf-if-utils --topological-sort --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --scf-for-loop-specialization | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-result --test-func-erase-result --test-arith-emulate-wide-int=\"widest-int-supported=8\" --canonicalize=\"test-convergence top-down=0\" --loop-invariant-code-motion --test-func-erase-arg --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --arith-int-range-narrowing --int-range-optimizations --test-func-set-type --topological-sort --control-flow-sink --cse --test-func-erase-arg --int-range-optimizations --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --inline --control-flow-sink --test-func-erase-result --loop-invariant-subset-hoisting --test-func-insert-result --test-func-erase-result --loop-invariant-code-motion --cse --mem2reg --cse --remove-dead-values --composite-fixed-point-pass --sroa --canonicalize --topological-sort --topological-sort --mem2reg --sccp --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596]]]",
        "test_line": "[[[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.a6f71f6722055c48.mlir -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --loop-invariant-subset-hoisting --mem2reg=\"region-simplify\" --math-extend-to-supported-types --arith-unsigned-when-equivalent --test-math-algebraic-simplification --fold-tensor-subset-ops --loop-invariant-code-motion --test-func-insert-arg --test-tensor-copy-insertion --test-math-to-vcix --composite-fixed-point-pass --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-expand-math --sccp --test-func-insert-result --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --inline --composite-fixed-point-pass --test-func-erase-result --test-math-to-vcix --math-extend-to-supported-types --math-uplift-to-fma --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --cse --test-func-insert-result --loop-invariant-code-motion --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --sccp --test-func-set-type --remove-dead-values --sccp --control-flow-sink --test-func-insert-arg --int-range-optimizations --test-func-erase-result --symbol-dce --arith-expand=\"include-bf16\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-arg --test-func-insert-arg --mem2reg --test-function-pass --sroa --test-func-insert-result --composite-fixed-point-pass --canonicalize --test-function-pass --test-function-pass --inline --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596]]]",
        "test_line": "[[[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.a6f71f6722055c48.mlir --remove-dead-values --tosa-reduce-transposes --test-func-erase-arg --tosa-reduce-transposes --composite-fixed-point-pass --tosa-layerwise-constant-fold --test-func-insert-result --test-tensor-copy-insertion --test-func-insert-arg --mem2reg --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-result --arith-int-range-narrowing | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg --test-emulate-narrow-int --loop-invariant-code-motion --arith-emulate-wide-int=\"widest-int-supported=32\" --arith-emulate-unsupported-floats --topological-sort --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-scf-pipelining=\"annotate\" --int-range-optimizations --test-func-insert-arg --scf-parallel-loop-specialization --sccp --test-arith-emulate-wide-int --test-scf-if-utils --scf-for-to-while --memref-expand --test-scf-uplift-while-to-for --test-func-insert-result --memref-expand --scf-for-loop-specialization --loop-invariant-code-motion --arith-emulate-wide-int --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --arith-emulate-wide-int --loop-invariant-subset-hoisting --inline --arith-expand --expand-realloc=\"emit-deallocs\" --expand-strided-metadata --test-arith-emulate-wide-int --scf-for-to-while --scf-forall-to-for --loop-invariant-subset-hoisting --arith-emulate-wide-int=\"widest-int-supported=32\" --test-memref-dependence-check --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --duplicate-function-elimination --scf-parallel-loop-fusion --resolve-ranked-shaped-type-result-dims --scf-parallel-loop-fusion --mem2reg=\"region-simplify\" --test-func-erase-arg --composite-fixed-point-pass --scf-for-loop-canonicalization | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596]]]",
        "test_line": "[[[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.a6f71f6722055c48.mlir --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-result --arith-emulate-wide-int --math-extend-to-supported-types --test-math-algebraic-simplification --test-func-erase-arg --tosa-optional-decompositions --test-tensor-copy-insertion --arith-emulate-wide-int=\"widest-int-supported=32\" --symbol-dce --sroa --loop-invariant-code-motion --tosa-reduce-transposes --arith-emulate-wide-int --tosa-optional-decompositions --test-function-pass --math-uplift-to-fma --test-math-to-vcix --sccp --fold-tensor-subset-ops --arith-expand=\"include-bf16\" --fold-tensor-subset-ops --arith-expand --test-math-to-vcix | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --test-arith-emulate-wide-int=\"widest-int-supported=8\" --resolve-shaped-type-result-dims --test-memref-dependence-check --loop-invariant-subset-hoisting --normalize-memrefs --test-func-insert-result --test-arith-emulate-wide-int --duplicate-function-elimination --expand-realloc | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-unsupported-floats --duplicate-function-elimination --arith-emulate-wide-int --sroa --test-function-pass --loop-invariant-subset-hoisting --topological-sort --inline --arith-emulate-wide-int=\"widest-int-supported=32\" --topological-sort --arith-expand=\"include-bf16\" --arith-unsigned-when-equivalent --composite-fixed-point-pass --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --mem2reg --int-range-optimizations --test-func-erase-result --test-func-erase-result --arith-unsigned-when-equivalent --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-unsupported-floats --symbol-dce --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596]]]",
        "test_line": "[[[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.a6f71f6722055c48.mlir -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-wide-int --test-func-insert-arg --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-tensor-transform-patterns=\"test-drop-redundant-insert-slice-rank-expansion\" --test-tensor-copy-insertion --test-math-algebraic-simplification --test-expand-math --test-func-erase-result --composite-fixed-point-pass --inline --loop-invariant-code-motion --test-emulate-narrow-int=\"memref-load-bitwidth=32\" --math-uplift-to-fma --arith-int-range-narrowing --symbol-dce --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --arith-int-range-narrowing --cse --arith-unsigned-when-equivalent --test-math-algebraic-simplification --arith-emulate-wide-int=\"widest-int-supported=32\" --inline --control-flow-sink --cse --composite-fixed-point-pass --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --composite-fixed-point-pass --inline --arith-expand=\"include-bf16\" --fold-tensor-subset-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --duplicate-function-elimination --int-range-optimizations | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --cse --sccp --inline --duplicate-function-elimination --test-arith-emulate-wide-int=\"widest-int-supported=8\" --mem2reg --test-emulate-narrow-int=\"arith-compute-bitwidth=8\" --arith-int-range-narrowing --test-func-insert-arg --inline --arith-unsigned-when-equivalent --control-flow-sink --arith-expand --test-func-insert-result --sroa --arith-emulate-wide-int --test-func-erase-arg --test-func-set-type --symbol-dce --topological-sort --arith-int-range-narrowing | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --memref-expand --memref-expand --test-function-pass --memref-emulate-wide-int=\"widest-int-supported=32\" --test-func-erase-result --resolve-shaped-type-result-dims --test-func-erase-result --loop-invariant-subset-hoisting --loop-invariant-subset-hoisting --test-memref-bound-check --resolve-shaped-type-result-dims --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --control-flow-sink --duplicate-function-elimination --memref-emulate-wide-int --int-range-optimizations --memref-emulate-wide-int=\"widest-int-supported=32\" --arith-emulate-wide-int=\"widest-int-supported=32\" --resolve-shaped-type-result-dims --remove-dead-values --arith-expand=\"include-bf16\" --int-range-optimizations --mem2reg --cse --test-arith-emulate-wide-int --test-func-insert-result --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-func-insert-arg --duplicate-function-elimination --composite-fixed-point-pass --test-arith-emulate-wide-int=\"widest-int-supported=8\" --duplicate-function-elimination --test-memref-dependence-check --mem2reg=\"region-simplify\" --normalize-memrefs --memref-expand --inline --test-memref-dependence-check | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --composite-fixed-point-pass --canonicalize --canonicalize=\"test-convergence\" --duplicate-function-elimination --test-func-insert-arg --cse --topological-sort --symbol-dce --duplicate-function-elimination --test-function-pass --composite-fixed-point-pass --loop-invariant-subset-hoisting --symbol-dce --mem2reg=\"region-simplify\" --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596]]]",
        "test_line": "[[[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.a6f71f6722055c48.mlir -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-wide-int --test-func-insert-arg --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-tensor-transform-patterns=\"test-drop-redundant-insert-slice-rank-expansion\" --test-tensor-copy-insertion --test-math-algebraic-simplification --test-expand-math --test-func-erase-result --composite-fixed-point-pass --inline --loop-invariant-code-motion --test-emulate-narrow-int=\"memref-load-bitwidth=32\" --math-uplift-to-fma --arith-int-range-narrowing --symbol-dce --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --arith-int-range-narrowing --cse --arith-unsigned-when-equivalent --test-math-algebraic-simplification --arith-emulate-wide-int=\"widest-int-supported=32\" --inline --control-flow-sink --cse --composite-fixed-point-pass --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --composite-fixed-point-pass --inline --arith-expand=\"include-bf16\" --fold-tensor-subset-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --test-emulate-narrow-int=\"memref-load-bitwidth=8\" --loop-invariant-subset-hoisting --cse --test-func-insert-result --sccp --symbol-dce --loop-invariant-subset-hoisting --arith-expand --test-func-insert-result --arith-unsigned-when-equivalent --arith-emulate-wide-int=\"widest-int-supported=32\" --sroa --test-emulate-narrow-int=\"arith-compute-bitwidth=8\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-scf-pipelining --loop-invariant-subset-hoisting --inline --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg --inline --inline --test-func-set-type --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-func-set-type --sroa --loop-invariant-subset-hoisting --test-function-pass --arith-int-range-narrowing --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --remove-dead-values --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-func-insert-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --cse --remove-dead-values --sroa --test-func-insert-result --mem2reg --test-func-set-type --test-func-insert-result --loop-invariant-subset-hoisting --sroa --test-func-set-type --test-func-erase-result --canonicalize --loop-invariant-code-motion --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596]]]",
        "test_line": "[[[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.a6f71f6722055c48.mlir --test-function-pass --duplicate-function-elimination --composite-fixed-point-pass --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --test-func-erase-result --tosa-make-broadcastable --remove-dead-values --duplicate-function-elimination --test-tensor-transform-patterns=\"test-rewrite-extract-slice-from-collapse-shape\" --canonicalize | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --loop-invariant-subset-hoisting --arith-emulate-wide-int=\"widest-int-supported=32\" --symbol-dce --inline --tosa-validate --tosa-make-broadcastable --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --test-tensor-transform-patterns=\"test-rewrite-extract-slice-from-collapse-shape\" --tosa-reduce-transposes --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --topological-sort --symbol-dce --fold-tensor-subset-ops --topological-sort --test-func-set-type --test-func-insert-arg --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-emulate-narrow-int | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg --test-func-insert-arg --composite-fixed-point-pass --composite-fixed-point-pass --test-function-pass --test-func-set-type --test-func-insert-arg --arith-int-range-narrowing --loop-invariant-code-motion --arith-int-range-narrowing --loop-invariant-subset-hoisting --test-func-erase-result --test-emulate-narrow-int=\"memref-load-bitwidth=32\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-forall-to-for --arith-unsigned-when-equivalent --test-func-insert-arg --remove-dead-values --control-flow-sink --loop-invariant-subset-hoisting --sroa --test-scf-while-op-builder --test-function-pass --test-func-insert-arg --test-func-erase-arg --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --scf-forall-to-for --arith-expand=\"include-bf16\" --scf-for-loop-range-folding --test-scf-uplift-while-to-for --remove-dead-values --cse --arith-emulate-wide-int --test-scf-while-op-builder --test-arith-emulate-wide-int=\"widest-int-supported=8\" --arith-emulate-unsupported-floats --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --sccp --test-func-erase-arg --arith-emulate-unsupported-floats --test-func-erase-arg --test-arith-emulate-wide-int --topological-sort --arith-unsigned-when-equivalent --test-function-pass --scf-for-loop-range-folding --test-scf-uplift-while-to-for --scf-for-loop-specialization --arith-emulate-wide-int=\"widest-int-supported=32\" --scf-for-loop-range-folding --cse --test-emulate-narrow-int=\"arith-compute-bitwidth=8\" --cse --test-arith-emulate-wide-int --loop-invariant-subset-hoisting --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-int-range-narrowing=\"int-bitwidths-supported=32\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --test-func-erase-arg --canonicalize=\"test-convergence top-down=0\" --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596]]]",
        "test_line": "[[[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.a6f71f6722055c48.mlir -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg --control-flow-sink --test-tensor-copy-insertion=\"must-infer-memory-space\" --test-tensor-copy-insertion=\"must-infer-memory-space\" --fold-tensor-subset-ops --arith-unsigned-when-equivalent --test-emulate-narrow-int=\"memref-load-bitwidth=8\" --duplicate-function-elimination --test-function-pass --int-range-optimizations --fold-tensor-subset-ops --inline --cse --arith-unsigned-when-equivalent --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize=\"test-convergence\" --expand-realloc --symbol-dce --sroa --arith-emulate-wide-int=\"widest-int-supported=32\" --test-arith-emulate-wide-int=\"widest-int-supported=8\" --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-function-pass --memref-emulate-wide-int=\"widest-int-supported=32\" --arith-unsigned-when-equivalent --resolve-shaped-type-result-dims --symbol-dce --test-func-insert-result --test-emulate-narrow-int=\"arith-compute-bitwidth=8\" --test-func-insert-arg --resolve-ranked-shaped-type-result-dims --inline --test-func-set-type --fold-memref-alias-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --duplicate-function-elimination --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --inline --inline --control-flow-sink --test-function-pass --test-func-insert-result --test-func-set-type --test-func-insert-arg --test-arith-emulate-wide-int=\"widest-int-supported=8\" --int-range-optimizations --loop-invariant-subset-hoisting --topological-sort --loop-invariant-subset-hoisting --arith-emulate-wide-int=\"widest-int-supported=32\" --sroa --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --loop-invariant-subset-hoisting --loop-invariant-code-motion --test-func-erase-result --mem2reg=\"region-simplify\" --loop-invariant-subset-hoisting --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --test-func-insert-arg --canonicalize --symbol-dce --inline --test-func-erase-arg --composite-fixed-point-pass --cse --loop-invariant-code-motion --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg=\"region-simplify\" --arith-emulate-wide-int=\"widest-int-supported=32\" --canonicalize --test-arith-emulate-wide-int=\"widest-int-supported=8\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sroa --inline --sccp --test-function-pass --canonicalize --test-func-erase-arg --sccp --cse --test-func-erase-result --composite-fixed-point-pass --cse --loop-invariant-code-motion --test-func-erase-arg --test-func-insert-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596]]]",
        "test_line": "[[[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.a6f71f6722055c48.mlir -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-tensor-copy-insertion=\"must-infer-memory-space\" --sroa --loop-invariant-subset-hoisting --composite-fixed-point-pass --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-arg --test-func-insert-result --test-func-insert-arg --symbol-dce --test-func-erase-arg --int-range-optimizations --arith-expand=\"include-bf16\" --canonicalize=\"test-convergence\" --test-func-insert-arg --symbol-dce --loop-invariant-code-motion --test-func-insert-result --fold-tensor-subset-ops --symbol-dce --test-arith-emulate-wide-int --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-tensor-transform-patterns=\"test-reassociative-reshape-folding\" --arith-expand=\"include-bf16\" --test-arith-emulate-wide-int=\"widest-int-supported=8\" --symbol-dce --cse --fold-tensor-subset-ops --duplicate-function-elimination --duplicate-function-elimination --test-function-pass --test-emulate-narrow-int=\"memref-load-bitwidth=32\" --cse --test-func-insert-result --duplicate-function-elimination --mem2reg --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-wide-int=\"widest-int-supported=32\" --test-func-insert-result --test-func-erase-arg --sccp --remove-dead-values --arith-expand --canonicalize=\"test-convergence top-down=0\" --test-func-set-type --duplicate-function-elimination --test-arith-emulate-wide-int | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-arith-emulate-wide-int --test-function-pass --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg=\"region-simplify\" --arith-int-range-narrowing --test-func-erase-result --loop-invariant-code-motion --int-range-optimizations --test-func-erase-arg --int-range-optimizations --composite-fixed-point-pass --test-arith-emulate-wide-int --arith-unsigned-when-equivalent --test-function-pass --arith-emulate-unsupported-floats --sccp --arith-unsigned-when-equivalent --duplicate-function-elimination --test-func-set-type --arith-int-range-narrowing --symbol-dce --canonicalize=\"test-convergence top-down=0\" --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse --test-function-pass --test-func-erase-result --duplicate-function-elimination --inline --cse --cse --sroa --test-function-pass --loop-invariant-code-motion --test-func-set-type --symbol-dce --test-function-pass --inline --composite-fixed-point-pass --test-func-insert-arg --topological-sort --duplicate-function-elimination --test-func-erase-result --remove-dead-values | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596]]]",
        "test_line": "[[[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.a6f71f6722055c48.mlir -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-wide-int --test-func-insert-arg --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-tensor-transform-patterns=\"test-drop-redundant-insert-slice-rank-expansion\" --test-tensor-copy-insertion --test-math-algebraic-simplification --test-expand-math --test-func-erase-result --composite-fixed-point-pass --inline --loop-invariant-code-motion --test-emulate-narrow-int=\"memref-load-bitwidth=32\" --math-uplift-to-fma --arith-int-range-narrowing --symbol-dce --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --arith-int-range-narrowing --cse --arith-unsigned-when-equivalent --test-math-algebraic-simplification --arith-emulate-wide-int=\"widest-int-supported=32\" --inline --control-flow-sink --cse --composite-fixed-point-pass --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --composite-fixed-point-pass --inline --arith-expand=\"include-bf16\" --fold-tensor-subset-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize=\"test-convergence\" --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --arith-int-range-narrowing --arith-expand --resolve-shaped-type-result-dims --test-func-insert-arg --test-memref-dependence-check | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg=\"region-simplify\" --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-function-pass --sroa --arith-emulate-wide-int --test-func-set-type --control-flow-sink --loop-invariant-code-motion --test-func-erase-arg --test-func-insert-result --inline --test-func-insert-result --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --arith-expand=\"include-bf16\" --loop-invariant-subset-hoisting --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-emulate-narrow-int=\"memref-load-bitwidth=8\" --inline --topological-sort --scf-forall-to-parallel --test-func-erase-result --control-flow-sink --scf-forall-to-for --loop-invariant-subset-hoisting --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --sccp --scf-forall-to-parallel --test-scf-pipelining=\"no-epilogue-peeling\" --scf-forall-to-parallel --loop-invariant-code-motion --scf-for-loop-range-folding | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-func-set-type --sroa --topological-sort --loop-invariant-code-motion --loop-invariant-code-motion --topological-sort --remove-dead-values --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --test-func-erase-arg --composite-fixed-point-pass --arith-expand --sroa --arith-unsigned-when-equivalent --inline --inline --loop-invariant-subset-hoisting --sroa --int-range-optimizations --loop-invariant-subset-hoisting --topological-sort --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --remove-dead-values --test-func-set-type --test-func-insert-result --loop-invariant-subset-hoisting --duplicate-function-elimination --mem2reg=\"region-simplify\" --test-arith-emulate-wide-int=\"widest-int-supported=8\" --arith-emulate-wide-int | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596]]]",
        "test_line": "[[[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.a6f71f6722055c48.mlir --test-function-pass --duplicate-function-elimination --composite-fixed-point-pass --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --test-func-erase-result --tosa-make-broadcastable --remove-dead-values --duplicate-function-elimination --test-tensor-transform-patterns=\"test-rewrite-extract-slice-from-collapse-shape\" --canonicalize | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --loop-invariant-subset-hoisting --arith-emulate-wide-int=\"widest-int-supported=32\" --symbol-dce --inline --tosa-validate --tosa-make-broadcastable --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --test-tensor-transform-patterns=\"test-rewrite-extract-slice-from-collapse-shape\" --tosa-reduce-transposes --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --topological-sort --symbol-dce --fold-tensor-subset-ops --topological-sort --test-func-set-type --test-func-insert-arg --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --loop-invariant-subset-hoisting --symbol-dce --cse --topological-sort --duplicate-function-elimination --test-func-erase-arg --canonicalize=\"test-convergence\" --sccp --test-tensor-transform-patterns=\"test-rewrite-extract-slice-from-collapse-shape\" --inline --composite-fixed-point-pass --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-arg --test-scf-uplift-while-to-for --scf-parallel-loop-specialization --mem2reg=\"region-simplify\" --symbol-dce --loop-invariant-subset-hoisting --arith-emulate-wide-int --arith-int-range-narrowing --test-scf-for-utils=\"test-replace-with-new-yields\" --remove-dead-values --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --inline --scf-parallel-loop-tiling=\"parallel-loop-tile-sizes=1,4 no-min-max-bounds=true\" --test-scf-uplift-while-to-for --remove-dead-values | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-result --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --remove-dead-values --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --sroa --test-func-insert-arg --composite-fixed-point-pass --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596]]]",
        "test_line": "[[[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.a6f71f6722055c48.mlir -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-tensor-copy-insertion=\"must-infer-memory-space\" --sroa --loop-invariant-subset-hoisting --composite-fixed-point-pass --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --arith-emulate-wide-int --arith-emulate-unsupported-floats --inline --test-func-insert-arg --int-range-optimizations --arith-unsigned-when-equivalent --cse --test-function-pass --test-tensor-transform-patterns=\"test-fold-constant-extract-slice\" --inline --test-func-set-type --arith-unsigned-when-equivalent --loop-invariant-subset-hoisting --duplicate-function-elimination --topological-sort --symbol-dce --topological-sort --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg=\"region-simplify\" --cse --test-func-set-type --test-func-insert-arg --test-function-pass --composite-fixed-point-pass --duplicate-function-elimination --mem2reg=\"region-simplify\" --sroa --canonicalize=\"test-convergence\" --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --topological-sort --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --fold-memref-alias-ops --memref-emulate-wide-int=\"widest-int-supported=32\" --arith-int-range-narrowing --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --test-func-erase-arg --loop-invariant-code-motion --topological-sort --remove-dead-values --duplicate-function-elimination --duplicate-function-elimination --remove-dead-values --canonicalize --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596]]]",
        "test_line": "[[[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.a6f71f6722055c48.mlir --remove-dead-values --tosa-reduce-transposes --test-func-erase-arg --tosa-reduce-transposes --composite-fixed-point-pass --tosa-layerwise-constant-fold --test-func-insert-result --test-tensor-copy-insertion --test-func-insert-arg --mem2reg --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sroa --tosa-test-quant-utils --composite-fixed-point-pass --int-range-optimizations --tosa-infer-shapes --arith-unsigned-when-equivalent --test-func-insert-result --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --sccp --tosa-reduce-transposes --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --cse --inline --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-tensor-transform-patterns=\"test-fold-constant-extract-slice\" --int-range-optimizations --test-tensor-transform-patterns=\"test-rewrite-extract-slice-from-collapse-shape\" --test-func-set-type --test-func-insert-result --test-func-insert-result --fold-tensor-subset-ops --remove-dead-values --sroa --arith-expand=\"include-bf16\" --remove-dead-values --tosa-reduce-transposes --symbol-dce --sroa --canonicalize=\"test-convergence\" --canonicalize=\"test-convergence\" --sccp --test-func-erase-result --fold-tensor-subset-ops --test-func-set-type --test-func-erase-result --sroa --fold-tensor-subset-ops --remove-dead-values | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-arg --arith-emulate-unsupported-floats --test-arith-emulate-wide-int=\"widest-int-supported=8\" --canonicalize --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --expand-realloc=\"emit-deallocs\" --scf-for-loop-range-folding --test-func-insert-result --arith-emulate-wide-int | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-arg --int-range-optimizations --arith-expand=\"include-bf16\" --loop-invariant-subset-hoisting --duplicate-function-elimination --cse --int-range-optimizations --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-func-erase-arg --int-range-optimizations --test-func-erase-result --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --canonicalize --symbol-dce --sccp --canonicalize=\"test-convergence\" --inline --composite-fixed-point-pass --int-range-optimizations --arith-emulate-unsupported-floats --symbol-dce --test-arith-emulate-wide-int | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --test-func-insert-arg --test-func-erase-result --mem2reg --symbol-dce --test-func-erase-result --topological-sort --cse --composite-fixed-point-pass --test-func-erase-result --topological-sort --test-func-erase-result --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596]]]",
        "test_line": "[[[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.a6f71f6722055c48.mlir -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-wide-int --test-func-insert-arg --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-tensor-transform-patterns=\"test-drop-redundant-insert-slice-rank-expansion\" --test-tensor-copy-insertion --test-math-algebraic-simplification --test-expand-math --test-func-erase-result --composite-fixed-point-pass --inline --loop-invariant-code-motion --test-emulate-narrow-int=\"memref-load-bitwidth=32\" --math-uplift-to-fma --arith-int-range-narrowing --symbol-dce --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --arith-int-range-narrowing --cse --arith-unsigned-when-equivalent --test-math-algebraic-simplification --arith-emulate-wide-int=\"widest-int-supported=32\" --inline --control-flow-sink --cse --composite-fixed-point-pass --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --composite-fixed-point-pass --inline --arith-expand=\"include-bf16\" --fold-tensor-subset-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --inline --canonicalize --duplicate-function-elimination --loop-invariant-subset-hoisting --loop-invariant-code-motion --test-func-insert-result --inline --loop-invariant-subset-hoisting --sroa --symbol-dce --loop-invariant-code-motion --loop-invariant-code-motion --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --cse --topological-sort --remove-dead-values --test-function-pass --sroa --inline --control-flow-sink --sroa --inline --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-arith-emulate-wide-int=\"widest-int-supported=8\" --scf-for-to-while --scf-parallel-loop-fusion --symbol-dce --test-func-insert-arg --cse --test-scf-uplift-while-to-for --topological-sort --scf-forall-to-parallel --scf-for-loop-canonicalization --scf-for-loop-specialization --inline --test-scf-uplift-while-to-for | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --canonicalize=\"test-convergence top-down=0\" --inline --int-range-optimizations --duplicate-function-elimination --inline --test-func-insert-result --arith-expand=\"include-bf16\" --test-function-pass --int-range-optimizations --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-result --test-function-pass --loop-invariant-subset-hoisting --test-func-insert-arg --topological-sort --topological-sort --control-flow-sink --test-function-pass --loop-invariant-code-motion --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596]]]",
        "test_line": "[[[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.a6f71f6722055c48.mlir -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-tensor-copy-insertion=\"must-infer-memory-space\" --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize=\"test-convergence\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --test-func-set-type --canonicalize=\"test-convergence\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize=\"test-convergence\" --loop-invariant-code-motion --test-func-erase-arg --mem2reg=\"region-simplify\" --canonicalize=\"test-convergence top-down=0\" --remove-dead-values --cse --canonicalize=\"test-convergence top-down=0\" --loop-invariant-code-motion --topological-sort --test-func-erase-result --duplicate-function-elimination --canonicalize=\"test-convergence top-down=0\" --loop-invariant-code-motion --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-for-loop-specialization --test-scf-if-utils --arith-emulate-wide-int=\"widest-int-supported=32\" --scf-parallel-loop-fusion --test-function-pass --memref-emulate-wide-int=\"widest-int-supported=32\" --test-func-insert-result --test-scf-for-utils --expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-expand --test-func-set-type --int-range-optimizations --control-flow-sink --test-func-erase-arg --arith-unsigned-when-equivalent --loop-invariant-subset-hoisting --test-func-set-type --arith-unsigned-when-equivalent | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --test-func-set-type --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --test-func-insert-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596]]]",
        "test_line": "[[[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.a6f71f6722055c48.mlir -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-arith-emulate-wide-int --duplicate-function-elimination --symbol-dce --arith-emulate-wide-int --test-tensor-transform-patterns=\"test-rewrite-extract-slice-from-collapse-shape\" --test-math-to-vcix --canonicalize --test-tensor-transform-patterns=\"test-fold-consecutive-insert-extract-slice\" --test-arith-emulate-wide-int --arith-emulate-wide-int --test-tensor-copy-insertion --math-uplift-to-fma --topological-sort --mem2reg=\"region-simplify\" --symbol-dce --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-emulate-narrow-int=\"arith-compute-bitwidth=8\" --int-range-optimizations --test-math-algebraic-simplification --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --topological-sort --cse --mem2reg=\"region-simplify\" --mem2reg=\"region-simplify\" --test-function-pass --test-func-set-type --test-func-erase-result --test-func-insert-arg --loop-invariant-subset-hoisting --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --arith-int-range-narrowing --int-range-optimizations --memref-emulate-wide-int --test-func-erase-result --loop-invariant-code-motion --test-func-erase-arg --arith-emulate-wide-int=\"widest-int-supported=32\" --test-memref-dependence-check --canonicalize --test-func-erase-result --arith-emulate-unsupported-floats --test-memref-dependence-check --canonicalize --test-memref-dependence-check --expand-strided-metadata --loop-invariant-code-motion --duplicate-function-elimination --arith-unsigned-when-equivalent | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --test-func-erase-arg --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --remove-dead-values --test-function-pass --test-func-insert-arg --test-func-insert-result --arith-emulate-wide-int=\"widest-int-supported=32\" --mem2reg --inline --sroa --int-range-optimizations --test-func-set-type --inline --arith-expand --arith-int-range-narrowing --test-function-pass --loop-invariant-code-motion --test-func-set-type --topological-sort --arith-unsigned-when-equivalent --arith-unsigned-when-equivalent --test-func-erase-arg --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --inline --int-range-optimizations --int-range-optimizations | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --symbol-dce --control-flow-sink --arith-expand --sroa --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --topological-sort --arith-emulate-wide-int --duplicate-function-elimination --symbol-dce --arith-unsigned-when-equivalent --symbol-dce --topological-sort --arith-expand=\"include-bf16\" --int-range-optimizations --loop-invariant-code-motion --duplicate-function-elimination --topological-sort --test-func-insert-result --loop-invariant-subset-hoisting --arith-emulate-unsupported-floats --remove-dead-values --mem2reg --composite-fixed-point-pass --arith-int-range-narrowing --arith-unsigned-when-equivalent --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg --control-flow-sink --remove-dead-values | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596]]]",
        "test_line": "[[[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.a6f71f6722055c48.mlir -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-wide-int --test-func-insert-arg --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-tensor-transform-patterns=\"test-drop-redundant-insert-slice-rank-expansion\" --test-tensor-copy-insertion --test-math-algebraic-simplification --test-expand-math --test-func-erase-result --composite-fixed-point-pass --inline --loop-invariant-code-motion --test-emulate-narrow-int=\"memref-load-bitwidth=32\" --math-uplift-to-fma --arith-int-range-narrowing --symbol-dce --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --arith-int-range-narrowing --cse --arith-unsigned-when-equivalent --test-math-algebraic-simplification --arith-emulate-wide-int=\"widest-int-supported=32\" --inline --control-flow-sink --cse --composite-fixed-point-pass --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --composite-fixed-point-pass --inline --arith-expand=\"include-bf16\" --fold-tensor-subset-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --resolve-shaped-type-result-dims --loop-invariant-code-motion --topological-sort --test-emulate-narrow-int --test-func-insert-arg --sroa --mem2reg --normalize-memrefs --test-func-insert-arg --control-flow-sink --symbol-dce --test-memref-bound-check --test-func-erase-result --arith-expand --test-func-set-type --expand-realloc=\"emit-deallocs\" --test-func-erase-result --topological-sort --composite-fixed-point-pass --normalize-memrefs --control-flow-sink --test-emulate-narrow-int=\"memref-load-bitwidth=8\" --expand-strided-metadata --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --duplicate-function-elimination --duplicate-function-elimination --arith-expand --memref-expand | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sroa --loop-invariant-code-motion --test-func-erase-result --control-flow-sink --composite-fixed-point-pass --loop-invariant-subset-hoisting --cse --symbol-dce --topological-sort --test-func-insert-result --test-func-erase-result --control-flow-sink --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --test-func-erase-arg --test-func-insert-result --remove-dead-values --topological-sort --duplicate-function-elimination --cse --duplicate-function-elimination --test-func-insert-arg --duplicate-function-elimination --control-flow-sink --sroa --symbol-dce --control-flow-sink --test-func-insert-result --loop-invariant-subset-hoisting --sccp --test-func-erase-result --canonicalize | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse --test-func-erase-arg --loop-invariant-subset-hoisting --cse --remove-dead-values --sccp --loop-invariant-subset-hoisting --test-func-insert-result --duplicate-function-elimination --test-func-insert-result --loop-invariant-subset-hoisting --test-func-erase-arg --test-func-insert-arg --remove-dead-values --cse --sccp --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --canonicalize=\"test-convergence\" --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596]]]",
        "test_line": "[[[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.a6f71f6722055c48.mlir --remove-dead-values --tosa-reduce-transposes --test-func-erase-arg --tosa-reduce-transposes --composite-fixed-point-pass --tosa-layerwise-constant-fold --test-func-insert-result --test-tensor-copy-insertion --test-func-insert-arg --mem2reg --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-result --loop-invariant-code-motion --int-range-optimizations --mem2reg=\"region-simplify\" --topological-sort --fold-tensor-subset-ops --sroa --inline --tosa-reduce-transposes --fold-tensor-subset-ops --test-emulate-narrow-int=\"arith-compute-bitwidth=8\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-expand --int-range-optimizations --test-arith-emulate-wide-int --test-func-erase-arg --test-emulate-narrow-int=\"arith-compute-bitwidth=8\" --topological-sort --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --test-func-erase-arg --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --test-tensor-transform-patterns=\"test-rewrite-extract-slice-from-collapse-shape\" --test-func-erase-result --inline --int-range-optimizations --sroa --test-function-pass --canonicalize=\"test-convergence\" --int-range-optimizations --control-flow-sink --test-func-erase-arg --test-arith-emulate-wide-int | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --symbol-dce --test-tensor-transform-patterns=\"test-reassociative-reshape-folding\" --symbol-dce --test-arith-emulate-wide-int=\"widest-int-supported=8\" --symbol-dce --duplicate-function-elimination --arith-emulate-wide-int=\"widest-int-supported=32\" --canonicalize=\"test-convergence\" --test-emulate-narrow-int=\"arith-compute-bitwidth=8\" --arith-expand --test-func-set-type --topological-sort --test-emulate-narrow-int=\"memref-load-bitwidth=32\" --test-func-erase-result --test-tensor-transform-patterns=\"test-fold-constant-extract-slice\" --loop-invariant-subset-hoisting --test-func-erase-result --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --loop-invariant-subset-hoisting --test-function-pass --test-func-insert-result --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-tensor-copy-insertion=\"must-infer-memory-space\" --test-func-set-type --test-function-pass --canonicalize=\"test-convergence top-down=0\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --sroa --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sroa --cse --composite-fixed-point-pass --test-function-pass --test-func-set-type --canonicalize=\"test-convergence\" --topological-sort --symbol-dce --loop-invariant-code-motion --test-func-insert-result --test-func-insert-arg --sroa --mem2reg --duplicate-function-elimination --test-func-erase-result --test-func-erase-result --duplicate-function-elimination --symbol-dce --cse --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-unsigned-when-equivalent --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --test-function-pass --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --arith-emulate-wide-int --composite-fixed-point-pass --cse --arith-emulate-wide-int=\"widest-int-supported=32\" --test-func-erase-arg --canonicalize --arith-expand --test-func-insert-result --arith-emulate-wide-int --arith-int-range-narrowing --remove-dead-values --inline --symbol-dce --test-arith-emulate-wide-int=\"widest-int-supported=8\" --sccp --cse --loop-invariant-subset-hoisting --remove-dead-values --test-func-erase-arg --control-flow-sink --test-arith-emulate-wide-int=\"widest-int-supported=8\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --test-func-set-type --test-func-insert-result --test-function-pass --symbol-dce --sccp --sccp --test-func-erase-result --sccp --sroa --loop-invariant-code-motion --mem2reg=\"region-simplify\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596]]]",
        "test_line": "[[[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.a6f71f6722055c48.mlir -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-tensor-copy-insertion=\"must-infer-memory-space\" --sroa --loop-invariant-subset-hoisting --composite-fixed-point-pass --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-wide-int=\"widest-int-supported=32\" --loop-invariant-code-motion --symbol-dce --test-tensor-copy-insertion --mem2reg --arith-expand=\"include-bf16\" --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg --symbol-dce --mem2reg --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --sccp --duplicate-function-elimination --test-func-erase-result --test-func-insert-result --fold-tensor-subset-ops --test-func-insert-result --test-emulate-narrow-int=\"memref-load-bitwidth=8\" --mem2reg=\"region-simplify\" --int-range-optimizations --test-emulate-narrow-int=\"memref-load-bitwidth=32\" --arith-unsigned-when-equivalent --cse --duplicate-function-elimination --loop-invariant-subset-hoisting --composite-fixed-point-pass --duplicate-function-elimination --test-arith-emulate-wide-int=\"widest-int-supported=8\" --symbol-dce --loop-invariant-subset-hoisting --test-func-set-type --test-func-insert-arg --sroa --control-flow-sink --arith-int-range-narrowing --test-func-erase-result --int-range-optimizations --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --test-func-insert-arg --test-function-pass --control-flow-sink --canonicalize=\"test-convergence top-down=0\" --test-func-insert-result --sccp --test-func-insert-result --sccp --mem2reg --cse --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --resolve-ranked-shaped-type-result-dims --composite-fixed-point-pass --expand-strided-metadata --inline --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sroa --int-range-optimizations --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --inline --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize=\"test-convergence\" --control-flow-sink --test-function-pass --test-func-erase-result --test-function-pass --topological-sort --test-func-set-type --duplicate-function-elimination --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596]]]",
        "test_line": "[[[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.a6f71f6722055c48.mlir --test-function-pass --duplicate-function-elimination --composite-fixed-point-pass --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --test-func-erase-result --tosa-make-broadcastable --remove-dead-values --duplicate-function-elimination --test-tensor-transform-patterns=\"test-rewrite-extract-slice-from-collapse-shape\" --canonicalize | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --loop-invariant-subset-hoisting --arith-emulate-wide-int=\"widest-int-supported=32\" --symbol-dce --inline --tosa-validate --tosa-make-broadcastable --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --test-tensor-transform-patterns=\"test-rewrite-extract-slice-from-collapse-shape\" --tosa-reduce-transposes --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --topological-sort --symbol-dce --fold-tensor-subset-ops --topological-sort --test-func-set-type --test-func-insert-arg --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize=\"test-convergence\" --topological-sort --sccp --fold-tensor-subset-ops --mem2reg --topological-sort --sccp --int-range-optimizations --int-range-optimizations --mem2reg=\"region-simplify\" --test-function-pass --cse --arith-emulate-wide-int=\"widest-int-supported=32\" --test-func-insert-arg --inline --test-tensor-copy-insertion --composite-fixed-point-pass --test-function-pass --sccp --test-tensor-transform-patterns=\"test-drop-redundant-insert-slice-rank-expansion\" --duplicate-function-elimination --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-tensor-transform-patterns=\"test-rewrite-extract-slice-from-collapse-shape\" --mem2reg=\"region-simplify\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --resolve-ranked-shaped-type-result-dims --topological-sort --test-memref-dependence-check --mem2reg=\"region-simplify\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --remove-dead-values --duplicate-function-elimination --loop-invariant-code-motion --loop-invariant-code-motion --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --test-func-set-type --test-func-erase-result --normalize-memrefs --int-range-optimizations --canonicalize --test-func-erase-arg --test-func-insert-result --test-func-insert-result --memref-expand --expand-realloc=\"emit-deallocs\" --test-scf-for-utils=\"test-replace-with-new-yields\" --memref-emulate-wide-int=\"widest-int-supported=32\" --memref-emulate-wide-int=\"widest-int-supported=32\" --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --memref-expand --test-func-insert-result --expand-realloc=\"emit-deallocs\" --resolve-shaped-type-result-dims --arith-expand=\"include-bf16\" --test-func-erase-result --loop-invariant-subset-hoisting --normalize-memrefs --expand-strided-metadata --resolve-ranked-shaped-type-result-dims --sccp --arith-expand --test-scf-uplift-while-to-for --canonicalize=\"test-convergence top-down=0\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-wide-int --test-memref-dependence-check --mem2reg=\"region-simplify\" --test-memref-bound-check --remove-dead-values --normalize-memrefs --expand-realloc --canonicalize --arith-unsigned-when-equivalent --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --sroa --arith-expand=\"include-bf16\" --topological-sort --composite-fixed-point-pass --duplicate-function-elimination --symbol-dce --loop-invariant-code-motion --expand-strided-metadata --test-arith-emulate-wide-int=\"widest-int-supported=8\" --composite-fixed-point-pass --sroa --mem2reg=\"region-simplify\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --test-func-insert-arg --control-flow-sink --remove-dead-values --symbol-dce --sroa --test-func-erase-arg --test-func-erase-result --sccp --test-function-pass --duplicate-function-elimination --canonicalize=\"test-convergence\" --test-func-set-type --test-func-erase-result --test-func-insert-arg --sroa --canonicalize --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596]]]",
        "test_line": "[[[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.a6f71f6722055c48.mlir -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-wide-int --test-func-insert-arg --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-tensor-transform-patterns=\"test-drop-redundant-insert-slice-rank-expansion\" --test-tensor-copy-insertion --test-math-algebraic-simplification --test-expand-math --test-func-erase-result --composite-fixed-point-pass --inline --loop-invariant-code-motion --test-emulate-narrow-int=\"memref-load-bitwidth=32\" --math-uplift-to-fma --arith-int-range-narrowing --symbol-dce --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --arith-int-range-narrowing --cse --arith-unsigned-when-equivalent --test-math-algebraic-simplification --arith-emulate-wide-int=\"widest-int-supported=32\" --inline --control-flow-sink --cse --composite-fixed-point-pass --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --composite-fixed-point-pass --inline --arith-expand=\"include-bf16\" --fold-tensor-subset-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --memref-emulate-wide-int=\"widest-int-supported=32\" --sroa --resolve-ranked-shaped-type-result-dims --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-emulate-narrow-int=\"arith-compute-bitwidth=8\" --sroa --arith-unsigned-when-equivalent --test-function-pass --cse --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --canonicalize=\"test-convergence\" --control-flow-sink --canonicalize=\"test-convergence top-down=0\" --loop-invariant-code-motion --arith-unsigned-when-equivalent --control-flow-sink --test-func-insert-arg --test-func-erase-arg --arith-emulate-unsupported-floats --arith-emulate-wide-int=\"widest-int-supported=32\" --sccp --control-flow-sink --test-func-erase-result --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --sroa --test-func-insert-result --topological-sort --canonicalize --test-func-insert-arg --test-func-erase-result --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse --expand-realloc=\"emit-deallocs\" --control-flow-sink --arith-expand --expand-strided-metadata --normalize-memrefs --arith-expand=\"include-bf16\" --test-func-insert-arg --symbol-dce --test-memref-bound-check --arith-int-range-narrowing --test-memref-dependence-check --memref-expand --resolve-shaped-type-result-dims --composite-fixed-point-pass --memref-expand --arith-int-range-narrowing --control-flow-sink --mem2reg --test-func-insert-arg --test-func-set-type --test-function-pass --expand-realloc --resolve-ranked-shaped-type-result-dims --duplicate-function-elimination --sroa --symbol-dce --test-arith-emulate-wide-int --test-func-insert-arg --loop-invariant-code-motion --symbol-dce --arith-unsigned-when-equivalent --resolve-ranked-shaped-type-result-dims --test-func-insert-result --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596]]]",
        "test_line": "[[[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.a6f71f6722055c48.mlir --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --inline --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --composite-fixed-point-pass --loop-invariant-code-motion --tosa-test-quant-utils --test-func-erase-arg --sccp --topological-sort --test-function-pass --test-func-insert-result --canonicalize=\"test-convergence\" --tosa-optional-decompositions --test-tensor-copy-insertion --tosa-validate --composite-fixed-point-pass --tosa-layerwise-constant-fold --canonicalize --sroa --test-tensor-copy-insertion --composite-fixed-point-pass --tosa-optional-decompositions --loop-invariant-subset-hoisting --inline --canonicalize=\"test-convergence top-down=0\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-wide-int=\"widest-int-supported=32\" --fold-tensor-subset-ops --duplicate-function-elimination --tosa-make-broadcastable --arith-emulate-wide-int --cse --int-range-optimizations | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --sccp --test-func-erase-result --cse --int-range-optimizations --cse --sroa --int-range-optimizations --test-emulate-narrow-int=\"memref-load-bitwidth=8\" --mem2reg=\"region-simplify\" --canonicalize --topological-sort --fold-tensor-subset-ops --test-func-erase-arg --control-flow-sink --test-arith-emulate-wide-int --test-func-insert-result --composite-fixed-point-pass --composite-fixed-point-pass --sccp --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-func-erase-arg --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --mem2reg --symbol-dce --symbol-dce --sccp --loop-invariant-subset-hoisting --loop-invariant-code-motion --loop-invariant-subset-hoisting --loop-invariant-code-motion --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --scf-for-to-while | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-result --arith-emulate-wide-int --arith-unsigned-when-equivalent --expand-realloc=\"emit-deallocs\" --test-memref-bound-check --arith-emulate-wide-int --mem2reg=\"region-simplify\" --arith-expand --arith-expand --arith-unsigned-when-equivalent --topological-sort --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-arith-emulate-wide-int=\"widest-int-supported=8\" --expand-realloc --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse --control-flow-sink --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596]]]",
        "test_line": "[[[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.a6f71f6722055c48.mlir --remove-dead-values --tosa-reduce-transposes --test-func-erase-arg --tosa-reduce-transposes --composite-fixed-point-pass --tosa-layerwise-constant-fold --test-func-insert-result --test-tensor-copy-insertion --test-func-insert-arg --mem2reg --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-make-broadcastable --tosa-infer-shapes --test-func-erase-result --fold-tensor-subset-ops --inline --tosa-reduce-transposes --tosa-make-broadcastable --tosa-reduce-transposes --arith-emulate-unsupported-floats --test-func-erase-result --test-emulate-narrow-int=\"memref-load-bitwidth=32\" --test-func-insert-result --duplicate-function-elimination --test-func-set-type --tosa-layerwise-constant-fold | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --arith-unsigned-when-equivalent --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize=\"test-convergence top-down=0\" --loop-invariant-subset-hoisting --test-func-insert-result --control-flow-sink --control-flow-sink --loop-invariant-subset-hoisting --control-flow-sink --sccp --composite-fixed-point-pass --loop-invariant-subset-hoisting --remove-dead-values --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --fold-memref-alias-ops --inline --scf-for-to-while --scf-forall-to-for --mem2reg --resolve-ranked-shaped-type-result-dims --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --normalize-memrefs --sccp --test-func-insert-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-expand=\"include-bf16\" --canonicalize --duplicate-function-elimination --test-function-pass --inline --arith-unsigned-when-equivalent --sroa --test-func-set-type --test-arith-emulate-wide-int=\"widest-int-supported=8\" --cse --control-flow-sink --test-arith-emulate-wide-int --control-flow-sink --test-function-pass --arith-unsigned-when-equivalent --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --test-func-erase-arg --canonicalize=\"test-convergence\" --test-arith-emulate-wide-int --canonicalize --test-func-erase-arg --arith-unsigned-when-equivalent --test-func-insert-result --arith-unsigned-when-equivalent | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596]]]",
        "test_line": "[[[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.a6f71f6722055c48.mlir --remove-dead-values --tosa-reduce-transposes --test-func-erase-arg --tosa-reduce-transposes --composite-fixed-point-pass --tosa-layerwise-constant-fold --test-func-insert-result --test-tensor-copy-insertion --test-func-insert-arg --mem2reg --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-func-erase-result --test-function-pass --canonicalize=\"test-convergence\" --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-arith-emulate-wide-int --tosa-test-quant-utils --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --tosa-make-broadcastable --tosa-layerwise-constant-fold | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --symbol-dce --arith-int-range-narrowing --duplicate-function-elimination --int-range-optimizations --symbol-dce --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --test-function-pass --test-func-insert-result --loop-invariant-code-motion --test-func-insert-result --sccp --test-func-insert-result --test-func-set-type --test-func-erase-result --control-flow-sink --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-scf-pipelining=\"no-epilogue-peeling\" --test-func-set-type --scf-forall-to-for --cse --scf-forall-to-parallel --scf-forall-to-for --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-result --loop-invariant-code-motion --cse --test-func-insert-result --mem2reg=\"region-simplify\" --test-func-insert-arg --canonicalize=\"test-convergence top-down=0\" --test-function-pass --mem2reg=\"region-simplify\" --test-func-erase-arg --composite-fixed-point-pass --symbol-dce --test-func-erase-result --remove-dead-values --cse --sccp --control-flow-sink --loop-invariant-subset-hoisting --remove-dead-values | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596]]]",
        "test_line": "[[[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.a6f71f6722055c48.mlir -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-unsupported-floats | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --test-func-erase-result --int-range-optimizations --topological-sort --test-tensor-transform-patterns --int-range-optimizations --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --duplicate-function-elimination --loop-invariant-code-motion --loop-invariant-subset-hoisting --loop-invariant-code-motion --mem2reg=\"region-simplify\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --memref-emulate-wide-int=\"widest-int-supported=32\" --loop-invariant-subset-hoisting --test-memref-bound-check --mem2reg --arith-unsigned-when-equivalent --test-func-erase-arg --expand-strided-metadata --arith-emulate-unsupported-floats --expand-strided-metadata --test-func-set-type --inline --test-func-erase-result --test-func-erase-arg --arith-int-range-narrowing --inline --remove-dead-values | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-int-range-narrowing --arith-expand=\"include-bf16\" --arith-emulate-wide-int=\"widest-int-supported=32\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --symbol-dce --remove-dead-values --cse --loop-invariant-code-motion --sroa --symbol-dce --canonicalize=\"test-convergence\" --sccp --test-func-erase-arg --composite-fixed-point-pass --composite-fixed-point-pass --sroa --cse --loop-invariant-subset-hoisting --test-function-pass --test-func-erase-arg --test-func-erase-arg --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596]]]",
        "test_line": "[[[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.a6f71f6722055c48.mlir -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-wide-int --test-func-insert-arg --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-tensor-transform-patterns=\"test-drop-redundant-insert-slice-rank-expansion\" --test-tensor-copy-insertion --test-math-algebraic-simplification --test-expand-math --test-func-erase-result --composite-fixed-point-pass --inline --loop-invariant-code-motion --test-emulate-narrow-int=\"memref-load-bitwidth=32\" --math-uplift-to-fma --arith-int-range-narrowing --symbol-dce --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --arith-int-range-narrowing --cse --arith-unsigned-when-equivalent --test-math-algebraic-simplification --arith-emulate-wide-int=\"widest-int-supported=32\" --inline --control-flow-sink --cse --composite-fixed-point-pass --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --composite-fixed-point-pass --inline --arith-expand=\"include-bf16\" --fold-tensor-subset-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --arith-expand=\"include-bf16\" --arith-int-range-narrowing --int-range-optimizations | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --canonicalize=\"test-convergence\" --test-func-erase-result --mem2reg --inline --test-func-erase-result --cse --symbol-dce --duplicate-function-elimination --sccp --composite-fixed-point-pass --loop-invariant-code-motion --remove-dead-values --control-flow-sink --remove-dead-values --composite-fixed-point-pass --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --fold-memref-alias-ops --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-int-range-narrowing --sroa --resolve-ranked-shaped-type-result-dims --sroa --canonicalize=\"test-convergence\" --loop-invariant-code-motion --test-memref-bound-check --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-function-pass --sroa --expand-strided-metadata --mem2reg=\"region-simplify\" --control-flow-sink --control-flow-sink --test-function-pass --sroa --loop-invariant-subset-hoisting --memref-emulate-wide-int | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --loop-invariant-code-motion --mem2reg --sroa --test-func-erase-result --symbol-dce --loop-invariant-code-motion --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596]]]",
        "test_line": "[[[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.a6f71f6722055c48.mlir --test-function-pass --duplicate-function-elimination --composite-fixed-point-pass --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --test-func-erase-result --tosa-make-broadcastable --remove-dead-values --duplicate-function-elimination --test-tensor-transform-patterns=\"test-rewrite-extract-slice-from-collapse-shape\" --canonicalize | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --loop-invariant-subset-hoisting --arith-emulate-wide-int=\"widest-int-supported=32\" --symbol-dce --inline --tosa-validate --tosa-make-broadcastable --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --test-tensor-transform-patterns=\"test-rewrite-extract-slice-from-collapse-shape\" --tosa-reduce-transposes --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --topological-sort --symbol-dce --fold-tensor-subset-ops --topological-sort --test-func-set-type --test-func-insert-arg --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --test-func-insert-arg --remove-dead-values --composite-fixed-point-pass --mem2reg=\"region-simplify\" --symbol-dce --test-func-insert-result --test-func-insert-result --mem2reg --composite-fixed-point-pass --test-func-erase-result --topological-sort --test-function-pass --test-function-pass --sccp --test-func-set-type --remove-dead-values --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-arg --test-func-insert-arg --sccp --test-func-erase-result --arith-expand --topological-sort --topological-sort --test-func-set-type --symbol-dce --test-arith-emulate-wide-int=\"widest-int-supported=8\" --control-flow-sink --cse --loop-invariant-code-motion --arith-unsigned-when-equivalent --test-arith-emulate-wide-int=\"widest-int-supported=8\" --arith-emulate-wide-int=\"widest-int-supported=32\" --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-func-insert-arg --remove-dead-values | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --arith-int-range-narrowing --sccp --test-func-insert-result --control-flow-sink --test-function-pass --sccp --test-function-pass --arith-unsigned-when-equivalent --test-func-erase-result --topological-sort --canonicalize=\"test-convergence top-down=0\" --loop-invariant-subset-hoisting --test-func-insert-arg --loop-invariant-code-motion --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse --symbol-dce --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596]]]",
        "test_line": "[[[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.a6f71f6722055c48.mlir --test-function-pass --duplicate-function-elimination --composite-fixed-point-pass --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --test-func-erase-result --tosa-make-broadcastable --remove-dead-values --duplicate-function-elimination --test-tensor-transform-patterns=\"test-rewrite-extract-slice-from-collapse-shape\" --canonicalize | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --loop-invariant-subset-hoisting --arith-emulate-wide-int=\"widest-int-supported=32\" --symbol-dce --inline --tosa-validate --tosa-make-broadcastable --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --test-tensor-transform-patterns=\"test-rewrite-extract-slice-from-collapse-shape\" --tosa-reduce-transposes --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --topological-sort --symbol-dce --fold-tensor-subset-ops --topological-sort --test-func-set-type --test-func-insert-arg --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --composite-fixed-point-pass --test-func-insert-arg --test-func-erase-arg --topological-sort --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --topological-sort --test-func-set-type --inline --test-func-set-type --test-func-erase-arg --test-func-erase-arg --test-func-insert-arg --topological-sort --test-func-insert-arg --mem2reg=\"region-simplify\" --topological-sort --mem2reg --symbol-dce --duplicate-function-elimination --cse --topological-sort --test-func-insert-result --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sroa --test-func-set-type --loop-invariant-subset-hoisting --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596]]]",
        "test_line": "[[[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.a6f71f6722055c48.mlir -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-math-polynomial-approximation=\"enable-avx2\" --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --cse --test-math-algebraic-simplification --test-math-polynomial-approximation=\"enable-avx2\" --loop-invariant-code-motion --arith-int-range-narrowing --int-range-optimizations --mem2reg=\"region-simplify\" --topological-sort --arith-expand=\"include-bf16\" --inline --test-arith-emulate-wide-int | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --test-func-erase-arg --topological-sort --test-func-erase-arg --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --composite-fixed-point-pass --loop-invariant-code-motion --test-func-insert-result --arith-emulate-wide-int=\"widest-int-supported=32\" --cse --test-tensor-transform-patterns=\"test-drop-redundant-insert-slice-rank-expansion\" --arith-emulate-unsupported-floats --symbol-dce --arith-emulate-wide-int --symbol-dce --test-func-erase-result --composite-fixed-point-pass --control-flow-sink --mem2reg=\"region-simplify\" --mem2reg=\"region-simplify\" --control-flow-sink --test-func-erase-result --loop-invariant-code-motion --test-func-insert-result --arith-emulate-wide-int=\"widest-int-supported=32\" --test-tensor-copy-insertion=\"must-infer-memory-space\" --test-func-insert-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize --test-function-pass --test-func-insert-arg --loop-invariant-code-motion --cse --control-flow-sink --inline --control-flow-sink --mem2reg=\"region-simplify\" --composite-fixed-point-pass --cse --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-scf-if-utils --scf-for-loop-canonicalization --arith-expand=\"include-bf16\" --sccp --normalize-memrefs --resolve-shaped-type-result-dims --topological-sort --resolve-shaped-type-result-dims --sccp --resolve-ranked-shaped-type-result-dims | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --sroa --arith-expand=\"include-bf16\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --arith-expand=\"include-bf16\" --mem2reg=\"region-simplify\" --loop-invariant-subset-hoisting --duplicate-function-elimination --symbol-dce --cse --test-function-pass --canonicalize=\"test-convergence top-down=0\" --arith-emulate-unsupported-floats --arith-unsigned-when-equivalent --test-func-insert-arg --int-range-optimizations --sroa --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --test-func-erase-arg --remove-dead-values --symbol-dce --remove-dead-values --test-func-erase-arg --mem2reg --remove-dead-values --mem2reg=\"region-simplify\" --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596]]]",
        "test_line": "[[[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.a6f71f6722055c48.mlir --remove-dead-values --tosa-reduce-transposes --test-func-erase-arg --tosa-reduce-transposes --composite-fixed-point-pass --tosa-layerwise-constant-fold --test-func-insert-result --test-tensor-copy-insertion --test-func-insert-arg --mem2reg --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-arg --test-func-erase-result --mem2reg --tosa-optional-decompositions --duplicate-function-elimination --tosa-test-quant-utils --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --cse --test-emulate-narrow-int=\"memref-load-bitwidth=32\" --test-tensor-copy-insertion=\"must-infer-memory-space\" --arith-unsigned-when-equivalent --inline --test-func-insert-arg --tosa-make-broadcastable --fold-tensor-subset-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --arith-int-range-narrowing --remove-dead-values --test-func-set-type --test-memref-dependence-check --fold-memref-alias-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-parallel-loop-fusion --duplicate-function-elimination --test-func-erase-arg --test-func-insert-arg --arith-unsigned-when-equivalent --arith-emulate-unsupported-floats --mem2reg=\"region-simplify\" --scf-for-loop-canonicalization --inline --scf-parallel-loop-specialization --scf-forall-to-for --scf-for-loop-canonicalization --test-func-insert-result --duplicate-function-elimination --loop-invariant-subset-hoisting --test-emulate-narrow-int=\"arith-compute-bitwidth=8\" --scf-parallel-loop-fusion --sccp --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --arith-expand=\"include-bf16\" --remove-dead-values --scf-parallel-loop-fusion --test-scf-uplift-while-to-for --scf-forall-to-for --symbol-dce --int-range-optimizations --scf-parallel-loop-fusion --scf-forall-to-for --arith-expand=\"include-bf16\" --cse --scf-for-to-while --scf-parallel-loop-tiling --canonicalize=\"test-convergence top-down=0\" --control-flow-sink --test-func-erase-arg --scf-forall-to-for --scf-for-loop-peeling=\"peel-front\" --test-scf-if-utils --cse --scf-for-loop-range-folding --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --loop-invariant-code-motion --sroa --test-func-erase-arg --test-func-erase-result --loop-invariant-code-motion --arith-unsigned-when-equivalent --test-func-erase-arg --inline --mem2reg --test-func-set-type --test-func-erase-arg --remove-dead-values | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize --topological-sort --test-function-pass --test-func-insert-arg --topological-sort --test-func-insert-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596]]]",
        "test_line": "[[[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.a6f71f6722055c48.mlir --test-function-pass --duplicate-function-elimination --composite-fixed-point-pass --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --test-func-erase-result --tosa-make-broadcastable --remove-dead-values --duplicate-function-elimination --test-tensor-transform-patterns=\"test-rewrite-extract-slice-from-collapse-shape\" --canonicalize | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --loop-invariant-subset-hoisting --arith-emulate-wide-int=\"widest-int-supported=32\" --symbol-dce --inline --tosa-validate --tosa-make-broadcastable --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --test-tensor-transform-patterns=\"test-rewrite-extract-slice-from-collapse-shape\" --tosa-reduce-transposes --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --topological-sort --symbol-dce --fold-tensor-subset-ops --topological-sort --test-func-set-type --test-func-insert-arg --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg=\"region-simplify\" --test-function-pass --canonicalize=\"test-convergence top-down=0\" --loop-invariant-code-motion --symbol-dce --test-func-erase-result --sroa --resolve-shaped-type-result-dims --resolve-shaped-type-result-dims --canonicalize --composite-fixed-point-pass --loop-invariant-subset-hoisting --memref-expand --test-func-insert-arg --inline --sccp --loop-invariant-subset-hoisting --sccp --cse --test-function-pass --test-func-insert-result --control-flow-sink --sccp --resolve-ranked-shaped-type-result-dims --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-int-range-narrowing --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --arith-unsigned-when-equivalent --scf-for-loop-specialization --scf-for-loop-canonicalization --scf-for-to-while --control-flow-sink --test-scf-pipelining=\"annotate\" --test-arith-emulate-wide-int --scf-for-to-while --sroa --control-flow-sink --composite-fixed-point-pass --duplicate-function-elimination --sroa --arith-emulate-wide-int=\"widest-int-supported=32\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-result --canonicalize=\"test-convergence\" --symbol-dce --test-func-erase-result --mem2reg=\"region-simplify\" --test-func-erase-result --cse --inline --control-flow-sink --symbol-dce --test-func-erase-arg --test-function-pass --cse --inline --loop-invariant-subset-hoisting --loop-invariant-subset-hoisting --test-func-erase-result --loop-invariant-code-motion --inline --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596]]]",
        "test_line": "[[[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.a6f71f6722055c48.mlir -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-wide-int --test-func-insert-arg --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-tensor-transform-patterns=\"test-drop-redundant-insert-slice-rank-expansion\" --test-tensor-copy-insertion --test-math-algebraic-simplification --test-expand-math --test-func-erase-result --composite-fixed-point-pass --inline --loop-invariant-code-motion --test-emulate-narrow-int=\"memref-load-bitwidth=32\" --math-uplift-to-fma --arith-int-range-narrowing --symbol-dce --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --arith-int-range-narrowing --cse --arith-unsigned-when-equivalent --test-math-algebraic-simplification --arith-emulate-wide-int=\"widest-int-supported=32\" --inline --control-flow-sink --cse --composite-fixed-point-pass --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --composite-fixed-point-pass --inline --arith-expand=\"include-bf16\" --fold-tensor-subset-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --int-range-optimizations --memref-emulate-wide-int --test-memref-bound-check --memref-expand --loop-invariant-subset-hoisting --sccp --test-func-erase-arg --test-func-insert-arg --symbol-dce --test-memref-bound-check --test-func-erase-result --inline --canonicalize=\"test-convergence top-down=0\" --int-range-optimizations --loop-invariant-subset-hoisting --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-forall-to-parallel --test-scf-for-utils --test-emulate-narrow-int=\"memref-load-bitwidth=32\" --test-func-insert-arg --cse --topological-sort --int-range-optimizations --test-func-set-type --topological-sort --loop-invariant-code-motion --canonicalize=\"test-convergence\" --duplicate-function-elimination --duplicate-function-elimination --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-func-set-type --scf-parallel-loop-specialization --test-scf-pipelining=\"no-epilogue-peeling\" --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --loop-invariant-subset-hoisting --loop-invariant-code-motion --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-arg --test-func-set-type --composite-fixed-point-pass --test-arith-emulate-wide-int --loop-invariant-subset-hoisting --test-func-set-type --test-func-insert-arg --topological-sort --arith-expand --test-func-erase-result --duplicate-function-elimination --symbol-dce --duplicate-function-elimination --canonicalize=\"test-convergence\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-expand=\"include-bf16\" --arith-expand=\"include-bf16\" --arith-emulate-wide-int --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sroa --cse --symbol-dce --inline --topological-sort --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596]]]",
        "test_line": "[[[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.a6f71f6722055c48.mlir -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-expand=\"include-bf16\" --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --test-func-erase-result --sccp --arith-emulate-unsupported-floats --arith-emulate-unsupported-floats --control-flow-sink --sroa --test-func-erase-result --sccp --arith-emulate-unsupported-floats --test-arith-emulate-wide-int --inline --test-func-insert-arg --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --inline --mem2reg=\"region-simplify\" --duplicate-function-elimination --test-function-pass --topological-sort --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --arith-int-range-narrowing --topological-sort --test-func-erase-result --topological-sort --test-func-insert-result --loop-invariant-subset-hoisting --test-func-erase-arg --test-emulate-narrow-int=\"memref-load-bitwidth=32\" --test-func-set-type --arith-int-range-narrowing --scf-for-loop-peeling=\"peel-front\" --resolve-ranked-shaped-type-result-dims --mem2reg=\"region-simplify\" --topological-sort --scf-forall-to-parallel --remove-dead-values --test-scf-if-utils --test-memref-bound-check --arith-expand --scf-for-to-while --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-scf-if-utils --arith-expand=\"include-bf16\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-arith-emulate-wide-int=\"widest-int-supported=8\" --scf-parallel-loop-specialization --arith-unsigned-when-equivalent --scf-for-loop-range-folding --symbol-dce --scf-parallel-loop-specialization --scf-forall-to-for --test-scf-uplift-while-to-for --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --test-func-insert-result --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-arg --loop-invariant-code-motion --test-func-set-type --loop-invariant-subset-hoisting --canonicalize=\"test-convergence top-down=0\" --duplicate-function-elimination --canonicalize | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596]]]",
        "test_line": "[[[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.a6f71f6722055c48.mlir -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-expand=\"include-bf16\" --mem2reg --test-tensor-transform-patterns=\"test-reassociative-reshape-folding\" --math-uplift-to-fma --test-math-polynomial-approximation=\"enable-avx2\" --arith-unsigned-when-equivalent --topological-sort --test-func-erase-result --canonicalize --test-expand-math --control-flow-sink --test-tensor-copy-insertion=\"must-infer-memory-space\" --test-func-set-type --loop-invariant-subset-hoisting --math-uplift-to-fma --test-emulate-narrow-int --duplicate-function-elimination --arith-unsigned-when-equivalent --test-tensor-copy-insertion --arith-unsigned-when-equivalent --sccp --test-function-pass --math-extend-to-supported-types --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --test-tensor-transform-patterns=\"test-drop-redundant-insert-slice-rank-expansion\" --topological-sort --arith-emulate-wide-int=\"widest-int-supported=32\" --arith-expand=\"include-bf16\" --test-func-erase-result --inline --canonicalize=\"test-convergence\" --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-func-insert-result --arith-unsigned-when-equivalent | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --resolve-shaped-type-result-dims --sccp --canonicalize=\"test-convergence top-down=0\" --test-memref-bound-check | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-arg --test-func-set-type --loop-invariant-subset-hoisting --test-func-set-type --test-func-insert-result --canonicalize=\"test-convergence\" --test-func-insert-arg --canonicalize=\"test-convergence\" --test-function-pass --mem2reg --canonicalize=\"test-convergence\" --test-func-set-type --test-func-insert-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --expand-realloc=\"emit-deallocs\" --duplicate-function-elimination --symbol-dce --memref-emulate-wide-int=\"widest-int-supported=32\" --int-range-optimizations --sroa --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-func-insert-result --symbol-dce --test-func-insert-result --expand-strided-metadata --arith-unsigned-when-equivalent --sroa --memref-expand | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-result --arith-emulate-wide-int --composite-fixed-point-pass --cse --arith-expand=\"include-bf16\" --loop-invariant-subset-hoisting --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --sroa --symbol-dce --remove-dead-values | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596]]]",
        "test_line": "[[[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.a6f71f6722055c48.mlir --remove-dead-values --tosa-reduce-transposes --test-func-erase-arg --tosa-reduce-transposes --composite-fixed-point-pass --tosa-layerwise-constant-fold --test-func-insert-result --test-tensor-copy-insertion --test-func-insert-arg --mem2reg --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-arith-emulate-wide-int --test-func-set-type --test-emulate-narrow-int=\"arith-compute-bitwidth=8\" --tosa-layerwise-constant-fold --test-func-erase-result --int-range-optimizations --tosa-infer-shapes --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-arg --fold-memref-alias-ops --sccp --test-func-erase-arg --cse --fold-memref-alias-ops --inline --fold-memref-alias-ops --mem2reg --expand-strided-metadata --sroa --expand-realloc --symbol-dce --sccp --cse --memref-emulate-wide-int=\"widest-int-supported=32\" --symbol-dce --test-func-erase-result --test-func-erase-arg --expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --composite-fixed-point-pass --duplicate-function-elimination --sccp --control-flow-sink --composite-fixed-point-pass --mem2reg=\"region-simplify\" --test-function-pass --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-for-loop-range-folding --scf-parallel-loop-specialization --control-flow-sink --test-func-erase-arg --test-emulate-narrow-int --canonicalize=\"test-convergence\" --expand-realloc=\"emit-deallocs\" --control-flow-sink --scf-for-loop-peeling=\"skip-partial\" --test-func-insert-arg --memref-expand --memref-emulate-wide-int=\"widest-int-supported=32\" --fold-memref-alias-ops --canonicalize=\"test-convergence\" --test-memref-bound-check --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --scf-parallel-loop-specialization --resolve-shaped-type-result-dims --loop-invariant-code-motion --test-scf-if-utils --remove-dead-values --test-memref-dependence-check --test-func-erase-result --symbol-dce --test-scf-if-utils | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --arith-expand | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --arith-expand=\"include-bf16\" --test-func-insert-result --loop-invariant-code-motion --test-arith-emulate-wide-int=\"widest-int-supported=8\" --loop-invariant-subset-hoisting --loop-invariant-code-motion --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg --remove-dead-values --test-func-set-type --test-func-set-type --test-func-erase-result --cse --inline --duplicate-function-elimination --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596]]]",
        "test_line": "[[[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.a6f71f6722055c48.mlir -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --sroa --arith-unsigned-when-equivalent --test-func-insert-result --arith-emulate-unsupported-floats --loop-invariant-code-motion --test-tensor-transform-patterns --test-func-insert-arg --canonicalize --math-extend-to-supported-types --canonicalize --math-uplift-to-fma --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-func-insert-result --test-func-insert-result --test-emulate-narrow-int --test-function-pass --sccp --sccp --test-arith-emulate-wide-int --arith-emulate-wide-int=\"widest-int-supported=32\" --test-expand-math --test-math-to-vcix --arith-expand --test-tensor-transform-patterns --test-emulate-narrow-int=\"memref-load-bitwidth=8\" --duplicate-function-elimination --math-extend-to-supported-types --test-tensor-copy-insertion=\"must-infer-memory-space\" --test-math-to-vcix --loop-invariant-subset-hoisting --test-func-insert-arg --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --mem2reg --test-arith-emulate-wide-int | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg --test-func-insert-result --memref-expand --arith-emulate-unsupported-floats --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize=\"test-convergence\" --control-flow-sink --test-function-pass --loop-invariant-code-motion --duplicate-function-elimination --cse --test-function-pass --test-func-set-type --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-memref-bound-check --loop-invariant-subset-hoisting --scf-for-loop-canonicalization --test-scf-if-utils --memref-expand --scf-forall-to-parallel --test-func-set-type --test-func-erase-result --inline --test-scf-pipelining --canonicalize=\"test-convergence\" --test-memref-bound-check --topological-sort --arith-int-range-narrowing --inline --fold-memref-alias-ops --test-func-set-type --test-scf-for-utils --test-emulate-narrow-int | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-memref-dependence-check --sroa --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --test-function-pass --sroa --int-range-optimizations --mem2reg --arith-emulate-wide-int --symbol-dce --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --control-flow-sink --loop-invariant-code-motion --remove-dead-values --arith-emulate-wide-int --inline --resolve-shaped-type-result-dims --loop-invariant-code-motion --expand-strided-metadata --composite-fixed-point-pass --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --sccp --memref-emulate-wide-int=\"widest-int-supported=32\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-wide-int --test-func-insert-result --control-flow-sink --test-arith-emulate-wide-int --test-func-erase-arg --loop-invariant-subset-hoisting --inline --test-func-erase-arg --loop-invariant-subset-hoisting --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --remove-dead-values --control-flow-sink --symbol-dce --arith-unsigned-when-equivalent --test-function-pass --test-func-insert-arg --test-func-erase-arg --mem2reg --cse --remove-dead-values --test-func-insert-result --remove-dead-values | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --duplicate-function-elimination --loop-invariant-subset-hoisting --test-func-insert-arg --test-func-insert-arg --composite-fixed-point-pass --canonicalize=\"test-convergence top-down=0\" --symbol-dce --remove-dead-values --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596]]]",
        "test_line": "[[[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.a6f71f6722055c48.mlir --test-function-pass --duplicate-function-elimination --composite-fixed-point-pass --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --test-func-erase-result --tosa-make-broadcastable --remove-dead-values --duplicate-function-elimination --test-tensor-transform-patterns=\"test-rewrite-extract-slice-from-collapse-shape\" --canonicalize | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --loop-invariant-subset-hoisting --arith-emulate-wide-int=\"widest-int-supported=32\" --symbol-dce --inline --tosa-validate --tosa-make-broadcastable --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --test-tensor-transform-patterns=\"test-rewrite-extract-slice-from-collapse-shape\" --tosa-reduce-transposes --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --topological-sort --symbol-dce --fold-tensor-subset-ops --topological-sort --test-func-set-type --test-func-insert-arg --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --int-range-optimizations --arith-unsigned-when-equivalent --test-function-pass --control-flow-sink --arith-expand --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-func-erase-arg --mem2reg --mem2reg=\"region-simplify\" --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-func-erase-arg --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --fold-tensor-subset-ops --test-arith-emulate-wide-int --loop-invariant-code-motion --test-func-insert-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-memref-dependence-check --test-emulate-narrow-int=\"arith-compute-bitwidth=8\" --normalize-memrefs --duplicate-function-elimination --test-func-erase-arg --composite-fixed-point-pass --sccp --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --test-function-pass --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --loop-invariant-code-motion --int-range-optimizations --topological-sort --canonicalize=\"test-convergence top-down=0\" --composite-fixed-point-pass --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-result --composite-fixed-point-pass --inline --loop-invariant-subset-hoisting --test-memref-bound-check --loop-invariant-code-motion --test-function-pass --scf-forall-to-parallel --loop-invariant-code-motion --scf-forall-to-parallel --canonicalize=\"test-convergence top-down=0\" --cse --control-flow-sink --topological-sort --scf-parallel-loop-specialization --scf-parallel-loop-specialization --test-scf-if-utils --scf-for-loop-range-folding --test-function-pass --test-memref-dependence-check --memref-expand --scf-forall-to-parallel --test-func-insert-arg --test-memref-bound-check --arith-unsigned-when-equivalent --arith-unsigned-when-equivalent --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --arith-unsigned-when-equivalent --scf-forall-to-for | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sroa --loop-invariant-code-motion --remove-dead-values --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sroa --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596]]]",
        "test_line": "[[[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.a6f71f6722055c48.mlir -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-wide-int --test-func-insert-arg --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-tensor-transform-patterns=\"test-drop-redundant-insert-slice-rank-expansion\" --test-tensor-copy-insertion --test-math-algebraic-simplification --test-expand-math --test-func-erase-result --composite-fixed-point-pass --inline --loop-invariant-code-motion --test-emulate-narrow-int=\"memref-load-bitwidth=32\" --math-uplift-to-fma --arith-int-range-narrowing --symbol-dce --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --arith-int-range-narrowing --cse --arith-unsigned-when-equivalent --test-math-algebraic-simplification --arith-emulate-wide-int=\"widest-int-supported=32\" --inline --control-flow-sink --cse --composite-fixed-point-pass --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --composite-fixed-point-pass --inline --arith-expand=\"include-bf16\" --fold-tensor-subset-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --memref-emulate-wide-int --int-range-optimizations --resolve-shaped-type-result-dims --resolve-ranked-shaped-type-result-dims --memref-emulate-wide-int | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --test-function-pass --symbol-dce --arith-expand=\"include-bf16\" --arith-emulate-wide-int=\"widest-int-supported=32\" --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --cse --canonicalize=\"test-convergence\" --test-func-set-type --arith-unsigned-when-equivalent --test-arith-emulate-wide-int --symbol-dce --arith-unsigned-when-equivalent --test-func-insert-result --test-func-set-type --test-arith-emulate-wide-int=\"widest-int-supported=8\" --sroa --test-arith-emulate-wide-int=\"widest-int-supported=8\" --arith-unsigned-when-equivalent --topological-sort --mem2reg --sccp --test-func-insert-arg --test-func-insert-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-arg --cse --control-flow-sink --sroa --duplicate-function-elimination --topological-sort --test-func-erase-arg --control-flow-sink --loop-invariant-subset-hoisting --loop-invariant-subset-hoisting --test-function-pass --duplicate-function-elimination --test-function-pass --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-arg --canonicalize=\"test-convergence top-down=0\" --arith-expand=\"include-bf16\" --duplicate-function-elimination --sroa --mem2reg=\"region-simplify\" --loop-invariant-code-motion --topological-sort --inline --control-flow-sink --symbol-dce --test-func-insert-result --composite-fixed-point-pass --symbol-dce --test-func-erase-arg --mem2reg=\"region-simplify\" --mem2reg=\"region-simplify\" --sccp --inline --cse --arith-emulate-unsupported-floats | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --symbol-dce --test-func-erase-result --inline --loop-invariant-code-motion --composite-fixed-point-pass --symbol-dce --composite-fixed-point-pass --canonicalize --composite-fixed-point-pass --loop-invariant-code-motion --canonicalize=\"test-convergence\" --symbol-dce --test-func-erase-result --test-func-erase-result --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596]]]",
        "test_line": "[[[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.a6f71f6722055c48.mlir -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-tensor-copy-insertion=\"must-infer-memory-space\" --sroa --loop-invariant-subset-hoisting --composite-fixed-point-pass --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize --test-arith-emulate-wide-int --test-function-pass --test-func-insert-arg --arith-expand=\"include-bf16\" --test-func-erase-result --test-function-pass --mem2reg=\"region-simplify\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-result --loop-invariant-code-motion --canonicalize=\"test-convergence\" --test-func-set-type --sroa --test-func-insert-arg --sroa --mem2reg=\"region-simplify\" --sroa --loop-invariant-subset-hoisting --test-func-insert-arg --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --inline --control-flow-sink --int-range-optimizations --loop-invariant-subset-hoisting --topological-sort --composite-fixed-point-pass --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --memref-emulate-wide-int=\"widest-int-supported=32\" --test-func-set-type --topological-sort --duplicate-function-elimination --arith-emulate-wide-int --resolve-shaped-type-result-dims --test-func-set-type --arith-expand --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-func-insert-result --sroa --duplicate-function-elimination --symbol-dce --test-arith-emulate-wide-int --composite-fixed-point-pass --symbol-dce --resolve-shaped-type-result-dims --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --arith-emulate-wide-int=\"widest-int-supported=32\" --memref-emulate-wide-int --loop-invariant-code-motion --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --control-flow-sink --arith-emulate-wide-int --sroa --symbol-dce --loop-invariant-subset-hoisting --test-arith-emulate-wide-int --test-memref-bound-check --arith-unsigned-when-equivalent --test-function-pass --expand-strided-metadata --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-arg --inline --remove-dead-values --loop-invariant-code-motion --inline --symbol-dce --loop-invariant-subset-hoisting --loop-invariant-code-motion --composite-fixed-point-pass --mem2reg --test-func-insert-result --loop-invariant-subset-hoisting --duplicate-function-elimination --canonicalize --test-function-pass --mem2reg=\"region-simplify\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596]]]",
        "test_line": "[[[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.a6f71f6722055c48.mlir --test-function-pass --duplicate-function-elimination --composite-fixed-point-pass --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --test-func-erase-result --tosa-make-broadcastable --remove-dead-values --duplicate-function-elimination --test-tensor-transform-patterns=\"test-rewrite-extract-slice-from-collapse-shape\" --canonicalize | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --loop-invariant-subset-hoisting --arith-emulate-wide-int=\"widest-int-supported=32\" --symbol-dce --inline --tosa-validate --tosa-make-broadcastable --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --test-tensor-transform-patterns=\"test-rewrite-extract-slice-from-collapse-shape\" --tosa-reduce-transposes --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --topological-sort --symbol-dce --fold-tensor-subset-ops --topological-sort --test-func-set-type --test-func-insert-arg --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --canonicalize=\"test-convergence\" --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --resolve-shaped-type-result-dims | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-func-erase-arg --arith-int-range-narrowing | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg=\"region-simplify\" --test-func-erase-result --cse --loop-invariant-code-motion --remove-dead-values --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-func-erase-result --arith-emulate-unsupported-floats --control-flow-sink --sccp --test-func-set-type --test-arith-emulate-wide-int --arith-expand=\"include-bf16\" --test-func-erase-result --canonicalize --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --remove-dead-values --test-func-set-type --canonicalize=\"test-convergence top-down=0\" --topological-sort --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596]]]",
        "test_line": "[[[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.a6f71f6722055c48.mlir -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-tensor-copy-insertion=\"must-infer-memory-space\" --sroa --loop-invariant-subset-hoisting --composite-fixed-point-pass --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --expand-strided-metadata --sccp --composite-fixed-point-pass --topological-sort --arith-int-range-narrowing=\"int-bitwidths-supported=32\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-memref-dependence-check --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-wide-int=\"widest-int-supported=32\" --test-func-erase-result --inline --test-function-pass --arith-emulate-wide-int=\"widest-int-supported=32\" --duplicate-function-elimination --remove-dead-values --test-func-erase-arg --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --arith-expand=\"include-bf16\" --sroa --test-func-erase-result --arith-expand --arith-emulate-unsupported-floats --loop-invariant-code-motion --composite-fixed-point-pass --sccp --remove-dead-values --test-function-pass --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-func-set-type --mem2reg=\"region-simplify\" --control-flow-sink --int-range-optimizations --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --composite-fixed-point-pass --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --symbol-dce --symbol-dce --test-func-erase-arg --cse --test-func-set-type --test-func-insert-arg --sccp --test-func-insert-result --symbol-dce --loop-invariant-subset-hoisting --test-func-erase-arg --inline --remove-dead-values --duplicate-function-elimination --canonicalize=\"test-convergence\" --canonicalize=\"test-convergence\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596]]]",
        "test_line": "[[[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.a6f71f6722055c48.mlir -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --topological-sort --sccp --test-function-pass --test-arith-emulate-wide-int=\"widest-int-supported=8\" --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-func-erase-result --duplicate-function-elimination --inline --test-tensor-copy-insertion --loop-invariant-code-motion --test-func-insert-result --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --arith-unsigned-when-equivalent --sroa --test-func-insert-arg --loop-invariant-subset-hoisting --canonicalize=\"test-convergence top-down=0\" --test-tensor-transform-patterns=\"test-fold-constant-extract-slice\" --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-arith-emulate-wide-int=\"widest-int-supported=8\" --int-range-optimizations --int-range-optimizations --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-tensor-transform-patterns=\"test-rewrite-extract-slice-from-collapse-shape\" --int-range-optimizations --cse --test-func-insert-result --canonicalize --cse --arith-int-range-narrowing --loop-invariant-subset-hoisting --test-func-insert-result --test-emulate-narrow-int=\"memref-load-bitwidth=32\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --normalize-memrefs | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg=\"region-simplify\" --test-scf-pipelining --topological-sort --test-function-pass --control-flow-sink --cse --inline --test-scf-if-utils --test-scf-for-utils=\"test-replace-with-new-yields\" --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-arith-emulate-wide-int --test-func-erase-result --loop-invariant-subset-hoisting --duplicate-function-elimination --inline --arith-expand --test-func-erase-arg --mem2reg=\"region-simplify\" --cse --test-func-erase-arg --int-range-optimizations --test-function-pass --sroa --test-arith-emulate-wide-int=\"widest-int-supported=8\" --mem2reg=\"region-simplify\" --test-func-insert-arg --int-range-optimizations | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg=\"region-simplify\" --loop-invariant-code-motion --composite-fixed-point-pass --test-func-insert-result --arith-emulate-unsupported-floats | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-result --inline --test-func-set-type --symbol-dce --composite-fixed-point-pass --sroa --control-flow-sink --test-function-pass --remove-dead-values | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596]]]",
        "test_line": "[[[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.a6f71f6722055c48.mlir -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-unsigned-when-equivalent --composite-fixed-point-pass --arith-emulate-unsupported-floats --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-function-pass --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --test-func-erase-arg --mem2reg=\"region-simplify\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --inline --mem2reg=\"region-simplify\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --int-range-optimizations --test-scf-while-op-builder --test-scf-if-utils --control-flow-sink --normalize-memrefs --test-memref-bound-check --arith-emulate-wide-int=\"widest-int-supported=32\" --arith-unsigned-when-equivalent --symbol-dce --inline --test-memref-dependence-check --arith-expand=\"include-bf16\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --int-range-optimizations --cse --control-flow-sink --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --canonicalize=\"test-convergence\" --test-func-set-type --arith-emulate-unsupported-floats --sccp --test-func-insert-arg --test-func-erase-arg --sroa --test-func-insert-result --test-func-insert-arg --test-func-erase-result --sccp --arith-int-range-narrowing --cse --mem2reg --arith-expand --test-func-erase-result --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --test-func-erase-result --test-func-erase-result --composite-fixed-point-pass --inline --test-func-erase-result --duplicate-function-elimination --symbol-dce --mem2reg=\"region-simplify\" --test-func-insert-arg --topological-sort --composite-fixed-point-pass --control-flow-sink --sccp --canonicalize=\"test-convergence\" --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596]]]",
        "test_line": "[[[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.a6f71f6722055c48.mlir --remove-dead-values --tosa-reduce-transposes --test-func-erase-arg --tosa-reduce-transposes --composite-fixed-point-pass --tosa-layerwise-constant-fold --test-func-insert-result --test-tensor-copy-insertion --test-func-insert-arg --mem2reg --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --int-range-optimizations --test-func-erase-arg --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --cse --test-func-insert-result --sroa --loop-invariant-code-motion --loop-invariant-subset-hoisting --test-func-insert-result --symbol-dce --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --remove-dead-values | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --remove-dead-values --loop-invariant-subset-hoisting --loop-invariant-subset-hoisting --sccp --remove-dead-values --test-function-pass --sccp --mem2reg --symbol-dce --duplicate-function-elimination --test-function-pass --sccp --sroa --test-func-insert-arg --test-function-pass --duplicate-function-elimination --composite-fixed-point-pass --test-func-insert-result --test-func-erase-result --test-func-insert-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596],\n[-4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596,    -4596]]]",
        "test_line": "[[[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596],\n[4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596,    4596]]]"
    }
}
{}
