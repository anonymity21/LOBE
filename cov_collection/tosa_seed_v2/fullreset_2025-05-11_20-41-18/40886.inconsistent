{
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.cff16e8da3509ca5.mlir -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --fold-tensor-subset-ops --tosa-layerwise-constant-fold --fold-tensor-subset-ops --composite-fixed-point-pass --sccp --sccp --tosa-make-broadcastable --test-func-insert-result --test-tensor-transform-patterns=\"use-foreach\" --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --arith-emulate-unsupported-floats --mem2reg --tosa-test-quant-utils --duplicate-function-elimination --test-func-insert-result --arith-emulate-wide-int --test-func-set-type --arith-emulate-wide-int --test-tensor-copy-insertion --arith-emulate-wide-int --control-flow-sink --arith-emulate-unsupported-floats --sccp --composite-fixed-point-pass --tosa-layerwise-constant-fold --mem2reg --tosa-infer-shapes --test-function-pass --tosa-optional-decompositions --test-func-erase-result --tosa-optional-decompositions --int-range-optimizations --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --tosa-make-broadcastable --arith-unsigned-when-equivalent --sccp --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --arith-emulate-wide-int --duplicate-function-elimination --test-func-erase-result --tosa-layerwise-constant-fold --test-tensor-copy-insertion=\"must-infer-memory-space\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-func-insert-arg --topological-sort --test-linalg-rank-reduce-contraction-ops --arith-emulate-wide-int=\"widest-int-supported=32\" --linalg-specialize-generic-ops --linalg-generalize-named-ops --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-pad-fusion --composite-fixed-point-pass --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --test-linalg-transform-patterns --expand-strided-metadata --test-linalg-drop-unit-dims --linalg-specialize-generic-ops --linalg-generalize-named-ops --test-func-insert-arg --normalize-memrefs --memref-emulate-wide-int --fold-memref-alias-ops --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-fuse-elementwise-ops --test-linalg-data-layout-propagation --composite-fixed-point-pass --test-func-insert-result --memref-expand --topological-sort --linalg-generalize-named-ops --loop-invariant-code-motion --test-arith-emulate-wide-int --test-func-insert-arg --test-func-insert-result --test-linalg-data-layout-propagation --linalg-generalize-named-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-unsupported-floats --int-range-optimizations --inline --test-function-pass --test-func-erase-arg --inline --test-linalg-rank-reduce-contraction-ops --test-arith-emulate-wide-int --mem2reg --test-linalg-drop-unit-dims --sccp --mem2reg=\"region-simplify\" --test-func-insert-arg --convert-elementwise-to-linalg --sroa --test-linalg-pad-fusion --arith-unsigned-when-equivalent | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --affine-loop-normalize --int-range-optimizations --test-function-pass --loop-invariant-subset-hoisting --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --affine-loop-fusion --test-func-insert-result --test-loop-fusion=\"test-loop-fusion-transformation\" --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-parallel-loop-specialization --scf-for-to-while --scf-parallel-loop-tiling --test-func-erase-result --scf-for-loop-specialization --remove-dead-values --scf-forall-to-for --sroa --memref-expand --test-scf-pipelining=\"no-epilogue-peeling\" --scf-for-to-while --test-scf-pipelining=\"no-epilogue-peeling\" --symbol-dce --test-memref-dependence-check --duplicate-function-elimination --test-scf-pipelining=\"no-epilogue-peeling\" --test-scf-pipelining=\"annotate\" --test-scf-pipelining=\"no-epilogue-peeling\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse --topological-sort --arith-emulate-unsupported-floats --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --remove-dead-values --test-func-erase-result --symbol-dce --inline --duplicate-function-elimination --test-func-insert-result --symbol-dce --topological-sort --loop-invariant-subset-hoisting --loop-invariant-subset-hoisting --sccp --cse --remove-dead-values --symbol-dce --loop-invariant-code-motion --control-flow-sink --inline --loop-invariant-code-motion --test-func-insert-arg --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-result --remove-dead-values --test-func-insert-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1],\n[1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1],\n[1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1],\n[1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1],\n[1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1],\n[1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1],\n[1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1],\n[1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1]]]",
        "test_line": "[[[1.38156,    3.07403e-41,    0,    0,    0,    0,    0,    0,    0,    0,    1.37458,    3.07403e-41,    0,    0,    0.000255354,    3.07403e-41,    0,    0,    1.349,    3.07403e-41,    8.40779e-45,    3.07403e-41,    -nan,    -nan],\n[1.1903,    3.07403e-41,    1.40689,    3.07403e-41,    0,    0,    0,    0,    0,    0,    0,    0,    1.37459,    3.07403e-41,    0,    0,    0.000255354,    3.07403e-41,    0,    0,    1.349,    3.07403e-41,    8.40779e-45,    3.07403e-41],\n[0,    0,    1.1903,    3.07403e-41,    1.66614,    3.07403e-41,    0,    0,    0,    0,    0,    0,    0,    0,    1.3746,    3.07403e-41,    0,    0,    0.000255354,    3.07403e-41,    0,    0,    1.34901,    3.07403e-41],\n[4.2039e-45,    3.07403e-41,    -nan,    -nan,    1.1903,    3.07403e-41,    1.40366,    3.07403e-41,    0,    0,    0,    0,    0,    0,    0,    0,    1.37462,    3.07403e-41,    0,    0,    0.000255354,    3.07403e-41,    0,    0],\n[1.34901,    3.07403e-41,    1.68156e-44,    3.07403e-41,    -nan,    -nan,    1.1903,    3.07403e-41,    1.39783,    3.07403e-41,    0,    0,    0,    0,    0,    0,    0,    0,    1.37463,    3.07403e-41,    0,    0,    0.000255354,    3.07403e-41],\n[0,    0,    1.34902,    3.07403e-41,    1.82169e-44,    3.07403e-41,    -nan,    -nan,    1.1903,    3.07403e-41,    1.41846,    3.07403e-41,    0,    0,    0,    0,    0,    0,    0,    0,    1.37464,    3.07403e-41,    0,    0],\n[0.000255354,    3.07403e-41,    0,    0,    1.34902,    3.07403e-41,    1.96182e-44,    3.07403e-41,    -nan,    -nan,    1.1903,    3.07403e-41,    1.41928,    3.07403e-41,    0,    0,    0,    0,    0,    0,    0,    0,    1.37465,    3.07403e-41],\n[0,    0,    0.000255354,    3.07403e-41,    0,    0,    1.34903,    3.07403e-41,    2.10195e-44,    3.07403e-41,    -nan,    -nan,    1.1903,    3.07403e-41,    1.63086,    3.07403e-41,    0,    0,    0,    0,    0,    0,    0,    0]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.cff16e8da3509ca5.mlir -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --topological-sort --composite-fixed-point-pass --sccp --tosa-make-broadcastable --test-func-erase-arg --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-make-broadcastable --canonicalize=\"test-convergence top-down=0\" --arith-expand=\"include-bf16\" --test-tensor-copy-insertion --loop-invariant-code-motion --test-func-insert-result --int-range-optimizations --test-func-erase-result --arith-expand | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --composite-fixed-point-pass --test-linalg-drop-unit-dims --linalg-fold-unit-extent-dims --test-arith-emulate-wide-int=\"widest-int-supported=8\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --linalg-fuse-elementwise-ops --linalg-specialize-generic-ops --arith-expand=\"include-bf16\" --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-function-pass --scf-parallel-loop-tiling=\"parallel-loop-tile-sizes=1,4 no-min-max-bounds=true\" --arith-unsigned-when-equivalent --mem2reg --test-emulate-narrow-int --loop-invariant-subset-hoisting --test-func-erase-arg --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --control-flow-sink --control-flow-sink --inline --symbol-dce --scf-parallel-loop-tiling=\"parallel-loop-tile-sizes=1,4 no-min-max-bounds=true\" --scf-for-loop-peeling=\"peel-front\" --scf-for-loop-range-folding --scf-for-to-while --test-func-insert-arg --control-flow-sink --mem2reg --cse --test-function-pass --test-func-erase-arg --control-flow-sink --scf-parallel-loop-fusion --scf-parallel-loop-specialization --arith-emulate-unsupported-floats --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --test-arith-emulate-wide-int --loop-invariant-code-motion --scf-forall-to-parallel --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-result --loop-invariant-subset-hoisting --duplicate-function-elimination --cse --canonicalize=\"test-convergence top-down=0\" --remove-dead-values --mem2reg=\"region-simplify\" --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --loop-invariant-subset-hoisting --composite-fixed-point-pass --mem2reg=\"region-simplify\" --test-func-insert-arg --test-func-erase-arg --test-func-erase-result --canonicalize=\"test-convergence\" --cse --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-result --sroa --cse --symbol-dce --loop-invariant-code-motion --topological-sort --remove-dead-values | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1],\n[1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1],\n[1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1],\n[1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1],\n[1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1],\n[1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1],\n[1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1],\n[1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1]]]",
        "test_line": "[[[1,    1,    1,    1,    1,    1,    1,    1,    -3.3537e-22,    3.0914e-41,    -3.35362e-22,    3.0914e-41,    0,    0,    0,    0,    1,    1,    1,    1,    0,    0,    0,    0],\n[1,    1,    1,    1,    1,    1,    1,    1,    0,    0,    0,    0,    0,    0,    -3.07467e-22,    3.0914e-41,    1,    1,    1,    1,    0,    0,    0,    0],\n[1,    1,    1,    1,    1,    1,    1,    1,    0,    0,    0,    0,    0,    0,    0,    0,    1,    1,    1,    1,    0,    0,    0,    0],\n[1,    1,    1,    1,    1,    1,    1,    1,    8.96831e-44,    0,    -3.20479e-22,    3.0914e-41,    -3.03937e-22,    3.0914e-41,    0,    0,    1,    1,    1,    1,    1.20552e-19,    4.58183e-41,    1.20557e-19,    4.58183e-41],\n[1,    1,    1,    1,    1,    1,    1,    1,    1.20553e-19,    4.58183e-41,    -3.03937e-22,    3.0914e-41,    -3.27351e-22,    3.0914e-41,    -3.20479e-22,    3.0914e-41,    1,    1,    1,    1,    3.58732e-43,    2.8026e-45,    -3.07475e-22,    3.0914e-41],\n[1,    1,    1,    1,    1,    1,    1,    1,    0,    0,    0,    0,    0,    0,    0,    0,    1,    1,    1,    1,    0,    0,    0,    0],\n[1,    1,    1,    1,    1,    1,    1,    1,    -3.24374e-22,    3.0914e-41,    -3.95656e-22,    3.0914e-41,    1.4013e-45,    1.26117e-44,    -3.24271e-22,    3.0914e-41,    1,    1,    1,    1,    -3.3753e-22,    3.0914e-41,    -3.0748e-22,    3.0914e-41],\n[1,    1,    1,    1,    1,    1,    1,    1,    -3.92931e-22,    3.0914e-41,    0,    0,    1.43493e-42,    0,    1.4013e-45,    0,    1,    1,    1,    1,    0,    1.4013e-45,    0,    0]]]"
    }
}
