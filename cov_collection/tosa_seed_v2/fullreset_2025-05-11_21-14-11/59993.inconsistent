{
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --duplicate-function-elimination --tosa-reduce-transposes --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --test-func-set-type --remove-dead-values --tosa-infer-shapes --test-tensor-transform-patterns=\"test-rewrite-extract-slice-from-collapse-shape\" --tosa-make-broadcastable | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --duplicate-function-elimination --convert-elementwise-to-linalg --topological-sort --tosa-reduce-transposes --cse --tosa-make-broadcastable --test-linalg-drop-unit-dims --test-linalg-transform-patterns=\"test-decompose-winograd-ops\" --test-math-polynomial-approximation --test-func-erase-result --tosa-test-quant-utils --test-func-insert-result --test-linalg-data-layout-propagation --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --test-math-to-vcix --test-func-set-type --test-tensor-transform-patterns --inline --topological-sort --math-extend-to-supported-types --linalg-inline-scalar-operands --linalg-fuse-elementwise-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --sccp --symbol-dce --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-linalg-data-layout-propagation --memref-expand --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-math-polynomial-approximation=\"enable-avx2\" --sccp --test-func-set-type --scf-parallel-loop-specialization --scf-for-to-while --test-function-pass --test-function-pass --scf-for-loop-specialization --scf-forall-to-for --test-scf-for-utils=\"test-replace-with-new-yields\" --scf-for-loop-range-folding --cse --test-expand-math --test-scf-if-utils --scf-forall-to-parallel --scf-forall-to-parallel --test-func-insert-arg --scf-parallel-loop-tiling=\"parallel-loop-tile-sizes=1,4 no-min-max-bounds=true\" --scf-for-loop-range-folding --test-func-erase-result --symbol-dce --test-func-erase-result --test-math-polynomial-approximation=\"enable-avx2\" --sccp --topological-sort --scf-parallel-loop-specialization --sccp --test-expand-math --test-math-algebraic-simplification --test-math-polynomial-approximation --test-math-to-vcix --scf-forall-to-for --scf-for-loop-range-folding | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-math-polynomial-approximation --cse --test-expand-math --scf-forall-to-parallel --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --test-func-insert-result --test-function-pass --test-function-pass --test-func-erase-arg --test-func-erase-result --test-func-set-type --remove-dead-values --duplicate-function-elimination --inline --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --remove-dead-values --remove-dead-values --test-func-erase-result --test-func-insert-result --symbol-dce --symbol-dce --symbol-dce --test-func-erase-result --cse --composite-fixed-point-pass --test-func-set-type --cse --test-function-pass --remove-dead-values --loop-invariant-subset-hoisting --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --loop-invariant-code-motion --remove-dead-values --symbol-dce --test-func-insert-result --composite-fixed-point-pass --test-func-erase-arg --topological-sort --sccp --symbol-dce --inline --test-func-insert-arg --test-func-erase-result --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --test-func-insert-result --duplicate-function-elimination --cse --topological-sort --canonicalize --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --symbol-dce --symbol-dce --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --tosa-infer-shapes --mem2reg --test-tensor-transform-patterns=\"test-rewrite-extract-slice-from-collapse-shape\" --control-flow-sink --cse --cse --composite-fixed-point-pass --test-tensor-copy-insertion=\"must-infer-memory-space\" --tosa-layerwise-constant-fold --test-func-erase-arg --loop-invariant-subset-hoisting --tosa-reduce-transposes --tosa-optional-decompositions --cse --tosa-infer-shapes --sccp --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sroa --test-linalg-rank-reduce-contraction-ops --arith-emulate-wide-int=\"widest-int-supported=32\" --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-collapsing-control\" --control-flow-sink --test-linalg-transform-patterns=\"test-bubble-up-extract-slice-op-pattern\" --tosa-test-quant-utils --test-math-polynomial-approximation=\"enable-avx2\" --sroa --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --sroa --composite-fixed-point-pass --control-flow-sink --loop-invariant-subset-hoisting --inline --test-func-erase-arg --test-func-set-type --tosa-optional-decompositions --test-linalg-rank-reduce-contraction-ops --inline --test-expand-math --test-linalg-rank-reduce-contraction-ops --test-func-insert-arg --test-math-algebraic-simplification --tosa-make-broadcastable --composite-fixed-point-pass --test-func-insert-result --topological-sort --sroa --loop-invariant-subset-hoisting --mem2reg --topological-sort --test-func-erase-result --linalg-specialize-generic-ops --canonicalize=\"test-convergence top-down=0\" --test-function-pass --cse --symbol-dce --tosa-layerwise-constant-fold --test-linalg-rank-reduce-contraction-ops --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-specialize-generic-ops --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-collapsing-control\" --topological-sort --tosa-layerwise-constant-fold --tosa-optional-decompositions --test-func-insert-arg --tosa-validate --linalg-specialize-generic-ops --test-linalg-transform-patterns=\"test-swap-extract-slice-with-fill-pattern\" --composite-fixed-point-pass --test-linalg-transform-patterns=\"test-erase-unnecessary-inputs\" --test-linalg-drop-unit-dims --test-func-erase-result --tosa-optional-decompositions --canonicalize=\"test-convergence\" --test-func-insert-arg --mem2reg=\"region-simplify\" --fold-tensor-subset-ops --fold-tensor-subset-ops --loop-invariant-code-motion --test-linalg-rank-reduce-contraction-ops --test-func-insert-arg --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --test-func-set-type --linalg-fuse-elementwise-ops --math-extend-to-supported-types --loop-invariant-subset-hoisting --test-expand-math --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-result --test-math-to-vcix --duplicate-function-elimination --linalg-inline-scalar-operands --memref-emulate-wide-int=\"widest-int-supported=32\" --normalize-memrefs | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-arg --test-math-to-vcix --test-function-pass --scf-forall-to-for --symbol-dce --symbol-dce --sroa --expand-strided-metadata --fold-memref-alias-ops --test-func-insert-result --test-math-polynomial-approximation=\"enable-avx2\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-result --arith-unsigned-when-equivalent --mem2reg --canonicalize=\"test-convergence\" --test-func-erase-result --test-func-insert-result --arith-emulate-unsupported-floats --test-func-erase-result --cse --arith-expand=\"include-bf16\" --arith-emulate-wide-int --test-math-polynomial-approximation=\"enable-avx2\" --inline --sccp --arith-int-range-narrowing --math-uplift-to-fma --test-expand-math --arith-unsigned-when-equivalent --sccp --test-arith-emulate-wide-int=\"widest-int-supported=8\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-result --test-math-to-vcix --sroa --test-func-insert-result --math-uplift-to-fma --symbol-dce --test-func-insert-arg --remove-dead-values --arith-int-range-narrowing --topological-sort --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --symbol-dce --sccp --test-math-polynomial-approximation=\"enable-avx2\" --test-func-insert-result --math-extend-to-supported-types --remove-dead-values --symbol-dce --test-math-algebraic-simplification --control-flow-sink --test-math-to-vcix --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --arith-expand=\"include-bf16\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --canonicalize=\"test-convergence\" --composite-fixed-point-pass --test-func-set-type --duplicate-function-elimination --mem2reg=\"region-simplify\" --test-math-polynomial-approximation --sccp --test-math-algebraic-simplification --test-math-to-vcix --math-uplift-to-fma --canonicalize=\"test-convergence\" --cse --cse --test-math-polynomial-approximation | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --remove-dead-values --tosa-reduce-transposes --test-function-pass --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --tosa-validate --tosa-make-broadcastable --cse --test-func-insert-result --tosa-test-quant-utils --remove-dead-values --tosa-test-quant-utils | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --test-linalg-elementwise-fusion-patterns=\"collapse-dimensions-control=2,3\" --tosa-infer-shapes --control-flow-sink --tosa-reduce-transposes --duplicate-function-elimination --symbol-dce --test-math-to-vcix --linalg-fold-unit-extent-dims --tosa-test-quant-utils --test-func-insert-arg --linalg-inline-scalar-operands --test-math-polynomial-approximation --test-linalg-transform-patterns=\"test-erase-unused-operands-and-results\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-unsigned-when-equivalent --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --linalg-named-op-conversion --test-linalg-elementwise-fusion-patterns=\"fuse-generic-ops-control\" --test-math-polynomial-approximation --control-flow-sink --control-flow-sink --arith-int-range-narrowing --math-extend-to-supported-types --test-linalg-transform-patterns=\"test-patterns\" --composite-fixed-point-pass --test-func-set-type --convert-elementwise-to-linalg --arith-emulate-wide-int --test-linalg-data-layout-propagation --control-flow-sink --test-expand-math --loop-invariant-code-motion --test-math-polynomial-approximation=\"enable-avx2\" --test-func-insert-arg --arith-emulate-wide-int=\"widest-int-supported=32\" --arith-expand --int-range-optimizations --canonicalize=\"test-convergence top-down=0\" --arith-emulate-wide-int --test-tensor-transform-patterns=\"use-foreach\" --test-tensor-copy-insertion --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-func-erase-result --test-linalg-pad-fusion --loop-invariant-code-motion --linalg-fuse-elementwise-ops --symbol-dce --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --composite-fixed-point-pass --test-linalg-decompose-ops --test-func-insert-result --sccp --duplicate-function-elimination --linalg-inline-scalar-operands --test-math-algebraic-simplification | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-math-polynomial-approximation --test-func-insert-arg --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-arg --test-linalg-pad-fusion --math-uplift-to-fma --composite-fixed-point-pass --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --test-math-algebraic-simplification --math-extend-to-supported-types --test-func-erase-result --linalg-specialize-generic-ops --linalg-named-op-conversion --symbol-dce --linalg-fold-unit-extent-dims | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-inline-scalar-operands --mem2reg --test-func-erase-result --control-flow-sink --test-func-erase-result --linalg-named-op-conversion --test-memref-bound-check --test-function-pass --test-memref-dependence-check --test-linalg-drop-unit-dims --test-linalg-rank-reduce-contraction-ops --linalg-generalize-named-ops --test-func-insert-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-scf-pipelining=\"annotate\" --inline --memref-expand --test-func-set-type --loop-invariant-code-motion --expand-strided-metadata --duplicate-function-elimination --test-func-set-type --scf-forall-to-for --canonicalize=\"test-convergence\" --resolve-shaped-type-result-dims --scf-for-loop-canonicalization --test-scf-uplift-while-to-for --sroa --arith-expand --arith-int-range-narrowing --mem2reg=\"region-simplify\" --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --scf-parallel-loop-fusion --test-func-set-type --memref-emulate-wide-int=\"widest-int-supported=32\" --mem2reg --mem2reg --sroa --inline --int-range-optimizations --duplicate-function-elimination --resolve-shaped-type-result-dims --loop-invariant-code-motion --scf-for-loop-peeling=\"skip-partial\" --scf-for-loop-peeling=\"peel-front\" --test-func-erase-arg --test-func-erase-arg --test-func-erase-arg --int-range-optimizations | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-wide-int --scf-for-loop-specialization --test-emulate-narrow-int --scf-for-loop-canonicalization --test-scf-uplift-while-to-for --scf-parallel-loop-specialization --arith-emulate-wide-int --arith-unsigned-when-equivalent --test-scf-uplift-while-to-for --scf-for-loop-canonicalization --arith-unsigned-when-equivalent --scf-parallel-loop-specialization --sccp --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-result --arith-expand --control-flow-sink --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --remove-dead-values --composite-fixed-point-pass --remove-dead-values --sccp --inline --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --test-func-insert-arg --test-tensor-copy-insertion --symbol-dce --sroa --tosa-layerwise-constant-fold --test-func-erase-result --test-func-erase-arg --remove-dead-values --remove-dead-values --canonicalize --tosa-make-broadcastable --canonicalize=\"test-convergence top-down=0\" --test-func-erase-arg --mem2reg --sccp --tosa-test-quant-utils --topological-sort --tosa-reduce-transposes | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --math-uplift-to-fma --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --composite-fixed-point-pass --tosa-test-quant-utils --arith-unsigned-when-equivalent --arith-expand=\"include-bf16\" --composite-fixed-point-pass --fold-tensor-subset-ops --tosa-make-broadcastable --arith-expand=\"include-bf16\" --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --test-math-to-vcix --test-linalg-pad-fusion --test-func-erase-result --convert-elementwise-to-linalg --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-collapsing-control\" --test-linalg-elementwise-fusion-patterns=\"control-fusion-by-expansion\" --tosa-reduce-transposes --test-math-to-vcix --test-func-erase-result --arith-emulate-unsupported-floats --duplicate-function-elimination --test-func-erase-result --linalg-inline-scalar-operands --math-uplift-to-fma --int-range-optimizations --test-math-polynomial-approximation --arith-expand --test-linalg-elementwise-fusion-patterns=\"fuse-generic-ops-control\" --test-func-insert-arg --linalg-fuse-elementwise-ops --arith-emulate-unsupported-floats --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --math-extend-to-supported-types --tosa-reduce-transposes --tosa-test-quant-utils --tosa-layerwise-constant-fold --test-linalg-pad-fusion --test-arith-emulate-wide-int=\"widest-int-supported=8\" --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-linalg-greedy-fusion --tosa-test-quant-utils --tosa-layerwise-constant-fold | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-pad-fusion --symbol-dce --math-extend-to-supported-types | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --convert-elementwise-to-linalg --test-linalg-greedy-fusion --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-collapsing-control\" --memref-expand --test-func-insert-result --topological-sort --test-linalg-drop-unit-dims --expand-strided-metadata --inline --test-func-insert-arg --cse --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --sroa --test-linalg-pad-fusion --inline --test-memref-bound-check --linalg-specialize-generic-ops --cse --linalg-fuse-elementwise-ops --test-linalg-transform-patterns=\"test-swap-subtensor-padtensor\" --test-memref-bound-check --normalize-memrefs --test-linalg-greedy-fusion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --convert-elementwise-to-linalg --test-linalg-transform-patterns=\"test-decompose-winograd-ops\" --duplicate-function-elimination --linalg-fuse-elementwise-ops --test-math-to-vcix --loop-invariant-subset-hoisting --test-linalg-data-layout-propagation --sccp --test-math-to-vcix | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --duplicate-function-elimination --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-result --sccp --arith-expand=\"include-bf16\" --mem2reg=\"region-simplify\" --sroa --test-func-set-type --cse --arith-int-range-narrowing --duplicate-function-elimination --remove-dead-values --loop-invariant-subset-hoisting --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --arith-emulate-unsupported-floats --symbol-dce --sroa --inline --test-func-insert-result --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-function-pass --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --composite-fixed-point-pass --sroa --test-func-set-type --control-flow-sink --symbol-dce --sccp --loop-invariant-code-motion --cse --test-func-insert-result --test-func-insert-result --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --test-func-insert-result --remove-dead-values --tosa-test-quant-utils --test-func-insert-result --tosa-make-broadcastable --duplicate-function-elimination --tosa-make-broadcastable --test-func-erase-arg --test-func-erase-result --loop-invariant-code-motion --test-tensor-transform-patterns=\"test-fold-constant-extract-slice\" --tosa-make-broadcastable --symbol-dce --tosa-optional-decompositions --test-func-erase-result --test-func-erase-arg --sroa --fold-tensor-subset-ops --test-func-erase-arg --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --arith-int-range-narrowing --composite-fixed-point-pass --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --duplicate-function-elimination --test-arith-emulate-wide-int | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --test-linalg-pad-fusion --test-func-insert-result --loop-invariant-subset-hoisting --linalg-named-op-conversion --test-linalg-decompose-ops --test-math-polynomial-approximation=\"enable-avx2\" --linalg-inline-scalar-operands | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-generalize-named-ops --composite-fixed-point-pass --control-flow-sink --mem2reg --symbol-dce --cse --test-linalg-data-layout-propagation --canonicalize=\"test-convergence\" --linalg-generalize-named-ops --test-linalg-elementwise-fusion-patterns=\"collapse-dimensions-control=2,3\" --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --memref-expand --expand-strided-metadata --resolve-ranked-shaped-type-result-dims --scf-forall-to-for --arith-emulate-wide-int=\"widest-int-supported=32\" --arith-emulate-wide-int=\"widest-int-supported=32\" --canonicalize=\"test-convergence\" --scf-parallel-loop-specialization --scf-parallel-loop-fusion --test-scf-if-utils | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --inline --test-func-erase-arg --arith-expand=\"include-bf16\" --arith-unsigned-when-equivalent --symbol-dce --arith-expand --loop-invariant-subset-hoisting --arith-emulate-wide-int --test-func-insert-arg --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --topological-sort --remove-dead-values | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize=\"test-convergence\" --test-func-erase-arg --test-function-pass --test-func-erase-result --test-func-erase-result --mem2reg=\"region-simplify\" --test-func-set-type --test-func-erase-arg --inline --test-func-erase-result --mem2reg=\"region-simplify\" --cse --test-func-insert-result --test-func-insert-arg --test-func-erase-arg --mem2reg --inline --cse --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --remove-dead-values --test-func-set-type --remove-dead-values --duplicate-function-elimination --control-flow-sink --mem2reg --remove-dead-values --test-func-erase-arg --composite-fixed-point-pass --cse --canonicalize=\"test-convergence top-down=0\" --test-func-insert-arg --test-func-insert-arg --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-named-op-conversion --test-emulate-narrow-int=\"arith-compute-bitwidth=8\" --test-scf-for-utils --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-specialize-generic-ops --arith-emulate-wide-int=\"widest-int-supported=32\" --test-func-insert-result --topological-sort --arith-unsigned-when-equivalent --test-linalg-drop-unit-dims --test-math-to-vcix --math-extend-to-supported-types --arith-emulate-wide-int=\"widest-int-supported=32\" --sccp --arith-emulate-unsupported-floats --test-math-algebraic-simplification --linalg-specialize-generic-ops --linalg-fuse-elementwise-ops --sroa --test-arith-emulate-wide-int --duplicate-function-elimination --int-range-optimizations --inline --test-emulate-narrow-int=\"memref-load-bitwidth=8\" --test-func-erase-arg --test-func-set-type --linalg-named-op-conversion --math-uplift-to-fma --duplicate-function-elimination --topological-sort --sroa --linalg-fuse-elementwise-ops --test-func-erase-result --memref-expand --test-linalg-data-layout-propagation --test-function-pass --arith-expand --test-linalg-elementwise-fusion-patterns=\"fuse-multiuse-producer\" --sroa --test-math-algebraic-simplification --test-linalg-greedy-fusion --test-linalg-data-layout-propagation --arith-expand=\"include-bf16\" --topological-sort --control-flow-sink --linalg-specialize-generic-ops --memref-expand --loop-invariant-subset-hoisting --test-math-to-vcix --int-range-optimizations --normalize-memrefs --test-expand-math --test-linalg-pad-fusion --inline --sccp --canonicalize --linalg-generalize-named-ops --test-linalg-rank-reduce-contraction-ops --test-func-set-type --test-func-insert-arg --expand-realloc=\"emit-deallocs\" --loop-invariant-subset-hoisting --fold-memref-alias-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --memref-expand --test-func-erase-arg --test-math-polynomial-approximation=\"enable-avx2\" --sccp --sroa --sccp --loop-invariant-subset-hoisting --test-memref-dependence-check --test-linalg-decompose-ops --math-extend-to-supported-types --topological-sort --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg=\"region-simplify\" --test-math-algebraic-simplification --memref-emulate-wide-int=\"widest-int-supported=32\" --linalg-inline-scalar-operands --memref-expand --canonicalize=\"test-convergence top-down=0\" --symbol-dce --math-extend-to-supported-types --test-memref-dependence-check --loop-invariant-subset-hoisting --memref-expand --sccp --test-func-erase-result --sroa --math-uplift-to-fma | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --fold-memref-alias-ops --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --scf-for-loop-peeling --control-flow-sink --scf-for-loop-canonicalization --test-func-insert-arg --test-memref-bound-check --test-scf-if-utils --test-arith-emulate-wide-int=\"widest-int-supported=8\" --int-range-optimizations --inline --scf-parallel-loop-specialization --cse --scf-parallel-loop-fusion --scf-forall-to-parallel --remove-dead-values --test-scf-uplift-while-to-for --test-scf-while-op-builder --memref-expand --arith-int-range-narrowing | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --sroa --duplicate-function-elimination --test-func-set-type --sccp --resolve-shaped-type-result-dims --loop-invariant-code-motion --topological-sort --duplicate-function-elimination --test-memref-bound-check | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --remove-dead-values --composite-fixed-point-pass --test-func-insert-arg --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --remove-dead-values --canonicalize --composite-fixed-point-pass --duplicate-function-elimination --loop-invariant-subset-hoisting --sroa --loop-invariant-code-motion --test-function-pass --sroa --sccp --test-func-insert-result --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --sroa --tosa-optional-decompositions --test-func-set-type --loop-invariant-subset-hoisting --tosa-reduce-transposes --tosa-validate --duplicate-function-elimination --composite-fixed-point-pass --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --cse --control-flow-sink --loop-invariant-subset-hoisting --control-flow-sink --tosa-make-broadcastable --remove-dead-values --test-tensor-copy-insertion --tosa-test-quant-utils --test-func-insert-arg --loop-invariant-subset-hoisting --test-func-insert-result --duplicate-function-elimination --sroa --mem2reg=\"region-simplify\" --topological-sort --tosa-reduce-transposes --mem2reg=\"region-simplify\" --canonicalize --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-reduce-transposes --symbol-dce --tosa-make-broadcastable --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --symbol-dce --test-function-pass --cse --test-func-erase-arg --fold-tensor-subset-ops --test-func-erase-result --tosa-test-quant-utils --test-func-erase-arg --test-func-erase-result --test-func-insert-arg --test-func-insert-arg --tosa-test-quant-utils | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-inline-scalar-operands --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-tensor-transform-patterns=\"use-foreach\" --linalg-inline-scalar-operands --test-func-erase-arg --test-func-insert-arg --loop-invariant-code-motion --test-linalg-elementwise-fusion-patterns=\"collapse-dimensions-control=2,3\" --fold-tensor-subset-ops --test-math-polynomial-approximation --linalg-fuse-elementwise-ops --tosa-optional-decompositions --test-math-algebraic-simplification --tosa-infer-shapes | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-expand | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-arg --remove-dead-values --control-flow-sink --composite-fixed-point-pass --symbol-dce --loop-invariant-code-motion --test-func-insert-arg --symbol-dce --sccp --test-function-pass --cse --control-flow-sink --loop-invariant-subset-hoisting --duplicate-function-elimination --cse --test-math-to-vcix --remove-dead-values --control-flow-sink --test-func-insert-result --control-flow-sink --symbol-dce --test-function-pass --math-uplift-to-fma --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --topological-sort --sccp --sccp --inline --control-flow-sink --inline --cse --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --tosa-make-broadcastable --remove-dead-values --duplicate-function-elimination --fold-tensor-subset-ops --sroa --loop-invariant-code-motion --tosa-validate --inline --tosa-reduce-transposes --canonicalize --test-function-pass --test-function-pass --sroa --tosa-optional-decompositions --control-flow-sink --tosa-reduce-transposes | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-unsigned-when-equivalent | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-test-quant-utils --arith-emulate-wide-int=\"widest-int-supported=32\" --fold-tensor-subset-ops --test-func-erase-result --tosa-optional-decompositions --symbol-dce --arith-emulate-unsupported-floats --control-flow-sink --inline --arith-expand=\"include-bf16\" --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-func-insert-arg --sroa --test-tensor-copy-insertion=\"must-infer-memory-space\" --control-flow-sink --arith-unsigned-when-equivalent --composite-fixed-point-pass --composite-fixed-point-pass --fold-tensor-subset-ops --test-tensor-copy-insertion=\"must-infer-memory-space\" --test-tensor-transform-patterns --tosa-make-broadcastable --test-tensor-transform-patterns=\"test-fold-consecutive-insert-extract-slice\" --tosa-layerwise-constant-fold --sccp --tosa-infer-shapes --tosa-optional-decompositions --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --arith-emulate-wide-int=\"widest-int-supported=32\" --tosa-make-broadcastable --tosa-make-broadcastable --duplicate-function-elimination --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --arith-expand --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --cse --topological-sort --test-linalg-decompose-ops=\"remove-dead-args-and-results\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-specialize-generic-ops --symbol-dce --linalg-generalize-named-ops --linalg-specialize-generic-ops --test-linalg-pad-fusion --duplicate-function-elimination --test-memref-dependence-check --test-linalg-data-layout-propagation --test-func-insert-result --memref-emulate-wide-int=\"widest-int-supported=32\" --linalg-fold-unit-extent-dims --linalg-specialize-generic-ops --control-flow-sink --inline --resolve-shaped-type-result-dims --test-math-polynomial-approximation=\"enable-avx2\" --test-memref-bound-check --test-linalg-greedy-fusion --resolve-ranked-shaped-type-result-dims --loop-invariant-subset-hoisting --inline --resolve-shaped-type-result-dims --convert-elementwise-to-linalg --duplicate-function-elimination --cse --inline --test-func-erase-result --linalg-fold-unit-extent-dims --test-func-insert-arg --expand-strided-metadata --math-extend-to-supported-types --memref-expand | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --test-linalg-elementwise-fusion-patterns=\"fuse-multiuse-producer\" --test-linalg-transform-patterns=\"test-winograd-conv2d\" --test-function-pass --linalg-generalize-named-ops --test-expand-math --math-extend-to-supported-types --test-func-insert-arg --test-linalg-rank-reduce-contraction-ops --test-linalg-greedy-fusion --test-linalg-transform-patterns=\"test-swap-extract-slice-with-fill-pattern\" --linalg-specialize-generic-ops --test-linalg-drop-unit-dims --inline --sroa --linalg-named-op-conversion --composite-fixed-point-pass --test-func-insert-arg --test-linalg-pad-fusion --test-linalg-drop-unit-dims --linalg-named-op-conversion --test-math-polynomial-approximation=\"enable-avx2\" --test-func-erase-result --test-linalg-greedy-fusion --test-math-algebraic-simplification --canonicalize=\"test-convergence\" --test-func-insert-arg --loop-invariant-code-motion --test-linalg-drop-unit-dims --test-linalg-rank-reduce-contraction-ops --test-linalg-greedy-fusion --loop-invariant-subset-hoisting --test-math-polynomial-approximation=\"enable-avx2\" --test-func-insert-result --test-func-erase-result --test-linalg-rank-reduce-contraction-ops --linalg-fold-unit-extent-dims --test-expand-math --math-extend-to-supported-types --test-linalg-data-layout-propagation --linalg-inline-scalar-operands | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sroa --test-func-erase-result --test-linalg-rank-reduce-contraction-ops --arith-emulate-wide-int=\"widest-int-supported=32\" --control-flow-sink --cse --cse --test-linalg-elementwise-fusion-patterns=\"control-fusion-by-expansion\" --inline --composite-fixed-point-pass --composite-fixed-point-pass --arith-expand --arith-emulate-wide-int --linalg-inline-scalar-operands --test-emulate-narrow-int=\"memref-load-bitwidth=8\" --canonicalize=\"test-convergence top-down=0\" --linalg-named-op-conversion --linalg-fuse-elementwise-ops --test-linalg-drop-unit-dims --cse --test-linalg-decompose-ops --arith-emulate-wide-int=\"widest-int-supported=32\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-arg --test-func-insert-arg --linalg-generalize-named-ops --test-linalg-pad-fusion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-for-loop-specialization --mem2reg --duplicate-function-elimination --mem2reg --test-function-pass --test-func-insert-arg --control-flow-sink --cse --test-func-erase-result --test-func-erase-result --test-func-set-type --scf-forall-to-for --memref-expand --test-func-set-type --expand-strided-metadata --scf-for-loop-specialization --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --topological-sort --test-func-set-type --sccp --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-result --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-result --sccp --mem2reg --test-func-insert-arg --mem2reg=\"region-simplify\" --topological-sort --duplicate-function-elimination --canonicalize --cse --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --tosa-reduce-transposes --test-tensor-copy-insertion=\"must-infer-memory-space\" --sroa --topological-sort --loop-invariant-subset-hoisting --test-func-insert-arg --test-function-pass --test-func-set-type --symbol-dce --loop-invariant-subset-hoisting --test-tensor-transform-patterns=\"test-drop-redundant-insert-slice-rank-expansion\" --tosa-reduce-transposes --canonicalize --duplicate-function-elimination --test-func-erase-result --tosa-validate --tosa-optional-decompositions --test-func-erase-arg --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-arg --sccp --duplicate-function-elimination --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-expand-math --math-extend-to-supported-types --test-linalg-drop-unit-dims --test-func-insert-arg --test-linalg-data-layout-propagation --mem2reg=\"region-simplify\" --linalg-fold-unit-extent-dims --test-func-erase-arg --composite-fixed-point-pass --tosa-reduce-transposes --tosa-layerwise-constant-fold --math-uplift-to-fma --sroa --mem2reg=\"region-simplify\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-math-polynomial-approximation --loop-invariant-code-motion --test-func-set-type --arith-unsigned-when-equivalent --convert-elementwise-to-linalg --test-math-polynomial-approximation=\"enable-avx2\" --test-linalg-pad-fusion --loop-invariant-code-motion --test-math-to-vcix --convert-elementwise-to-linalg --loop-invariant-code-motion --test-func-insert-result --test-func-erase-arg --arith-emulate-wide-int --int-range-optimizations | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-arg --test-linalg-pad-fusion --duplicate-function-elimination --fold-memref-alias-ops --linalg-named-op-conversion --cse --expand-realloc --memref-emulate-wide-int --math-extend-to-supported-types --test-linalg-data-layout-propagation --test-linalg-rank-reduce-contraction-ops --mem2reg=\"region-simplify\" --test-function-pass --test-linalg-rank-reduce-contraction-ops --test-func-erase-arg --canonicalize=\"test-convergence top-down=0\" --resolve-ranked-shaped-type-result-dims | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --memref-emulate-wide-int=\"widest-int-supported=32\" --sccp --test-func-set-type --cse --cse --test-func-insert-result --mem2reg=\"region-simplify\" --test-func-set-type --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-result --mem2reg --test-memref-dependence-check --normalize-memrefs --test-memref-bound-check --memref-emulate-wide-int --expand-realloc --symbol-dce --canonicalize=\"test-convergence\" --test-func-insert-arg --test-func-insert-arg --resolve-ranked-shaped-type-result-dims --memref-expand --test-func-erase-result --memref-expand --test-func-insert-arg --test-func-set-type --remove-dead-values --fold-memref-alias-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --sroa --symbol-dce --sccp --symbol-dce --test-func-erase-arg --loop-invariant-code-motion --test-func-insert-arg --test-func-insert-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-make-broadcastable --mem2reg=\"region-simplify\" --topological-sort --linalg-specialize-generic-ops --test-linalg-greedy-fusion --control-flow-sink --control-flow-sink --linalg-generalize-named-ops --control-flow-sink --test-linalg-drop-unit-dims --composite-fixed-point-pass --tosa-optional-decompositions --convert-elementwise-to-linalg --test-linalg-transform-patterns=\"test-erase-unused-operands-and-results\" --test-math-polynomial-approximation=\"enable-avx2\" --test-linalg-drop-unit-dims | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-specialize-generic-ops --tosa-test-quant-utils --test-linalg-drop-unit-dims --composite-fixed-point-pass --linalg-named-op-conversion --test-linalg-data-layout-propagation --test-math-polynomial-approximation=\"enable-avx2\" --tosa-make-broadcastable --linalg-generalize-named-ops --tosa-make-broadcastable --int-range-optimizations --convert-elementwise-to-linalg --test-func-set-type --canonicalize=\"test-convergence top-down=0\" --arith-unsigned-when-equivalent --arith-emulate-wide-int --test-linalg-pad-fusion --canonicalize --tosa-reduce-transposes --inline --test-linalg-drop-unit-dims --topological-sort --test-math-polynomial-approximation=\"enable-avx2\" --sroa --math-uplift-to-fma --duplicate-function-elimination --math-extend-to-supported-types --test-func-set-type --test-linalg-pad-fusion --linalg-named-op-conversion --tosa-test-quant-utils --loop-invariant-subset-hoisting --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-elementwise-fusion-patterns=\"control-fusion-by-expansion\" --linalg-specialize-generic-ops --arith-unsigned-when-equivalent --linalg-inline-scalar-operands --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --linalg-inline-scalar-operands --fold-tensor-subset-ops --duplicate-function-elimination --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --test-linalg-drop-unit-dims --test-func-erase-arg --test-linalg-transform-patterns=\"test-bubble-up-extract-slice-op-pattern\" --tosa-validate --test-emulate-narrow-int=\"memref-load-bitwidth=32\" --math-uplift-to-fma --tosa-test-quant-utils --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --loop-invariant-subset-hoisting --test-emulate-narrow-int --tosa-make-broadcastable --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-linalg-transform-patterns=\"test-erase-unused-operands-and-results\" --test-linalg-transform-patterns=\"test-decompose-winograd-ops\" --test-linalg-greedy-fusion --arith-unsigned-when-equivalent --arith-expand --test-func-insert-arg --duplicate-function-elimination --math-uplift-to-fma --inline --sccp --test-linalg-greedy-fusion --test-tensor-copy-insertion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-inline-scalar-operands --test-func-insert-result --test-linalg-greedy-fusion --test-math-algebraic-simplification --test-linalg-rank-reduce-contraction-ops --control-flow-sink --arith-emulate-unsupported-floats --test-linalg-transform-patterns=\"test-bubble-up-extract-slice-op-pattern\" --linalg-inline-scalar-operands --test-arith-emulate-wide-int --convert-elementwise-to-linalg --cse --test-func-set-type --loop-invariant-subset-hoisting --test-linalg-greedy-fusion --sccp --loop-invariant-subset-hoisting --test-linalg-greedy-fusion --test-tensor-transform-patterns=\"test-drop-redundant-insert-slice-rank-expansion\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --symbol-dce --arith-expand --test-linalg-transform-patterns=\"test-patterns\" --arith-emulate-wide-int=\"widest-int-supported=32\" --linalg-fuse-elementwise-ops --test-func-insert-result --test-linalg-drop-unit-dims --linalg-inline-scalar-operands --test-tensor-transform-patterns=\"test-rewrite-extract-slice-from-collapse-shape\" --arith-unsigned-when-equivalent --test-function-pass --convert-elementwise-to-linalg --test-func-insert-result --test-tensor-transform-patterns=\"test-reassociative-reshape-folding\" --test-linalg-drop-unit-dims --fold-tensor-subset-ops --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --test-func-insert-result --test-arith-emulate-wide-int --inline --fold-tensor-subset-ops --linalg-named-op-conversion --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-for-loop-peeling=\"skip-partial\" --scf-parallel-loop-fusion --topological-sort --memref-emulate-wide-int=\"widest-int-supported=32\" --test-memref-bound-check --arith-expand | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-memref-bound-check --inline --expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --test-func-erase-arg --tosa-optional-decompositions --canonicalize --sccp --topological-sort --sroa --cse --fold-tensor-subset-ops --cse --tosa-make-broadcastable --test-function-pass --test-function-pass --loop-invariant-code-motion --duplicate-function-elimination --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-expand-math --tosa-optional-decompositions --tosa-optional-decompositions --cse --test-tensor-transform-patterns=\"test-rewrite-extract-slice-from-collapse-shape\" --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --canonicalize --test-func-set-type --math-uplift-to-fma --tosa-optional-decompositions --test-arith-emulate-wide-int --test-linalg-transform-patterns=\"test-patterns\" --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --tosa-infer-shapes --arith-unsigned-when-equivalent --tosa-reduce-transposes --test-math-polynomial-approximation=\"enable-avx2\" --tosa-optional-decompositions --test-math-algebraic-simplification --test-arith-emulate-wide-int --duplicate-function-elimination --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --test-func-insert-arg --test-math-to-vcix --test-func-erase-result --tosa-infer-shapes --test-func-erase-arg --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-expansion\" --math-extend-to-supported-types --composite-fixed-point-pass --loop-invariant-subset-hoisting --inline --tosa-validate --topological-sort --linalg-specialize-generic-ops --convert-elementwise-to-linalg --test-math-to-vcix --test-linalg-pad-fusion --test-math-to-vcix --test-math-polynomial-approximation --convert-elementwise-to-linalg --linalg-generalize-named-ops --tosa-make-broadcastable --tosa-reduce-transposes --convert-elementwise-to-linalg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sroa --test-linalg-elementwise-fusion-patterns=\"control-fusion-by-expansion\" --loop-invariant-subset-hoisting --symbol-dce --composite-fixed-point-pass --symbol-dce --test-tensor-copy-insertion=\"must-infer-memory-space\" --linalg-named-op-conversion --cse --test-func-insert-result --tosa-reduce-transposes --tosa-reduce-transposes --test-func-insert-arg --test-func-set-type --linalg-named-op-conversion --test-func-insert-arg --linalg-generalize-named-ops --test-function-pass --linalg-fold-unit-extent-dims --tosa-make-broadcastable | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --convert-elementwise-to-linalg --test-func-insert-result --resolve-ranked-shaped-type-result-dims --sroa --resolve-ranked-shaped-type-result-dims --test-linalg-pad-fusion --mem2reg=\"region-simplify\" --test-func-erase-arg --resolve-shaped-type-result-dims --composite-fixed-point-pass --test-memref-bound-check --test-memref-dependence-check --test-memref-bound-check --memref-expand --test-memref-bound-check --test-linalg-data-layout-propagation --linalg-generalize-named-ops --test-linalg-drop-unit-dims --sccp --expand-realloc=\"emit-deallocs\" --test-func-set-type --linalg-generalize-named-ops --expand-strided-metadata --test-linalg-pad-fusion --test-linalg-data-layout-propagation --linalg-specialize-generic-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg --sroa --sroa --test-linalg-pad-fusion --test-linalg-data-layout-propagation | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --fold-memref-alias-ops --resolve-shaped-type-result-dims --resolve-shaped-type-result-dims --duplicate-function-elimination --topological-sort --test-func-insert-arg --memref-expand --test-memref-bound-check --sccp --arith-expand=\"include-bf16\" --test-memref-dependence-check --symbol-dce --arith-expand --sccp --memref-emulate-wide-int=\"widest-int-supported=32\" --mem2reg=\"region-simplify\" --loop-invariant-code-motion --test-arith-emulate-wide-int --arith-emulate-unsupported-floats --normalize-memrefs --test-func-erase-result --canonicalize=\"test-convergence top-down=0\" --test-function-pass --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-arg --test-func-insert-result --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --control-flow-sink --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --cse --test-arith-emulate-wide-int --test-function-pass --symbol-dce --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-func-erase-result --sroa --arith-unsigned-when-equivalent --duplicate-function-elimination --symbol-dce --loop-invariant-subset-hoisting --sroa --arith-emulate-wide-int --inline --test-func-set-type --arith-expand=\"include-bf16\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --topological-sort --test-function-pass --loop-invariant-code-motion --mem2reg=\"region-simplify\" --topological-sort --symbol-dce --topological-sort --loop-invariant-subset-hoisting --composite-fixed-point-pass --test-function-pass --canonicalize=\"test-convergence top-down=0\" --test-func-erase-result --duplicate-function-elimination --test-func-set-type --composite-fixed-point-pass --topological-sort --remove-dead-values | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-scf-pipelining=\"no-epilogue-peeling\" --test-func-insert-result --scf-for-loop-canonicalization --linalg-specialize-generic-ops --test-linalg-pad-fusion --arith-emulate-wide-int --linalg-fold-unit-extent-dims --test-linalg-decompose-ops --scf-forall-to-for --scf-parallel-loop-tiling --test-linalg-greedy-fusion --loop-invariant-code-motion --loop-invariant-code-motion --loop-invariant-code-motion --int-range-optimizations --arith-emulate-unsupported-floats --test-func-insert-arg --test-expand-math --inline --fold-tensor-subset-ops --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --test-emulate-narrow-int --duplicate-function-elimination --test-scf-pipelining=\"annotate\" --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-arg --inline --resolve-ranked-shaped-type-result-dims --test-linalg-drop-unit-dims --test-linalg-data-layout-propagation --mem2reg --test-linalg-drop-unit-dims --arith-expand=\"include-bf16\" --cse --arith-emulate-wide-int=\"widest-int-supported=32\" --test-linalg-data-layout-propagation --inline --normalize-memrefs --test-math-algebraic-simplification --test-linalg-transform-patterns=\"test-bubble-up-extract-slice-op-pattern\" --test-func-erase-result --arith-unsigned-when-equivalent --composite-fixed-point-pass --inline --test-linalg-drop-unit-dims --linalg-specialize-generic-ops --test-linalg-transform-patterns=\"test-erase-unnecessary-inputs\" --test-func-insert-result --test-math-polynomial-approximation=\"enable-avx2\" --test-linalg-data-layout-propagation --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --linalg-inline-scalar-operands --test-func-insert-result --resolve-shaped-type-result-dims --linalg-specialize-generic-ops --convert-elementwise-to-linalg --arith-emulate-wide-int --inline --mem2reg --test-func-insert-result --math-extend-to-supported-types --test-expand-math --test-linalg-transform-patterns --test-memref-bound-check --test-func-set-type --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --test-func-set-type --test-linalg-pad-fusion --test-math-polynomial-approximation --arith-emulate-unsupported-floats | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --int-range-optimizations --linalg-specialize-generic-ops --test-memref-bound-check --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-linalg-greedy-fusion --fold-memref-alias-ops --test-func-insert-result --resolve-shaped-type-result-dims --composite-fixed-point-pass --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --linalg-named-op-conversion --sroa --memref-expand --memref-expand --test-func-set-type --linalg-specialize-generic-ops --test-linalg-greedy-fusion --canonicalize=\"test-convergence\" --canonicalize=\"test-convergence top-down=0\" --test-linalg-rank-reduce-contraction-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-greedy-fusion --test-func-erase-arg --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --loop-invariant-code-motion --test-linalg-data-layout-propagation --arith-expand=\"include-bf16\" --test-memref-bound-check --test-func-erase-arg --duplicate-function-elimination --arith-emulate-unsupported-floats --test-arith-emulate-wide-int --arith-int-range-narrowing=\"int-bitwidths-supported=32\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --affine-loop-coalescing --affine-loop-coalescing --fold-memref-alias-ops --affine-loop-normalize | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize=\"test-convergence top-down=0\" --duplicate-function-elimination --test-func-insert-result --sccp --scf-for-loop-peeling --loop-invariant-subset-hoisting --sccp --test-func-insert-result --loop-invariant-code-motion --canonicalize=\"test-convergence\" --scf-parallel-loop-fusion --scf-for-to-while --test-scf-while-op-builder --symbol-dce --loop-invariant-subset-hoisting --loop-invariant-code-motion --duplicate-function-elimination --test-scf-pipelining=\"annotate\" --test-func-erase-arg --sccp --sroa --loop-invariant-subset-hoisting --control-flow-sink --scf-parallel-loop-fusion --composite-fixed-point-pass --test-scf-uplift-while-to-for --remove-dead-values --test-func-insert-result --scf-for-loop-canonicalization --test-scf-uplift-while-to-for --scf-parallel-loop-tiling=\"parallel-loop-tile-sizes=1,4 no-min-max-bounds=true\" --scf-parallel-loop-tiling=\"parallel-loop-tile-sizes=1,4 no-min-max-bounds=true\" --canonicalize --scf-parallel-loop-specialization | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --affine-data-copy-generate=\"generate-dma=false fast-mem-space=0 skip-non-unit-stride-loops\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg --test-func-insert-arg --sccp --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize=\"test-convergence\" --topological-sort --test-function-pass --test-func-erase-result --test-func-insert-arg --loop-invariant-subset-hoisting --cse --test-func-erase-result --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --duplicate-function-elimination --test-func-erase-result --test-func-erase-arg --cse --test-func-erase-arg --test-func-erase-result --composite-fixed-point-pass --test-func-insert-arg --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --duplicate-function-elimination --loop-invariant-subset-hoisting --fold-tensor-subset-ops --symbol-dce --loop-invariant-code-motion --tosa-make-broadcastable --remove-dead-values --tosa-make-broadcastable --test-func-erase-arg --test-tensor-transform-patterns=\"test-reassociative-reshape-folding\" --test-func-erase-arg --loop-invariant-subset-hoisting --tosa-make-broadcastable --test-func-insert-result --topological-sort --topological-sort --symbol-dce --test-tensor-transform-patterns=\"test-rewrite-extract-slice-from-collapse-shape\" --inline --topological-sort --test-function-pass --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --fold-tensor-subset-ops --control-flow-sink --mem2reg=\"region-simplify\" --test-func-erase-arg --sccp --tosa-validate --sroa --tosa-infer-shapes --canonicalize=\"test-convergence\" --tosa-make-broadcastable --test-tensor-copy-insertion=\"must-infer-memory-space\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-tensor-copy-insertion=\"must-infer-memory-space\" --test-func-erase-arg --test-linalg-elementwise-fusion-patterns=\"fuse-multiuse-producer\" --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --arith-unsigned-when-equivalent --math-extend-to-supported-types --test-tensor-copy-insertion --test-linalg-pad-fusion --arith-expand --test-math-to-vcix --symbol-dce --arith-unsigned-when-equivalent --tosa-infer-shapes --test-function-pass --topological-sort --arith-emulate-wide-int --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --test-linalg-data-layout-propagation --test-math-polynomial-approximation=\"enable-avx2\" --arith-expand --test-linalg-rank-reduce-contraction-ops --composite-fixed-point-pass --convert-elementwise-to-linalg --mem2reg --test-linalg-drop-unit-dims --linalg-generalize-named-ops --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --math-uplift-to-fma --composite-fixed-point-pass --composite-fixed-point-pass --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-result --symbol-dce --test-function-pass --test-expand-math --linalg-inline-scalar-operands --test-linalg-elementwise-fusion-patterns=\"fuse-multiuse-producer\" --test-tensor-transform-patterns=\"use-foreach\" --control-flow-sink --test-function-pass --test-math-to-vcix --arith-expand=\"include-bf16\" --duplicate-function-elimination --test-linalg-pad-fusion --arith-emulate-wide-int --topological-sort --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --arith-emulate-wide-int=\"widest-int-supported=32\" --arith-expand --test-linalg-data-layout-propagation --linalg-specialize-generic-ops --cse --mem2reg --arith-expand --sroa --test-linalg-data-layout-propagation --test-linalg-data-layout-propagation --test-func-set-type --math-extend-to-supported-types --mem2reg=\"region-simplify\" --convert-elementwise-to-linalg --arith-expand --linalg-inline-scalar-operands --duplicate-function-elimination --arith-unsigned-when-equivalent --fold-tensor-subset-ops --linalg-generalize-named-ops --linalg-specialize-generic-ops --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-linalg-transform-patterns=\"test-decompose-winograd-ops\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --expand-strided-metadata --arith-emulate-wide-int=\"widest-int-supported=32\" --arith-expand=\"include-bf16\" --duplicate-function-elimination --arith-expand --resolve-ranked-shaped-type-result-dims --arith-expand=\"include-bf16\" --test-func-insert-arg --mem2reg=\"region-simplify\" --test-memref-bound-check --test-memref-dependence-check --cse --memref-emulate-wide-int=\"widest-int-supported=32\" --test-arith-emulate-wide-int=\"widest-int-supported=8\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --int-range-optimizations --test-func-insert-arg --loop-invariant-code-motion --normalize-memrefs --mem2reg=\"region-simplify\" --test-memref-bound-check --loop-invariant-subset-hoisting --resolve-shaped-type-result-dims --test-func-set-type --test-function-pass --test-memref-dependence-check --duplicate-function-elimination --sccp --arith-int-range-narrowing --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --normalize-memrefs --loop-invariant-code-motion --expand-realloc=\"emit-deallocs\" --sroa --test-memref-bound-check | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-unsupported-floats --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --int-range-optimizations --int-range-optimizations --canonicalize=\"test-convergence top-down=0\" --duplicate-function-elimination --test-func-erase-arg --symbol-dce --cse --arith-unsigned-when-equivalent --duplicate-function-elimination --test-func-insert-result --symbol-dce --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --arith-unsigned-when-equivalent --int-range-optimizations --composite-fixed-point-pass --arith-expand --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --test-function-pass --inline --tosa-infer-shapes --tosa-reduce-transposes --composite-fixed-point-pass --test-func-insert-arg --tosa-make-broadcastable --symbol-dce --inline --tosa-make-broadcastable --duplicate-function-elimination --canonicalize=\"test-convergence\" --test-func-erase-arg --test-function-pass --test-func-erase-arg --cse --test-func-set-type --fold-tensor-subset-ops --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --loop-invariant-subset-hoisting --mem2reg=\"region-simplify\" --symbol-dce --inline --cse --loop-invariant-code-motion --remove-dead-values --topological-sort --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-wide-int | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --mem2reg=\"region-simplify\" --test-function-pass --test-linalg-rank-reduce-contraction-ops --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-collapsing-control\" --test-linalg-rank-reduce-contraction-ops --tosa-infer-shapes --test-func-insert-result --test-tensor-copy-insertion=\"must-infer-memory-space\" --test-linalg-transform-patterns --inline --linalg-specialize-generic-ops --tosa-infer-shapes --test-tensor-transform-patterns=\"test-rewrite-extract-slice-from-collapse-shape\" --loop-invariant-code-motion --test-func-erase-result --tosa-make-broadcastable --sroa --tosa-infer-shapes --tosa-test-quant-utils --tosa-infer-shapes --topological-sort --loop-invariant-code-motion --tosa-optional-decompositions --test-linalg-greedy-fusion --convert-elementwise-to-linalg --fold-tensor-subset-ops --test-linalg-greedy-fusion --test-linalg-drop-unit-dims --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --control-flow-sink --linalg-fold-unit-extent-dims --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --canonicalize --test-linalg-drop-unit-dims --test-linalg-data-layout-propagation --test-math-algebraic-simplification --test-function-pass --test-func-insert-result --cse --test-math-polynomial-approximation --tosa-test-quant-utils --linalg-fuse-elementwise-ops --linalg-fuse-elementwise-ops --tosa-infer-shapes --test-func-erase-arg --tosa-infer-shapes --test-math-polynomial-approximation --linalg-named-op-conversion --test-math-to-vcix --symbol-dce --linalg-fold-unit-extent-dims --canonicalize=\"test-convergence\" --linalg-specialize-generic-ops --test-math-to-vcix --symbol-dce --linalg-fold-unit-extent-dims | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --memref-emulate-wide-int=\"widest-int-supported=32\" --test-func-insert-result --duplicate-function-elimination --test-func-insert-arg --test-memref-dependence-check --linalg-fuse-elementwise-ops --test-linalg-drop-unit-dims --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-arg --sccp --mem2reg --normalize-memrefs --linalg-inline-scalar-operands --test-memref-bound-check --test-linalg-pad-fusion --math-uplift-to-fma --convert-elementwise-to-linalg --test-math-polynomial-approximation=\"enable-avx2\" --normalize-memrefs --linalg-named-op-conversion --test-math-polynomial-approximation --memref-expand --normalize-memrefs --test-math-polynomial-approximation=\"enable-avx2\" --linalg-generalize-named-ops --resolve-shaped-type-result-dims --symbol-dce --loop-invariant-subset-hoisting --topological-sort --test-function-pass --test-memref-dependence-check --normalize-memrefs --math-uplift-to-fma --test-linalg-rank-reduce-contraction-ops --test-linalg-greedy-fusion --test-memref-bound-check --test-math-to-vcix --test-linalg-rank-reduce-contraction-ops --canonicalize=\"test-convergence top-down=0\" --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --test-func-erase-arg --linalg-fold-unit-extent-dims --normalize-memrefs --test-func-erase-result --test-linalg-drop-unit-dims --test-linalg-drop-unit-dims --test-memref-bound-check | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-named-op-conversion --test-func-insert-result --loop-invariant-subset-hoisting --test-memref-bound-check --duplicate-function-elimination --composite-fixed-point-pass --test-linalg-drop-unit-dims --test-func-erase-arg --linalg-specialize-generic-ops --test-memref-dependence-check --expand-strided-metadata --test-linalg-pad-fusion --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --test-scf-if-utils --test-scf-uplift-while-to-for --mem2reg=\"region-simplify\" --scf-parallel-loop-fusion --symbol-dce --scf-parallel-loop-tiling --scf-for-loop-canonicalization --test-func-set-type --control-flow-sink --test-scf-for-utils=\"test-replace-with-new-yields\" --topological-sort --scf-for-loop-specialization --test-func-erase-arg --arith-int-range-narrowing --test-function-pass --test-func-erase-arg --mem2reg=\"region-simplify\" --test-func-erase-result --test-func-set-type --test-emulate-narrow-int --test-scf-while-op-builder --scf-parallel-loop-fusion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --sroa --inline --test-func-insert-result --int-range-optimizations --test-func-set-type --canonicalize=\"test-convergence\" --sccp --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --control-flow-sink --cse --test-func-insert-arg --symbol-dce --test-arith-emulate-wide-int=\"widest-int-supported=8\" --inline --canonicalize=\"test-convergence top-down=0\" --symbol-dce --test-func-erase-arg --test-func-insert-arg --topological-sort --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --fold-tensor-subset-ops --fold-tensor-subset-ops --test-func-insert-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-tensor-transform-patterns=\"test-drop-redundant-insert-slice-rank-expansion\" --cse --test-tensor-transform-patterns=\"test-fold-consecutive-insert-extract-slice\" --test-math-polynomial-approximation=\"enable-avx2\" --linalg-inline-scalar-operands --loop-invariant-subset-hoisting --math-uplift-to-fma --test-linalg-rank-reduce-contraction-ops --fold-tensor-subset-ops --linalg-fuse-elementwise-ops --int-range-optimizations --test-func-erase-arg --tosa-make-broadcastable --symbol-dce --test-expand-math --int-range-optimizations --arith-emulate-unsupported-floats --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --math-extend-to-supported-types --symbol-dce --arith-emulate-unsupported-floats --test-linalg-greedy-fusion --test-emulate-narrow-int --int-range-optimizations --test-func-erase-arg --tosa-infer-shapes | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-wide-int --arith-expand --arith-unsigned-when-equivalent --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --linalg-named-op-conversion --linalg-fuse-elementwise-ops --arith-emulate-wide-int --composite-fixed-point-pass --test-func-erase-arg --linalg-inline-scalar-operands --convert-elementwise-to-linalg --linalg-fuse-elementwise-ops --duplicate-function-elimination --arith-emulate-wide-int=\"widest-int-supported=32\" --arith-int-range-narrowing --test-memref-bound-check --linalg-fold-unit-extent-dims --test-arith-emulate-wide-int --convert-elementwise-to-linalg --canonicalize=\"test-convergence top-down=0\" --topological-sort --test-memref-bound-check --mem2reg --resolve-ranked-shaped-type-result-dims --memref-emulate-wide-int --control-flow-sink --fold-memref-alias-ops --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --test-func-erase-result --test-function-pass --test-emulate-narrow-int=\"memref-load-bitwidth=8\" --fold-memref-alias-ops --arith-expand --sroa --scf-forall-to-for | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-forall-to-for --test-function-pass --arith-emulate-unsupported-floats --scf-for-loop-canonicalization --test-memref-bound-check --inline --mem2reg --composite-fixed-point-pass --test-memref-dependence-check --scf-for-loop-peeling --canonicalize --cse --test-scf-if-utils --sroa --scf-parallel-loop-fusion --arith-expand --scf-for-loop-canonicalization --arith-emulate-unsupported-floats --test-func-insert-result --sccp --sroa --test-func-erase-arg --test-func-insert-result --loop-invariant-code-motion --test-scf-if-utils --scf-forall-to-for --test-arith-emulate-wide-int --test-scf-pipelining=\"no-epilogue-peeling\" --scf-for-loop-specialization --test-func-erase-result --resolve-ranked-shaped-type-result-dims --test-scf-uplift-while-to-for --test-scf-pipelining=\"no-epilogue-peeling\" --int-range-optimizations --topological-sort --expand-realloc --resolve-ranked-shaped-type-result-dims --test-memref-dependence-check --expand-strided-metadata --scf-for-loop-range-folding --duplicate-function-elimination --sroa --loop-invariant-subset-hoisting --sccp --test-scf-for-utils=\"test-replace-with-new-yields\" --test-function-pass --duplicate-function-elimination --test-func-set-type --normalize-memrefs --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --memref-emulate-wide-int=\"widest-int-supported=32\" --test-scf-if-utils --remove-dead-values | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --control-flow-sink --scf-forall-to-for --topological-sort --remove-dead-values --test-func-set-type --test-emulate-narrow-int=\"memref-load-bitwidth=32\" --arith-emulate-unsupported-floats --scf-for-to-while --scf-for-loop-canonicalization | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --int-range-optimizations --control-flow-sink --duplicate-function-elimination --control-flow-sink --symbol-dce --test-func-set-type --topological-sort --arith-expand=\"include-bf16\" --arith-expand=\"include-bf16\" --test-func-insert-arg --int-range-optimizations --arith-emulate-wide-int --arith-emulate-unsupported-floats --test-func-erase-result --cse --topological-sort --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --duplicate-function-elimination --canonicalize=\"test-convergence\" --control-flow-sink --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-function-pass --arith-emulate-wide-int --test-arith-emulate-wide-int=\"widest-int-supported=8\" --arith-emulate-wide-int=\"widest-int-supported=32\" --arith-unsigned-when-equivalent | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --topological-sort --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --tosa-infer-shapes --test-function-pass --duplicate-function-elimination --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --control-flow-sink --inline --tosa-validate --cse --tosa-layerwise-constant-fold --composite-fixed-point-pass --test-func-insert-result --test-function-pass --fold-tensor-subset-ops --tosa-optional-decompositions --remove-dead-values --sroa --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-reduce-transposes --loop-invariant-code-motion --test-linalg-drop-unit-dims --sccp --test-linalg-drop-unit-dims --control-flow-sink --test-math-to-vcix --test-linalg-drop-unit-dims --test-function-pass --test-math-polynomial-approximation --convert-elementwise-to-linalg --int-range-optimizations --linalg-named-op-conversion --arith-emulate-wide-int --tosa-layerwise-constant-fold --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --sroa --tosa-test-quant-utils --topological-sort --symbol-dce --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-linalg-elementwise-fusion-patterns=\"collapse-dimensions-control=2,3\" --linalg-fuse-elementwise-ops --convert-elementwise-to-linalg --int-range-optimizations --tosa-infer-shapes --tosa-infer-shapes --test-expand-math --topological-sort --tosa-make-broadcastable --linalg-generalize-named-ops --test-linalg-rank-reduce-contraction-ops --sccp --test-expand-math --sroa --duplicate-function-elimination --linalg-specialize-generic-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --resolve-ranked-shaped-type-result-dims --duplicate-function-elimination --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --loop-invariant-subset-hoisting --test-func-erase-result --memref-emulate-wide-int --test-function-pass --sroa --normalize-memrefs --test-func-insert-result --topological-sort --arith-emulate-wide-int --expand-strided-metadata --test-func-erase-result --arith-emulate-wide-int=\"widest-int-supported=32\" --arith-unsigned-when-equivalent --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --expand-realloc=\"emit-deallocs\" --fold-memref-alias-ops --inline --resolve-shaped-type-result-dims --memref-expand --test-func-set-type --test-memref-dependence-check --composite-fixed-point-pass --memref-expand --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --memref-expand --memref-emulate-wide-int=\"widest-int-supported=32\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --test-func-erase-arg --test-func-insert-result --inline --test-func-erase-arg --test-func-erase-arg --symbol-dce --symbol-dce --tosa-optional-decompositions | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-reduce-transposes --tosa-make-broadcastable --test-func-erase-arg --loop-invariant-code-motion --tosa-reduce-transposes --tosa-optional-decompositions --canonicalize --test-func-insert-result --loop-invariant-subset-hoisting --inline --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-expand --duplicate-function-elimination --cse --symbol-dce --tosa-test-quant-utils --composite-fixed-point-pass --arith-int-range-narrowing=\"int-bitwidths-supported=32\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --int-range-optimizations --test-arith-emulate-wide-int --arith-expand=\"include-bf16\" --memref-emulate-wide-int=\"widest-int-supported=32\" --cse --test-memref-dependence-check --control-flow-sink --test-math-polynomial-approximation --duplicate-function-elimination --test-math-polynomial-approximation=\"enable-avx2\" --expand-realloc=\"emit-deallocs\" --math-extend-to-supported-types --test-math-to-vcix --normalize-memrefs --test-func-insert-arg --control-flow-sink --loop-invariant-subset-hoisting --linalg-generalize-named-ops --linalg-inline-scalar-operands --linalg-named-op-conversion --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --test-func-insert-result --loop-invariant-code-motion --sccp --sroa --sccp --canonicalize=\"test-convergence top-down=0\" --linalg-specialize-generic-ops --test-linalg-rank-reduce-contraction-ops --test-func-insert-result --linalg-inline-scalar-operands --linalg-named-op-conversion --test-linalg-transform-patterns=\"test-swap-subtensor-padtensor\" --linalg-specialize-generic-ops --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --sroa --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --symbol-dce --arith-int-range-narrowing --arith-emulate-wide-int --arith-unsigned-when-equivalent --arith-emulate-unsupported-floats --symbol-dce --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --remove-dead-values --arith-expand --test-func-insert-result --test-func-erase-arg --remove-dead-values | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --duplicate-function-elimination --topological-sort --sroa --sccp --canonicalize=\"test-convergence top-down=0\" --loop-invariant-subset-hoisting --test-func-insert-arg --inline --test-func-erase-result --loop-invariant-code-motion --mem2reg --loop-invariant-subset-hoisting --test-func-set-type --canonicalize=\"test-convergence\" --symbol-dce --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --symbol-dce --loop-invariant-subset-hoisting --tosa-infer-shapes --test-func-insert-result --loop-invariant-code-motion --test-func-set-type --tosa-reduce-transposes --tosa-layerwise-constant-fold --test-function-pass --cse --sroa --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-infer-shapes --control-flow-sink --symbol-dce --test-func-erase-arg --sccp --test-tensor-transform-patterns=\"test-fold-constant-extract-slice\" --loop-invariant-subset-hoisting --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-arg --test-tensor-transform-patterns=\"test-drop-redundant-insert-slice-rank-expansion\" --test-linalg-decompose-ops --test-expand-math --duplicate-function-elimination --tosa-optional-decompositions --test-linalg-greedy-fusion --test-func-erase-arg --test-linalg-decompose-ops --test-linalg-transform-patterns=\"test-bubble-up-extract-slice-op-pattern\" --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-collapsing\" --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --test-func-erase-arg --test-func-erase-result --test-tensor-transform-patterns=\"test-rewrite-extract-slice-from-collapse-shape\" --tosa-make-broadcastable --convert-elementwise-to-linalg --test-linalg-elementwise-fusion-patterns --control-flow-sink --arith-emulate-wide-int=\"widest-int-supported=32\" --test-math-polynomial-approximation --arith-expand --sccp --mem2reg --test-linalg-transform-patterns=\"test-swap-extract-slice-with-fill-pattern\" --test-tensor-copy-insertion --symbol-dce --control-flow-sink --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --linalg-specialize-generic-ops --inline --test-math-algebraic-simplification --math-uplift-to-fma --test-linalg-data-layout-propagation --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --test-expand-math --test-func-insert-result --composite-fixed-point-pass --test-linalg-drop-unit-dims --test-linalg-elementwise-fusion-patterns --arith-int-range-narrowing --symbol-dce --test-linalg-drop-unit-dims --composite-fixed-point-pass --test-function-pass --test-tensor-copy-insertion=\"must-infer-memory-space\" --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --linalg-named-op-conversion --test-func-insert-arg --math-extend-to-supported-types --topological-sort --test-math-algebraic-simplification --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-specialize-generic-ops --sroa --test-linalg-decompose-ops --test-func-set-type --fold-tensor-subset-ops --sccp --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-decompose-ops --test-function-pass --expand-realloc --canonicalize --loop-invariant-code-motion --canonicalize=\"test-convergence\" --test-func-insert-arg --memref-emulate-wide-int --test-func-set-type --test-func-erase-arg --memref-emulate-wide-int --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-expansion\" --resolve-ranked-shaped-type-result-dims --loop-invariant-subset-hoisting --control-flow-sink --test-memref-dependence-check --linalg-inline-scalar-operands --test-linalg-decompose-ops --sroa --test-linalg-pad-fusion --duplicate-function-elimination --expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --test-function-pass --test-scf-uplift-while-to-for --test-function-pass --test-memref-dependence-check --scf-for-loop-peeling=\"skip-partial\" --test-scf-if-utils | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --test-func-erase-result --duplicate-function-elimination --test-func-insert-result --duplicate-function-elimination --sroa --canonicalize --topological-sort --test-function-pass --test-func-set-type --test-func-insert-result --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --test-function-pass --test-func-insert-result --loop-invariant-subset-hoisting --inline --duplicate-function-elimination --cse --test-function-pass --remove-dead-values --test-func-erase-result --cse --canonicalize=\"test-convergence top-down=0\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --tosa-reduce-transposes --test-func-erase-arg --fold-tensor-subset-ops --test-func-erase-result --duplicate-function-elimination --remove-dead-values --topological-sort --test-tensor-copy-insertion=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-arg --inline --symbol-dce --tosa-infer-shapes --test-function-pass --sccp --tosa-validate --sccp --test-func-insert-arg --mem2reg=\"region-simplify\" --test-func-set-type --tosa-test-quant-utils | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-result --inline --test-tensor-copy-insertion --mem2reg=\"region-simplify\" --arith-expand --duplicate-function-elimination --tosa-layerwise-constant-fold --test-emulate-narrow-int=\"memref-load-bitwidth=8\" --test-func-insert-result --test-func-insert-arg --loop-invariant-subset-hoisting --cse --sroa --topological-sort --test-func-insert-arg --topological-sort --tosa-validate --test-func-insert-arg --remove-dead-values --inline --test-arith-emulate-wide-int --tosa-infer-shapes --loop-invariant-code-motion --remove-dead-values | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --control-flow-sink --test-func-insert-result --test-func-insert-arg --composite-fixed-point-pass --topological-sort --sroa --test-tensor-transform-patterns=\"test-reassociative-reshape-folding\" --arith-expand=\"include-bf16\" --test-tensor-transform-patterns=\"test-fold-constant-extract-slice\" --arith-unsigned-when-equivalent --test-func-erase-arg --arith-expand --inline --int-range-optimizations --tosa-optional-decompositions --tosa-test-quant-utils --symbol-dce --tosa-test-quant-utils | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --arith-int-range-narrowing --control-flow-sink --inline --symbol-dce --mem2reg --inline --inline --cse --fold-tensor-subset-ops --test-tensor-transform-patterns=\"test-fold-consecutive-insert-extract-slice\" --sccp --test-math-algebraic-simplification --test-math-polynomial-approximation=\"enable-avx2\" --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-linalg-drop-unit-dims --arith-expand --loop-invariant-code-motion --fold-tensor-subset-ops --canonicalize=\"test-convergence\" --linalg-generalize-named-ops --arith-emulate-unsupported-floats --arith-emulate-unsupported-floats --loop-invariant-subset-hoisting --cse --arith-emulate-unsupported-floats --test-func-set-type --test-linalg-rank-reduce-contraction-ops --test-func-erase-arg --math-uplift-to-fma --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --test-linalg-pad-fusion --canonicalize=\"test-convergence\" --linalg-named-op-conversion --linalg-fold-unit-extent-dims --linalg-named-op-conversion --arith-unsigned-when-equivalent --arith-emulate-wide-int=\"widest-int-supported=32\" --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-memref-dependence-check --math-uplift-to-fma --memref-expand --convert-elementwise-to-linalg --linalg-inline-scalar-operands --test-linalg-pad-fusion --linalg-specialize-generic-ops --sccp --test-memref-dependence-check | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --loop-invariant-subset-hoisting --test-func-erase-arg --inline --mem2reg --normalize-memrefs --test-memref-dependence-check --memref-expand --convert-elementwise-to-linalg --test-linalg-greedy-fusion --math-extend-to-supported-types --duplicate-function-elimination --test-linalg-decompose-ops --test-math-polynomial-approximation=\"enable-avx2\" --sroa --memref-emulate-wide-int=\"widest-int-supported=32\" --test-linalg-rank-reduce-contraction-ops --test-expand-math --linalg-specialize-generic-ops --test-func-insert-result --symbol-dce --sroa --fold-memref-alias-ops --test-linalg-elementwise-fusion-patterns=\"collapse-dimensions-control=2,3\" --linalg-generalize-named-ops --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --inline --test-linalg-data-layout-propagation --test-math-polynomial-approximation=\"enable-avx2\" --math-extend-to-supported-types --test-linalg-pad-fusion --resolve-shaped-type-result-dims --test-linalg-decompose-ops --math-extend-to-supported-types --linalg-named-op-conversion --test-linalg-elementwise-fusion-patterns=\"fuse-generic-ops-control\" --test-linalg-data-layout-propagation --linalg-generalize-named-ops --duplicate-function-elimination --test-linalg-data-layout-propagation --test-linalg-transform-patterns=\"test-decompose-winograd-ops\" --memref-expand --test-func-insert-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-drop-unit-dims --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --test-linalg-elementwise-fusion-patterns=\"fuse-multiuse-producer\" --mem2reg=\"region-simplify\" --convert-elementwise-to-linalg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-data-layout-propagation --canonicalize=\"test-convergence top-down=0\" --loop-invariant-code-motion --test-func-insert-result --test-linalg-drop-unit-dims | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-for-loop-specialization --duplicate-function-elimination --fold-memref-alias-ops --scf-forall-to-parallel --memref-emulate-wide-int --test-scf-while-op-builder --arith-emulate-wide-int --sroa --test-memref-bound-check --cse --sccp --scf-for-loop-canonicalization --test-scf-while-op-builder --mem2reg=\"region-simplify\" --scf-parallel-loop-specialization --memref-expand --test-memref-bound-check --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --arith-int-range-narrowing --scf-for-loop-canonicalization | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --control-flow-sink --canonicalize=\"test-convergence top-down=0\" --mem2reg=\"region-simplify\" --loop-invariant-subset-hoisting --arith-int-range-narrowing --memref-expand --memref-emulate-wide-int --topological-sort --sroa --test-func-erase-arg --test-func-insert-result --test-func-insert-arg --inline --mem2reg --test-func-erase-result --test-memref-bound-check --test-func-insert-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --expand-realloc=\"emit-deallocs\" --test-func-set-type --topological-sort --loop-invariant-subset-hoisting --cse --remove-dead-values --test-func-erase-arg --loop-invariant-code-motion --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --sccp --symbol-dce --composite-fixed-point-pass --mem2reg --duplicate-function-elimination --test-func-erase-result --canonicalize=\"test-convergence\" --inline --test-function-pass --test-func-erase-arg --test-function-pass --loop-invariant-subset-hoisting --test-func-erase-result --topological-sort --test-func-insert-arg --test-func-set-type --duplicate-function-elimination --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --test-function-pass --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --fold-tensor-subset-ops --remove-dead-values --composite-fixed-point-pass --test-func-erase-result --sroa --remove-dead-values --test-func-insert-arg --test-tensor-transform-patterns --composite-fixed-point-pass --tosa-test-quant-utils --tosa-optional-decompositions | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-result --arith-unsigned-when-equivalent --linalg-named-op-conversion --arith-expand=\"include-bf16\" --test-tensor-copy-insertion=\"must-infer-memory-space\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --test-math-polynomial-approximation --test-tensor-transform-patterns=\"use-foreach\" --tosa-infer-shapes --fold-tensor-subset-ops --sccp --test-func-insert-result --convert-elementwise-to-linalg --symbol-dce --inline --test-linalg-decompose-ops --composite-fixed-point-pass --test-math-polynomial-approximation --fold-tensor-subset-ops --convert-elementwise-to-linalg --test-linalg-greedy-fusion --arith-unsigned-when-equivalent --test-math-to-vcix --tosa-infer-shapes --tosa-optional-decompositions --test-linalg-rank-reduce-contraction-ops --canonicalize=\"test-convergence top-down=0\" --mem2reg --linalg-generalize-named-ops --test-func-erase-result --duplicate-function-elimination --arith-expand=\"include-bf16\" --test-linalg-data-layout-propagation --loop-invariant-code-motion --test-linalg-data-layout-propagation --convert-elementwise-to-linalg --symbol-dce --test-math-polynomial-approximation=\"enable-avx2\" --test-linalg-transform-patterns=\"test-decompose-winograd-ops\" --convert-elementwise-to-linalg --test-math-polynomial-approximation=\"enable-avx2\" --topological-sort --test-math-to-vcix --convert-elementwise-to-linalg --test-linalg-pad-fusion --test-math-to-vcix --math-uplift-to-fma --test-linalg-rank-reduce-contraction-ops --test-math-to-vcix --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --cse --arith-emulate-unsupported-floats --duplicate-function-elimination --test-func-set-type --tosa-reduce-transposes --cse --convert-elementwise-to-linalg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-math-algebraic-simplification --tosa-reduce-transposes --linalg-specialize-generic-ops --test-math-to-vcix --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --test-linalg-greedy-fusion --linalg-named-op-conversion --sroa --fold-tensor-subset-ops --topological-sort --tosa-make-broadcastable --test-expand-math --math-uplift-to-fma --test-function-pass --tosa-infer-shapes --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --convert-elementwise-to-linalg --test-arith-emulate-wide-int --test-linalg-transform-patterns=\"test-bubble-up-extract-slice-op-pattern\" --linalg-named-op-conversion --linalg-fuse-elementwise-ops --symbol-dce --test-linalg-drop-unit-dims --topological-sort --canonicalize=\"test-convergence top-down=0\" --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --test-linalg-rank-reduce-contraction-ops --arith-emulate-wide-int=\"widest-int-supported=32\" --test-arith-emulate-wide-int --arith-int-range-narrowing --composite-fixed-point-pass --test-linalg-greedy-fusion --arith-emulate-unsupported-floats --test-emulate-narrow-int=\"arith-compute-bitwidth=8\" --test-tensor-copy-insertion=\"must-infer-memory-space\" --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --sroa --test-function-pass --duplicate-function-elimination --topological-sort --loop-invariant-subset-hoisting --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-tensor-transform-patterns=\"test-fold-constant-extract-slice\" --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --test-linalg-pad-fusion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-arg --int-range-optimizations --expand-strided-metadata --topological-sort --memref-expand --resolve-ranked-shaped-type-result-dims --cse --memref-emulate-wide-int --memref-emulate-wide-int=\"widest-int-supported=32\" --memref-emulate-wide-int --test-func-erase-result --mem2reg --linalg-fuse-elementwise-ops --linalg-named-op-conversion --test-linalg-pad-fusion --test-linalg-data-layout-propagation --resolve-ranked-shaped-type-result-dims --test-memref-dependence-check --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --test-linalg-elementwise-fusion-patterns=\"control-fusion-by-expansion\" --memref-expand --arith-emulate-unsupported-floats --int-range-optimizations --linalg-named-op-conversion --test-linalg-greedy-fusion --test-func-insert-arg --expand-strided-metadata --test-linalg-pad-fusion --test-func-erase-arg --linalg-specialize-generic-ops --test-func-insert-arg --mem2reg=\"region-simplify\" --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --mem2reg --linalg-inline-scalar-operands --cse --arith-emulate-wide-int --arith-unsigned-when-equivalent --normalize-memrefs --normalize-memrefs --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-inline-scalar-operands --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --arith-unsigned-when-equivalent --symbol-dce --test-func-erase-result --test-linalg-greedy-fusion --linalg-fuse-elementwise-ops --composite-fixed-point-pass --test-linalg-elementwise-fusion-patterns=\"fuse-generic-ops-control\" --loop-invariant-subset-hoisting --loop-invariant-subset-hoisting --linalg-inline-scalar-operands | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-unsigned-when-equivalent --control-flow-sink --expand-realloc=\"emit-deallocs\" --scf-forall-to-parallel --test-scf-pipelining=\"no-epilogue-peeling\" --test-scf-if-utils --symbol-dce --expand-strided-metadata --sroa --memref-expand --test-func-erase-arg --test-func-erase-arg --arith-emulate-unsupported-floats --test-scf-pipelining=\"no-epilogue-peeling\" --int-range-optimizations --loop-invariant-code-motion --test-func-erase-result --control-flow-sink --fold-memref-alias-ops --scf-parallel-loop-tiling --int-range-optimizations --scf-for-loop-specialization --loop-invariant-subset-hoisting --scf-for-loop-specialization --arith-emulate-wide-int=\"widest-int-supported=32\" --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --test-func-erase-result --mem2reg=\"region-simplify\" --topological-sort --loop-invariant-subset-hoisting --memref-expand | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg=\"region-simplify\" --test-func-insert-result --test-scf-for-utils=\"test-replace-with-new-yields\" --test-scf-while-op-builder --scf-parallel-loop-tiling --test-scf-if-utils --control-flow-sink --scf-forall-to-for --scf-for-to-while --sroa --sccp --inline --scf-for-loop-peeling=\"peel-front\" --test-func-insert-arg --duplicate-function-elimination --scf-parallel-loop-fusion --test-scf-pipelining=\"no-epilogue-peeling\" --composite-fixed-point-pass --test-scf-for-utils --duplicate-function-elimination --topological-sort --test-func-set-type --scf-for-loop-range-folding --remove-dead-values --test-func-insert-arg --duplicate-function-elimination --remove-dead-values --scf-for-loop-range-folding --scf-for-loop-canonicalization --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-unsupported-floats --test-func-insert-arg --inline --test-func-set-type --test-func-erase-arg --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --arith-emulate-wide-int --sccp --sroa --arith-expand=\"include-bf16\" --test-func-set-type --test-func-erase-result --loop-invariant-subset-hoisting --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --test-func-erase-arg --test-func-set-type --test-func-erase-result --test-func-insert-result --duplicate-function-elimination --mem2reg=\"region-simplify\" --sroa --sccp --duplicate-function-elimination --test-func-erase-result --test-func-erase-arg --cse --test-func-set-type --mem2reg --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --loop-invariant-code-motion --test-tensor-transform-patterns=\"test-rewrite-extract-slice-from-collapse-shape\" --test-func-insert-arg --tosa-make-broadcastable --test-function-pass --test-tensor-copy-insertion=\"must-infer-memory-space\" --sccp --loop-invariant-subset-hoisting --tosa-make-broadcastable --tosa-reduce-transposes --mem2reg=\"region-simplify\" --topological-sort --fold-tensor-subset-ops --test-func-insert-arg --duplicate-function-elimination --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --tosa-optional-decompositions --tosa-infer-shapes | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg=\"region-simplify\" --test-func-erase-arg --test-func-set-type --loop-invariant-subset-hoisting --tosa-layerwise-constant-fold --mem2reg --inline --tosa-infer-shapes --tosa-validate | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-func-insert-result --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --test-func-set-type --test-math-algebraic-simplification --test-func-insert-result --canonicalize=\"test-convergence\" --control-flow-sink --test-func-set-type --test-math-to-vcix --topological-sort --inline --cse --test-func-insert-result --test-math-algebraic-simplification --test-math-algebraic-simplification --test-math-polynomial-approximation --loop-invariant-code-motion --sccp --loop-invariant-subset-hoisting --test-math-to-vcix --topological-sort --test-func-erase-result --composite-fixed-point-pass --cse --sccp --sroa --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-arg --mem2reg=\"region-simplify\" --cse --inline --sccp --loop-invariant-code-motion --composite-fixed-point-pass --duplicate-function-elimination --control-flow-sink --sroa --sccp --mem2reg=\"region-simplify\" --test-func-set-type --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --test-func-erase-result --test-func-set-type --loop-invariant-subset-hoisting --inline --mem2reg --cse --composite-fixed-point-pass --test-func-insert-arg --canonicalize=\"test-convergence\" --test-func-insert-result --canonicalize --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --test-func-erase-result --test-func-set-type --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --tosa-test-quant-utils --tosa-infer-shapes --tosa-reduce-transposes --test-function-pass --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --test-func-erase-arg --mem2reg=\"region-simplify\" --test-linalg-elementwise-fusion-patterns --linalg-specialize-generic-ops --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --inline --test-math-to-vcix --math-extend-to-supported-types --tosa-test-quant-utils --int-range-optimizations --test-func-set-type --test-linalg-drop-unit-dims --convert-elementwise-to-linalg --arith-emulate-wide-int --sccp --test-arith-emulate-wide-int=\"widest-int-supported=8\" --cse --int-range-optimizations --loop-invariant-subset-hoisting --sccp --sccp --tosa-make-broadcastable --tosa-make-broadcastable --tosa-test-quant-utils --cse --convert-elementwise-to-linalg --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --sroa --duplicate-function-elimination --math-extend-to-supported-types --test-math-polynomial-approximation=\"enable-avx2\" --topological-sort --test-tensor-copy-insertion --test-tensor-transform-patterns=\"test-fold-consecutive-insert-extract-slice\" --linalg-generalize-named-ops --linalg-specialize-generic-ops --sroa --linalg-named-op-conversion --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --symbol-dce --test-linalg-pad-fusion --arith-emulate-wide-int=\"widest-int-supported=32\" --linalg-fuse-elementwise-ops --arith-expand --test-func-erase-result --loop-invariant-code-motion --test-linalg-decompose-ops --linalg-fold-unit-extent-dims --test-tensor-transform-patterns=\"test-fold-constant-extract-slice\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-rank-reduce-contraction-ops --test-func-insert-arg --test-linalg-data-layout-propagation --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --test-func-set-type --test-func-erase-arg --test-func-erase-arg --sccp --linalg-fuse-elementwise-ops --duplicate-function-elimination --fold-tensor-subset-ops --test-linalg-transform-patterns=\"test-erase-unused-operands-and-results\" --canonicalize=\"test-convergence\" --symbol-dce --test-math-to-vcix --test-math-polynomial-approximation=\"enable-avx2\" --linalg-inline-scalar-operands --test-func-erase-arg --test-expand-math --cse --test-linalg-greedy-fusion --test-math-to-vcix --test-function-pass --test-linalg-greedy-fusion --linalg-named-op-conversion --fold-tensor-subset-ops --test-function-pass --fold-tensor-subset-ops --topological-sort --test-function-pass --test-func-insert-result --test-math-polynomial-approximation | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg=\"region-simplify\" --test-linalg-transform-patterns=\"test-swap-extract-slice-with-fill-pattern\" --test-func-insert-arg --linalg-generalize-named-ops --test-tensor-transform-patterns=\"test-reassociative-reshape-folding\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-math-to-vcix --control-flow-sink --test-func-insert-arg --test-math-algebraic-simplification --test-expand-math --remove-dead-values --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --loop-invariant-subset-hoisting --test-func-erase-result --test-func-erase-arg --test-math-algebraic-simplification --test-func-insert-arg --test-memref-dependence-check --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --expand-realloc=\"emit-deallocs\" --test-func-erase-arg --normalize-memrefs --test-func-insert-arg --test-memref-dependence-check --mem2reg=\"region-simplify\" --control-flow-sink --test-function-pass --test-func-insert-result --composite-fixed-point-pass --test-memref-dependence-check --loop-invariant-subset-hoisting --test-func-erase-result --test-func-erase-arg --test-function-pass --loop-invariant-subset-hoisting --math-extend-to-supported-types --test-math-to-vcix --expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sroa --symbol-dce --sroa --expand-strided-metadata --test-memref-dependence-check --test-func-set-type --loop-invariant-subset-hoisting --expand-realloc --test-function-pass --test-memref-bound-check --resolve-shaped-type-result-dims --sroa --mem2reg --loop-invariant-subset-hoisting --mem2reg=\"region-simplify\" --test-func-erase-arg --test-func-erase-result --cse --test-function-pass --symbol-dce --sroa --topological-sort --cse --resolve-ranked-shaped-type-result-dims --test-function-pass --duplicate-function-elimination --test-func-insert-arg --inline --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --test-func-insert-result --sroa --symbol-dce --canonicalize --remove-dead-values --test-func-set-type --duplicate-function-elimination --duplicate-function-elimination --control-flow-sink --remove-dead-values --test-func-erase-arg --mem2reg=\"region-simplify\" --loop-invariant-code-motion --test-func-erase-result --test-func-set-type --test-func-set-type --test-func-erase-result --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --remove-dead-values --test-func-insert-arg --tosa-make-broadcastable --test-func-erase-result --cse --cse --tosa-reduce-transposes | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-collapsing\" --test-expand-math --composite-fixed-point-pass --linalg-named-op-conversion --test-linalg-data-layout-propagation --test-linalg-data-layout-propagation --test-expand-math --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --arith-expand=\"include-bf16\" --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-scf-while-op-builder --test-func-insert-result --math-uplift-to-fma --loop-invariant-code-motion --test-func-erase-result --scf-for-loop-canonicalization --test-arith-emulate-wide-int=\"widest-int-supported=8\" --scf-for-loop-peeling=\"peel-front\" --test-scf-uplift-while-to-for --loop-invariant-code-motion --duplicate-function-elimination --test-func-erase-result --scf-for-to-while --scf-parallel-loop-tiling=\"parallel-loop-tile-sizes=1,4 no-min-max-bounds=true\" --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-math-polynomial-approximation --symbol-dce --sroa --test-scf-while-op-builder --sccp --test-func-insert-result --test-math-algebraic-simplification --scf-for-loop-peeling=\"skip-partial\" --sroa --composite-fixed-point-pass --canonicalize --test-func-insert-result --scf-parallel-loop-fusion --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-math-polynomial-approximation=\"enable-avx2\" --math-uplift-to-fma --test-func-set-type --cse --math-uplift-to-fma --inline --loop-invariant-subset-hoisting --loop-invariant-subset-hoisting --test-func-insert-result --topological-sort --inline --loop-invariant-subset-hoisting --test-function-pass --cse --math-extend-to-supported-types --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-arg --inline --test-function-pass --inline --test-func-insert-arg --canonicalize=\"test-convergence top-down=0\" --test-func-set-type --control-flow-sink --mem2reg --loop-invariant-code-motion --loop-invariant-subset-hoisting --sroa --control-flow-sink --inline --canonicalize=\"test-convergence top-down=0\" --cse --cse --canonicalize=\"test-convergence top-down=0\" --sroa --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --test-func-erase-arg --test-func-insert-arg --loop-invariant-subset-hoisting --inline --loop-invariant-code-motion --cse --topological-sort --remove-dead-values --test-func-erase-arg --test-function-pass --test-function-pass --canonicalize=\"test-convergence top-down=0\" --remove-dead-values --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --loop-invariant-subset-hoisting --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --sccp --topological-sort --loop-invariant-subset-hoisting --duplicate-function-elimination --fold-tensor-subset-ops --duplicate-function-elimination --inline --topological-sort --fold-tensor-subset-ops --test-func-insert-arg --canonicalize=\"test-convergence top-down=0\" --tosa-infer-shapes --test-func-set-type --symbol-dce --test-tensor-transform-patterns=\"test-fold-consecutive-insert-extract-slice\" --loop-invariant-subset-hoisting --canonicalize=\"test-convergence\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-elementwise-fusion-patterns=\"fuse-multiuse-producer\" --loop-invariant-subset-hoisting --convert-elementwise-to-linalg --test-linalg-rank-reduce-contraction-ops --test-tensor-copy-insertion --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --loop-invariant-subset-hoisting --linalg-named-op-conversion --sroa --tosa-optional-decompositions --test-math-polynomial-approximation=\"enable-avx2\" --test-tensor-copy-insertion=\"must-infer-memory-space\" --tosa-optional-decompositions --canonicalize --tosa-infer-shapes | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-make-broadcastable --cse --topological-sort --loop-invariant-code-motion --linalg-fuse-elementwise-ops --test-linalg-pad-fusion --test-linalg-rank-reduce-contraction-ops --test-tensor-copy-insertion --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-collapsing\" --test-tensor-copy-insertion --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --test-function-pass --tosa-make-broadcastable --fold-tensor-subset-ops --composite-fixed-point-pass --tosa-layerwise-constant-fold --linalg-inline-scalar-operands | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-memref-dependence-check --linalg-fold-unit-extent-dims --linalg-specialize-generic-ops --test-func-erase-arg --arith-expand=\"include-bf16\" --linalg-fold-unit-extent-dims --loop-invariant-subset-hoisting --loop-invariant-subset-hoisting --test-linalg-rank-reduce-contraction-ops --duplicate-function-elimination --linalg-inline-scalar-operands --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --inline --test-func-erase-result --normalize-memrefs --sccp --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-collapsing\" --fold-memref-alias-ops --control-flow-sink --test-linalg-rank-reduce-contraction-ops --linalg-specialize-generic-ops --expand-strided-metadata --test-linalg-greedy-fusion --inline --linalg-generalize-named-ops --resolve-shaped-type-result-dims --fold-memref-alias-ops --cse --test-func-set-type --arith-int-range-narrowing=\"int-bitwidths-supported=32\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-arg --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg --remove-dead-values | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --test-func-erase-result --test-func-erase-arg --composite-fixed-point-pass --remove-dead-values --inline --test-func-insert-arg --topological-sort --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --symbol-dce --test-func-insert-result --canonicalize=\"test-convergence top-down=0\" --remove-dead-values --sccp --test-func-set-type --inline --remove-dead-values --inline --duplicate-function-elimination --loop-invariant-code-motion --cse --sroa --test-func-insert-arg --sroa --loop-invariant-code-motion --inline --test-func-insert-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --loop-invariant-code-motion --test-function-pass --test-func-erase-arg --remove-dead-values --sroa --sroa --test-tensor-copy-insertion=\"must-infer-memory-space\" --tosa-test-quant-utils --test-func-insert-result --tosa-make-broadcastable --loop-invariant-code-motion --test-func-erase-result --tosa-test-quant-utils --tosa-layerwise-constant-fold --test-func-set-type --sccp --test-func-erase-result --tosa-validate --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --topological-sort --tosa-layerwise-constant-fold --remove-dead-values --tosa-make-broadcastable --test-func-erase-arg --sroa --duplicate-function-elimination --control-flow-sink --tosa-optional-decompositions --tosa-infer-shapes | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --test-linalg-greedy-fusion --test-math-polynomial-approximation=\"enable-avx2\" --duplicate-function-elimination --topological-sort --mem2reg --linalg-generalize-named-ops --loop-invariant-code-motion --convert-elementwise-to-linalg --test-linalg-pad-fusion --sroa --tosa-reduce-transposes --test-linalg-greedy-fusion --test-func-set-type --tosa-optional-decompositions --test-func-insert-arg --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --duplicate-function-elimination --tosa-test-quant-utils --composite-fixed-point-pass --test-func-erase-result --linalg-generalize-named-ops --linalg-named-op-conversion --fold-tensor-subset-ops --tosa-infer-shapes --test-linalg-transform-patterns=\"test-vector-transfer-forwarding-patterns\" --loop-invariant-subset-hoisting --tosa-test-quant-utils --topological-sort --test-linalg-drop-unit-dims --symbol-dce --test-linalg-pad-fusion --tosa-make-broadcastable --cse --test-func-insert-arg --test-linalg-elementwise-fusion-patterns=\"fuse-generic-ops-control\" --test-linalg-pad-fusion --linalg-inline-scalar-operands --test-tensor-transform-patterns=\"test-reassociative-reshape-folding\" --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --test-linalg-drop-unit-dims --linalg-fold-unit-extent-dims --loop-invariant-subset-hoisting --test-linalg-data-layout-propagation --linalg-specialize-generic-ops --cse --tosa-optional-decompositions --test-linalg-elementwise-fusion-patterns=\"fuse-generic-ops-control\" --test-func-erase-result --test-func-erase-arg --symbol-dce --test-func-set-type --sroa --composite-fixed-point-pass --test-linalg-greedy-fusion --tosa-test-quant-utils --composite-fixed-point-pass --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --tosa-test-quant-utils --fold-tensor-subset-ops --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --test-func-erase-result --fold-tensor-subset-ops --composite-fixed-point-pass --linalg-generalize-named-ops --test-tensor-transform-patterns=\"test-rewrite-extract-slice-from-collapse-shape\" --test-func-set-type --mem2reg=\"region-simplify\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-memref-dependence-check --test-func-set-type --sroa --composite-fixed-point-pass --topological-sort --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-for-loop-peeling --scf-forall-to-parallel --test-scf-for-utils --test-func-erase-arg --scf-forall-to-for --sroa --scf-parallel-loop-specialization --test-func-erase-result --test-function-pass --scf-forall-to-for --test-func-erase-arg --remove-dead-values --test-scf-for-utils=\"test-replace-with-new-yields\" --test-scf-while-op-builder --test-scf-while-op-builder --canonicalize --loop-invariant-subset-hoisting --canonicalize=\"test-convergence\" --loop-invariant-subset-hoisting --topological-sort --scf-for-loop-specialization --scf-forall-to-parallel --scf-for-to-while --test-func-insert-result --loop-invariant-code-motion --symbol-dce --scf-parallel-loop-specialization --test-scf-if-utils --composite-fixed-point-pass --test-func-insert-arg --test-function-pass --test-scf-for-utils=\"test-replace-with-new-yields\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-constant-fold --test-affine-data-copy --affine-loop-invariant-code-motion --test-func-insert-arg --test-affine-access-analysis --symbol-dce --test-function-pass --affine-loop-fusion --test-affine-loop-unswitch | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --affine-loop-normalize --affine-expand-index-ops-as-affine --test-func-erase-arg --affine-data-copy-generate=\"generate-dma=false fast-mem-space=0 skip-non-unit-stride-loops\" --test-affine-parametric-tile --test-affine-parametric-tile --test-func-insert-arg --affine-simplify-structures --loop-invariant-code-motion --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --int-range-optimizations --arith-emulate-wide-int --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --loop-invariant-subset-hoisting --duplicate-function-elimination --test-func-erase-result --canonicalize=\"test-convergence top-down=0\" --arith-unsigned-when-equivalent --test-function-pass --test-func-erase-arg --canonicalize=\"test-convergence\" --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-func-insert-arg --loop-invariant-subset-hoisting --topological-sort --control-flow-sink --test-func-insert-result --test-func-insert-result --test-function-pass --cse --sroa --loop-invariant-subset-hoisting --mem2reg=\"region-simplify\" --loop-invariant-code-motion --arith-unsigned-when-equivalent --cse --cse --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --test-func-insert-result --inline --mem2reg --loop-invariant-code-motion --test-func-insert-result --cse --symbol-dce --cse --composite-fixed-point-pass --inline --test-func-insert-result --test-func-insert-arg --canonicalize | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --cse --sroa --sccp --mem2reg --tosa-optional-decompositions --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --control-flow-sink --arith-emulate-unsupported-floats --tosa-optional-decompositions --symbol-dce --test-emulate-narrow-int=\"memref-load-bitwidth=32\" --tosa-test-quant-utils --arith-int-range-narrowing=\"int-bitwidths-supported=32\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-unsigned-when-equivalent --control-flow-sink --test-emulate-narrow-int=\"memref-load-bitwidth=8\" --linalg-generalize-named-ops --cse --composite-fixed-point-pass --test-linalg-drop-unit-dims --test-func-insert-result --test-arith-emulate-wide-int --arith-emulate-unsupported-floats --arith-unsigned-when-equivalent --sroa --test-tensor-transform-patterns=\"use-foreach\" --test-func-insert-result --test-math-polynomial-approximation --linalg-fuse-elementwise-ops --arith-emulate-unsupported-floats | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --mem2reg=\"region-simplify\" --test-func-insert-arg --test-math-to-vcix --test-linalg-data-layout-propagation --linalg-named-op-conversion --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --mem2reg --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-collapsing-control\" --convert-elementwise-to-linalg --test-linalg-data-layout-propagation --test-func-erase-arg --inline --test-linalg-drop-unit-dims --test-linalg-data-layout-propagation --test-linalg-rank-reduce-contraction-ops --convert-elementwise-to-linalg --convert-elementwise-to-linalg --linalg-fuse-elementwise-ops --test-func-set-type --test-func-set-type --test-tensor-copy-insertion=\"must-infer-memory-space\" --test-func-insert-result --test-math-polynomial-approximation=\"enable-avx2\" --linalg-fuse-elementwise-ops --canonicalize=\"test-convergence top-down=0\" --symbol-dce --test-linalg-drop-unit-dims --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-wide-int=\"widest-int-supported=32\" --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --test-func-insert-result --symbol-dce --remove-dead-values --test-func-erase-result --sccp --test-func-insert-result --control-flow-sink --test-func-set-type --control-flow-sink --loop-invariant-code-motion --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --symbol-dce --composite-fixed-point-pass --loop-invariant-code-motion --tosa-optional-decompositions | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-result --tosa-optional-decompositions --mem2reg=\"region-simplify\" --tosa-make-broadcastable --test-func-set-type --test-func-erase-result --cse --tosa-infer-shapes --test-func-erase-result --test-tensor-transform-patterns=\"test-fold-constant-extract-slice\" --tosa-infer-shapes --test-func-insert-arg --symbol-dce --test-tensor-copy-insertion --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --tosa-reduce-transposes --tosa-make-broadcastable --tosa-optional-decompositions --sccp --tosa-test-quant-utils --tosa-optional-decompositions --fold-tensor-subset-ops --duplicate-function-elimination --control-flow-sink --test-func-erase-result --composite-fixed-point-pass --topological-sort --mem2reg --topological-sort --tosa-test-quant-utils --topological-sort --duplicate-function-elimination --control-flow-sink --test-func-erase-result --test-func-set-type --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-greedy-fusion --topological-sort --test-linalg-rank-reduce-contraction-ops --test-linalg-transform-patterns=\"test-decompose-winograd-ops\" --test-expand-math --tosa-optional-decompositions --cse --linalg-named-op-conversion --test-linalg-decompose-ops --linalg-named-op-conversion --convert-elementwise-to-linalg --inline --test-linalg-decompose-ops --test-func-erase-result --test-math-algebraic-simplification --test-math-polynomial-approximation=\"enable-avx2\" --test-linalg-pad-fusion --canonicalize --canonicalize=\"test-convergence\" --topological-sort --mem2reg --loop-invariant-subset-hoisting --test-linalg-data-layout-propagation --cse --test-linalg-decompose-ops --fold-tensor-subset-ops --test-math-algebraic-simplification --sccp --fold-tensor-subset-ops --linalg-fuse-elementwise-ops --test-func-insert-result --convert-elementwise-to-linalg --linalg-generalize-named-ops --tosa-test-quant-utils --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --loop-invariant-subset-hoisting --convert-elementwise-to-linalg --linalg-specialize-generic-ops --test-func-erase-result --test-linalg-data-layout-propagation --test-math-algebraic-simplification --test-math-polynomial-approximation=\"enable-avx2\" --test-func-set-type --math-uplift-to-fma --test-function-pass --test-linalg-elementwise-fusion-patterns --test-function-pass --test-tensor-transform-patterns --inline --test-func-set-type --duplicate-function-elimination --duplicate-function-elimination --test-func-insert-result --fold-tensor-subset-ops --mem2reg --linalg-specialize-generic-ops --convert-elementwise-to-linalg --canonicalize --test-function-pass --symbol-dce --linalg-inline-scalar-operands --duplicate-function-elimination --linalg-fuse-elementwise-ops --test-func-set-type --test-linalg-elementwise-fusion-patterns=\"collapse-dimensions-control=2,3\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --test-linalg-drop-unit-dims --test-math-polynomial-approximation=\"enable-avx2\" --math-uplift-to-fma --test-math-to-vcix --canonicalize=\"test-convergence top-down=0\" --linalg-specialize-generic-ops --test-func-set-type --test-func-insert-result --sroa --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-expand-math --mem2reg --test-math-to-vcix --duplicate-function-elimination --test-linalg-rank-reduce-contraction-ops --test-func-insert-result --test-linalg-data-layout-propagation --loop-invariant-subset-hoisting --memref-emulate-wide-int --test-memref-dependence-check --test-linalg-greedy-fusion --test-function-pass --test-math-algebraic-simplification --test-expand-math --test-linalg-rank-reduce-contraction-ops --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-drop-unit-dims --test-linalg-pad-fusion --linalg-fuse-elementwise-ops --arith-emulate-unsupported-floats --test-linalg-transform-patterns=\"test-bubble-up-extract-slice-op-pattern\" --test-func-erase-result --test-emulate-narrow-int --test-linalg-rank-reduce-contraction-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --expand-realloc --test-func-set-type --sroa --test-func-set-type --test-func-erase-arg --expand-realloc --control-flow-sink --sroa --resolve-ranked-shaped-type-result-dims --memref-expand --normalize-memrefs --sroa --test-memref-dependence-check --resolve-shaped-type-result-dims --memref-emulate-wide-int --loop-invariant-code-motion --normalize-memrefs | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg --test-func-erase-result --cse --composite-fixed-point-pass --sroa --control-flow-sink --topological-sort --inline --test-func-insert-arg --remove-dead-values --composite-fixed-point-pass --topological-sort --duplicate-function-elimination --loop-invariant-code-motion --symbol-dce --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --symbol-dce --tosa-optional-decompositions --sroa --test-func-insert-arg --composite-fixed-point-pass --tosa-layerwise-constant-fold --tosa-validate --test-func-insert-arg --canonicalize=\"test-convergence\" --remove-dead-values --test-function-pass --test-func-insert-result --tosa-optional-decompositions --control-flow-sink --remove-dead-values --duplicate-function-elimination --composite-fixed-point-pass --test-func-insert-arg --control-flow-sink --tosa-optional-decompositions --tosa-infer-shapes --test-function-pass --test-tensor-copy-insertion --sroa --tosa-reduce-transposes --test-func-erase-result --tosa-test-quant-utils --test-func-insert-arg --tosa-optional-decompositions | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --int-range-optimizations --tosa-layerwise-constant-fold --arith-emulate-unsupported-floats --test-func-set-type --tosa-test-quant-utils --remove-dead-values --control-flow-sink --tosa-make-broadcastable --test-arith-emulate-wide-int=\"widest-int-supported=8\" --cse --duplicate-function-elimination --test-tensor-transform-patterns=\"test-reassociative-reshape-folding\" --arith-emulate-wide-int=\"widest-int-supported=32\" --tosa-infer-shapes --arith-unsigned-when-equivalent --mem2reg --arith-int-range-narrowing --test-function-pass --sccp --tosa-test-quant-utils --test-tensor-copy-insertion --arith-unsigned-when-equivalent --tosa-optional-decompositions --tosa-layerwise-constant-fold --tosa-make-broadcastable --tosa-layerwise-constant-fold --test-emulate-narrow-int=\"memref-load-bitwidth=8\" --test-func-erase-result --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-infer-shapes --test-func-erase-arg --test-func-insert-arg --sccp --arith-emulate-wide-int --remove-dead-values --test-func-insert-result --test-emulate-narrow-int=\"memref-load-bitwidth=8\" --test-func-erase-result --fold-tensor-subset-ops --fold-tensor-subset-ops --loop-invariant-code-motion --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --composite-fixed-point-pass --int-range-optimizations --sccp --composite-fixed-point-pass --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --test-linalg-rank-reduce-contraction-ops --test-linalg-drop-unit-dims --arith-unsigned-when-equivalent --mem2reg --control-flow-sink --linalg-specialize-generic-ops --test-function-pass --cse --convert-elementwise-to-linalg --test-math-to-vcix --test-math-algebraic-simplification --test-math-to-vcix --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --control-flow-sink --test-math-algebraic-simplification --test-func-insert-result --test-emulate-narrow-int=\"arith-compute-bitwidth=8\" --linalg-specialize-generic-ops --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --test-linalg-greedy-fusion --test-linalg-pad-fusion --linalg-inline-scalar-operands --linalg-fuse-elementwise-ops --test-func-insert-arg --linalg-inline-scalar-operands --composite-fixed-point-pass --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-math-polynomial-approximation=\"enable-avx2\" --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --control-flow-sink --linalg-specialize-generic-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --memref-expand --symbol-dce --memref-expand | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-scf-uplift-while-to-for --scf-for-loop-specialization --scf-forall-to-parallel --scf-parallel-loop-fusion --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-func-insert-arg --int-range-optimizations --duplicate-function-elimination --scf-parallel-loop-fusion --scf-parallel-loop-fusion --test-memref-bound-check --cse --canonicalize --memref-emulate-wide-int --scf-parallel-loop-tiling --scf-parallel-loop-tiling=\"parallel-loop-tile-sizes=1,4 no-min-max-bounds=true\" --mem2reg --normalize-memrefs --test-arith-emulate-wide-int=\"widest-int-supported=8\" --loop-invariant-code-motion --arith-expand --test-scf-uplift-while-to-for --scf-parallel-loop-fusion --control-flow-sink --sccp --arith-expand=\"include-bf16\" --test-scf-while-op-builder --scf-parallel-loop-specialization --test-memref-dependence-check | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-for-loop-canonicalization --resolve-ranked-shaped-type-result-dims --normalize-memrefs --scf-forall-to-for | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-arg --control-flow-sink --cse --cse --cse --loop-invariant-code-motion --test-func-set-type --duplicate-function-elimination --loop-invariant-code-motion --sroa --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --remove-dead-values --mem2reg=\"region-simplify\" --cse --sccp --inline --topological-sort --test-func-insert-result --mem2reg=\"region-simplify\" --cse --duplicate-function-elimination --sroa --cse --inline --canonicalize --loop-invariant-subset-hoisting --remove-dead-values | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --topological-sort --topological-sort --fold-tensor-subset-ops --mem2reg=\"region-simplify\" --duplicate-function-elimination --sroa --tosa-optional-decompositions --loop-invariant-code-motion --loop-invariant-code-motion --mem2reg --tosa-optional-decompositions --tosa-optional-decompositions | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --tosa-test-quant-utils --remove-dead-values --inline --loop-invariant-subset-hoisting --test-tensor-copy-insertion=\"must-infer-memory-space\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize=\"test-convergence\" --inline --test-func-set-type --arith-emulate-unsupported-floats --sccp --test-linalg-drop-unit-dims --loop-invariant-subset-hoisting --arith-emulate-wide-int --convert-elementwise-to-linalg --duplicate-function-elimination --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --test-linalg-rank-reduce-contraction-ops --composite-fixed-point-pass --test-linalg-pad-fusion --test-linalg-decompose-ops --composite-fixed-point-pass --canonicalize --test-func-set-type --int-range-optimizations --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-elementwise-fusion-patterns=\"fuse-generic-ops-control\" --arith-emulate-unsupported-floats --test-linalg-drop-unit-dims --arith-expand=\"include-bf16\" --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --normalize-memrefs --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-linalg-data-layout-propagation --linalg-generalize-named-ops --convert-elementwise-to-linalg --test-memref-dependence-check --sccp --test-math-to-vcix --mem2reg --linalg-fold-unit-extent-dims --symbol-dce --test-math-polynomial-approximation=\"enable-avx2\" --expand-strided-metadata --memref-expand --resolve-ranked-shaped-type-result-dims --test-linalg-data-layout-propagation --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --resolve-ranked-shaped-type-result-dims --expand-strided-metadata --canonicalize --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --test-math-algebraic-simplification --linalg-named-op-conversion --test-linalg-drop-unit-dims --test-expand-math | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg=\"region-simplify\" --mem2reg --scf-parallel-loop-specialization --inline --scf-for-loop-peeling=\"peel-front\" --test-func-erase-result --loop-invariant-code-motion --test-func-erase-result --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --arith-int-range-narrowing --test-arith-emulate-wide-int --scf-for-loop-specialization --test-arith-emulate-wide-int --sroa --test-function-pass --arith-expand --mem2reg=\"region-simplify\" --test-arith-emulate-wide-int --scf-forall-to-for --scf-forall-to-for --arith-emulate-wide-int=\"widest-int-supported=32\" --test-func-erase-arg --scf-parallel-loop-fusion --sroa --scf-parallel-loop-specialization --remove-dead-values --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --scf-forall-to-for --scf-for-loop-canonicalization --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-func-erase-result --control-flow-sink --arith-emulate-wide-int --remove-dead-values --scf-parallel-loop-specialization --test-scf-pipelining --int-range-optimizations | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --test-func-erase-arg --test-arith-emulate-wide-int=\"widest-int-supported=8\" --symbol-dce --duplicate-function-elimination --cse --loop-invariant-code-motion --composite-fixed-point-pass --inline --test-func-insert-result --composite-fixed-point-pass --loop-invariant-code-motion --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --test-func-set-type --topological-sort --test-func-insert-result --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --tosa-test-quant-utils --tosa-infer-shapes --test-tensor-transform-patterns=\"test-rewrite-extract-slice-from-collapse-shape\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --math-extend-to-supported-types --arith-emulate-wide-int=\"widest-int-supported=32\" --math-uplift-to-fma --test-func-insert-arg --test-math-algebraic-simplification --test-math-polynomial-approximation=\"enable-avx2\" --math-uplift-to-fma --tosa-optional-decompositions --test-func-set-type --test-linalg-greedy-fusion --loop-invariant-subset-hoisting --test-func-insert-arg --convert-elementwise-to-linalg --test-expand-math --convert-elementwise-to-linalg --topological-sort --symbol-dce --test-expand-math --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --control-flow-sink --test-func-erase-arg --test-arith-emulate-wide-int=\"widest-int-supported=8\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --loop-invariant-code-motion --linalg-named-op-conversion --test-func-insert-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --duplicate-function-elimination --arith-expand --loop-invariant-subset-hoisting --sccp --duplicate-function-elimination --remove-dead-values --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-func-insert-arg --arith-unsigned-when-equivalent --arith-emulate-wide-int --test-func-insert-result --inline --test-func-insert-arg --mem2reg=\"region-simplify\" --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --mem2reg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-arith-emulate-wide-int --arith-expand=\"include-bf16\" --remove-dead-values --test-func-erase-arg --composite-fixed-point-pass --arith-expand=\"include-bf16\" --test-func-insert-result --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse --cse --cse --test-func-erase-result --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-result --tosa-make-broadcastable --tosa-validate --loop-invariant-code-motion --tosa-make-broadcastable --test-func-erase-arg --loop-invariant-subset-hoisting --arith-emulate-unsupported-floats --tosa-layerwise-constant-fold --remove-dead-values --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --tosa-test-quant-utils --duplicate-function-elimination --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --loop-invariant-code-motion --arith-expand --tosa-optional-decompositions --symbol-dce --arith-expand=\"include-bf16\" --control-flow-sink --fold-tensor-subset-ops --test-func-set-type --test-func-insert-arg --composite-fixed-point-pass --test-func-insert-arg --arith-unsigned-when-equivalent --mem2reg=\"region-simplify\" --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --tosa-reduce-transposes --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --sccp --test-linalg-data-layout-propagation --composite-fixed-point-pass --arith-expand=\"include-bf16\" --test-expand-math --sroa --test-func-erase-result --test-math-polynomial-approximation=\"enable-avx2\" --arith-expand --test-linalg-rank-reduce-contraction-ops --test-linalg-drop-unit-dims --canonicalize=\"test-convergence top-down=0\" --arith-unsigned-when-equivalent --arith-emulate-wide-int --int-range-optimizations --linalg-generalize-named-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-expand=\"include-bf16\" --test-math-algebraic-simplification --control-flow-sink --test-func-insert-result --inline --arith-unsigned-when-equivalent --test-expand-math --test-emulate-narrow-int=\"memref-load-bitwidth=32\" --arith-int-range-narrowing --convert-elementwise-to-linalg --inline --topological-sort --loop-invariant-subset-hoisting --test-math-polynomial-approximation --test-linalg-pad-fusion --test-linalg-transform-patterns=\"test-vector-transfer-forwarding-patterns\" --test-math-to-vcix --linalg-generalize-named-ops --test-math-algebraic-simplification --linalg-named-op-conversion --test-math-polynomial-approximation --linalg-fold-unit-extent-dims --linalg-inline-scalar-operands --linalg-inline-scalar-operands --arith-unsigned-when-equivalent --test-tensor-transform-patterns=\"test-reassociative-reshape-folding\" --cse --test-func-insert-result --test-tensor-transform-patterns=\"test-rewrite-extract-slice-from-collapse-shape\" --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-emulate-narrow-int=\"arith-compute-bitwidth=8\" --int-range-optimizations --cse --linalg-fuse-elementwise-ops --test-linalg-pad-fusion --test-func-insert-arg --math-extend-to-supported-types --control-flow-sink --arith-unsigned-when-equivalent --duplicate-function-elimination --inline --test-math-algebraic-simplification --fold-tensor-subset-ops --duplicate-function-elimination --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --memref-expand --duplicate-function-elimination --linalg-generalize-named-ops --fold-memref-alias-ops --linalg-specialize-generic-ops --mem2reg --mem2reg=\"region-simplify\" --fold-memref-alias-ops --test-linalg-drop-unit-dims --linalg-generalize-named-ops --canonicalize=\"test-convergence\" --linalg-named-op-conversion --resolve-ranked-shaped-type-result-dims --loop-invariant-subset-hoisting --topological-sort --topological-sort --expand-strided-metadata --linalg-fold-unit-extent-dims --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --test-function-pass --test-memref-dependence-check --test-linalg-decompose-ops --inline --memref-emulate-wide-int --expand-realloc --linalg-specialize-generic-ops --convert-elementwise-to-linalg --memref-expand --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --test-function-pass --linalg-named-op-conversion --convert-elementwise-to-linalg --normalize-memrefs --test-linalg-pad-fusion --test-linalg-decompose-ops --test-func-set-type --test-linalg-decompose-ops --test-linalg-transform-patterns=\"test-swap-extract-slice-with-fill-pattern\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-rank-reduce-contraction-ops --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-collapsing-control\" --control-flow-sink --linalg-named-op-conversion --test-linalg-rank-reduce-contraction-ops --control-flow-sink --convert-elementwise-to-linalg --linalg-fold-unit-extent-dims --test-linalg-greedy-fusion --linalg-inline-scalar-operands --test-func-insert-arg --test-linalg-drop-unit-dims --duplicate-function-elimination --loop-invariant-subset-hoisting --test-linalg-greedy-fusion --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --sroa --control-flow-sink --remove-dead-values | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --test-func-insert-arg --tosa-optional-decompositions --test-func-erase-result --test-func-erase-arg --duplicate-function-elimination --test-func-erase-result --cse --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --tosa-reduce-transposes | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --tosa-layerwise-constant-fold --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --tosa-layerwise-constant-fold --canonicalize=\"test-convergence\" --duplicate-function-elimination --test-func-set-type --topological-sort --test-function-pass --sccp --loop-invariant-subset-hoisting --cse --tosa-test-quant-utils --cse --inline --topological-sort --loop-invariant-code-motion --tosa-test-quant-utils --composite-fixed-point-pass --test-func-erase-arg --loop-invariant-code-motion --tosa-test-quant-utils --tosa-infer-shapes --tosa-make-broadcastable --tosa-make-broadcastable --test-func-insert-result --tosa-infer-shapes | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-tensor-copy-insertion=\"must-infer-memory-space\" --test-func-insert-result --cse --remove-dead-values --tosa-reduce-transposes --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --loop-invariant-subset-hoisting --symbol-dce --topological-sort --duplicate-function-elimination --tosa-make-broadcastable --inline --fold-tensor-subset-ops --test-function-pass --test-func-insert-arg --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --test-func-set-type --test-func-insert-arg --fold-tensor-subset-ops --test-func-insert-arg --cse --test-function-pass --test-func-insert-result --test-func-erase-arg --test-tensor-transform-patterns=\"test-drop-redundant-insert-slice-rank-expansion\" --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --tosa-make-broadcastable --tosa-optional-decompositions --test-tensor-copy-insertion --symbol-dce --test-func-erase-result --test-func-erase-result --remove-dead-values --loop-invariant-code-motion --symbol-dce --inline --canonicalize=\"test-convergence top-down=0\" --mem2reg --loop-invariant-subset-hoisting --test-func-erase-result --fold-tensor-subset-ops --tosa-reduce-transposes --test-tensor-transform-patterns=\"test-reassociative-reshape-folding\" --fold-tensor-subset-ops --loop-invariant-subset-hoisting --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-result --tosa-validate --test-arith-emulate-wide-int --test-linalg-transform-patterns=\"test-erase-unused-operands-and-results\" --arith-emulate-unsupported-floats --test-linalg-drop-unit-dims --math-uplift-to-fma --inline --math-extend-to-supported-types --composite-fixed-point-pass --tosa-infer-shapes --topological-sort --test-math-to-vcix --arith-emulate-unsupported-floats --composite-fixed-point-pass --topological-sort --tosa-test-quant-utils --test-linalg-rank-reduce-contraction-ops --sccp --convert-elementwise-to-linalg --test-math-to-vcix --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-arith-emulate-wide-int=\"widest-int-supported=8\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --test-expand-math --cse --mem2reg --test-emulate-narrow-int=\"memref-load-bitwidth=32\" --test-math-to-vcix --sroa --sccp --sroa --linalg-fold-unit-extent-dims --test-func-insert-arg --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --test-function-pass --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-math-to-vcix --test-linalg-drop-unit-dims --test-func-insert-result --math-extend-to-supported-types --test-expand-math --test-func-insert-arg --mem2reg --test-emulate-narrow-int=\"memref-load-bitwidth=32\" --test-linalg-greedy-fusion --test-arith-emulate-wide-int --test-math-polynomial-approximation | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-arg --test-scf-while-op-builder | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-unsupported-floats --control-flow-sink --sccp --control-flow-sink --composite-fixed-point-pass --topological-sort --test-function-pass --control-flow-sink --test-func-erase-arg --int-range-optimizations | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --loop-invariant-subset-hoisting --test-func-erase-result --remove-dead-values --topological-sort --topological-sort --loop-invariant-subset-hoisting --control-flow-sink --cse --test-func-erase-result --topological-sort --canonicalize=\"test-convergence top-down=0\" --canonicalize --test-func-set-type --composite-fixed-point-pass --test-func-insert-arg --test-function-pass --sccp --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --tosa-optional-decompositions --mem2reg=\"region-simplify\" --tosa-layerwise-constant-fold --remove-dead-values --fold-tensor-subset-ops --test-func-insert-arg --canonicalize=\"test-convergence top-down=0\" --duplicate-function-elimination --loop-invariant-code-motion --inline --test-func-insert-arg --topological-sort --loop-invariant-code-motion --loop-invariant-subset-hoisting --inline --test-function-pass --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --tosa-reduce-transposes --test-function-pass --test-func-set-type --duplicate-function-elimination --loop-invariant-code-motion --symbol-dce --inline --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --tosa-infer-shapes | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize=\"test-convergence\" --composite-fixed-point-pass --topological-sort --tosa-test-quant-utils --test-func-erase-arg --tosa-test-quant-utils --sccp --loop-invariant-code-motion --sccp --tosa-test-quant-utils --sroa --symbol-dce --inline --test-func-insert-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-transform-patterns=\"test-bubble-up-extract-slice-op-pattern\" --test-function-pass --test-math-polynomial-approximation | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --int-range-optimizations --test-function-pass --tosa-test-quant-utils --math-uplift-to-fma --test-linalg-rank-reduce-contraction-ops --test-linalg-transform-patterns=\"test-erase-unused-operands-and-results\" --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --math-extend-to-supported-types --control-flow-sink --test-linalg-decompose-ops --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --test-math-to-vcix --linalg-inline-scalar-operands --cse --linalg-fuse-elementwise-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --test-func-insert-arg --test-linalg-rank-reduce-contraction-ops --test-math-polynomial-approximation=\"enable-avx2\" --test-func-set-type --test-linalg-elementwise-fusion-patterns=\"control-fusion-by-expansion\" --math-extend-to-supported-types --loop-invariant-subset-hoisting --test-linalg-data-layout-propagation --test-linalg-data-layout-propagation --test-tensor-transform-patterns=\"test-drop-redundant-insert-slice-rank-expansion\" --fold-tensor-subset-ops --test-linalg-transform-patterns=\"test-vector-transfer-forwarding-patterns\" --test-linalg-pad-fusion --test-func-erase-result --test-linalg-rank-reduce-contraction-ops --test-linalg-transform-patterns --test-func-erase-result --test-linalg-rank-reduce-contraction-ops --linalg-named-op-conversion --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --test-func-erase-arg --duplicate-function-elimination --control-flow-sink --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-drop-unit-dims --loop-invariant-code-motion --test-linalg-data-layout-propagation --test-linalg-pad-fusion --test-linalg-greedy-fusion --topological-sort --canonicalize=\"test-convergence top-down=0\" --mem2reg --test-function-pass --linalg-specialize-generic-ops --loop-invariant-subset-hoisting --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-result --resolve-ranked-shaped-type-result-dims --test-func-insert-arg --linalg-inline-scalar-operands --topological-sort --test-linalg-rank-reduce-contraction-ops --linalg-specialize-generic-ops --test-linalg-decompose-ops --composite-fixed-point-pass --convert-elementwise-to-linalg --cse --composite-fixed-point-pass --expand-realloc=\"emit-deallocs\" --test-func-insert-result --test-linalg-drop-unit-dims --expand-strided-metadata --linalg-generalize-named-ops --test-linalg-pad-fusion --mem2reg=\"region-simplify\" --sccp --fold-memref-alias-ops --test-func-erase-arg --test-linalg-pad-fusion --test-linalg-drop-unit-dims --normalize-memrefs --test-linalg-transform-patterns=\"test-patterns\" --expand-realloc=\"emit-deallocs\" --symbol-dce --test-linalg-data-layout-propagation --linalg-named-op-conversion --test-func-erase-result --resolve-shaped-type-result-dims --cse --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --test-vector-linearize --test-vector-transferop-opt --test-func-erase-arg --test-vector-chained-reduction-folding-patterns --test-linalg-data-layout-propagation --test-func-erase-result --composite-fixed-point-pass --linalg-specialize-generic-ops -lower-vector-mask --test-linalg-transform-patterns=\"test-decompose-winograd-ops\" --test-vector-linearize=\"target-vector-bitwidth=128\" --test-emulate-narrow-int=\"memref-load-bitwidth=32\" --linalg-named-op-conversion --test-arith-emulate-wide-int --test-vector-linearize=\"target-vector-bitwidth=128\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-vector-mask --sccp --test-vector-chained-reduction-folding-patterns --inline --test-func-erase-result --composite-fixed-point-pass --test-func-set-type --control-flow-sink --mem2reg=\"region-simplify\" --inline --test-linalg-transform-patterns=\"test-erase-unused-operands-and-results\" --test-vector-chained-reduction-folding-patterns --loop-invariant-subset-hoisting --test-func-erase-arg --cse --linalg-fuse-elementwise-ops --symbol-dce --test-vector-transferop-opt --test-func-erase-arg --test-func-insert-arg --test-func-set-type --mem2reg --linalg-generalize-named-ops --test-linalg-drop-unit-dims --topological-sort --control-flow-sink --test-vector-linearize=\"target-vector-bitwidth=128\" --cse --linalg-generalize-named-ops --inline --test-func-set-type --test-func-set-type --test-func-insert-arg --topological-sort --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --arith-emulate-unsupported-floats --expand-strided-metadata --scf-forall-to-parallel --test-func-set-type --test-func-insert-result --test-memref-dependence-check -lower-vector-mask --scf-for-loop-canonicalization --memref-emulate-wide-int=\"widest-int-supported=32\" --resolve-shaped-type-result-dims --scf-for-loop-range-folding --int-range-optimizations --test-scf-for-utils=\"test-replace-with-new-yields\" --test-create-vector-broadcast | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-vector-unrolling-patterns=\"unroll-based-on-type\" --test-create-vector-broadcast --test-vector-unrolling-patterns=\"unroll-based-on-type unroll-order=0,3,1,2\" --test-vector-transferop-opt --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-vector-chained-reduction-folding-patterns --test-vector-transferop-opt --test-function-pass --test-func-erase-result --test-scalar-vector-transfer-lowering --control-flow-sink --cse --int-range-optimizations --loop-invariant-subset-hoisting --test-func-insert-result -lower-vector-mask --test-create-vector-broadcast --test-create-vector-broadcast --test-vector-linearize=\"target-vector-bitwidth=128\" --cse --test-vector-transfer-collapse-inner-most-dims --test-vector-gather-lowering --control-flow-sink --test-func-set-type --duplicate-function-elimination --arith-expand=\"include-bf16\" --test-scalar-vector-transfer-lowering=\"allow-multiple-uses\" -lower-vector-multi-reduction=\"lowering-strategy=inner-reduction\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --test-vector-contraction-prepare-for-mmt-lowering --test-vector-transfer-collapse-inner-most-dims --inline --test-scalar-vector-transfer-lowering=\"allow-multiple-uses\" --symbol-dce --test-scalar-vector-transfer-lowering=\"allow-multiple-uses\" --test-vector-chained-reduction-folding-patterns --cse --symbol-dce --mem2reg=\"region-simplify\" --loop-invariant-subset-hoisting --test-vector-unrolling-patterns --control-flow-sink --int-range-optimizations --test-scalar-vector-transfer-lowering --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --control-flow-sink --loop-invariant-code-motion -lower-vector-mask --duplicate-function-elimination --test-create-vector-broadcast --mem2reg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-vector-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-vector-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --sccp --test-scf-uplift-while-to-for --test-func-erase-arg --duplicate-function-elimination --scf-for-loop-canonicalization --mem2reg --loop-invariant-subset-hoisting --loop-invariant-code-motion --test-func-set-type --sroa --loop-invariant-subset-hoisting --test-arith-emulate-wide-int=\"widest-int-supported=8\" --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --test-func-insert-arg --sccp --test-func-set-type --cse --test-func-set-type --test-function-pass --control-flow-sink --test-func-insert-arg --loop-invariant-code-motion --test-func-erase-arg --loop-invariant-subset-hoisting --arith-emulate-wide-int --composite-fixed-point-pass --sroa --cse --arith-int-range-narrowing --arith-expand --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-expand=\"include-bf16\" --arith-emulate-wide-int --symbol-dce --test-function-pass --inline --test-function-pass --duplicate-function-elimination --test-func-set-type --int-range-optimizations --test-arith-emulate-wide-int --arith-expand=\"include-bf16\" --symbol-dce --arith-int-range-narrowing --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --remove-dead-values --int-range-optimizations --int-range-optimizations --arith-expand=\"include-bf16\" --test-arith-emulate-wide-int --int-range-optimizations --symbol-dce --symbol-dce --mem2reg=\"region-simplify\" --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --loop-invariant-code-motion --symbol-dce --cse --test-func-set-type --sccp --test-func-insert-arg --test-func-insert-arg --test-function-pass --sccp --sccp --test-func-insert-arg --remove-dead-values --symbol-dce --remove-dead-values --loop-invariant-subset-hoisting --inline --canonicalize=\"test-convergence top-down=0\" --test-func-set-type --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --test-func-erase-arg --symbol-dce --sccp --test-func-set-type --tosa-optional-decompositions --fold-tensor-subset-ops --test-func-erase-result --test-function-pass --symbol-dce --fold-tensor-subset-ops --test-func-erase-result --topological-sort --test-func-erase-result --canonicalize --test-tensor-transform-patterns=\"test-fold-consecutive-insert-extract-slice\" --test-func-set-type --test-func-insert-arg --cse --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --control-flow-sink --fold-tensor-subset-ops --tosa-layerwise-constant-fold | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-result --duplicate-function-elimination --topological-sort --test-function-pass --tosa-optional-decompositions --composite-fixed-point-pass --sroa --topological-sort --test-func-erase-arg --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --loop-invariant-code-motion --test-tensor-transform-patterns=\"test-rewrite-extract-slice-from-collapse-shape\" --mem2reg=\"region-simplify\" --test-func-erase-arg --symbol-dce --topological-sort --test-func-erase-result --topological-sort --remove-dead-values | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-layerwise-constant-fold --arith-unsigned-when-equivalent --topological-sort --remove-dead-values --test-func-set-type --fold-tensor-subset-ops --tosa-optional-decompositions --arith-expand | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-wide-int=\"widest-int-supported=32\" --inline --test-tensor-transform-patterns=\"test-rewrite-extract-slice-from-collapse-shape\" --arith-emulate-wide-int=\"widest-int-supported=32\" --canonicalize --test-math-polynomial-approximation=\"enable-avx2\" --linalg-named-op-conversion --math-uplift-to-fma --test-function-pass --arith-unsigned-when-equivalent --fold-tensor-subset-ops --int-range-optimizations --test-linalg-pad-fusion --test-func-erase-arg --test-function-pass --arith-emulate-unsupported-floats --linalg-generalize-named-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --inline --test-linalg-drop-unit-dims --convert-elementwise-to-linalg --composite-fixed-point-pass --canonicalize --control-flow-sink --loop-invariant-subset-hoisting --linalg-inline-scalar-operands --test-linalg-decompose-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --normalize-memrefs --scf-for-loop-peeling --resolve-ranked-shaped-type-result-dims --arith-unsigned-when-equivalent --test-scf-pipelining=\"no-epilogue-peeling\" --test-func-erase-result --normalize-memrefs --mem2reg=\"region-simplify\" --scf-for-to-while --canonicalize=\"test-convergence top-down=0\" --scf-forall-to-for | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --arith-expand --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-arg --sroa --test-func-erase-arg --control-flow-sink --remove-dead-values --symbol-dce --topological-sort --sccp --loop-invariant-code-motion --test-func-insert-arg --sccp --composite-fixed-point-pass --loop-invariant-subset-hoisting --test-function-pass --duplicate-function-elimination --cse --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --arith-expand=\"include-bf16\" --loop-invariant-code-motion --test-scf-for-utils=\"test-replace-with-new-yields\" --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -test-math-polynomial-approximation | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg=\"region-simplify\" --test-math-algebraic-simplification --test-math-to-vcix --math-uplift-to-fma --test-linalg-pad-fusion --test-math-polynomial-approximation --test-linalg-pad-fusion --linalg-generalize-named-ops --test-linalg-data-layout-propagation --test-linalg-elementwise-fusion-patterns=\"fuse-multiuse-producer\" --linalg-named-op-conversion --math-uplift-to-fma --linalg-generalize-named-ops --math-uplift-to-fma --linalg-fuse-elementwise-ops --linalg-generalize-named-ops --linalg-fuse-elementwise-ops --linalg-inline-scalar-operands --canonicalize=\"test-convergence\" --test-linalg-data-layout-propagation --duplicate-function-elimination --test-linalg-elementwise-fusion-patterns=\"collapse-dimensions-control=2,3\" --inline --test-math-polynomial-approximation=\"enable-avx2\" --linalg-fold-unit-extent-dims --test-math-algebraic-simplification --loop-invariant-code-motion --test-func-erase-result --linalg-fuse-elementwise-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --normalize-memrefs --test-emulate-narrow-int=\"arith-compute-bitwidth=8\" --canonicalize=\"test-convergence top-down=0\" --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --scf-parallel-loop-tiling --mem2reg --duplicate-function-elimination --scf-parallel-loop-fusion --test-func-erase-result --loop-invariant-subset-hoisting --test-memref-bound-check --test-memref-dependence-check --test-math-polynomial-approximation=\"enable-avx2\" --test-scf-for-utils=\"test-replace-with-new-yields\" --test-scf-if-utils --test-func-insert-arg --composite-fixed-point-pass --scf-parallel-loop-specialization --sccp --scf-for-loop-range-folding --test-math-algebraic-simplification --remove-dead-values --test-scf-while-op-builder | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-expand --test-func-insert-result --memref-expand --scf-for-loop-canonicalization --test-function-pass --memref-expand --test-memref-bound-check --test-scf-while-op-builder --memref-expand --cse --arith-expand=\"include-bf16\" --scf-for-loop-canonicalization --arith-emulate-unsupported-floats --inline --arith-unsigned-when-equivalent --sccp --inline --scf-parallel-loop-specialization | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --arith-expand=\"include-bf16\" --arith-unsigned-when-equivalent --arith-emulate-wide-int --sroa --loop-invariant-subset-hoisting --test-func-erase-result --fold-memref-alias-ops --test-func-erase-result --duplicate-function-elimination --arith-emulate-unsupported-floats --resolve-ranked-shaped-type-result-dims --resolve-shaped-type-result-dims --fold-memref-alias-ops --loop-invariant-code-motion --test-memref-bound-check --test-memref-dependence-check --arith-emulate-wide-int=\"widest-int-supported=32\" --test-func-insert-arg --arith-emulate-wide-int=\"widest-int-supported=32\" --fold-memref-alias-ops --test-func-erase-result --cse --test-arith-emulate-wide-int=\"widest-int-supported=8\" --expand-realloc=\"emit-deallocs\" --arith-int-range-narrowing --sccp --duplicate-function-elimination --canonicalize --arith-int-range-narrowing --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --int-range-optimizations --cse --test-func-erase-arg --arith-emulate-wide-int --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --remove-dead-values --mem2reg=\"region-simplify\" --sroa --cse --mem2reg=\"region-simplify\" --test-function-pass --composite-fixed-point-pass --test-func-erase-result --test-func-erase-arg --remove-dead-values --test-func-insert-result --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --tosa-optional-decompositions --test-tensor-transform-patterns=\"test-fold-consecutive-insert-extract-slice\" --loop-invariant-subset-hoisting --tosa-test-quant-utils --test-function-pass --tosa-infer-shapes --test-func-set-type --loop-invariant-code-motion --test-func-set-type --test-func-insert-result --inline --tosa-infer-shapes --test-func-insert-result --tosa-test-quant-utils --fold-tensor-subset-ops --test-func-insert-arg --tosa-reduce-transposes --tosa-optional-decompositions --mem2reg=\"region-simplify\" --sroa --tosa-optional-decompositions --test-func-erase-arg --tosa-reduce-transposes --tosa-layerwise-constant-fold --remove-dead-values --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --remove-dead-values --fold-tensor-subset-ops --tosa-layerwise-constant-fold --tosa-infer-shapes | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --int-range-optimizations --mem2reg=\"region-simplify\" --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-for-loop-range-folding --fold-memref-alias-ops --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-scf-while-op-builder --test-expand-math --arith-expand --loop-invariant-subset-hoisting --scf-parallel-loop-specialization --arith-expand=\"include-bf16\" --test-function-pass --test-func-set-type --scf-for-loop-range-folding --test-func-insert-result --test-expand-math --scf-parallel-loop-specialization --test-scf-uplift-while-to-for --test-expand-math --scf-forall-to-for --memref-emulate-wide-int=\"widest-int-supported=32\" --fold-memref-alias-ops --expand-strided-metadata --cse --arith-expand=\"include-bf16\" --test-function-pass --test-math-polynomial-approximation --control-flow-sink --math-uplift-to-fma --scf-for-loop-peeling=\"peel-front\" --scf-for-to-while --test-function-pass --scf-parallel-loop-fusion --arith-emulate-wide-int --expand-strided-metadata --scf-for-to-while --test-func-set-type --test-scf-uplift-while-to-for --test-scf-pipelining=\"annotate\" --expand-realloc=\"emit-deallocs\" --test-scf-pipelining=\"annotate\" --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-for-loop-peeling=\"peel-front\" --scf-for-loop-peeling=\"skip-partial\" --test-scf-uplift-while-to-for --test-scf-uplift-while-to-for --duplicate-function-elimination --test-func-set-type --test-scf-pipelining=\"no-epilogue-peeling\" --resolve-shaped-type-result-dims | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-unsupported-floats --arith-unsigned-when-equivalent --canonicalize=\"test-convergence top-down=0\" --test-func-insert-result --mem2reg --test-expand-math --loop-invariant-code-motion --topological-sort --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --sroa --sroa --sccp --topological-sort --canonicalize=\"test-convergence top-down=0\" --sccp --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --composite-fixed-point-pass --inline --test-func-set-type --topological-sort --sccp --math-uplift-to-fma --arith-int-range-narrowing --test-math-polynomial-approximation --symbol-dce --arith-emulate-unsupported-floats --sroa --math-uplift-to-fma --control-flow-sink --test-func-erase-arg --control-flow-sink --loop-invariant-code-motion --canonicalize --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-math-algebraic-simplification --sroa --test-func-insert-arg --test-func-erase-arg --test-func-insert-arg --inline --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --test-func-erase-arg --topological-sort --composite-fixed-point-pass --loop-invariant-code-motion --mem2reg=\"region-simplify\" --loop-invariant-subset-hoisting --test-func-insert-arg --loop-invariant-code-motion --test-func-insert-arg --inline --test-function-pass --loop-invariant-code-motion --loop-invariant-code-motion --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --canonicalize --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-math-polynomial-approximation --cse --control-flow-sink --test-expand-math --sroa --convert-elementwise-to-linalg --linalg-fold-unit-extent-dims --tosa-reduce-transposes --test-linalg-pad-fusion --composite-fixed-point-pass --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --mem2reg=\"region-simplify\" --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --sroa --tosa-layerwise-constant-fold --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-result --test-func-insert-result --mem2reg=\"region-simplify\" --linalg-specialize-generic-ops --arith-unsigned-when-equivalent --arith-emulate-wide-int --int-range-optimizations | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --math-extend-to-supported-types --fold-memref-alias-ops --symbol-dce --test-linalg-greedy-fusion --test-func-set-type --math-uplift-to-fma --loop-invariant-subset-hoisting --canonicalize=\"test-convergence\" --test-linalg-decompose-ops --test-math-to-vcix --normalize-memrefs | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-wide-int=\"widest-int-supported=32\" --scf-parallel-loop-tiling --test-scf-while-op-builder --scf-for-loop-specialization --arith-emulate-wide-int=\"widest-int-supported=32\" --test-emulate-narrow-int=\"arith-compute-bitwidth=8\" --duplicate-function-elimination --scf-for-loop-range-folding --arith-int-range-narrowing --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --arith-int-range-narrowing --test-arith-emulate-wide-int=\"widest-int-supported=8\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --inline --canonicalize --control-flow-sink --sccp --arith-unsigned-when-equivalent --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-func-erase-arg --duplicate-function-elimination --arith-expand --arith-unsigned-when-equivalent --remove-dead-values --topological-sort --loop-invariant-code-motion --arith-unsigned-when-equivalent --remove-dead-values --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize=\"test-convergence top-down=0\" --loop-invariant-code-motion --test-function-pass --loop-invariant-code-motion --duplicate-function-elimination --loop-invariant-code-motion --canonicalize=\"test-convergence top-down=0\" --test-func-set-type --test-func-insert-arg --canonicalize=\"test-convergence\" --canonicalize=\"test-convergence top-down=0\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sroa --mem2reg=\"region-simplify\" --test-function-pass --test-func-set-type --duplicate-function-elimination --test-func-set-type --canonicalize=\"test-convergence top-down=0\" --mem2reg=\"region-simplify\" --composite-fixed-point-pass --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --control-flow-sink --sccp --sroa --test-func-insert-arg --sroa --test-func-set-type --test-tensor-transform-patterns=\"test-fold-consecutive-insert-extract-slice\" --mem2reg --inline --control-flow-sink --topological-sort --loop-invariant-subset-hoisting --tosa-infer-shapes --duplicate-function-elimination --loop-invariant-subset-hoisting --mem2reg=\"region-simplify\" --symbol-dce --sccp --tosa-layerwise-constant-fold --mem2reg=\"region-simplify\" --tosa-reduce-transposes --mem2reg=\"region-simplify\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --convert-elementwise-to-linalg --test-tensor-copy-insertion=\"must-infer-memory-space\" --math-extend-to-supported-types --arith-int-range-narrowing --test-math-polynomial-approximation --int-range-optimizations | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-generalize-named-ops --test-linalg-drop-unit-dims --duplicate-function-elimination --test-func-erase-arg --loop-invariant-code-motion --test-func-insert-arg --loop-invariant-code-motion --test-linalg-data-layout-propagation --linalg-fuse-elementwise-ops --linalg-specialize-generic-ops --linalg-fuse-elementwise-ops --linalg-fuse-elementwise-ops --composite-fixed-point-pass --inline --sccp --symbol-dce --test-linalg-pad-fusion --test-func-insert-result --convert-elementwise-to-linalg --linalg-inline-scalar-operands --loop-invariant-code-motion --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-generalize-named-ops --test-linalg-rank-reduce-contraction-ops --topological-sort --test-linalg-transform-patterns=\"test-erase-unnecessary-inputs\" --composite-fixed-point-pass --cse --control-flow-sink --test-linalg-pad-fusion --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --normalize-memrefs --test-function-pass --arith-expand --canonicalize=\"test-convergence\" --loop-invariant-code-motion --resolve-ranked-shaped-type-result-dims --arith-unsigned-when-equivalent --arith-unsigned-when-equivalent --expand-realloc=\"emit-deallocs\" --test-func-insert-arg --test-func-set-type --resolve-ranked-shaped-type-result-dims --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse --test-memref-dependence-check --inline --control-flow-sink --resolve-ranked-shaped-type-result-dims --canonicalize=\"test-convergence\" --resolve-shaped-type-result-dims --cse --resolve-shaped-type-result-dims --memref-expand --resolve-ranked-shaped-type-result-dims --test-func-insert-result --sccp --symbol-dce --memref-emulate-wide-int=\"widest-int-supported=32\" --topological-sort --normalize-memrefs --control-flow-sink --topological-sort --resolve-ranked-shaped-type-result-dims --expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --sroa --test-func-insert-result --remove-dead-values --sccp --test-func-erase-arg --loop-invariant-code-motion --test-func-erase-result --test-func-set-type --control-flow-sink --sccp --test-func-set-type --mem2reg=\"region-simplify\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --tosa-reduce-transposes --tosa-make-broadcastable --remove-dead-values --loop-invariant-subset-hoisting --control-flow-sink --loop-invariant-code-motion --loop-invariant-subset-hoisting --tosa-infer-shapes --loop-invariant-subset-hoisting --test-tensor-copy-insertion=\"must-infer-memory-space\" --tosa-infer-shapes --fold-tensor-subset-ops --test-func-erase-arg --topological-sort --canonicalize --test-func-erase-result --remove-dead-values --cse --duplicate-function-elimination --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-generalize-named-ops --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --linalg-named-op-conversion --fold-tensor-subset-ops --test-func-set-type --duplicate-function-elimination --test-linalg-pad-fusion --topological-sort --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-inline-scalar-operands --resolve-ranked-shaped-type-result-dims --memref-emulate-wide-int --duplicate-function-elimination --test-func-insert-arg --loop-invariant-code-motion --test-linalg-drop-unit-dims --control-flow-sink --expand-realloc=\"emit-deallocs\" --test-linalg-drop-unit-dims --test-linalg-drop-unit-dims --test-func-erase-arg --test-func-set-type --resolve-shaped-type-result-dims --math-extend-to-supported-types --normalize-memrefs --memref-expand --test-func-erase-result --symbol-dce --linalg-fuse-elementwise-ops --linalg-fold-unit-extent-dims | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-expand-math --cse --test-scf-while-op-builder --scf-forall-to-parallel --scf-parallel-loop-specialization --control-flow-sink --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --math-uplift-to-fma --mem2reg --test-scf-if-utils --sroa --canonicalize=\"test-convergence\" --test-math-to-vcix --test-math-polynomial-approximation=\"enable-avx2\" --loop-invariant-code-motion --mem2reg=\"region-simplify\" --memref-emulate-wide-int=\"widest-int-supported=32\" --test-scf-for-utils=\"test-replace-with-new-yields\" --cse --arith-unsigned-when-equivalent --expand-strided-metadata --test-memref-dependence-check | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --test-math-algebraic-simplification --math-extend-to-supported-types --scf-for-loop-canonicalization --inline --loop-invariant-subset-hoisting --sccp --test-memref-dependence-check --test-func-insert-arg --scf-for-loop-peeling=\"peel-front\" --composite-fixed-point-pass --test-func-insert-result --scf-for-loop-range-folding --symbol-dce --fold-memref-alias-ops --test-expand-math --composite-fixed-point-pass --test-math-algebraic-simplification --memref-emulate-wide-int=\"widest-int-supported=32\" --test-scf-for-utils --test-math-to-vcix | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --arith-expand --symbol-dce --test-func-erase-arg --control-flow-sink --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --control-flow-sink --arith-unsigned-when-equivalent --sccp --arith-expand=\"include-bf16\" --test-func-insert-arg --arith-expand --arith-emulate-unsupported-floats --symbol-dce --cse --arith-emulate-unsupported-floats --arith-expand --loop-invariant-code-motion --mem2reg=\"region-simplify\" --remove-dead-values --inline --loop-invariant-code-motion --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse --topological-sort --remove-dead-values --loop-invariant-subset-hoisting --mem2reg --loop-invariant-code-motion --test-func-set-type --test-func-erase-result --sroa --topological-sort --sccp --test-func-insert-arg --control-flow-sink --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --sroa --canonicalize=\"test-convergence\" --remove-dead-values --canonicalize | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --tosa-layerwise-constant-fold --tosa-infer-shapes --cse --topological-sort --test-func-erase-arg --test-func-erase-arg --test-func-set-type --tosa-test-quant-utils --tosa-infer-shapes --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --loop-invariant-subset-hoisting --test-func-erase-result --cse --sroa --fold-tensor-subset-ops --duplicate-function-elimination --sccp --tosa-infer-shapes --test-func-insert-result --cse --test-func-insert-arg --canonicalize=\"test-convergence top-down=0\" --canonicalize=\"test-convergence top-down=0\" --test-func-insert-arg --test-tensor-copy-insertion=\"must-infer-memory-space\" --test-func-insert-arg --tosa-reduce-transposes | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-math-polynomial-approximation --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --test-func-insert-arg --test-tensor-transform-patterns=\"test-fold-consecutive-insert-extract-slice\" --cse --linalg-fuse-elementwise-ops --linalg-specialize-generic-ops --tosa-reduce-transposes --tosa-test-quant-utils --int-range-optimizations --linalg-fuse-elementwise-ops --cse --sroa --loop-invariant-subset-hoisting --arith-unsigned-when-equivalent --convert-elementwise-to-linalg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-drop-unit-dims --mem2reg --composite-fixed-point-pass --duplicate-function-elimination --resolve-shaped-type-result-dims --test-func-insert-arg --fold-memref-alias-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse --mem2reg --arith-unsigned-when-equivalent --arith-int-range-narrowing --test-function-pass --test-arith-emulate-wide-int=\"widest-int-supported=8\" --cse --test-arith-emulate-wide-int --loop-invariant-code-motion --sccp --canonicalize=\"test-convergence top-down=0\" --cse --sroa --arith-int-range-narrowing --test-func-insert-arg --topological-sort --canonicalize=\"test-convergence top-down=0\" --test-func-erase-arg --arith-int-range-narrowing --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --arith-emulate-unsupported-floats --arith-unsigned-when-equivalent | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-result --test-function-pass --canonicalize --test-func-insert-arg --remove-dead-values --composite-fixed-point-pass --remove-dead-values --cse --canonicalize=\"test-convergence top-down=0\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --test-func-insert-result --test-func-erase-arg --inline --sroa --loop-invariant-code-motion --test-function-pass --duplicate-function-elimination --test-func-erase-result --loop-invariant-subset-hoisting --canonicalize=\"test-convergence\" --test-func-insert-arg --test-func-set-type --mem2reg --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --duplicate-function-elimination --symbol-dce --test-func-insert-result --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --fold-tensor-subset-ops --control-flow-sink --composite-fixed-point-pass --tosa-infer-shapes --test-tensor-copy-insertion --control-flow-sink --tosa-optional-decompositions --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --int-range-optimizations --linalg-named-op-conversion --math-uplift-to-fma --test-math-polynomial-approximation=\"enable-avx2\" --test-expand-math --test-math-polynomial-approximation --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-math-algebraic-simplification --tosa-infer-shapes --tosa-test-quant-utils --test-linalg-pad-fusion --test-func-set-type --linalg-named-op-conversion --test-linalg-pad-fusion --linalg-fuse-elementwise-ops --test-linalg-drop-unit-dims --test-math-to-vcix --tosa-infer-shapes --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --test-linalg-transform-patterns=\"test-vector-transfer-forwarding-patterns\" --canonicalize=\"test-convergence\" --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --test-func-insert-result --test-expand-math | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --resolve-ranked-shaped-type-result-dims --arith-int-range-narrowing --test-linalg-transform-patterns=\"test-swap-extract-slice-with-fill-pattern\" --canonicalize=\"test-convergence top-down=0\" --math-uplift-to-fma --canonicalize | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --arith-emulate-wide-int --linalg-inline-scalar-operands --int-range-optimizations --arith-emulate-wide-int --test-linalg-decompose-ops --sccp --test-linalg-pad-fusion --mem2reg=\"region-simplify\" --test-linalg-drop-unit-dims --cse --sccp --linalg-inline-scalar-operands --linalg-generalize-named-ops --test-function-pass --sroa --test-linalg-data-layout-propagation --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --test-arith-emulate-wide-int=\"widest-int-supported=8\" --linalg-fuse-elementwise-ops --test-func-insert-result --test-emulate-narrow-int --arith-emulate-wide-int=\"widest-int-supported=32\" --mem2reg --cse --test-function-pass --test-func-erase-arg --test-linalg-drop-unit-dims --test-emulate-narrow-int=\"memref-load-bitwidth=32\" --test-linalg-greedy-fusion --linalg-named-op-conversion --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --arith-int-range-narrowing --linalg-specialize-generic-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-parallel-loop-fusion --arith-emulate-unsupported-floats --scf-for-to-while --cse --symbol-dce --scf-for-loop-range-folding --sccp --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse --test-func-insert-arg --scf-parallel-loop-fusion --scf-for-loop-specialization --test-scf-if-utils --topological-sort --control-flow-sink --test-scf-uplift-while-to-for --sroa --scf-parallel-loop-fusion --scf-for-loop-range-folding --scf-for-loop-peeling=\"skip-partial\" --composite-fixed-point-pass --cse --loop-invariant-code-motion --scf-for-to-while --test-func-set-type --scf-for-to-while --test-scf-uplift-while-to-for | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-int-range-narrowing --symbol-dce --loop-invariant-code-motion --inline --mem2reg=\"region-simplify\" --loop-invariant-subset-hoisting --duplicate-function-elimination --test-func-erase-arg --symbol-dce --loop-invariant-code-motion --test-arith-emulate-wide-int --loop-invariant-subset-hoisting --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse --remove-dead-values --composite-fixed-point-pass --sroa --inline --test-func-insert-result --loop-invariant-code-motion --loop-invariant-subset-hoisting --loop-invariant-code-motion --test-func-insert-arg --symbol-dce --sroa --symbol-dce --test-func-insert-arg --test-function-pass --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --test-func-erase-result --test-tensor-copy-insertion --inline --test-func-erase-result --composite-fixed-point-pass --fold-tensor-subset-ops --tosa-validate --test-func-insert-arg --test-func-erase-result --test-func-insert-result --tosa-reduce-transposes --tosa-reduce-transposes --topological-sort --tosa-layerwise-constant-fold --test-tensor-copy-insertion --tosa-optional-decompositions | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --test-linalg-data-layout-propagation --test-math-polynomial-approximation=\"enable-avx2\" --cse --test-linalg-drop-unit-dims --test-func-erase-result --linalg-inline-scalar-operands --convert-elementwise-to-linalg --math-extend-to-supported-types --test-math-to-vcix --convert-elementwise-to-linalg --test-linalg-rank-reduce-contraction-ops --test-func-insert-result --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse --cse --test-arith-emulate-wide-int=\"widest-int-supported=8\" --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --test-arith-emulate-wide-int=\"widest-int-supported=8\" --arith-unsigned-when-equivalent --mem2reg --inline --test-math-to-vcix | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-fuse-elementwise-ops --math-extend-to-supported-types --inline --test-math-polynomial-approximation --arith-emulate-wide-int --duplicate-function-elimination --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --arith-unsigned-when-equivalent --linalg-generalize-named-ops --test-linalg-transform-patterns=\"test-swap-extract-slice-with-fill-pattern\" --test-linalg-transform-patterns=\"test-swap-subtensor-padtensor\" --sroa --math-extend-to-supported-types --cse --convert-elementwise-to-linalg --linalg-inline-scalar-operands --test-emulate-narrow-int=\"memref-load-bitwidth=32\" --test-tensor-transform-patterns --int-range-optimizations --loop-invariant-code-motion --test-func-insert-result --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-tensor-copy-insertion --duplicate-function-elimination --loop-invariant-subset-hoisting --test-linalg-drop-unit-dims --test-func-insert-arg --test-linalg-drop-unit-dims --math-extend-to-supported-types --test-expand-math --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --test-func-erase-result --symbol-dce --test-arith-emulate-wide-int --test-tensor-copy-insertion=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-drop-unit-dims --math-uplift-to-fma --inline --test-func-erase-result --mem2reg --cse --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --resolve-shaped-type-result-dims --canonicalize --duplicate-function-elimination --test-linalg-drop-unit-dims --composite-fixed-point-pass --linalg-specialize-generic-ops --normalize-memrefs --linalg-inline-scalar-operands --duplicate-function-elimination --test-linalg-pad-fusion --test-expand-math --math-extend-to-supported-types --linalg-named-op-conversion --linalg-generalize-named-ops --expand-strided-metadata --linalg-fuse-elementwise-ops --test-linalg-rank-reduce-contraction-ops --test-func-erase-result --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --test-linalg-pad-fusion --linalg-generalize-named-ops --loop-invariant-subset-hoisting --loop-invariant-subset-hoisting --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-arith-emulate-wide-int=\"widest-int-supported=8\" --int-range-optimizations --sroa --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --topological-sort --arith-emulate-unsupported-floats --composite-fixed-point-pass --control-flow-sink --remove-dead-values --loop-invariant-subset-hoisting --test-arith-emulate-wide-int --test-arith-emulate-wide-int=\"widest-int-supported=8\" --arith-expand --int-range-optimizations --sroa --loop-invariant-code-motion --mem2reg=\"region-simplify\" --sccp --loop-invariant-subset-hoisting --test-func-insert-arg --arith-expand --arith-expand=\"include-bf16\" --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-arg --test-function-pass --cse --canonicalize --control-flow-sink --sccp --canonicalize --sroa --test-func-set-type --test-func-insert-result --test-func-insert-arg --loop-invariant-code-motion --sroa --duplicate-function-elimination --loop-invariant-code-motion --duplicate-function-elimination --mem2reg --mem2reg=\"region-simplify\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --control-flow-sink --sroa --remove-dead-values --sccp --tosa-infer-shapes --duplicate-function-elimination --test-func-insert-result --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-math-algebraic-simplification --math-extend-to-supported-types --test-func-insert-result --cse --mem2reg --symbol-dce --linalg-inline-scalar-operands --test-math-polynomial-approximation --test-math-polynomial-approximation=\"enable-avx2\" --tosa-optional-decompositions --test-func-insert-arg --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --control-flow-sink --loop-invariant-code-motion --loop-invariant-code-motion --inline --loop-invariant-subset-hoisting --test-linalg-pad-fusion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-expand=\"include-bf16\" --linalg-specialize-generic-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --test-func-insert-result --int-range-optimizations --control-flow-sink --convert-elementwise-to-linalg --tosa-reduce-transposes --canonicalize --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-pad-fusion --test-linalg-rank-reduce-contraction-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-data-layout-propagation --linalg-inline-scalar-operands --test-linalg-greedy-fusion --test-linalg-data-layout-propagation --test-linalg-greedy-fusion --tosa-validate --tosa-reduce-transposes --control-flow-sink --tosa-reduce-transposes --test-func-set-type --duplicate-function-elimination --loop-invariant-subset-hoisting --test-linalg-pad-fusion --topological-sort --tosa-validate | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --symbol-dce --tosa-validate | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --convert-elementwise-to-linalg --test-func-set-type --duplicate-function-elimination --topological-sort --tosa-optional-decompositions --test-linalg-data-layout-propagation --sroa --tosa-optional-decompositions --linalg-generalize-named-ops --linalg-generalize-named-ops --linalg-generalize-named-ops --test-linalg-elementwise-fusion-patterns --duplicate-function-elimination --test-linalg-data-layout-propagation --convert-elementwise-to-linalg --tosa-validate | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-optional-decompositions --linalg-inline-scalar-operands --tosa-test-quant-utils --tosa-optional-decompositions --linalg-specialize-generic-ops --test-func-erase-result --linalg-specialize-generic-ops --linalg-fuse-elementwise-ops --test-linalg-decompose-ops --test-linalg-transform-patterns=\"test-erase-unused-operands-and-results\" --test-func-set-type --test-tensor-transform-patterns --inline --test-linalg-greedy-fusion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --scf-forall-to-parallel --mem2reg --sroa --arith-emulate-wide-int --mem2reg --mem2reg --test-memref-bound-check --scf-parallel-loop-tiling --scf-parallel-loop-fusion --test-function-pass --remove-dead-values --scf-for-loop-peeling --remove-dead-values --test-memref-dependence-check --symbol-dce --arith-emulate-unsupported-floats --resolve-shaped-type-result-dims --loop-invariant-subset-hoisting --canonicalize=\"test-convergence top-down=0\" --loop-invariant-code-motion --test-func-erase-arg --test-scf-for-utils --test-memref-dependence-check --test-func-erase-arg --composite-fixed-point-pass --test-scf-while-op-builder --scf-forall-to-for --arith-unsigned-when-equivalent --test-arith-emulate-wide-int --inline --mem2reg=\"region-simplify\" --test-func-set-type --expand-realloc --test-func-insert-arg --sroa --symbol-dce --test-func-set-type --expand-strided-metadata --test-func-set-type --arith-unsigned-when-equivalent --test-func-erase-arg --expand-strided-metadata --expand-realloc=\"emit-deallocs\" --resolve-ranked-shaped-type-result-dims --scf-parallel-loop-tiling | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg --composite-fixed-point-pass --canonicalize --cse --scf-forall-to-for --sccp --composite-fixed-point-pass --canonicalize --sroa --test-func-erase-arg --scf-forall-to-for --composite-fixed-point-pass --test-scf-if-utils --scf-for-loop-canonicalization --control-flow-sink --loop-invariant-subset-hoisting --scf-for-loop-range-folding --cse --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --symbol-dce --remove-dead-values --int-range-optimizations --arith-emulate-wide-int=\"widest-int-supported=32\" --canonicalize --remove-dead-values --int-range-optimizations --test-func-insert-result --topological-sort --test-func-insert-arg --sroa --test-func-set-type --duplicate-function-elimination --test-func-erase-result --inline --arith-int-range-narrowing --test-func-set-type --test-func-erase-result --test-arith-emulate-wide-int=\"widest-int-supported=8\" --arith-expand --inline --int-range-optimizations --mem2reg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-expand=\"include-bf16\" --composite-fixed-point-pass --arith-emulate-unsupported-floats --sccp --arith-expand --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --arith-unsigned-when-equivalent --symbol-dce --loop-invariant-subset-hoisting --test-func-set-type --remove-dead-values --arith-int-range-narrowing --arith-int-range-narrowing | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse --inline --test-func-erase-result --test-function-pass --sroa --sccp --topological-sort --test-func-erase-arg --composite-fixed-point-pass --test-function-pass --mem2reg=\"region-simplify\" --composite-fixed-point-pass --test-function-pass --mem2reg --control-flow-sink --test-func-insert-result --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --test-func-set-type --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --loop-invariant-subset-hoisting --canonicalize=\"test-convergence\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --remove-dead-values --sroa --symbol-dce --loop-invariant-subset-hoisting --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --cse --inline --duplicate-function-elimination --cse --arith-int-range-narrowing --test-func-erase-result --test-func-insert-arg --tosa-optional-decompositions --int-range-optimizations --tosa-test-quant-utils --duplicate-function-elimination --arith-unsigned-when-equivalent --cse --test-func-insert-result --sroa --tosa-optional-decompositions | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --math-extend-to-supported-types --linalg-generalize-named-ops --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-func-erase-arg --sccp --test-linalg-data-layout-propagation --arith-emulate-wide-int=\"widest-int-supported=32\" --test-func-erase-arg --test-tensor-transform-patterns=\"use-foreach\" --test-linalg-pad-fusion --convert-elementwise-to-linalg --arith-emulate-unsupported-floats --duplicate-function-elimination --linalg-inline-scalar-operands --composite-fixed-point-pass --test-function-pass --test-linalg-greedy-fusion --topological-sort --inline --test-math-polynomial-approximation=\"enable-avx2\" --loop-invariant-subset-hoisting --test-func-insert-result --fold-tensor-subset-ops --test-func-insert-result --test-tensor-transform-patterns --arith-expand --test-linalg-drop-unit-dims --test-func-set-type --cse --test-linalg-drop-unit-dims --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-math-to-vcix --sroa --topological-sort --cse --math-uplift-to-fma --test-linalg-transform-patterns=\"test-swap-subtensor-padtensor\" --test-linalg-drop-unit-dims --test-linalg-greedy-fusion --linalg-fuse-elementwise-ops --test-func-erase-result --test-linalg-rank-reduce-contraction-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --fold-tensor-subset-ops --test-func-erase-arg --test-linalg-rank-reduce-contraction-ops --test-func-insert-result --test-func-insert-result --cse --linalg-named-op-conversion --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --test-linalg-drop-unit-dims --test-func-insert-result --sroa --test-linalg-pad-fusion --sroa --duplicate-function-elimination --linalg-specialize-generic-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse --canonicalize --inline --canonicalize --arith-int-range-narrowing --cse --arith-unsigned-when-equivalent | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --symbol-dce --sccp --test-func-erase-result --arith-emulate-wide-int=\"widest-int-supported=32\" --remove-dead-values --int-range-optimizations --test-func-insert-result --control-flow-sink --composite-fixed-point-pass --test-func-erase-result --composite-fixed-point-pass --control-flow-sink --int-range-optimizations --test-func-set-type --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-result --sccp --control-flow-sink --test-func-erase-arg --test-func-set-type --control-flow-sink --test-func-erase-result --cse --canonicalize=\"test-convergence top-down=0\" --cse --test-func-erase-result --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --loop-invariant-subset-hoisting --tosa-make-broadcastable --tosa-infer-shapes --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --test-func-insert-result --duplicate-function-elimination --cse --test-tensor-transform-patterns --tosa-infer-shapes --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --control-flow-sink --control-flow-sink --test-func-set-type --tosa-optional-decompositions --test-func-insert-result --test-tensor-transform-patterns=\"test-fold-consecutive-insert-extract-slice\" --tosa-reduce-transposes --tosa-optional-decompositions | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize=\"test-convergence\" --tosa-layerwise-constant-fold --tosa-optional-decompositions --test-func-erase-result --topological-sort --test-func-erase-result --test-tensor-transform-patterns=\"test-reassociative-reshape-folding\" --cse --tosa-infer-shapes --duplicate-function-elimination --tosa-optional-decompositions --test-func-insert-result --symbol-dce --test-function-pass --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --inline --arith-expand=\"include-bf16\" --test-func-set-type --sroa --test-math-polynomial-approximation --test-arith-emulate-wide-int --linalg-named-op-conversion --test-linalg-rank-reduce-contraction-ops --expand-realloc --resolve-shaped-type-result-dims --test-linalg-data-layout-propagation --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-scf-while-op-builder --fold-memref-alias-ops --test-memref-bound-check --test-math-algebraic-simplification --resolve-ranked-shaped-type-result-dims --math-extend-to-supported-types --resolve-ranked-shaped-type-result-dims --test-func-insert-result --sccp --loop-invariant-subset-hoisting --control-flow-sink --test-scf-while-op-builder --memref-expand --topological-sort --math-uplift-to-fma --test-memref-dependence-check --test-func-erase-result --scf-forall-to-for --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --int-range-optimizations --memref-emulate-wide-int=\"widest-int-supported=32\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sroa --test-func-insert-result --loop-invariant-subset-hoisting --cse --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --symbol-dce --loop-invariant-code-motion --loop-invariant-code-motion --test-func-insert-arg --arith-expand=\"include-bf16\" --sroa --loop-invariant-code-motion --topological-sort --duplicate-function-elimination --topological-sort --inline --loop-invariant-subset-hoisting --arith-unsigned-when-equivalent --loop-invariant-code-motion --test-func-insert-result --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --symbol-dce --remove-dead-values --inline --mem2reg --remove-dead-values --test-func-erase-result --test-func-erase-arg --remove-dead-values --mem2reg --sccp --test-func-erase-arg --inline --test-func-set-type --loop-invariant-code-motion --loop-invariant-code-motion --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --test-func-set-type --canonicalize | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --test-func-insert-result --sroa --composite-fixed-point-pass --remove-dead-values --loop-invariant-code-motion --test-func-insert-arg --tosa-optional-decompositions --cse --test-func-insert-arg --cse --symbol-dce --test-func-set-type --tosa-validate --loop-invariant-code-motion --tosa-reduce-transposes --loop-invariant-subset-hoisting --loop-invariant-code-motion --tosa-make-broadcastable --test-function-pass --mem2reg --test-func-erase-arg --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse --remove-dead-values --symbol-dce --fold-tensor-subset-ops --test-func-insert-arg --test-arith-emulate-wide-int --loop-invariant-subset-hoisting --test-func-insert-arg --mem2reg --tosa-reduce-transposes --tosa-test-quant-utils --int-range-optimizations --arith-emulate-unsupported-floats --arith-expand --arith-emulate-unsupported-floats --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-unsigned-when-equivalent --test-linalg-greedy-fusion --math-uplift-to-fma --composite-fixed-point-pass --test-linalg-rank-reduce-contraction-ops --test-linalg-greedy-fusion --control-flow-sink --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-tensor-transform-patterns=\"test-fold-constant-extract-slice\" --test-tensor-copy-insertion=\"must-infer-memory-space\" --test-func-erase-result --test-func-erase-arg --test-math-algebraic-simplification --test-linalg-elementwise-fusion-patterns --loop-invariant-subset-hoisting --test-function-pass --loop-invariant-code-motion --loop-invariant-subset-hoisting --control-flow-sink --convert-elementwise-to-linalg --test-func-erase-arg --math-uplift-to-fma --test-linalg-decompose-ops --test-func-erase-result --test-func-insert-arg --linalg-specialize-generic-ops --test-linalg-data-layout-propagation --test-math-polynomial-approximation --inline --linalg-specialize-generic-ops --mem2reg --linalg-generalize-named-ops --linalg-fuse-elementwise-ops --linalg-inline-scalar-operands --test-func-insert-result --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --test-func-set-type --test-func-set-type --test-func-set-type --test-func-set-type --test-func-insert-arg --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --test-memref-dependence-check --test-memref-dependence-check --symbol-dce --fold-memref-alias-ops --math-extend-to-supported-types --test-math-polynomial-approximation --test-function-pass --mem2reg=\"region-simplify\" --loop-invariant-subset-hoisting --math-uplift-to-fma --mem2reg --canonicalize=\"test-convergence\" --control-flow-sink --test-func-insert-arg --test-func-set-type --test-memref-dependence-check --test-function-pass --normalize-memrefs --fold-memref-alias-ops --loop-invariant-code-motion --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize=\"test-convergence\" --canonicalize=\"test-convergence top-down=0\" --resolve-shaped-type-result-dims | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize=\"test-convergence\" --sccp --test-math-algebraic-simplification --test-func-erase-arg --duplicate-function-elimination --math-uplift-to-fma --test-func-set-type --test-func-erase-result --math-uplift-to-fma --symbol-dce --sccp --topological-sort --inline --remove-dead-values --control-flow-sink --test-math-to-vcix --loop-invariant-code-motion --mem2reg=\"region-simplify\" --math-extend-to-supported-types --sroa --loop-invariant-subset-hoisting --duplicate-function-elimination --inline --loop-invariant-code-motion --remove-dead-values --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --topological-sort --canonicalize=\"test-convergence top-down=0\" --canonicalize=\"test-convergence top-down=0\" --loop-invariant-subset-hoisting --sccp --sccp --canonicalize --topological-sort --test-func-insert-arg --mem2reg=\"region-simplify\" --loop-invariant-subset-hoisting --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --tosa-infer-shapes | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-test-quant-utils --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-tensor-transform-patterns=\"test-rewrite-extract-slice-from-collapse-shape\" --sccp --test-math-to-vcix --topological-sort --tosa-reduce-transposes --test-func-insert-arg --tosa-optional-decompositions --control-flow-sink --tosa-infer-shapes --math-uplift-to-fma --linalg-specialize-generic-ops --test-func-erase-arg --test-tensor-transform-patterns=\"use-foreach\" --tosa-optional-decompositions --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --test-linalg-rank-reduce-contraction-ops --composite-fixed-point-pass --test-func-erase-arg --tosa-reduce-transposes --linalg-named-op-conversion --convert-elementwise-to-linalg --test-func-erase-arg --linalg-fold-unit-extent-dims --test-linalg-rank-reduce-contraction-ops --linalg-generalize-named-ops --math-extend-to-supported-types --test-func-erase-result --arith-unsigned-when-equivalent --convert-elementwise-to-linalg --arith-unsigned-when-equivalent --tosa-infer-shapes --composite-fixed-point-pass --loop-invariant-subset-hoisting --test-math-polynomial-approximation --duplicate-function-elimination --arith-unsigned-when-equivalent --test-func-insert-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --expand-realloc=\"emit-deallocs\" --test-math-to-vcix --test-func-insert-arg --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-emulate-narrow-int=\"memref-load-bitwidth=8\" --test-scf-while-op-builder --memref-expand --int-range-optimizations --sroa --mem2reg=\"region-simplify\" --arith-expand=\"include-bf16\" --expand-strided-metadata --scf-forall-to-for --sroa --test-scf-if-utils --sccp --arith-emulate-wide-int=\"widest-int-supported=32\" --composite-fixed-point-pass --expand-realloc --normalize-memrefs --test-scf-if-utils --arith-int-range-narrowing --composite-fixed-point-pass --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --symbol-dce --resolve-shaped-type-result-dims --symbol-dce --canonicalize=\"test-convergence top-down=0\" --test-memref-dependence-check --test-func-erase-result --resolve-ranked-shaped-type-result-dims --duplicate-function-elimination --fold-memref-alias-ops --resolve-shaped-type-result-dims --duplicate-function-elimination --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --loop-invariant-code-motion --loop-invariant-code-motion --topological-sort --sroa --duplicate-function-elimination --test-func-set-type --cse --canonicalize=\"test-convergence\" --sroa --sroa --cse --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --topological-sort --tosa-make-broadcastable --loop-invariant-code-motion --test-func-erase-arg --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --test-function-pass --loop-invariant-code-motion --duplicate-function-elimination --tosa-infer-shapes --tosa-infer-shapes --topological-sort --test-tensor-copy-insertion --tosa-make-broadcastable --test-func-insert-arg --inline --canonicalize=\"test-convergence\" --symbol-dce --test-tensor-transform-patterns=\"test-rewrite-extract-slice-from-collapse-shape\" --sroa --inline --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --sroa --loop-invariant-subset-hoisting --tosa-test-quant-utils --tosa-reduce-transposes --loop-invariant-code-motion --tosa-reduce-transposes --tosa-make-broadcastable --cse --sroa --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --symbol-dce --canonicalize=\"test-convergence top-down=0\" --cse --test-function-pass --tosa-validate --test-tensor-transform-patterns=\"use-foreach\" --test-function-pass --test-function-pass --control-flow-sink --test-tensor-copy-insertion --fold-tensor-subset-ops --mem2reg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-arg --tosa-make-broadcastable --arith-emulate-wide-int --tosa-make-broadcastable --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-func-insert-result --topological-sort --sroa --duplicate-function-elimination --remove-dead-values --symbol-dce --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-expand --topological-sort --test-func-erase-arg --test-function-pass --tosa-infer-shapes --test-function-pass --arith-int-range-narrowing --tosa-test-quant-utils --tosa-test-quant-utils --tosa-test-quant-utils --loop-invariant-subset-hoisting --test-emulate-narrow-int=\"memref-load-bitwidth=32\" --tosa-infer-shapes --sroa --topological-sort --test-func-insert-arg --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-test-quant-utils --arith-unsigned-when-equivalent --arith-emulate-wide-int=\"widest-int-supported=32\" --tosa-test-quant-utils --arith-emulate-unsupported-floats --arith-int-range-narrowing --test-tensor-transform-patterns=\"test-drop-redundant-insert-slice-rank-expansion\" --test-func-set-type --control-flow-sink --topological-sort --fold-tensor-subset-ops --composite-fixed-point-pass --tosa-reduce-transposes --sccp --canonicalize=\"test-convergence\" --tosa-optional-decompositions --symbol-dce --test-func-erase-arg --tosa-optional-decompositions --arith-unsigned-when-equivalent --test-func-erase-arg --arith-expand=\"include-bf16\" --test-func-set-type --canonicalize --loop-invariant-subset-hoisting --symbol-dce --arith-emulate-wide-int --mem2reg --test-function-pass --test-function-pass --test-emulate-narrow-int=\"memref-load-bitwidth=8\" --tosa-reduce-transposes --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --composite-fixed-point-pass --arith-expand=\"include-bf16\" --duplicate-function-elimination --test-arith-emulate-wide-int=\"widest-int-supported=8\" --int-range-optimizations --tosa-layerwise-constant-fold --test-func-insert-result --remove-dead-values --test-function-pass --test-tensor-transform-patterns=\"test-fold-constant-extract-slice\" --composite-fixed-point-pass --tosa-infer-shapes --arith-expand --loop-invariant-code-motion --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --duplicate-function-elimination --duplicate-function-elimination --remove-dead-values --sccp --test-func-insert-arg --inline --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --cse --arith-emulate-unsupported-floats --test-arith-emulate-wide-int=\"widest-int-supported=8\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-named-op-conversion --symbol-dce --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --linalg-inline-scalar-operands --test-linalg-transform-patterns=\"test-swap-subtensor-padtensor\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-arg --composite-fixed-point-pass --test-math-algebraic-simplification --arith-expand=\"include-bf16\" --inline --test-linalg-pad-fusion --linalg-specialize-generic-ops --test-linalg-drop-unit-dims --memref-expand --duplicate-function-elimination --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --canonicalize=\"test-convergence\" --symbol-dce --duplicate-function-elimination --normalize-memrefs --test-func-erase-result --test-linalg-drop-unit-dims --test-linalg-transform-patterns=\"test-erase-unused-operands-and-results\" --memref-emulate-wide-int=\"widest-int-supported=32\" --test-linalg-decompose-ops --test-func-erase-arg --test-linalg-data-layout-propagation --test-memref-bound-check --resolve-shaped-type-result-dims --fold-memref-alias-ops --test-linalg-transform-patterns --int-range-optimizations --fold-memref-alias-ops --test-memref-bound-check --test-math-polynomial-approximation=\"enable-avx2\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-for-loop-peeling --test-scf-while-op-builder --scf-parallel-loop-fusion --mem2reg --inline --memref-expand --scf-forall-to-parallel --sroa --normalize-memrefs --memref-expand --memref-expand --test-scf-pipelining=\"annotate\" --loop-invariant-subset-hoisting --test-func-erase-arg --scf-forall-to-for --test-memref-bound-check --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --resolve-shaped-type-result-dims --resolve-ranked-shaped-type-result-dims --resolve-shaped-type-result-dims --arith-int-range-narrowing --test-function-pass --topological-sort --symbol-dce --fold-memref-alias-ops --duplicate-function-elimination --mem2reg --inline --expand-strided-metadata --memref-expand --sccp --test-memref-bound-check --arith-expand --normalize-memrefs | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --memref-expand --test-func-set-type --composite-fixed-point-pass --resolve-shaped-type-result-dims --canonicalize=\"test-convergence top-down=0\" --loop-invariant-code-motion --test-func-set-type --loop-invariant-subset-hoisting --normalize-memrefs --test-func-insert-result --loop-invariant-subset-hoisting --expand-realloc --test-func-insert-arg --test-memref-bound-check --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --test-func-insert-result --topological-sort --test-func-erase-arg --tosa-reduce-transposes --tosa-test-quant-utils --control-flow-sink --topological-sort --loop-invariant-subset-hoisting --test-func-insert-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --loop-invariant-subset-hoisting --symbol-dce --arith-unsigned-when-equivalent --test-linalg-pad-fusion --test-func-insert-arg --test-linalg-rank-reduce-contraction-ops --test-linalg-transform-patterns=\"test-erase-unnecessary-inputs\" --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-expansion\" --test-linalg-rank-reduce-contraction-ops --test-math-polynomial-approximation --topological-sort --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --test-func-insert-arg --sccp --linalg-specialize-generic-ops --linalg-generalize-named-ops --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-data-layout-propagation --tosa-reduce-transposes --test-func-insert-result --sroa --linalg-fuse-elementwise-ops --sccp --topological-sort --loop-invariant-subset-hoisting --math-extend-to-supported-types --sccp --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --topological-sort --test-linalg-elementwise-fusion-patterns=\"fuse-multiuse-producer\" --math-extend-to-supported-types --test-tensor-copy-insertion --tosa-reduce-transposes --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --int-range-optimizations --arith-expand=\"include-bf16\" --resolve-ranked-shaped-type-result-dims --sroa --duplicate-function-elimination --inline --test-func-insert-result --control-flow-sink --test-func-erase-arg --arith-unsigned-when-equivalent --test-func-erase-result --topological-sort --arith-expand --arith-expand --test-memref-bound-check --memref-emulate-wide-int=\"widest-int-supported=32\" --arith-expand --duplicate-function-elimination --fold-memref-alias-ops --composite-fixed-point-pass --sccp --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --symbol-dce --test-func-insert-arg --test-func-insert-result --duplicate-function-elimination --loop-invariant-subset-hoisting --remove-dead-values --test-func-insert-result --test-func-insert-result --loop-invariant-code-motion --composite-fixed-point-pass --symbol-dce --canonicalize | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --inline --topological-sort --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --fold-tensor-subset-ops --control-flow-sink --test-func-insert-result --fold-tensor-subset-ops --control-flow-sink --test-tensor-transform-patterns --canonicalize=\"test-convergence\" --test-func-set-type --tosa-make-broadcastable --composite-fixed-point-pass --tosa-optional-decompositions --tosa-layerwise-constant-fold --cse --sroa --inline --duplicate-function-elimination --tosa-test-quant-utils --control-flow-sink --test-func-insert-arg --fold-tensor-subset-ops --loop-invariant-code-motion --test-func-insert-arg --composite-fixed-point-pass --topological-sort --sccp --tosa-make-broadcastable --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-decompose-ops --sccp --test-arith-emulate-wide-int --test-math-polynomial-approximation --convert-elementwise-to-linalg --test-linalg-data-layout-propagation --test-linalg-data-layout-propagation --test-linalg-data-layout-propagation | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-test-quant-utils | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-decompose-ops --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --test-func-insert-result --sroa --mem2reg --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-result --test-linalg-greedy-fusion --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-linalg-data-layout-propagation --sroa --test-linalg-pad-fusion --test-function-pass --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --arith-emulate-wide-int=\"widest-int-supported=32\" --test-linalg-transform-patterns=\"test-erase-unnecessary-inputs\" --test-memref-dependence-check --convert-elementwise-to-linalg --test-memref-dependence-check --convert-elementwise-to-linalg --test-emulate-narrow-int=\"memref-load-bitwidth=8\" --linalg-generalize-named-ops --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-for-to-while --test-memref-dependence-check --resolve-ranked-shaped-type-result-dims --arith-expand --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-scf-for-utils --fold-memref-alias-ops --scf-parallel-loop-fusion --topological-sort --test-memref-dependence-check --test-memref-dependence-check --scf-for-loop-specialization --arith-unsigned-when-equivalent | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --sccp --sccp --memref-expand --canonicalize=\"test-convergence\" --sroa --loop-invariant-subset-hoisting --loop-invariant-subset-hoisting --test-scf-pipelining --inline --control-flow-sink --test-function-pass --duplicate-function-elimination --scf-for-to-while | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --remove-dead-values --resolve-ranked-shaped-type-result-dims --test-function-pass --fold-memref-alias-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-memref-dependence-check --test-func-set-type --test-function-pass --sroa --topological-sort --inline --duplicate-function-elimination --normalize-memrefs --duplicate-function-elimination --composite-fixed-point-pass --inline --memref-expand --test-func-insert-result --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sroa --test-func-erase-result --canonicalize=\"test-convergence\" --test-function-pass --test-func-insert-result --loop-invariant-code-motion --test-func-set-type --sroa --test-func-insert-arg --test-func-erase-arg --test-function-pass --sccp --duplicate-function-elimination --control-flow-sink --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --tosa-make-broadcastable --test-func-insert-result --mem2reg --mem2reg=\"region-simplify\" --tosa-reduce-transposes --test-func-erase-result --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --test-func-erase-result --composite-fixed-point-pass --tosa-reduce-transposes --remove-dead-values --tosa-reduce-transposes --tosa-optional-decompositions --tosa-make-broadcastable --test-tensor-copy-insertion --mem2reg --tosa-optional-decompositions --test-func-insert-arg --mem2reg --tosa-validate --test-function-pass --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --math-extend-to-supported-types --int-range-optimizations --test-function-pass --linalg-generalize-named-ops --arith-unsigned-when-equivalent --test-linalg-elementwise-fusion-patterns --linalg-inline-scalar-operands --int-range-optimizations --test-func-erase-arg --test-math-polynomial-approximation=\"enable-avx2\" --cse --mem2reg --composite-fixed-point-pass --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --convert-elementwise-to-linalg --linalg-generalize-named-ops --sccp --mem2reg=\"region-simplify\" --sccp --test-arith-emulate-wide-int=\"widest-int-supported=8\" --convert-elementwise-to-linalg --arith-expand=\"include-bf16\" --math-uplift-to-fma --control-flow-sink --test-math-to-vcix --linalg-fuse-elementwise-ops --inline --canonicalize --loop-invariant-subset-hoisting --arith-unsigned-when-equivalent --sccp --math-extend-to-supported-types --test-math-polynomial-approximation --test-math-algebraic-simplification --inline --test-linalg-rank-reduce-contraction-ops --test-linalg-elementwise-fusion-patterns=\"collapse-dimensions-control=2,3\" --math-uplift-to-fma --test-linalg-drop-unit-dims --duplicate-function-elimination --mem2reg=\"region-simplify\" --test-linalg-greedy-fusion --control-flow-sink --test-arith-emulate-wide-int --test-function-pass --math-uplift-to-fma | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --test-memref-bound-check | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-arg --mem2reg --symbol-dce --cse --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --linalg-generalize-named-ops --sccp --inline --control-flow-sink --sroa --linalg-inline-scalar-operands --test-memref-dependence-check --linalg-named-op-conversion --linalg-specialize-generic-ops --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --test-function-pass --test-linalg-transform-patterns=\"test-swap-subtensor-padtensor\" --expand-realloc --expand-realloc=\"emit-deallocs\" --inline --test-memref-dependence-check --convert-elementwise-to-linalg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --remove-dead-values --test-func-insert-arg --loop-invariant-code-motion --sccp --test-function-pass --cse --fold-memref-alias-ops --control-flow-sink --mem2reg --test-func-insert-arg --resolve-shaped-type-result-dims --cse --normalize-memrefs --sccp --duplicate-function-elimination --resolve-shaped-type-result-dims --resolve-ranked-shaped-type-result-dims --test-func-insert-result --inline --memref-expand --symbol-dce --test-memref-bound-check --test-func-insert-result --canonicalize --test-memref-bound-check | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --remove-dead-values | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-arg --test-func-erase-arg --canonicalize --topological-sort --test-func-set-type --cse --loop-invariant-subset-hoisting --mem2reg=\"region-simplify\" --test-function-pass --test-func-insert-arg --sroa --canonicalize=\"test-convergence top-down=0\" --symbol-dce --sroa --topological-sort --canonicalize=\"test-convergence\" --control-flow-sink --loop-invariant-code-motion --symbol-dce --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --canonicalize=\"test-convergence top-down=0\" --loop-invariant-code-motion --cse --topological-sort --inline --fold-tensor-subset-ops --remove-dead-values --canonicalize --test-function-pass --control-flow-sink --tosa-make-broadcastable --test-func-set-type --loop-invariant-subset-hoisting --remove-dead-values --test-function-pass --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-math-to-vcix --test-math-polynomial-approximation --math-extend-to-supported-types --test-linalg-rank-reduce-contraction-ops --canonicalize=\"test-convergence\" --composite-fixed-point-pass --linalg-specialize-generic-ops --test-func-insert-result --arith-expand --test-func-set-type --test-linalg-greedy-fusion --linalg-inline-scalar-operands --linalg-named-op-conversion --linalg-fuse-elementwise-ops --linalg-generalize-named-ops --math-extend-to-supported-types --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sroa --loop-invariant-code-motion --test-tensor-transform-patterns=\"test-rewrite-extract-slice-from-collapse-shape\" --test-tensor-copy-insertion=\"must-infer-memory-space\" --test-func-erase-result --symbol-dce --test-math-polynomial-approximation | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --expand-realloc=\"emit-deallocs\" --test-math-to-vcix --math-extend-to-supported-types --test-linalg-drop-unit-dims --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sroa --test-func-erase-arg --duplicate-function-elimination --test-scf-pipelining=\"no-epilogue-peeling\" --memref-emulate-wide-int --math-extend-to-supported-types --expand-strided-metadata --test-scf-for-utils --expand-realloc --arith-expand=\"include-bf16\" --test-func-erase-result --mem2reg=\"region-simplify\" --scf-parallel-loop-specialization --duplicate-function-elimination --scf-for-to-while --math-uplift-to-fma --scf-for-loop-range-folding --test-scf-pipelining=\"annotate\" --test-func-insert-arg --arith-emulate-unsupported-floats --scf-for-loop-canonicalization --test-func-insert-result --loop-invariant-subset-hoisting --inline --scf-for-to-while --symbol-dce --remove-dead-values --test-scf-for-utils=\"test-replace-with-new-yields\" --test-func-insert-arg --control-flow-sink --scf-for-loop-specialization --memref-emulate-wide-int --fold-memref-alias-ops --math-extend-to-supported-types --arith-expand --int-range-optimizations --test-func-insert-arg --arith-expand=\"include-bf16\" --test-math-algebraic-simplification --test-func-erase-arg --fold-memref-alias-ops --test-arith-emulate-wide-int=\"widest-int-supported=8\" --arith-unsigned-when-equivalent --duplicate-function-elimination --resolve-ranked-shaped-type-result-dims --arith-expand --test-memref-dependence-check --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-scf-for-utils --scf-forall-to-parallel --normalize-memrefs | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-scf-pipelining=\"no-epilogue-peeling\" --test-func-erase-result --resolve-ranked-shaped-type-result-dims --canonicalize --fold-memref-alias-ops --resolve-ranked-shaped-type-result-dims --control-flow-sink --arith-expand=\"include-bf16\" --test-emulate-narrow-int | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-memref-bound-check --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --arith-unsigned-when-equivalent --resolve-ranked-shaped-type-result-dims --fold-memref-alias-ops --test-memref-bound-check --arith-int-range-narrowing --resolve-shaped-type-result-dims --test-func-set-type --inline --control-flow-sink --normalize-memrefs --int-range-optimizations --test-func-erase-result --test-func-insert-arg --remove-dead-values --test-func-erase-result --cse --duplicate-function-elimination --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sroa --test-func-insert-result --test-memref-dependence-check --remove-dead-values --expand-strided-metadata --test-func-erase-arg --canonicalize --sroa --resolve-ranked-shaped-type-result-dims --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sroa --topological-sort --test-func-erase-result --cse --composite-fixed-point-pass --test-func-erase-result --mem2reg=\"region-simplify\" --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -test-math-polynomial-approximation | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --arith-emulate-unsupported-floats --test-linalg-pad-fusion --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --control-flow-sink --test-math-algebraic-simplification --arith-emulate-wide-int --loop-invariant-subset-hoisting --loop-invariant-code-motion --int-range-optimizations --arith-unsigned-when-equivalent --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --duplicate-function-elimination --symbol-dce --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --tosa-make-broadcastable --test-linalg-drop-unit-dims --linalg-specialize-generic-ops --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-expand-math --sccp --linalg-fuse-elementwise-ops --symbol-dce --symbol-dce --loop-invariant-code-motion --test-linalg-pad-fusion --fold-tensor-subset-ops --test-linalg-data-layout-propagation --test-func-set-type --sroa --convert-elementwise-to-linalg --test-linalg-transform-patterns=\"test-erase-unnecessary-inputs\" --test-linalg-pad-fusion --composite-fixed-point-pass --topological-sort --inline --linalg-generalize-named-ops --test-linalg-data-layout-propagation --arith-int-range-narrowing --canonicalize --fold-tensor-subset-ops --arith-int-range-narrowing --int-range-optimizations --math-extend-to-supported-types --test-math-algebraic-simplification --test-math-to-vcix --inline --int-range-optimizations --math-extend-to-supported-types --test-func-erase-arg --loop-invariant-code-motion --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --composite-fixed-point-pass --mem2reg --test-function-pass --loop-invariant-code-motion --canonicalize --scf-for-loop-specialization --test-scf-if-utils --scf-for-loop-peeling --inline --scf-for-to-while --test-scf-uplift-while-to-for | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --int-range-optimizations --resolve-shaped-type-result-dims --scf-forall-to-parallel --control-flow-sink --control-flow-sink --test-func-set-type --test-func-insert-arg --scf-parallel-loop-fusion --scf-parallel-loop-fusion --test-func-insert-result --symbol-dce --memref-emulate-wide-int=\"widest-int-supported=32\" --test-func-erase-result --int-range-optimizations --int-range-optimizations --test-scf-if-utils --topological-sort --cse --test-func-erase-result --memref-emulate-wide-int=\"widest-int-supported=32\" --test-scf-uplift-while-to-for --remove-dead-values --scf-parallel-loop-tiling --scf-parallel-loop-specialization --arith-unsigned-when-equivalent --test-memref-dependence-check --test-memref-dependence-check --mem2reg --arith-emulate-wide-int | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-expand=\"include-bf16\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --loop-invariant-code-motion --remove-dead-values --loop-invariant-code-motion --test-func-insert-result --memref-expand --expand-realloc --symbol-dce --sroa --mem2reg=\"region-simplify\" --sroa --test-func-erase-arg --resolve-ranked-shaped-type-result-dims --test-memref-dependence-check --normalize-memrefs --remove-dead-values --loop-invariant-subset-hoisting --duplicate-function-elimination --expand-strided-metadata --test-func-erase-arg --test-func-set-type --cse --composite-fixed-point-pass --resolve-ranked-shaped-type-result-dims --test-func-insert-result --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-arg --loop-invariant-subset-hoisting --cse --control-flow-sink --test-func-erase-arg --loop-invariant-subset-hoisting --sroa --loop-invariant-subset-hoisting --topological-sort --duplicate-function-elimination --duplicate-function-elimination --control-flow-sink --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --loop-invariant-code-motion --duplicate-function-elimination --inline --control-flow-sink --test-function-pass --sccp --sccp --sccp --loop-invariant-code-motion --test-func-insert-arg --topological-sort --control-flow-sink --mem2reg --test-func-insert-result --sccp --topological-sort --topological-sort --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --symbol-dce --test-tensor-transform-patterns --fold-tensor-subset-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --mem2reg --fold-tensor-subset-ops --canonicalize --duplicate-function-elimination --sroa --tosa-optional-decompositions --arith-unsigned-when-equivalent --test-emulate-narrow-int=\"memref-load-bitwidth=32\" --test-func-erase-result --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --tosa-test-quant-utils --loop-invariant-subset-hoisting --tosa-reduce-transposes --composite-fixed-point-pass --duplicate-function-elimination --loop-invariant-code-motion --topological-sort --loop-invariant-code-motion --arith-emulate-unsupported-floats --tosa-infer-shapes --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --sroa --cse --test-arith-emulate-wide-int=\"widest-int-supported=8\" --duplicate-function-elimination --tosa-reduce-transposes --test-function-pass --tosa-optional-decompositions --test-tensor-transform-patterns=\"test-reassociative-reshape-folding\" --arith-int-range-narrowing --tosa-test-quant-utils --inline --int-range-optimizations --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-function-pass --mem2reg --fold-tensor-subset-ops --mem2reg=\"region-simplify\" --canonicalize=\"test-convergence\" --test-func-insert-arg --topological-sort --arith-emulate-wide-int --tosa-test-quant-utils --tosa-optional-decompositions | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-memref-dependence-check --test-func-erase-arg --canonicalize --test-func-set-type --cse --math-uplift-to-fma --test-memref-dependence-check --test-math-polynomial-approximation --linalg-fuse-elementwise-ops --test-math-polynomial-approximation=\"enable-avx2\" --canonicalize=\"test-convergence\" --control-flow-sink --test-linalg-data-layout-propagation --test-linalg-data-layout-propagation --expand-strided-metadata --fold-memref-alias-ops --test-memref-bound-check --test-math-to-vcix --loop-invariant-code-motion --inline --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-specialize-generic-ops --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --test-linalg-drop-unit-dims --symbol-dce --test-linalg-data-layout-propagation --mem2reg=\"region-simplify\" --canonicalize --topological-sort --test-linalg-drop-unit-dims --test-func-insert-result --cse --composite-fixed-point-pass --test-linalg-transform-patterns=\"test-swap-subtensor-padtensor\" --loop-invariant-code-motion --symbol-dce --test-linalg-transform-patterns=\"test-erase-unnecessary-inputs\" --test-linalg-data-layout-propagation --test-linalg-pad-fusion --topological-sort --symbol-dce --test-func-set-type --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-collapsing-control\" --test-func-set-type --duplicate-function-elimination --sroa --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --resolve-shaped-type-result-dims --test-func-erase-result --composite-fixed-point-pass --test-func-erase-arg --test-scf-pipelining=\"no-epilogue-peeling\" --scf-for-loop-range-folding --test-func-erase-result --sccp --test-func-erase-result --test-function-pass --test-scf-uplift-while-to-for --topological-sort --scf-for-loop-range-folding --test-scf-if-utils --scf-for-loop-canonicalization --scf-forall-to-parallel --scf-forall-to-for --resolve-shaped-type-result-dims --test-scf-if-utils | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-unsigned-when-equivalent --inline --symbol-dce --fold-memref-alias-ops --test-func-erase-arg --resolve-ranked-shaped-type-result-dims --test-func-insert-result --test-func-insert-arg --test-func-insert-result --test-func-erase-arg --test-func-insert-result --arith-emulate-unsupported-floats --sccp --test-memref-dependence-check --test-func-erase-result --int-range-optimizations --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --arith-expand --test-func-insert-result --memref-emulate-wide-int --test-func-erase-result --expand-realloc --control-flow-sink --memref-expand --arith-emulate-wide-int=\"widest-int-supported=32\" --mem2reg=\"region-simplify\" --memref-emulate-wide-int=\"widest-int-supported=32\" --test-func-insert-arg --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-arith-emulate-wide-int --arith-int-range-narrowing --remove-dead-values --test-func-erase-result --test-func-insert-result --arith-emulate-wide-int=\"widest-int-supported=32\" --test-func-erase-result --control-flow-sink --topological-sort --test-func-insert-arg --sroa --topological-sort --arith-int-range-narrowing --test-func-set-type --cse --arith-expand --test-func-erase-arg --topological-sort --canonicalize --test-func-insert-result --test-func-erase-result --inline --inline --test-func-insert-arg --remove-dead-values --duplicate-function-elimination --composite-fixed-point-pass --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --sroa --remove-dead-values --test-func-erase-result --remove-dead-values --composite-fixed-point-pass --control-flow-sink --topological-sort --test-func-insert-arg --cse --test-func-set-type --test-func-erase-arg --loop-invariant-subset-hoisting --sccp --test-func-erase-arg --loop-invariant-subset-hoisting --symbol-dce --inline --test-func-insert-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize=\"test-convergence top-down=0\" --remove-dead-values --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --composite-fixed-point-pass --fold-tensor-subset-ops --tosa-make-broadcastable --test-func-erase-result --loop-invariant-code-motion --test-func-erase-arg --sroa --tosa-optional-decompositions | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-optional-decompositions --convert-elementwise-to-linalg --symbol-dce --cse --convert-elementwise-to-linalg --test-linalg-drop-unit-dims --test-func-insert-arg --math-extend-to-supported-types --test-math-to-vcix --arith-expand=\"include-bf16\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize=\"test-convergence top-down=0\" --test-tensor-transform-patterns=\"test-fold-constant-extract-slice\" --arith-expand --linalg-named-op-conversion --sccp --test-linalg-drop-unit-dims --math-uplift-to-fma --test-linalg-decompose-ops --math-extend-to-supported-types --loop-invariant-subset-hoisting --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --test-func-erase-arg --linalg-generalize-named-ops --linalg-fold-unit-extent-dims --linalg-fold-unit-extent-dims --test-math-polynomial-approximation=\"enable-avx2\" --linalg-inline-scalar-operands --composite-fixed-point-pass --test-math-to-vcix --test-func-insert-result --math-uplift-to-fma --test-expand-math --test-func-set-type --arith-emulate-unsupported-floats --sccp --test-linalg-greedy-fusion --linalg-generalize-named-ops --test-function-pass --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg=\"region-simplify\" --linalg-generalize-named-ops --inline --topological-sort --canonicalize=\"test-convergence\" --duplicate-function-elimination --symbol-dce --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --sccp --sccp --int-range-optimizations --inline --composite-fixed-point-pass --arith-emulate-wide-int=\"widest-int-supported=32\" --linalg-named-op-conversion --sroa --arith-unsigned-when-equivalent --test-linalg-drop-unit-dims | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-forall-to-parallel --test-scf-uplift-while-to-for --sroa --expand-strided-metadata --scf-for-to-while --scf-for-loop-range-folding --scf-forall-to-for --test-scf-if-utils --test-memref-dependence-check | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --arith-emulate-unsupported-floats --test-func-erase-result --test-arith-emulate-wide-int=\"widest-int-supported=8\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --sccp --test-function-pass --test-func-set-type --remove-dead-values --test-arith-emulate-wide-int=\"widest-int-supported=8\" --composite-fixed-point-pass --inline --sroa --test-func-insert-result --test-arith-emulate-wide-int --arith-emulate-unsupported-floats --mem2reg --symbol-dce --arith-unsigned-when-equivalent --mem2reg --loop-invariant-subset-hoisting --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --sroa --test-func-insert-arg --test-func-insert-result --cse --symbol-dce --symbol-dce --canonicalize=\"test-convergence top-down=0\" --control-flow-sink --test-func-insert-arg --remove-dead-values --loop-invariant-code-motion --sroa --sroa --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --test-func-erase-result --cse --symbol-dce --cse --test-func-insert-result --test-func-insert-result --symbol-dce --canonicalize=\"test-convergence\" --mem2reg=\"region-simplify\" --test-func-erase-result --loop-invariant-code-motion --test-func-insert-result --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --topological-sort --control-flow-sink --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-result --symbol-dce --symbol-dce --loop-invariant-subset-hoisting --duplicate-function-elimination --test-func-insert-result --test-func-set-type --test-func-insert-result --test-func-erase-result --loop-invariant-code-motion --test-func-insert-result --tosa-layerwise-constant-fold --fold-tensor-subset-ops --control-flow-sink --inline --loop-invariant-code-motion --tosa-optional-decompositions --test-func-erase-arg --sroa --remove-dead-values --inline --duplicate-function-elimination --loop-invariant-subset-hoisting --tosa-reduce-transposes | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-linalg-pad-fusion --inline --sroa --inline --test-tensor-copy-insertion=\"must-infer-memory-space\" --sroa --convert-elementwise-to-linalg --convert-elementwise-to-linalg --mem2reg=\"region-simplify\" --arith-unsigned-when-equivalent --test-func-insert-arg --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --canonicalize --tosa-reduce-transposes --fold-tensor-subset-ops --loop-invariant-subset-hoisting --test-expand-math --test-math-algebraic-simplification --test-math-polynomial-approximation=\"enable-avx2\" --test-linalg-rank-reduce-contraction-ops --test-linalg-pad-fusion --tosa-infer-shapes --inline --test-func-set-type --fold-tensor-subset-ops --int-range-optimizations --fold-tensor-subset-ops --test-func-insert-arg --test-linalg-rank-reduce-contraction-ops --test-func-set-type --linalg-named-op-conversion --linalg-generalize-named-ops --test-linalg-rank-reduce-contraction-ops --sroa --test-tensor-transform-patterns=\"test-fold-constant-extract-slice\" --sroa --tosa-optional-decompositions --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --tosa-reduce-transposes --test-linalg-elementwise-fusion-patterns=\"fuse-generic-ops-control\" --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --cse --test-expand-math --mem2reg --test-func-insert-result --math-uplift-to-fma --mem2reg --math-uplift-to-fma --test-math-polynomial-approximation --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --sroa --test-scf-uplift-while-to-for | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-math-polynomial-approximation=\"enable-avx2\" --int-range-optimizations --int-range-optimizations --cse --test-math-algebraic-simplification --loop-invariant-subset-hoisting --math-uplift-to-fma --mem2reg=\"region-simplify\" --composite-fixed-point-pass --inline --inline --math-extend-to-supported-types --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-math-to-vcix --arith-expand=\"include-bf16\" --topological-sort --test-math-algebraic-simplification --test-function-pass --topological-sort --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --sroa --duplicate-function-elimination --test-func-insert-arg --math-extend-to-supported-types --test-func-insert-result --math-uplift-to-fma --test-func-erase-result --math-uplift-to-fma --loop-invariant-code-motion --test-math-algebraic-simplification --control-flow-sink --composite-fixed-point-pass --loop-invariant-subset-hoisting --sroa --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-math-polynomial-approximation=\"enable-avx2\" --test-math-polynomial-approximation --remove-dead-values --sccp --sroa --test-math-algebraic-simplification --composite-fixed-point-pass --sccp --symbol-dce --control-flow-sink --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --test-function-pass --loop-invariant-code-motion --mem2reg --test-func-set-type --cse --canonicalize --sccp --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --symbol-dce --composite-fixed-point-pass --tosa-optional-decompositions --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-reduce-transposes --test-function-pass --arith-unsigned-when-equivalent --arith-unsigned-when-equivalent --canonicalize=\"test-convergence\" --inline --fold-tensor-subset-ops --inline --inline --symbol-dce --arith-emulate-unsupported-floats --test-func-insert-arg --tosa-reduce-transposes --canonicalize --duplicate-function-elimination --canonicalize=\"test-convergence top-down=0\" --canonicalize --int-range-optimizations --cse --tosa-test-quant-utils --test-arith-emulate-wide-int --int-range-optimizations --tosa-make-broadcastable --canonicalize=\"test-convergence\" --test-func-insert-result --test-func-insert-arg --tosa-optional-decompositions --test-tensor-copy-insertion=\"must-infer-memory-space\" --duplicate-function-elimination --test-func-insert-arg --test-function-pass --tosa-test-quant-utils --fold-tensor-subset-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --normalize-memrefs --test-math-to-vcix --test-func-insert-arg --test-linalg-transform-patterns=\"test-patterns\" --convert-elementwise-to-linalg --test-math-polynomial-approximation --cse --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --cse --test-linalg-decompose-ops --normalize-memrefs --expand-realloc --canonicalize=\"test-convergence top-down=0\" --test-vector-contraction-prepare-for-mmt-lowering --loop-invariant-subset-hoisting --test-scalar-vector-transfer-lowering --expand-strided-metadata --resolve-shaped-type-result-dims --test-math-algebraic-simplification --memref-expand --test-memref-dependence-check --test-func-insert-result --linalg-specialize-generic-ops --test-linalg-greedy-fusion --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-expansion\" --test-vector-transfer-collapse-inner-most-dims --test-memref-dependence-check --resolve-ranked-shaped-type-result-dims --resolve-shaped-type-result-dims --test-linalg-rank-reduce-contraction-ops --linalg-generalize-named-ops --test-func-erase-arg --test-vector-gather-lowering --test-linalg-rank-reduce-contraction-ops --test-memref-dependence-check --cse --test-vector-transferop-opt --linalg-inline-scalar-operands --sroa --normalize-memrefs --convert-elementwise-to-linalg --test-func-set-type --test-linalg-rank-reduce-contraction-ops --cse --control-flow-sink --duplicate-function-elimination --test-func-erase-result --test-linalg-greedy-fusion --test-vector-transferop-opt --composite-fixed-point-pass --test-vector-to-vector-lowering=\"unroll\" --duplicate-function-elimination --normalize-memrefs --linalg-fuse-elementwise-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-scf-if-utils --test-scalar-vector-transfer-lowering=\"allow-multiple-uses\" --mem2reg --test-func-insert-arg --arith-expand --memref-emulate-wide-int=\"widest-int-supported=32\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-vector-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --affine-loop-tile=\"tile-size=32\" --resolve-shaped-type-result-dims --scf-for-to-while --duplicate-function-elimination --test-scf-uplift-while-to-for --test-constant-fold --test-scf-uplift-while-to-for --test-func-insert-result --affine-scalrep --arith-int-range-narrowing --sccp --test-scf-while-op-builder --affine-loop-tile | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-for-loop-canonicalization --test-function-pass --test-emulate-narrow-int=\"arith-compute-bitwidth=8\" --affine-loop-tile --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-vector-linearize=\"target-vector-bitwidth=128\" --duplicate-function-elimination --test-vector-extract-strided-slice-lowering --scf-for-loop-range-folding --remove-dead-values --symbol-dce --loop-invariant-code-motion --arith-expand=\"include-bf16\" --test-emulate-narrow-int=\"memref-load-bitwidth=8\" --test-vector-gather-lowering --test-func-insert-result --test-emulate-narrow-int=\"memref-load-bitwidth=32\" --test-scf-while-op-builder --symbol-dce --test-func-insert-arg --scf-for-loop-range-folding | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-result --sccp --sroa --test-vector-transfer-collapse-inner-most-dims --topological-sort --test-vector-extract-strided-slice-lowering --topological-sort --test-scalar-vector-transfer-lowering=\"allow-multiple-uses\" --test-vector-contraction-prepare-for-mmt-lowering --test-vector-transferop-opt --test-vector-transferop-opt | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --remove-dead-values --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-vector-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-arg --test-function-pass --test-create-vector-broadcast --test-vector-unrolling-patterns=\"unroll-based-on-type\" --canonicalize=\"test-convergence top-down=0\" --test-vector-transferop-opt --test-func-insert-result --test-function-pass --test-func-set-type --test-function-pass --test-func-erase-arg --test-scalar-vector-transfer-lowering --test-vector-unrolling-patterns=\"unroll-based-on-type unroll-order=2,0,1\" --topological-sort --sroa --test-create-vector-broadcast --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-vector-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --mem2reg=\"region-simplify\" --mem2reg=\"region-simplify\" --test-vector-gather-lowering --topological-sort --test-func-insert-result --control-flow-sink -lower-vector-mask --test-func-erase-arg --test-vector-to-vector-lowering=\"unroll\" --test-vector-chained-reduction-folding-patterns --test-vector-linearize --test-function-pass --test-vector-transfer-collapse-inner-most-dims --test-func-erase-arg --test-function-pass --inline --duplicate-function-elimination -lower-vector-multi-reduction=\"lowering-strategy=inner-parallel\" --test-vector-extract-strided-slice-lowering --test-func-erase-result --remove-dead-values --sroa --test-scalar-vector-transfer-lowering --topological-sort --symbol-dce --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-vector-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize=\"test-convergence\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-vector-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --cse --test-func-erase-result --test-vector-to-vector-lowering=\"unroll\" --sccp --test-func-set-type --test-vector-chained-reduction-folding-patterns --control-flow-sink --test-vector-gather-lowering --test-vector-chained-reduction-folding-patterns --test-create-vector-broadcast --composite-fixed-point-pass --test-vector-linearize=\"target-vector-bitwidth=128\" --test-vector-chained-reduction-folding-patterns --test-vector-transfer-collapse-inner-most-dims --sroa --topological-sort --test-func-set-type --test-vector-to-vector-lowering=\"unroll\" --test-vector-transfer-collapse-inner-most-dims --composite-fixed-point-pass --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-vector-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-vector-linearize=\"target-vector-bitwidth=0\" --test-vector-transferop-opt -lower-vector-mask --control-flow-sink -lower-vector-mask --test-vector-to-vector-lowering --test-vector-extract-strided-slice-lowering --loop-invariant-code-motion --test-vector-extract-strided-slice-lowering --test-vector-transfer-collapse-inner-most-dims --test-vector-transferop-opt --topological-sort --canonicalize=\"test-convergence top-down=0\" --mem2reg=\"region-simplify\" --test-vector-unrolling-patterns=\"unroll-based-on-type unroll-order=2,0,1\" --test-scalar-vector-transfer-lowering=\"allow-multiple-uses\" --composite-fixed-point-pass --loop-invariant-subset-hoisting --inline --control-flow-sink --test-vector-gather-lowering --test-vector-transferop-opt --topological-sort --test-func-insert-result --test-vector-extract-strided-slice-lowering --test-vector-extract-strided-slice-lowering --composite-fixed-point-pass --test-func-erase-result --test-vector-to-vector-lowering=\"unroll\" --test-func-insert-arg --topological-sort --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-vector-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-result --sccp --symbol-dce --sccp --test-func-erase-result --test-func-insert-arg --loop-invariant-code-motion --loop-invariant-subset-hoisting --sroa --remove-dead-values --test-func-insert-arg --loop-invariant-subset-hoisting --test-func-insert-result --test-func-erase-result --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --test-func-insert-arg --tosa-make-broadcastable --loop-invariant-code-motion --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize --math-uplift-to-fma --test-expand-math --sccp --arith-emulate-unsupported-floats --arith-emulate-wide-int=\"widest-int-supported=32\" --arith-emulate-wide-int --test-linalg-drop-unit-dims --arith-emulate-wide-int --inline --linalg-inline-scalar-operands --sroa --arith-expand --control-flow-sink --test-func-insert-arg --test-linalg-decompose-ops=\"remove-dead-args-and-results\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize=\"test-convergence top-down=0\" --fold-memref-alias-ops --inline --control-flow-sink --scf-parallel-loop-specialization --test-scf-while-op-builder --duplicate-function-elimination --remove-dead-values --resolve-shaped-type-result-dims --test-math-polynomial-approximation=\"enable-avx2\" --test-memref-dependence-check --arith-expand | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --arith-unsigned-when-equivalent --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --cse --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-func-erase-result --symbol-dce --test-func-erase-result --test-arith-emulate-wide-int=\"widest-int-supported=8\" --topological-sort --test-func-erase-arg --remove-dead-values --topological-sort --int-range-optimizations --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-func-set-type --mem2reg --canonicalize=\"test-convergence top-down=0\" --loop-invariant-subset-hoisting --loop-invariant-code-motion --control-flow-sink --arith-emulate-wide-int --duplicate-function-elimination --inline --arith-emulate-wide-int --topological-sort --test-arith-emulate-wide-int=\"widest-int-supported=8\" --arith-int-range-narrowing | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-arg --test-func-insert-arg --loop-invariant-subset-hoisting --duplicate-function-elimination --sccp --test-func-erase-result --canonicalize --loop-invariant-code-motion --test-func-set-type --control-flow-sink --loop-invariant-code-motion --inline --remove-dead-values | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --test-func-erase-result --duplicate-function-elimination --cse --test-func-erase-result --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-make-broadcastable --symbol-dce --tosa-infer-shapes --mem2reg --tosa-reduce-transposes --inline --test-tensor-transform-patterns=\"test-fold-constant-extract-slice\" --sccp --loop-invariant-code-motion --canonicalize --sccp --composite-fixed-point-pass --test-function-pass --cse --topological-sort --control-flow-sink --mem2reg=\"region-simplify\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize --test-func-insert-arg --test-function-pass --tosa-infer-shapes --remove-dead-values --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --cse --test-func-insert-arg --tosa-test-quant-utils --cse --test-func-erase-arg --control-flow-sink --canonicalize --remove-dead-values --loop-invariant-subset-hoisting --control-flow-sink --test-func-insert-arg --loop-invariant-code-motion --tosa-make-broadcastable --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-emulate-narrow-int --arith-expand=\"include-bf16\" --test-math-algebraic-simplification --test-tensor-transform-patterns=\"use-foreach\" --test-linalg-drop-unit-dims --arith-emulate-unsupported-floats --test-linalg-rank-reduce-contraction-ops --mem2reg=\"region-simplify\" --test-linalg-pad-fusion --topological-sort --arith-unsigned-when-equivalent --test-func-insert-arg --linalg-specialize-generic-ops --linalg-fold-unit-extent-dims --fold-tensor-subset-ops --test-func-insert-arg --test-arith-emulate-wide-int --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --tosa-make-broadcastable --test-function-pass --test-tensor-copy-insertion --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --loop-invariant-subset-hoisting --test-func-erase-arg --test-expand-math --test-func-erase-arg --tosa-test-quant-utils --test-linalg-elementwise-fusion-patterns=\"fuse-multiuse-producer\" --math-uplift-to-fma --convert-elementwise-to-linalg --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --test-expand-math --test-math-polynomial-approximation --duplicate-function-elimination --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-linalg-transform-patterns=\"test-bubble-up-extract-slice-op-pattern\" --test-linalg-drop-unit-dims --loop-invariant-code-motion --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-collapsing\" --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --convert-elementwise-to-linalg --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --symbol-dce --test-func-erase-arg --linalg-named-op-conversion --test-function-pass --topological-sort --symbol-dce --int-range-optimizations --linalg-named-op-conversion --linalg-fuse-elementwise-ops --test-linalg-greedy-fusion --sroa --topological-sort --topological-sort --sroa --test-func-insert-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --convert-elementwise-to-linalg --linalg-inline-scalar-operands --linalg-fold-unit-extent-dims --linalg-named-op-conversion --loop-invariant-code-motion --test-func-erase-arg --duplicate-function-elimination --control-flow-sink --inline --linalg-inline-scalar-operands --linalg-named-op-conversion --test-func-insert-arg --linalg-fuse-elementwise-ops --cse --inline --test-func-insert-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-generalize-named-ops --linalg-specialize-generic-ops --test-linalg-pad-fusion --test-linalg-drop-unit-dims --symbol-dce --symbol-dce --inline --test-func-insert-arg --loop-invariant-code-motion --test-func-erase-arg --linalg-named-op-conversion --resolve-shaped-type-result-dims --control-flow-sink --normalize-memrefs --expand-strided-metadata --sccp --test-memref-bound-check --test-func-insert-arg --test-function-pass --resolve-ranked-shaped-type-result-dims --sccp --test-linalg-drop-unit-dims --symbol-dce --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-drop-unit-dims --test-func-set-type --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-scf-uplift-while-to-for --test-scf-while-op-builder --test-scf-for-utils --memref-emulate-wide-int --scf-for-loop-specialization --test-func-erase-result --scf-for-loop-peeling=\"peel-front\" --scf-for-loop-specialization --duplicate-function-elimination --scf-for-to-while --arith-emulate-wide-int --normalize-memrefs --arith-int-range-narrowing --scf-for-loop-peeling --normalize-memrefs --resolve-ranked-shaped-type-result-dims --composite-fixed-point-pass --expand-strided-metadata --scf-parallel-loop-fusion --symbol-dce --resolve-ranked-shaped-type-result-dims --memref-expand --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --test-memref-bound-check --control-flow-sink --mem2reg=\"region-simplify\" --fold-memref-alias-ops --expand-strided-metadata --resolve-ranked-shaped-type-result-dims --expand-realloc --int-range-optimizations --arith-emulate-wide-int=\"widest-int-supported=32\" --expand-strided-metadata --arith-emulate-unsupported-floats --resolve-shaped-type-result-dims --test-func-erase-arg --sroa --test-function-pass --test-arith-emulate-wide-int=\"widest-int-supported=8\" --duplicate-function-elimination --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --test-func-insert-result --arith-int-range-narrowing --loop-invariant-code-motion --control-flow-sink --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --test-func-insert-result --test-func-insert-result --symbol-dce --inline --duplicate-function-elimination --test-func-erase-arg --topological-sort --test-func-insert-result --sccp --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --test-func-erase-result --test-tensor-copy-insertion=\"must-infer-memory-space\" --cse --tosa-make-broadcastable | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-arith-emulate-wide-int --arith-expand=\"include-bf16\" --math-extend-to-supported-types --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --test-func-set-type --sroa --test-expand-math --test-tensor-transform-patterns=\"test-fold-consecutive-insert-extract-slice\" --arith-expand --arith-int-range-narrowing | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-math-polynomial-approximation --linalg-specialize-generic-ops --math-extend-to-supported-types --loop-invariant-subset-hoisting --test-func-erase-result --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --linalg-specialize-generic-ops --test-arith-emulate-wide-int --test-linalg-elementwise-fusion-patterns=\"fuse-generic-ops-control\" --test-math-algebraic-simplification --topological-sort --cse --memref-emulate-wide-int=\"widest-int-supported=32\" --arith-expand --test-func-erase-result --linalg-fuse-elementwise-ops --resolve-ranked-shaped-type-result-dims --test-func-set-type --test-function-pass --test-function-pass --loop-invariant-code-motion --arith-emulate-wide-int --test-math-algebraic-simplification --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-linalg-greedy-fusion --memref-emulate-wide-int=\"widest-int-supported=32\" --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-expansion\" --int-range-optimizations | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --convert-elementwise-to-linalg --test-func-insert-arg --topological-sort --linalg-inline-scalar-operands --test-math-algebraic-simplification --test-func-erase-arg --test-linalg-rank-reduce-contraction-ops --linalg-named-op-conversion --expand-realloc=\"emit-deallocs\" --linalg-named-op-conversion --topological-sort --expand-strided-metadata --mem2reg=\"region-simplify\" --convert-elementwise-to-linalg --test-memref-bound-check --normalize-memrefs --test-linalg-drop-unit-dims --composite-fixed-point-pass --test-func-insert-result --sroa --duplicate-function-elimination --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --test-func-insert-result --composite-fixed-point-pass --topological-sort --sccp --test-func-insert-result --inline --linalg-inline-scalar-operands --inline --test-linalg-pad-fusion --linalg-fold-unit-extent-dims --duplicate-function-elimination --math-uplift-to-fma --composite-fixed-point-pass --test-math-algebraic-simplification --resolve-ranked-shaped-type-result-dims --linalg-inline-scalar-operands --test-expand-math --topological-sort --math-extend-to-supported-types --linalg-generalize-named-ops --test-expand-math --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-result --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --linalg-fuse-elementwise-ops --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-arith-emulate-wide-int --test-expand-math --math-extend-to-supported-types --linalg-named-op-conversion --test-linalg-greedy-fusion --sccp --mem2reg --test-linalg-transform-patterns --test-linalg-transform-patterns=\"test-vector-transfer-forwarding-patterns\" --test-func-erase-result --math-extend-to-supported-types --loop-invariant-code-motion --loop-invariant-code-motion --test-function-pass --test-linalg-elementwise-fusion-patterns --linalg-fold-unit-extent-dims --test-func-erase-arg --composite-fixed-point-pass --math-uplift-to-fma --linalg-inline-scalar-operands --test-expand-math --loop-invariant-code-motion --duplicate-function-elimination --arith-expand=\"include-bf16\" --linalg-named-op-conversion --test-linalg-greedy-fusion --linalg-generalize-named-ops --test-expand-math --symbol-dce --test-emulate-narrow-int=\"arith-compute-bitwidth=8\" --test-linalg-transform-patterns=\"test-erase-unused-operands-and-results\" --loop-invariant-subset-hoisting --linalg-fuse-elementwise-ops --test-linalg-drop-unit-dims --test-func-insert-result --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --convert-elementwise-to-linalg --test-func-erase-arg --sccp --test-func-erase-result --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --loop-invariant-code-motion --control-flow-sink --test-func-erase-arg --test-func-erase-arg --inline --test-func-set-type --test-func-insert-result --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --loop-invariant-code-motion --test-emulate-narrow-int=\"arith-compute-bitwidth=8\" --test-scf-if-utils --control-flow-sink --scf-for-loop-specialization --test-func-set-type --test-func-insert-arg --test-func-erase-arg --loop-invariant-code-motion --inline --scf-for-loop-specialization --test-func-erase-result --test-func-insert-result --arith-emulate-wide-int --test-arith-emulate-wide-int=\"widest-int-supported=8\" --scf-parallel-loop-specialization --scf-for-loop-canonicalization --test-func-erase-result --symbol-dce --canonicalize=\"test-convergence\" --control-flow-sink --test-func-insert-arg --topological-sort --canonicalize --test-func-set-type --cse --composite-fixed-point-pass --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-arith-emulate-wide-int=\"widest-int-supported=8\" --sccp --test-function-pass --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --topological-sort --test-func-erase-result --test-function-pass --loop-invariant-subset-hoisting --sccp --sccp --topological-sort --sroa --sroa --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --tosa-reduce-transposes --test-func-insert-arg --tosa-infer-shapes --test-func-insert-result --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-expand --test-linalg-pad-fusion --loop-invariant-subset-hoisting --linalg-inline-scalar-operands --fold-tensor-subset-ops --test-func-erase-arg --test-linalg-rank-reduce-contraction-ops --control-flow-sink --test-math-polynomial-approximation --arith-unsigned-when-equivalent --linalg-specialize-generic-ops --sroa --test-linalg-pad-fusion --test-linalg-drop-unit-dims --duplicate-function-elimination --test-linalg-greedy-fusion --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --test-linalg-rank-reduce-contraction-ops --loop-invariant-subset-hoisting --test-func-set-type --composite-fixed-point-pass --control-flow-sink --topological-sort --loop-invariant-code-motion --linalg-inline-scalar-operands --canonicalize --test-linalg-pad-fusion --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --test-linalg-pad-fusion --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --linalg-fold-unit-extent-dims --duplicate-function-elimination --test-linalg-greedy-fusion --sccp --linalg-named-op-conversion --test-linalg-rank-reduce-contraction-ops --symbol-dce --linalg-fuse-elementwise-ops --test-linalg-elementwise-fusion-patterns=\"fuse-generic-ops-control\" --test-linalg-pad-fusion --test-linalg-greedy-fusion --test-func-insert-arg --control-flow-sink --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-collapsing-control\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --remove-dead-values --int-range-optimizations --test-emulate-narrow-int --sccp --test-scf-uplift-while-to-for | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --test-func-insert-result --composite-fixed-point-pass --canonicalize=\"test-convergence\" --mem2reg --sroa --test-arith-emulate-wide-int --composite-fixed-point-pass --remove-dead-values | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-arg --composite-fixed-point-pass --loop-invariant-code-motion --test-func-erase-arg --inline --test-func-insert-result --cse --topological-sort --test-func-set-type --remove-dead-values --test-function-pass --inline --canonicalize=\"test-convergence\" --sccp --sccp --remove-dead-values --remove-dead-values | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --test-func-erase-arg --canonicalize --remove-dead-values --sroa --remove-dead-values --remove-dead-values --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --loop-invariant-subset-hoisting --tosa-layerwise-constant-fold --test-func-insert-arg --tosa-test-quant-utils --topological-sort --tosa-layerwise-constant-fold --sroa --tosa-infer-shapes --test-func-insert-result --loop-invariant-subset-hoisting --tosa-optional-decompositions --tosa-test-quant-utils --canonicalize=\"test-convergence top-down=0\" --tosa-reduce-transposes --loop-invariant-subset-hoisting --loop-invariant-subset-hoisting --tosa-layerwise-constant-fold | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-result --remove-dead-values --tosa-make-broadcastable --control-flow-sink --control-flow-sink --test-func-insert-arg --fold-tensor-subset-ops --test-func-insert-arg --test-emulate-narrow-int --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-arg --test-func-insert-result --fold-tensor-subset-ops --tosa-reduce-transposes --test-func-erase-arg --tosa-infer-shapes --tosa-infer-shapes --test-arith-emulate-wide-int --fold-tensor-subset-ops --cse --loop-invariant-subset-hoisting --duplicate-function-elimination --tosa-make-broadcastable --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --tosa-layerwise-constant-fold --duplicate-function-elimination --cse --tosa-layerwise-constant-fold --test-function-pass --control-flow-sink --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-math-polynomial-approximation=\"enable-avx2\" --linalg-inline-scalar-operands --arith-emulate-unsupported-floats --duplicate-function-elimination --arith-emulate-unsupported-floats --test-expand-math --math-extend-to-supported-types --test-math-to-vcix --loop-invariant-subset-hoisting --test-func-insert-result --test-linalg-data-layout-propagation --test-arith-emulate-wide-int --control-flow-sink --test-linalg-elementwise-fusion-patterns=\"fuse-generic-ops-control\" --linalg-specialize-generic-ops --arith-unsigned-when-equivalent --test-math-to-vcix --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-collapsing-control\" --test-emulate-narrow-int --composite-fixed-point-pass --inline --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --canonicalize --test-func-set-type --arith-int-range-narrowing --linalg-specialize-generic-ops --test-func-set-type --test-function-pass --linalg-specialize-generic-ops --test-func-erase-arg --linalg-named-op-conversion --linalg-generalize-named-ops --linalg-fuse-elementwise-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-wide-int --sroa --control-flow-sink --arith-unsigned-when-equivalent --test-func-insert-arg --int-range-optimizations | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --tosa-make-broadcastable --duplicate-function-elimination --control-flow-sink --inline --sccp --sccp --loop-invariant-code-motion --loop-invariant-subset-hoisting --canonicalize --cse --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --mem2reg=\"region-simplify\" --canonicalize --convert-elementwise-to-linalg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-pad-fusion --math-uplift-to-fma --test-linalg-elementwise-fusion-patterns=\"collapse-dimensions-control=2,3\" --sccp --linalg-named-op-conversion --test-linalg-drop-unit-dims --loop-invariant-subset-hoisting --test-math-polynomial-approximation --test-function-pass --linalg-generalize-named-ops --loop-invariant-subset-hoisting --test-tensor-copy-insertion --test-func-set-type --test-func-set-type --test-math-to-vcix --loop-invariant-code-motion --inline --test-expand-math --composite-fixed-point-pass --sroa --test-linalg-pad-fusion --test-linalg-decompose-ops --linalg-generalize-named-ops --duplicate-function-elimination --linalg-fuse-elementwise-ops --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --test-func-set-type --linalg-generalize-named-ops --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-generalize-named-ops --cse --test-linalg-transform-patterns --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --sroa --linalg-fuse-elementwise-ops --test-linalg-transform-patterns=\"test-decompose-winograd-ops\" --linalg-generalize-named-ops --test-func-erase-result --duplicate-function-elimination --canonicalize --control-flow-sink --convert-elementwise-to-linalg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg=\"region-simplify\" --loop-invariant-code-motion --control-flow-sink --test-linalg-data-layout-propagation --test-linalg-greedy-fusion --convert-elementwise-to-linalg --canonicalize=\"test-convergence top-down=0\" --test-linalg-transform-patterns=\"test-swap-extract-slice-with-fill-pattern\" --test-func-set-type --loop-invariant-subset-hoisting --test-function-pass --test-linalg-greedy-fusion --test-linalg-transform-patterns=\"test-decompose-winograd-ops\" --topological-sort --test-linalg-drop-unit-dims --convert-elementwise-to-linalg --linalg-inline-scalar-operands --linalg-inline-scalar-operands --test-linalg-greedy-fusion --test-linalg-transform-patterns --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --loop-invariant-subset-hoisting --loop-invariant-code-motion --loop-invariant-code-motion --convert-elementwise-to-linalg --topological-sort --inline --test-func-insert-arg --linalg-inline-scalar-operands --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sroa --test-scf-for-utils --test-scf-for-utils=\"test-replace-with-new-yields\" --cse --test-scf-while-op-builder --test-scf-while-op-builder --arith-expand --int-range-optimizations --test-func-erase-result --test-func-insert-result --sccp --arith-expand --remove-dead-values --int-range-optimizations --test-scf-uplift-while-to-for --scf-for-loop-range-folding --loop-invariant-subset-hoisting --loop-invariant-code-motion --scf-parallel-loop-specialization --scf-for-loop-specialization --test-scf-while-op-builder --cse --topological-sort --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-scf-while-op-builder --composite-fixed-point-pass --test-scf-if-utils | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --sccp --mem2reg --test-function-pass --test-arith-emulate-wide-int --inline --composite-fixed-point-pass --int-range-optimizations --composite-fixed-point-pass --control-flow-sink --arith-emulate-unsupported-floats --sccp --arith-int-range-narrowing --symbol-dce --control-flow-sink --canonicalize --arith-emulate-unsupported-floats --sccp --test-func-insert-result --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --test-func-erase-arg --loop-invariant-subset-hoisting --topological-sort --test-func-insert-arg --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-result --remove-dead-values --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --test-function-pass --tosa-test-quant-utils --test-func-set-type --tosa-optional-decompositions --test-func-insert-result --sccp --composite-fixed-point-pass --test-tensor-transform-patterns=\"test-reassociative-reshape-folding\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-test-quant-utils --arith-emulate-wide-int=\"widest-int-supported=32\" --tosa-infer-shapes --math-extend-to-supported-types --loop-invariant-subset-hoisting --symbol-dce --canonicalize=\"test-convergence top-down=0\" --test-linalg-decompose-ops --math-uplift-to-fma --arith-expand --math-uplift-to-fma | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --fold-tensor-subset-ops --composite-fixed-point-pass --canonicalize=\"test-convergence top-down=0\" --test-math-polynomial-approximation --test-math-algebraic-simplification --convert-elementwise-to-linalg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-expand-math --tosa-reduce-transposes --test-linalg-pad-fusion --math-uplift-to-fma | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --tosa-validate --linalg-fuse-elementwise-ops --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --mem2reg=\"region-simplify\" --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --control-flow-sink --cse --composite-fixed-point-pass --test-func-set-type --test-func-erase-arg --test-func-set-type --sccp --cse --inline --duplicate-function-elimination --mem2reg=\"region-simplify\" --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --tosa-test-quant-utils --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --test-func-erase-arg --remove-dead-values --duplicate-function-elimination --tosa-optional-decompositions --composite-fixed-point-pass --topological-sort --tosa-layerwise-constant-fold --fold-tensor-subset-ops --test-func-erase-result --tosa-make-broadcastable --canonicalize=\"test-convergence\" --control-flow-sink --tosa-make-broadcastable --tosa-make-broadcastable --inline --test-func-set-type --test-func-insert-arg --tosa-optional-decompositions --test-function-pass --test-func-erase-arg --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --sroa --loop-invariant-code-motion --topological-sort --test-tensor-transform-patterns=\"test-reassociative-reshape-folding\" --loop-invariant-code-motion --tosa-optional-decompositions --tosa-test-quant-utils --test-tensor-copy-insertion --test-func-erase-result --linalg-specialize-generic-ops --tosa-infer-shapes --composite-fixed-point-pass --tosa-make-broadcastable --tosa-make-broadcastable --test-func-insert-result --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --test-linalg-pad-fusion --duplicate-function-elimination --test-linalg-greedy-fusion --sroa --test-func-set-type --mem2reg=\"region-simplify\" --linalg-inline-scalar-operands --sccp --test-math-to-vcix --test-math-to-vcix --test-func-erase-arg --composite-fixed-point-pass --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --test-math-polynomial-approximation --symbol-dce --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --mem2reg --loop-invariant-subset-hoisting --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --cse --test-func-set-type --test-func-erase-arg --test-linalg-decompose-ops --test-linalg-rank-reduce-contraction-ops --test-func-erase-arg --tosa-make-broadcastable --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-arg --test-function-pass --linalg-named-op-conversion --test-linalg-rank-reduce-contraction-ops --arith-unsigned-when-equivalent --test-linalg-rank-reduce-contraction-ops --int-range-optimizations --test-func-set-type --mem2reg=\"region-simplify\" --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --arith-emulate-wide-int --test-tensor-transform-patterns=\"test-fold-consecutive-insert-extract-slice\" --linalg-generalize-named-ops --mem2reg --test-tensor-transform-patterns --arith-unsigned-when-equivalent --arith-unsigned-when-equivalent --arith-expand=\"include-bf16\" --control-flow-sink --arith-expand=\"include-bf16\" --canonicalize=\"test-convergence top-down=0\" --linalg-generalize-named-ops --test-linalg-pad-fusion --topological-sort --test-linalg-rank-reduce-contraction-ops --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-decompose-ops --inline --test-linalg-rank-reduce-contraction-ops --loop-invariant-code-motion --test-arith-emulate-wide-int --canonicalize=\"test-convergence\" --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --linalg-fuse-elementwise-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --expand-strided-metadata --test-func-insert-result --loop-invariant-code-motion --composite-fixed-point-pass --test-func-insert-result --linalg-generalize-named-ops --linalg-fuse-elementwise-ops --cse --fold-memref-alias-ops --test-linalg-pad-fusion --canonicalize --test-memref-dependence-check --test-linalg-drop-unit-dims --canonicalize --test-linalg-drop-unit-dims --test-linalg-data-layout-propagation --sroa --expand-strided-metadata --test-memref-bound-check --memref-emulate-wide-int --convert-elementwise-to-linalg --duplicate-function-elimination --linalg-fuse-elementwise-ops --mem2reg=\"region-simplify\" --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --linalg-fold-unit-extent-dims --canonicalize=\"test-convergence top-down=0\" --memref-expand --mem2reg=\"region-simplify\" --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-collapsing-control\" --linalg-fold-unit-extent-dims --mem2reg=\"region-simplify\" --resolve-shaped-type-result-dims --composite-fixed-point-pass --test-func-insert-arg --test-memref-dependence-check --test-func-erase-arg --test-linalg-drop-unit-dims --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --test-linalg-data-layout-propagation | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --test-func-erase-result --control-flow-sink --loop-invariant-code-motion --canonicalize=\"test-convergence top-down=0\" --control-flow-sink --sroa --sccp --mem2reg --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --tosa-make-broadcastable --test-function-pass --tosa-infer-shapes --duplicate-function-elimination --mem2reg --cse --remove-dead-values --test-func-set-type --fold-tensor-subset-ops --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --duplicate-function-elimination --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --tosa-test-quant-utils --remove-dead-values --tosa-make-broadcastable --composite-fixed-point-pass --sccp --topological-sort --cse --symbol-dce --tosa-optional-decompositions --inline --test-func-set-type --tosa-validate --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --tosa-optional-decompositions --tosa-reduce-transposes --int-range-optimizations --int-range-optimizations --tosa-test-quant-utils --loop-invariant-code-motion --test-linalg-pad-fusion --test-linalg-transform-patterns --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-linalg-greedy-fusion --test-math-polynomial-approximation=\"enable-avx2\" --linalg-generalize-named-ops --loop-invariant-code-motion --test-expand-math | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --linalg-named-op-conversion --test-expand-math --test-math-algebraic-simplification --test-linalg-decompose-ops --linalg-generalize-named-ops --test-linalg-pad-fusion --test-expand-math --sccp --linalg-specialize-generic-ops --mem2reg=\"region-simplify\" --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-transform-patterns=\"test-winograd-conv2d\" --test-linalg-data-layout-propagation --test-linalg-pad-fusion --int-range-optimizations --test-func-insert-result --arith-int-range-narrowing --cse --test-linalg-drop-unit-dims --inline --arith-int-range-narrowing --test-linalg-drop-unit-dims --test-expand-math --linalg-generalize-named-ops --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --test-func-erase-result --int-range-optimizations --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --linalg-fold-unit-extent-dims --linalg-inline-scalar-operands --test-tensor-copy-insertion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-memref-bound-check --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-expansion\" --test-math-algebraic-simplification --loop-invariant-code-motion --canonicalize=\"test-convergence\" --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-arith-emulate-wide-int=\"widest-int-supported=8\" --sccp --scf-forall-to-for --test-math-algebraic-simplification --memref-expand --remove-dead-values --cse --test-math-polynomial-approximation --expand-strided-metadata --test-scf-while-op-builder --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-arith-emulate-wide-int --resolve-shaped-type-result-dims --math-uplift-to-fma --test-math-polynomial-approximation=\"enable-avx2\" --test-memref-bound-check --test-scf-while-op-builder --arith-unsigned-when-equivalent --cse --expand-strided-metadata --scf-parallel-loop-tiling --test-math-to-vcix | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --scf-for-loop-peeling --test-scf-while-op-builder --test-function-pass --inline --test-function-pass --composite-fixed-point-pass --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --cse --test-scf-pipelining=\"no-epilogue-peeling\" --scf-parallel-loop-specialization --test-function-pass --scf-forall-to-parallel --topological-sort --scf-for-loop-canonicalization --scf-for-loop-canonicalization --mem2reg=\"region-simplify\" --test-func-erase-arg --symbol-dce --scf-for-loop-specialization --test-expand-math --scf-parallel-loop-specialization | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --scf-forall-to-parallel --test-emulate-narrow-int=\"memref-load-bitwidth=32\" --arith-emulate-wide-int=\"widest-int-supported=32\" --inline --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --sroa --scf-for-loop-canonicalization --remove-dead-values --scf-parallel-loop-fusion --arith-emulate-unsupported-floats --int-range-optimizations --test-func-erase-arg --arith-int-range-narrowing --topological-sort --test-func-insert-arg --topological-sort --int-range-optimizations | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-wide-int --control-flow-sink --test-func-insert-arg --canonicalize --test-func-erase-result --test-func-erase-result --canonicalize=\"test-convergence\" --test-func-erase-result --arith-int-range-narrowing --arith-unsigned-when-equivalent --test-func-set-type --test-arith-emulate-wide-int --cse --test-func-erase-arg --mem2reg=\"region-simplify\" --arith-emulate-wide-int --test-function-pass --canonicalize=\"test-convergence top-down=0\" --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --remove-dead-values --cse --composite-fixed-point-pass --canonicalize=\"test-convergence\" --sroa --control-flow-sink --loop-invariant-code-motion --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse --remove-dead-values --test-function-pass --mem2reg=\"region-simplify\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --sroa --composite-fixed-point-pass --control-flow-sink --composite-fixed-point-pass --tosa-make-broadcastable --tosa-make-broadcastable --tosa-optional-decompositions --fold-tensor-subset-ops --test-func-erase-arg --test-tensor-copy-insertion=\"must-infer-memory-space\" --fold-tensor-subset-ops --tosa-make-broadcastable --tosa-optional-decompositions --test-func-set-type --topological-sort --test-func-insert-result --test-func-erase-result --test-func-erase-arg --remove-dead-values --tosa-test-quant-utils --symbol-dce --fold-tensor-subset-ops --tosa-test-quant-utils --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --test-func-erase-arg --symbol-dce --test-func-erase-arg --tosa-make-broadcastable --test-function-pass --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-result --arith-emulate-wide-int --tosa-test-quant-utils --symbol-dce --arith-expand=\"include-bf16\" --test-func-insert-arg --cse --symbol-dce --cse --symbol-dce --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --canonicalize=\"test-convergence\" --arith-expand=\"include-bf16\" --tosa-infer-shapes --inline --test-tensor-copy-insertion=\"must-infer-memory-space\" --topological-sort --loop-invariant-code-motion --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-math-polynomial-approximation=\"enable-avx2\" --duplicate-function-elimination --linalg-specialize-generic-ops --test-linalg-pad-fusion --test-linalg-drop-unit-dims --math-extend-to-supported-types --duplicate-function-elimination --linalg-specialize-generic-ops --test-linalg-pad-fusion --cse --int-range-optimizations | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --linalg-specialize-generic-ops --linalg-fuse-elementwise-ops --loop-invariant-code-motion --linalg-fuse-elementwise-ops --linalg-fuse-elementwise-ops --mem2reg --linalg-inline-scalar-operands --memref-expand --test-func-erase-result --mem2reg --composite-fixed-point-pass --sccp --test-function-pass --cse --inline --test-func-erase-result --normalize-memrefs --expand-strided-metadata --duplicate-function-elimination --sccp --linalg-fuse-elementwise-ops --test-linalg-rank-reduce-contraction-ops --test-linalg-decompose-ops --test-func-erase-result --test-func-set-type --linalg-generalize-named-ops --loop-invariant-subset-hoisting --fold-memref-alias-ops --test-linalg-greedy-fusion --test-linalg-rank-reduce-contraction-ops --expand-realloc --mem2reg --linalg-named-op-conversion --mem2reg --test-function-pass --test-linalg-drop-unit-dims --duplicate-function-elimination --symbol-dce --memref-emulate-wide-int | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --scf-for-loop-specialization --test-memref-bound-check --scf-parallel-loop-fusion --duplicate-function-elimination --scf-for-loop-range-folding --duplicate-function-elimination --sccp --normalize-memrefs --remove-dead-values --test-func-erase-arg --resolve-ranked-shaped-type-result-dims --memref-emulate-wide-int=\"widest-int-supported=32\" --normalize-memrefs --arith-emulate-wide-int --scf-for-loop-specialization --resolve-shaped-type-result-dims --scf-for-to-while --memref-emulate-wide-int=\"widest-int-supported=32\" --resolve-shaped-type-result-dims --topological-sort --sroa --expand-strided-metadata --test-memref-dependence-check --scf-forall-to-for --test-scf-pipelining=\"no-epilogue-peeling\" --memref-expand --test-func-erase-result --arith-expand=\"include-bf16\" --normalize-memrefs --fold-memref-alias-ops --test-emulate-narrow-int=\"memref-load-bitwidth=32\" --duplicate-function-elimination --topological-sort --test-arith-emulate-wide-int --scf-parallel-loop-specialization --memref-expand --canonicalize=\"test-convergence\" --remove-dead-values --composite-fixed-point-pass --test-scf-pipelining=\"annotate\" --arith-expand | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --remove-dead-values --test-func-set-type --remove-dead-values --loop-invariant-code-motion --test-func-erase-result --test-func-erase-result --mem2reg=\"region-simplify\" --composite-fixed-point-pass --sroa --loop-invariant-subset-hoisting --arith-emulate-wide-int --test-function-pass --arith-expand=\"include-bf16\" --test-func-erase-result --test-func-set-type --arith-int-range-narrowing --test-func-erase-arg --test-func-insert-arg --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --sccp --test-func-insert-result --control-flow-sink --loop-invariant-code-motion --topological-sort --test-func-insert-arg --sroa --topological-sort --mem2reg=\"region-simplify\" --mem2reg=\"region-simplify\" --inline --symbol-dce --control-flow-sink --mem2reg --loop-invariant-subset-hoisting --test-func-insert-arg --loop-invariant-code-motion --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --tosa-layerwise-constant-fold --test-tensor-copy-insertion=\"must-infer-memory-space\" --cse --composite-fixed-point-pass --control-flow-sink --tosa-test-quant-utils --test-func-insert-arg --symbol-dce --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --test-tensor-transform-patterns=\"test-fold-constant-extract-slice\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-infer-shapes --test-func-set-type --tosa-infer-shapes --test-arith-emulate-wide-int=\"widest-int-supported=8\" --int-range-optimizations --test-func-set-type --tosa-reduce-transposes --sroa --test-arith-emulate-wide-int --mem2reg=\"region-simplify\" --inline --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-arith-emulate-wide-int --sccp --canonicalize=\"test-convergence\" --arith-emulate-wide-int=\"widest-int-supported=32\" --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --tosa-make-broadcastable --test-func-erase-arg --tosa-infer-shapes --test-tensor-copy-insertion --sccp --topological-sort --tosa-make-broadcastable --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --duplicate-function-elimination --test-func-erase-arg --arith-expand=\"include-bf16\" --tosa-infer-shapes --arith-unsigned-when-equivalent --tosa-make-broadcastable --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --inline --sroa --test-func-erase-arg --arith-expand=\"include-bf16\" --tosa-test-quant-utils | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --tosa-make-broadcastable --arith-emulate-wide-int --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --tosa-layerwise-constant-fold --canonicalize --arith-emulate-wide-int --arith-expand --loop-invariant-code-motion --mem2reg=\"region-simplify\" --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --arith-unsigned-when-equivalent --test-arith-emulate-wide-int --tosa-infer-shapes --test-func-insert-result --arith-emulate-wide-int --topological-sort --arith-int-range-narrowing --canonicalize=\"test-convergence top-down=0\" --tosa-test-quant-utils --inline --duplicate-function-elimination --test-func-insert-arg --inline --sroa --tosa-make-broadcastable --test-func-insert-arg --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-func-erase-result --test-func-insert-result --tosa-make-broadcastable --inline --arith-expand --symbol-dce --arith-unsigned-when-equivalent | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-wide-int=\"widest-int-supported=32\" --symbol-dce --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-linalg-data-layout-propagation --composite-fixed-point-pass --test-func-erase-result --sroa --linalg-specialize-generic-ops --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --arith-emulate-wide-int --math-extend-to-supported-types --duplicate-function-elimination --loop-invariant-subset-hoisting --sroa --resolve-ranked-shaped-type-result-dims --test-linalg-transform-patterns --sccp --linalg-fold-unit-extent-dims --test-func-erase-result --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --math-uplift-to-fma --test-function-pass --test-function-pass --test-math-polynomial-approximation=\"enable-avx2\" --loop-invariant-subset-hoisting --test-expand-math --test-expand-math --linalg-inline-scalar-operands --test-math-to-vcix --math-extend-to-supported-types --math-extend-to-supported-types --composite-fixed-point-pass --resolve-shaped-type-result-dims --test-linalg-pad-fusion --arith-emulate-wide-int --test-memref-bound-check --control-flow-sink --canonicalize=\"test-convergence\" --arith-expand=\"include-bf16\" --arith-unsigned-when-equivalent --test-func-erase-arg --test-memref-bound-check --linalg-generalize-named-ops --arith-int-range-narrowing --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize=\"test-convergence\" --fold-memref-alias-ops --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --memref-expand --memref-emulate-wide-int --expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --expand-realloc=\"emit-deallocs\" --composite-fixed-point-pass --composite-fixed-point-pass --resolve-shaped-type-result-dims --remove-dead-values --remove-dead-values --inline --test-func-insert-arg --test-func-insert-result --test-func-erase-arg --mem2reg --test-func-insert-result --test-func-insert-arg --test-memref-dependence-check --symbol-dce --expand-realloc=\"emit-deallocs\" --test-memref-dependence-check --expand-realloc --test-func-erase-arg --test-func-set-type --inline --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg --test-func-erase-result --test-func-erase-arg --test-func-erase-arg --inline --sroa --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --test-func-insert-arg --duplicate-function-elimination --sroa --int-range-optimizations --sccp --test-func-insert-result --canonicalize --test-function-pass --control-flow-sink --inline --duplicate-function-elimination --loop-invariant-code-motion --tosa-reduce-transposes --control-flow-sink --loop-invariant-code-motion --test-func-insert-result --test-func-erase-result --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-arith-emulate-wide-int --arith-emulate-wide-int=\"widest-int-supported=32\" --canonicalize --arith-unsigned-when-equivalent --test-arith-emulate-wide-int --test-func-erase-arg --tosa-reduce-transposes --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --mem2reg=\"region-simplify\" --sroa --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --tosa-reduce-transposes --test-func-insert-arg --symbol-dce --inline --test-func-erase-result --composite-fixed-point-pass --fold-tensor-subset-ops --topological-sort --symbol-dce --test-func-insert-result --control-flow-sink --fold-tensor-subset-ops --test-func-erase-arg --tosa-reduce-transposes --arith-int-range-narrowing --cse --test-func-erase-arg --test-tensor-transform-patterns=\"test-reassociative-reshape-folding\" --int-range-optimizations --fold-tensor-subset-ops --test-func-erase-arg --tosa-optional-decompositions --remove-dead-values --tosa-make-broadcastable --control-flow-sink --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-emulate-narrow-int=\"arith-compute-bitwidth=8\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-for-loop-canonicalization --test-scf-pipelining --test-math-polynomial-approximation=\"enable-avx2\" --scf-parallel-loop-fusion --scf-forall-to-for --expand-strided-metadata --loop-invariant-code-motion --cse --memref-emulate-wide-int --normalize-memrefs --control-flow-sink --normalize-memrefs --topological-sort --test-math-algebraic-simplification --expand-strided-metadata --test-func-set-type --test-scf-pipelining=\"no-epilogue-peeling\" --mem2reg=\"region-simplify\" --cse --scf-for-loop-peeling=\"peel-front\" --math-extend-to-supported-types --test-func-insert-result --arith-emulate-wide-int --scf-parallel-loop-tiling --scf-for-loop-canonicalization | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-math-algebraic-simplification --resolve-shaped-type-result-dims --test-func-insert-result --test-math-to-vcix --control-flow-sink --test-func-erase-result --int-range-optimizations --expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --test-func-erase-result --math-extend-to-supported-types --int-range-optimizations --test-func-erase-result --math-extend-to-supported-types --canonicalize --test-func-erase-result --test-func-insert-result --arith-emulate-wide-int --mem2reg=\"region-simplify\" --math-extend-to-supported-types --test-func-insert-result --arith-unsigned-when-equivalent --test-func-erase-arg --composite-fixed-point-pass --test-math-polynomial-approximation=\"enable-avx2\" --arith-int-range-narrowing | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --remove-dead-values --duplicate-function-elimination --composite-fixed-point-pass --test-math-to-vcix --test-func-erase-arg --test-function-pass --test-func-erase-result --test-func-erase-result --sroa --inline --sccp --test-math-polynomial-approximation --test-function-pass --math-uplift-to-fma --duplicate-function-elimination --remove-dead-values --test-function-pass --math-extend-to-supported-types --test-function-pass --sroa --test-func-set-type --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --symbol-dce --remove-dead-values --sroa --control-flow-sink --composite-fixed-point-pass --sccp --test-func-erase-result --test-func-insert-result --test-func-erase-arg --test-func-insert-arg --canonicalize=\"test-convergence\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --cse --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-for-to-while --scf-parallel-loop-tiling --scf-for-loop-canonicalization --scf-for-loop-peeling=\"peel-front\" --tosa-optional-decompositions --test-function-pass --scf-parallel-loop-tiling=\"parallel-loop-tile-sizes=1,4 no-min-max-bounds=true\" --scf-parallel-loop-fusion --test-func-erase-arg --tosa-make-broadcastable --tosa-test-quant-utils --loop-invariant-subset-hoisting --scf-parallel-loop-fusion --test-scf-if-utils --tosa-reduce-transposes --scf-for-loop-canonicalization --test-function-pass --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-specialize-generic-ops --arith-expand=\"include-bf16\" --test-linalg-drop-unit-dims --control-flow-sink --topological-sort --duplicate-function-elimination --fold-tensor-subset-ops --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --linalg-generalize-named-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --memref-emulate-wide-int=\"widest-int-supported=32\" --test-linalg-transform-patterns=\"test-erase-unused-operands-and-results\" --test-function-pass --test-memref-dependence-check --test-arith-emulate-wide-int --arith-emulate-unsupported-floats --linalg-named-op-conversion --loop-invariant-subset-hoisting --arith-int-range-narrowing --symbol-dce --loop-invariant-code-motion --test-memref-dependence-check --convert-elementwise-to-linalg --test-math-to-vcix --test-linalg-decompose-ops --loop-invariant-code-motion --arith-emulate-wide-int --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-func-insert-arg --resolve-shaped-type-result-dims --topological-sort --test-linalg-drop-unit-dims --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --memref-expand --test-linalg-transform-patterns=\"test-erase-unnecessary-inputs\" --test-func-erase-result --mem2reg=\"region-simplify\" --math-extend-to-supported-types --linalg-fold-unit-extent-dims --mem2reg=\"region-simplify\" --test-func-erase-arg --linalg-specialize-generic-ops --test-linalg-pad-fusion --test-linalg-transform-patterns=\"test-vector-transfer-forwarding-patterns\" --test-memref-dependence-check --test-math-polynomial-approximation=\"enable-avx2\" --sccp --resolve-ranked-shaped-type-result-dims --test-func-erase-result --linalg-specialize-generic-ops --linalg-fold-unit-extent-dims --test-memref-dependence-check --test-linalg-elementwise-fusion-patterns=\"control-fusion-by-expansion\" --linalg-named-op-conversion --linalg-fold-unit-extent-dims --test-expand-math --test-memref-bound-check --test-linalg-greedy-fusion --test-math-polynomial-approximation=\"enable-avx2\" --test-func-erase-arg --inline --loop-invariant-subset-hoisting --control-flow-sink --expand-strided-metadata --test-linalg-elementwise-fusion-patterns=\"fuse-multiuse-producer\" --topological-sort --test-math-algebraic-simplification --resolve-shaped-type-result-dims --expand-realloc --fold-memref-alias-ops --test-linalg-rank-reduce-contraction-ops --resolve-shaped-type-result-dims --test-func-set-type --test-math-algebraic-simplification --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --math-uplift-to-fma --topological-sort --test-linalg-data-layout-propagation --test-func-insert-arg --test-function-pass --math-uplift-to-fma --test-linalg-greedy-fusion --test-linalg-drop-unit-dims --convert-elementwise-to-linalg --test-func-insert-result --test-math-to-vcix --math-uplift-to-fma --test-math-algebraic-simplification --cse --linalg-named-op-conversion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --topological-sort --inline --arith-int-range-narrowing --remove-dead-values --test-func-erase-result --loop-invariant-code-motion --int-range-optimizations --arith-expand --mem2reg --mem2reg --control-flow-sink --test-func-insert-arg --inline --test-func-erase-arg --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --loop-invariant-code-motion --remove-dead-values --test-func-insert-result --test-func-erase-result --sroa --test-function-pass --sroa --test-func-erase-result --sroa --canonicalize=\"test-convergence\" --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --mem2reg=\"region-simplify\" --sccp --inline --composite-fixed-point-pass --test-func-erase-arg --test-function-pass --loop-invariant-subset-hoisting --canonicalize=\"test-convergence top-down=0\" --inline --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --sccp --canonicalize=\"test-convergence\" --tosa-make-broadcastable --fold-tensor-subset-ops --tosa-optional-decompositions --test-tensor-transform-patterns=\"use-foreach\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-data-layout-propagation --test-expand-math --test-linalg-data-layout-propagation --test-math-polynomial-approximation=\"enable-avx2\" --linalg-generalize-named-ops --convert-elementwise-to-linalg --canonicalize=\"test-convergence top-down=0\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize=\"test-convergence top-down=0\" --linalg-named-op-conversion --cse --linalg-fuse-elementwise-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-decompose-ops --linalg-generalize-named-ops --test-linalg-decompose-ops --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --composite-fixed-point-pass --test-linalg-rank-reduce-contraction-ops --test-linalg-rank-reduce-contraction-ops --test-emulate-narrow-int=\"arith-compute-bitwidth=8\" --duplicate-function-elimination --linalg-generalize-named-ops --expand-realloc=\"emit-deallocs\" --resolve-shaped-type-result-dims --test-math-to-vcix --loop-invariant-subset-hoisting --test-func-set-type --int-range-optimizations --test-math-to-vcix --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --arith-expand --resolve-shaped-type-result-dims --linalg-inline-scalar-operands --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --test-expand-math --topological-sort --test-math-algebraic-simplification | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-memref-bound-check --sccp --arith-unsigned-when-equivalent --expand-strided-metadata --test-scf-for-utils --topological-sort --loop-invariant-code-motion --test-scf-if-utils --sroa --test-scf-if-utils --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-scf-while-op-builder --test-math-polynomial-approximation --sccp --fold-memref-alias-ops --loop-invariant-subset-hoisting --test-math-polynomial-approximation=\"enable-avx2\" --test-func-erase-result --inline --canonicalize --mem2reg=\"region-simplify\" --test-func-erase-arg --test-expand-math --normalize-memrefs --canonicalize=\"test-convergence top-down=0\" --math-extend-to-supported-types --fold-memref-alias-ops --control-flow-sink --test-math-algebraic-simplification --test-math-to-vcix --scf-for-loop-peeling --loop-invariant-subset-hoisting --composite-fixed-point-pass --math-extend-to-supported-types --scf-forall-to-parallel --test-func-erase-arg --test-expand-math --sccp --test-func-erase-result --topological-sort --test-memref-dependence-check --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --remove-dead-values --test-scf-if-utils --scf-for-loop-peeling --remove-dead-values | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-scf-while-op-builder --test-func-insert-arg --duplicate-function-elimination --test-func-erase-result --test-func-insert-arg --scf-parallel-loop-tiling --cse --scf-for-loop-peeling=\"peel-front\" --test-func-erase-result --test-scf-while-op-builder --scf-for-loop-range-folding --test-scf-uplift-while-to-for --composite-fixed-point-pass --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg --loop-invariant-code-motion --test-func-erase-result --test-func-set-type --arith-emulate-wide-int=\"widest-int-supported=32\" --control-flow-sink --topological-sort --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --cse --control-flow-sink --mem2reg=\"region-simplify\" --test-function-pass --control-flow-sink --loop-invariant-subset-hoisting --topological-sort --control-flow-sink --test-func-insert-arg --mem2reg --sroa --loop-invariant-subset-hoisting --sccp --duplicate-function-elimination --topological-sort --topological-sort --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg --mem2reg=\"region-simplify\" --test-func-erase-result --test-func-insert-result --symbol-dce --test-func-erase-arg --loop-invariant-code-motion --loop-invariant-subset-hoisting --cse --test-func-insert-result --sroa --composite-fixed-point-pass --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -test-math-polynomial-approximation | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-drop-unit-dims --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-linalg-pad-fusion --test-linalg-pad-fusion --test-linalg-data-layout-propagation --linalg-named-op-conversion --test-linalg-data-layout-propagation | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --cse --loop-invariant-code-motion --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-unsigned-when-equivalent --mem2reg --scf-for-loop-peeling --normalize-memrefs --test-scf-while-op-builder --control-flow-sink --resolve-ranked-shaped-type-result-dims --test-func-erase-arg --memref-emulate-wide-int --test-memref-bound-check --test-scf-while-op-builder --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --loop-invariant-code-motion --expand-strided-metadata --test-scf-for-utils=\"test-replace-with-new-yields\" --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --arith-emulate-wide-int --remove-dead-values --fold-memref-alias-ops --scf-forall-to-parallel --test-scf-if-utils --test-scf-while-op-builder --symbol-dce --sccp --arith-emulate-wide-int=\"widest-int-supported=32\" --test-memref-dependence-check --test-func-set-type --fold-memref-alias-ops --test-func-insert-result --scf-forall-to-for --scf-forall-to-for | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-for-loop-peeling=\"skip-partial\" --scf-forall-to-for --scf-parallel-loop-specialization --scf-forall-to-for --test-func-insert-arg --scf-forall-to-parallel --arith-emulate-wide-int --cse --sccp --composite-fixed-point-pass --scf-parallel-loop-fusion --symbol-dce --scf-forall-to-parallel --remove-dead-values | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --test-func-insert-result --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --mem2reg=\"region-simplify\" --duplicate-function-elimination --mem2reg --arith-emulate-wide-int --arith-expand --sroa --mem2reg=\"region-simplify\" --symbol-dce --symbol-dce --mem2reg --mem2reg=\"region-simplify\" --duplicate-function-elimination --control-flow-sink --sccp --loop-invariant-subset-hoisting --control-flow-sink --test-arith-emulate-wide-int --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-func-erase-result --sroa --symbol-dce --int-range-optimizations --loop-invariant-code-motion --mem2reg=\"region-simplify\" --composite-fixed-point-pass --remove-dead-values --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --cse --symbol-dce --remove-dead-values --arith-int-range-narrowing --test-func-insert-arg --sccp --loop-invariant-subset-hoisting --test-func-insert-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --test-func-set-type --test-func-erase-arg --control-flow-sink --inline --topological-sort --test-func-erase-result --inline --test-func-insert-arg --test-func-erase-arg --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --tosa-make-broadcastable --remove-dead-values --cse --test-func-insert-arg --inline --inline --fold-tensor-subset-ops --mem2reg=\"region-simplify\" --test-function-pass --test-func-erase-result --test-function-pass --tosa-reduce-transposes --composite-fixed-point-pass --test-function-pass --tosa-test-quant-utils --canonicalize --control-flow-sink --test-func-insert-result --sroa --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --tosa-infer-shapes --tosa-infer-shapes --canonicalize=\"test-convergence top-down=0\" --test-func-erase-result --test-tensor-transform-patterns=\"test-reassociative-reshape-folding\" --tosa-optional-decompositions --duplicate-function-elimination --test-func-erase-arg --duplicate-function-elimination --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-reduce-transposes --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --arith-unsigned-when-equivalent --test-math-polynomial-approximation --arith-int-range-narrowing --convert-elementwise-to-linalg --arith-unsigned-when-equivalent --topological-sort --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --linalg-named-op-conversion --test-func-erase-arg --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --symbol-dce --arith-emulate-wide-int=\"widest-int-supported=32\" --cse --test-tensor-copy-insertion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-specialize-generic-ops --test-linalg-pad-fusion --test-func-insert-result --math-uplift-to-fma --fold-memref-alias-ops --linalg-inline-scalar-operands --mem2reg --test-linalg-drop-unit-dims --test-math-algebraic-simplification --test-memref-bound-check | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-result --math-uplift-to-fma --mem2reg --linalg-fuse-elementwise-ops --test-linalg-greedy-fusion --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --arith-emulate-wide-int=\"widest-int-supported=32\" --arith-emulate-wide-int=\"widest-int-supported=32\" --test-function-pass --test-scf-for-utils --test-func-erase-arg --test-scf-while-op-builder --inline --control-flow-sink --control-flow-sink --cse --arith-expand | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --remove-dead-values --test-func-insert-result --test-func-insert-result --sroa --sroa --loop-invariant-code-motion --duplicate-function-elimination --canonicalize | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-result --canonicalize=\"test-convergence\" --topological-sort --topological-sort --topological-sort --duplicate-function-elimination --topological-sort --symbol-dce --test-func-set-type --remove-dead-values --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --tosa-test-quant-utils --tosa-make-broadcastable --test-func-set-type --test-func-erase-arg --test-tensor-copy-insertion --test-tensor-transform-patterns=\"test-fold-consecutive-insert-extract-slice\" --sroa --control-flow-sink --mem2reg=\"region-simplify\" --tosa-optional-decompositions --test-func-set-type --test-func-insert-arg --topological-sort --remove-dead-values --canonicalize=\"test-convergence\" --tosa-make-broadcastable --inline --canonicalize=\"test-convergence top-down=0\" --test-func-erase-result --loop-invariant-code-motion --test-func-erase-result --tosa-optional-decompositions | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --symbol-dce --topological-sort --mem2reg=\"region-simplify\" --symbol-dce --tosa-reduce-transposes --test-func-insert-result --fold-tensor-subset-ops --sroa --test-func-set-type --symbol-dce --tosa-optional-decompositions --test-func-erase-result --remove-dead-values | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --remove-dead-values --test-tensor-transform-patterns=\"test-fold-consecutive-insert-extract-slice\" --topological-sort --tosa-test-quant-utils | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sroa --arith-expand --duplicate-function-elimination --tosa-test-quant-utils --loop-invariant-code-motion --canonicalize --tosa-test-quant-utils --test-tensor-copy-insertion --symbol-dce --loop-invariant-code-motion --remove-dead-values --int-range-optimizations --test-function-pass --fold-tensor-subset-ops --test-func-insert-arg --arith-emulate-unsupported-floats --topological-sort --tosa-infer-shapes --test-tensor-copy-insertion --test-emulate-narrow-int=\"memref-load-bitwidth=8\" --arith-int-range-narrowing --mem2reg=\"region-simplify\" --test-tensor-copy-insertion --sccp --duplicate-function-elimination --duplicate-function-elimination --remove-dead-values | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-tensor-transform-patterns=\"test-reassociative-reshape-folding\" --test-tensor-transform-patterns --duplicate-function-elimination --test-emulate-narrow-int=\"arith-compute-bitwidth=8\" --test-func-erase-result --arith-unsigned-when-equivalent --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-function-pass --control-flow-sink --test-func-erase-arg --mem2reg=\"region-simplify\" --sroa --tosa-infer-shapes --test-func-insert-result --test-func-erase-arg --test-arith-emulate-wide-int=\"widest-int-supported=8\" --inline --tosa-test-quant-utils --sccp --test-func-insert-result --sroa --int-range-optimizations --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-function-pass --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --convert-elementwise-to-linalg --test-linalg-greedy-fusion --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --convert-elementwise-to-linalg --arith-expand --test-linalg-drop-unit-dims --test-math-polynomial-approximation --inline --linalg-inline-scalar-operands --test-arith-emulate-wide-int --test-func-erase-result --test-linalg-rank-reduce-contraction-ops --test-linalg-drop-unit-dims --test-func-erase-result --test-linalg-pad-fusion --mem2reg --test-linalg-data-layout-propagation --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-arg --control-flow-sink --test-linalg-pad-fusion --sroa --symbol-dce --test-func-erase-result --test-func-insert-arg --test-memref-bound-check --test-memref-bound-check --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --expand-realloc --resolve-shaped-type-result-dims --test-linalg-data-layout-propagation | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --convert-elementwise-to-linalg --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-expand --int-range-optimizations --canonicalize=\"test-convergence\" --test-func-insert-arg --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --remove-dead-values --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-result --control-flow-sink --canonicalize=\"test-convergence top-down=0\" --topological-sort --control-flow-sink --test-func-set-type --test-func-erase-result --test-func-erase-result --mem2reg --control-flow-sink --test-func-insert-result --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --loop-invariant-code-motion --loop-invariant-code-motion --test-func-insert-result --remove-dead-values --mem2reg --loop-invariant-subset-hoisting --inline --duplicate-function-elimination --test-tensor-copy-insertion --test-func-set-type --tosa-optional-decompositions --tosa-validate --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-unsupported-floats --sroa --test-expand-math --test-func-insert-result --duplicate-function-elimination --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --linalg-generalize-named-ops --convert-elementwise-to-linalg --test-math-polynomial-approximation=\"enable-avx2\" --test-linalg-greedy-fusion --test-math-algebraic-simplification --test-func-erase-arg --test-linalg-data-layout-propagation --composite-fixed-point-pass --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --duplicate-function-elimination --test-func-set-type --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --math-extend-to-supported-types --test-math-to-vcix --test-expand-math | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --expand-realloc=\"emit-deallocs\" --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-collapsing\" --linalg-generalize-named-ops --test-linalg-drop-unit-dims --test-func-erase-result --sccp --test-func-insert-arg --topological-sort --test-func-insert-arg --cse --expand-realloc --linalg-fuse-elementwise-ops --expand-realloc --test-linalg-decompose-ops --test-linalg-transform-patterns --test-linalg-data-layout-propagation --memref-emulate-wide-int=\"widest-int-supported=32\" --linalg-generalize-named-ops --test-func-insert-result --sroa --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --test-function-pass --topological-sort --cse --convert-elementwise-to-linalg --topological-sort --loop-invariant-subset-hoisting --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-emulate-narrow-int=\"arith-compute-bitwidth=8\" --arith-int-range-narrowing --remove-dead-values --test-memref-bound-check --loop-invariant-code-motion --inline --test-scf-uplift-while-to-for --remove-dead-values --expand-strided-metadata --sroa --int-range-optimizations --canonicalize=\"test-convergence\" --scf-parallel-loop-fusion --scf-for-loop-range-folding | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-arg --sccp --sroa --cse --test-func-insert-result --test-func-insert-arg --duplicate-function-elimination --topological-sort --test-func-erase-result --composite-fixed-point-pass --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-arg --topological-sort --inline --inline --loop-invariant-code-motion --test-function-pass --test-func-insert-arg --test-func-insert-arg --test-func-erase-result --composite-fixed-point-pass --control-flow-sink --sccp --mem2reg --test-func-erase-result --inline --mem2reg=\"region-simplify\" --composite-fixed-point-pass --loop-invariant-subset-hoisting --topological-sort --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --test-tensor-copy-insertion=\"must-infer-memory-space\" --fold-tensor-subset-ops --test-tensor-transform-patterns=\"test-drop-redundant-insert-slice-rank-expansion\" --duplicate-function-elimination --tosa-optional-decompositions --cse --test-func-erase-result --loop-invariant-code-motion --test-func-set-type --test-func-insert-arg --tosa-infer-shapes --sccp --tosa-optional-decompositions | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg=\"region-simplify\" --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --composite-fixed-point-pass --tosa-reduce-transposes --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --test-func-insert-result --sroa --test-linalg-rank-reduce-contraction-ops --linalg-named-op-conversion --tosa-reduce-transposes --fold-tensor-subset-ops --inline --linalg-inline-scalar-operands --inline --test-math-to-vcix --test-func-set-type --loop-invariant-subset-hoisting --linalg-generalize-named-ops --test-linalg-transform-patterns=\"test-decompose-winograd-ops\" --tosa-layerwise-constant-fold --fold-tensor-subset-ops --composite-fixed-point-pass --test-func-insert-result --topological-sort --control-flow-sink --test-linalg-transform-patterns=\"test-patterns\" --test-func-set-type --test-math-algebraic-simplification --test-func-insert-result --test-linalg-transform-patterns=\"test-erase-unnecessary-inputs\" --test-linalg-rank-reduce-contraction-ops --test-linalg-drop-unit-dims --topological-sort --symbol-dce --tosa-optional-decompositions --math-extend-to-supported-types --test-math-polynomial-approximation --math-uplift-to-fma --test-tensor-copy-insertion --convert-elementwise-to-linalg --test-linalg-rank-reduce-contraction-ops --tosa-make-broadcastable --linalg-fuse-elementwise-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --test-func-insert-arg --test-func-insert-arg --linalg-fold-unit-extent-dims --inline --math-extend-to-supported-types --composite-fixed-point-pass --linalg-specialize-generic-ops --math-uplift-to-fma --canonicalize=\"test-convergence\" --linalg-specialize-generic-ops --cse --convert-elementwise-to-linalg --test-expand-math --test-linalg-data-layout-propagation --test-func-insert-arg --test-func-set-type --test-func-set-type --test-func-erase-result --loop-invariant-code-motion --test-math-to-vcix --test-linalg-drop-unit-dims --control-flow-sink --symbol-dce --loop-invariant-subset-hoisting --linalg-inline-scalar-operands --linalg-named-op-conversion --linalg-fuse-elementwise-ops --fold-tensor-subset-ops --test-linalg-transform-patterns=\"test-decompose-winograd-ops\" --test-func-insert-arg --topological-sort --composite-fixed-point-pass --mem2reg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize --scf-forall-to-for --test-scf-while-op-builder --test-scf-while-op-builder --scf-for-loop-peeling=\"skip-partial\" --expand-strided-metadata --scf-parallel-loop-fusion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize=\"test-convergence\" --arith-emulate-unsupported-floats --test-func-insert-arg --test-scf-while-op-builder --arith-int-range-narrowing --test-func-set-type --scf-for-loop-range-folding --canonicalize --test-func-set-type --arith-unsigned-when-equivalent --mem2reg=\"region-simplify\" --canonicalize --scf-for-loop-peeling --inline --test-func-set-type --test-scf-while-op-builder --scf-for-to-while --test-func-set-type --arith-expand=\"include-bf16\" --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --arith-unsigned-when-equivalent --scf-forall-to-for --scf-parallel-loop-fusion --scf-for-to-while --scf-for-loop-specialization --symbol-dce --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --int-range-optimizations --scf-for-to-while --test-arith-emulate-wide-int --test-scf-if-utils | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --arith-int-range-narrowing --arith-unsigned-when-equivalent --test-func-erase-arg --scf-for-loop-range-folding --scf-for-loop-range-folding --arith-unsigned-when-equivalent --arith-expand --test-function-pass --scf-parallel-loop-fusion --scf-parallel-loop-specialization --test-function-pass --scf-forall-to-parallel --test-scf-uplift-while-to-for --test-func-erase-result --composite-fixed-point-pass --test-scf-uplift-while-to-for --arith-expand=\"include-bf16\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-func-insert-result --loop-invariant-code-motion --test-func-erase-arg --loop-invariant-code-motion --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --arith-emulate-unsupported-floats | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --test-func-insert-result --test-func-erase-arg --test-func-insert-result --sccp --topological-sort --inline --composite-fixed-point-pass --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --test-func-insert-result --control-flow-sink --fold-tensor-subset-ops --sroa --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-drop-unit-dims --test-function-pass --linalg-fold-unit-extent-dims --test-math-polynomial-approximation=\"enable-avx2\" --linalg-named-op-conversion --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-expansion\" --topological-sort --test-linalg-drop-unit-dims --linalg-fuse-elementwise-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-transform-patterns=\"test-erase-unused-operands-and-results\" --linalg-inline-scalar-operands --test-linalg-data-layout-propagation --loop-invariant-code-motion --topological-sort --control-flow-sink --fold-tensor-subset-ops --test-expand-math --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --math-uplift-to-fma --sroa --test-linalg-drop-unit-dims --test-tensor-transform-patterns=\"test-rewrite-extract-slice-from-collapse-shape\" --test-linalg-elementwise-fusion-patterns=\"fuse-generic-ops-control\" --test-func-insert-result --test-linalg-greedy-fusion --test-math-polynomial-approximation --linalg-named-op-conversion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --resolve-ranked-shaped-type-result-dims --convert-elementwise-to-linalg --test-linalg-data-layout-propagation --expand-realloc --composite-fixed-point-pass --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --normalize-memrefs --sccp --test-function-pass --test-linalg-decompose-ops --memref-emulate-wide-int=\"widest-int-supported=32\" --control-flow-sink --test-linalg-data-layout-propagation --duplicate-function-elimination --memref-emulate-wide-int --test-linalg-rank-reduce-contraction-ops --cse --test-linalg-rank-reduce-contraction-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize=\"test-convergence top-down=0\" --test-linalg-decompose-ops --test-func-insert-result --test-expand-math --linalg-fuse-elementwise-ops --expand-realloc --test-func-erase-arg --test-math-to-vcix --canonicalize=\"test-convergence\" --fold-memref-alias-ops --test-linalg-greedy-fusion --symbol-dce --normalize-memrefs --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --symbol-dce --mem2reg --fold-memref-alias-ops --memref-emulate-wide-int=\"widest-int-supported=32\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-result --duplicate-function-elimination --arith-int-range-narrowing --test-memref-dependence-check --test-func-insert-arg --test-function-pass --scf-for-loop-canonicalization --test-function-pass --expand-strided-metadata --inline --remove-dead-values --test-scf-for-utils=\"test-replace-with-new-yields\" --scf-parallel-loop-tiling --test-memref-bound-check --symbol-dce --loop-invariant-code-motion --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --expand-realloc=\"emit-deallocs\" --test-function-pass --test-func-insert-arg --duplicate-function-elimination --sroa --memref-emulate-wide-int --remove-dead-values --topological-sort --expand-strided-metadata --arith-unsigned-when-equivalent --symbol-dce --math-extend-to-supported-types --memref-expand --test-func-erase-result --test-expand-math --test-func-insert-result --test-math-algebraic-simplification --memref-emulate-wide-int --composite-fixed-point-pass --test-func-set-type --inline --arith-int-range-narrowing --test-math-polynomial-approximation --test-math-polynomial-approximation=\"enable-avx2\" --test-math-polynomial-approximation --sccp --test-arith-emulate-wide-int=\"widest-int-supported=8\" --duplicate-function-elimination --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --test-function-pass --control-flow-sink --sccp --test-func-insert-result --symbol-dce --sroa --remove-dead-values --test-math-polynomial-approximation=\"enable-avx2\" --remove-dead-values --test-func-erase-arg --test-expand-math --cse --remove-dead-values --remove-dead-values --loop-invariant-subset-hoisting --test-func-insert-result --math-uplift-to-fma --symbol-dce --control-flow-sink --loop-invariant-code-motion --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --loop-invariant-subset-hoisting --loop-invariant-subset-hoisting --composite-fixed-point-pass --composite-fixed-point-pass --cse --test-func-erase-arg --control-flow-sink --canonicalize=\"test-convergence top-down=0\" --sccp --sroa --sccp --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --symbol-dce --remove-dead-values --test-func-erase-result --loop-invariant-subset-hoisting --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --topological-sort --sroa --sroa --fold-tensor-subset-ops --tosa-reduce-transposes --composite-fixed-point-pass --tosa-reduce-transposes --tosa-test-quant-utils --cse --test-tensor-copy-insertion --control-flow-sink --loop-invariant-subset-hoisting --test-function-pass --topological-sort --tosa-test-quant-utils --sroa --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --canonicalize=\"test-convergence\" --tosa-make-broadcastable --tosa-infer-shapes --test-function-pass --duplicate-function-elimination --int-range-optimizations --test-func-erase-arg --test-linalg-drop-unit-dims --math-uplift-to-fma --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --cse --test-function-pass --test-linalg-pad-fusion --test-func-erase-result --test-emulate-narrow-int=\"memref-load-bitwidth=8\" --topological-sort --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --test-func-insert-result --cse --fold-tensor-subset-ops --arith-emulate-unsupported-floats --arith-emulate-unsupported-floats --test-math-polynomial-approximation=\"enable-avx2\" --linalg-inline-scalar-operands --test-function-pass --test-func-insert-result --test-linalg-greedy-fusion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-greedy-fusion --linalg-named-op-conversion --linalg-named-op-conversion --test-expand-math --test-math-polynomial-approximation=\"enable-avx2\" --test-math-algebraic-simplification --linalg-named-op-conversion --resolve-shaped-type-result-dims --linalg-named-op-conversion --test-memref-dependence-check | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --resolve-shaped-type-result-dims --scf-parallel-loop-specialization | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sroa --loop-invariant-subset-hoisting --test-func-insert-arg --test-func-erase-result --symbol-dce --test-func-insert-result --test-func-erase-result --mem2reg --loop-invariant-code-motion --control-flow-sink --symbol-dce --loop-invariant-subset-hoisting --test-func-set-type --composite-fixed-point-pass --test-func-set-type --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --control-flow-sink --test-func-insert-arg --test-func-erase-result --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-test-quant-utils --remove-dead-values --inline --inline --test-func-insert-result --cse --canonicalize=\"test-convergence\" --tosa-layerwise-constant-fold --sroa --test-function-pass --remove-dead-values --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-expand-math --math-extend-to-supported-types --cse --canonicalize --test-linalg-greedy-fusion --test-emulate-narrow-int=\"memref-load-bitwidth=32\" --linalg-fold-unit-extent-dims --loop-invariant-code-motion --duplicate-function-elimination --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --arith-int-range-narrowing --test-linalg-greedy-fusion --composite-fixed-point-pass --arith-unsigned-when-equivalent --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-expansion\" --test-math-polynomial-approximation=\"enable-avx2\" --duplicate-function-elimination --convert-elementwise-to-linalg --test-linalg-rank-reduce-contraction-ops --int-range-optimizations --int-range-optimizations --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --tosa-layerwise-constant-fold --linalg-specialize-generic-ops --loop-invariant-code-motion --cse --arith-expand --math-extend-to-supported-types --linalg-fuse-elementwise-ops --arith-unsigned-when-equivalent --sroa --int-range-optimizations --test-tensor-copy-insertion=\"must-infer-memory-space\" --symbol-dce --linalg-named-op-conversion --linalg-fold-unit-extent-dims --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --tosa-optional-decompositions --int-range-optimizations --test-linalg-data-layout-propagation --test-func-erase-arg --arith-unsigned-when-equivalent --tosa-infer-shapes --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --linalg-named-op-conversion --tosa-reduce-transposes --fold-tensor-subset-ops --test-func-set-type --test-math-polynomial-approximation=\"enable-avx2\" --control-flow-sink --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --test-math-polynomial-approximation=\"enable-avx2\" --test-linalg-greedy-fusion --test-expand-math --test-math-polynomial-approximation=\"enable-avx2\" --test-linalg-greedy-fusion --linalg-inline-scalar-operands --test-linalg-pad-fusion --linalg-inline-scalar-operands --test-expand-math --fold-tensor-subset-ops --test-linalg-data-layout-propagation --duplicate-function-elimination --fold-tensor-subset-ops --test-linalg-rank-reduce-contraction-ops --test-linalg-rank-reduce-contraction-ops --linalg-inline-scalar-operands --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-collapsing-control\" --test-expand-math --test-func-erase-result --inline --inline --convert-elementwise-to-linalg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --math-uplift-to-fma --linalg-generalize-named-ops --arith-emulate-unsupported-floats --test-function-pass --sccp --duplicate-function-elimination --test-linalg-data-layout-propagation --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --sroa --test-function-pass --topological-sort --test-math-algebraic-simplification --test-func-erase-result --duplicate-function-elimination --linalg-named-op-conversion --control-flow-sink --linalg-specialize-generic-ops --test-emulate-narrow-int --resolve-ranked-shaped-type-result-dims --control-flow-sink --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --convert-elementwise-to-linalg --linalg-fold-unit-extent-dims --test-func-erase-result --control-flow-sink --arith-int-range-narrowing --arith-expand=\"include-bf16\" --test-linalg-data-layout-propagation --test-func-insert-result --arith-expand=\"include-bf16\" --test-memref-bound-check --memref-expand --test-func-insert-arg --test-function-pass --test-func-erase-result --cse --fold-memref-alias-ops --resolve-ranked-shaped-type-result-dims --arith-expand --test-func-insert-result --linalg-specialize-generic-ops --expand-strided-metadata --normalize-memrefs --normalize-memrefs --memref-emulate-wide-int=\"widest-int-supported=32\" --loop-invariant-subset-hoisting --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-arith-emulate-wide-int=\"widest-int-supported=8\" --topological-sort --arith-emulate-wide-int --inline --scf-forall-to-for --test-math-to-vcix --test-scf-if-utils --scf-for-loop-specialization --arith-emulate-wide-int=\"widest-int-supported=32\" --scf-forall-to-parallel --test-scf-if-utils --scf-for-loop-range-folding --int-range-optimizations --inline --math-uplift-to-fma --test-func-insert-result --test-func-insert-result --composite-fixed-point-pass --scf-forall-to-parallel --test-func-erase-arg --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-scf-pipelining=\"no-epilogue-peeling\" --inline --test-function-pass --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-arg --test-function-pass --test-func-insert-arg --int-range-optimizations --test-func-insert-result --arith-int-range-narrowing --int-range-optimizations --test-math-algebraic-simplification --math-uplift-to-fma --test-expand-math --composite-fixed-point-pass --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --math-extend-to-supported-types --test-function-pass --int-range-optimizations --test-math-polynomial-approximation --loop-invariant-code-motion --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-arg --canonicalize=\"test-convergence top-down=0\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --tosa-make-broadcastable --tosa-layerwise-constant-fold --control-flow-sink --tosa-make-broadcastable --canonicalize=\"test-convergence top-down=0\" --loop-invariant-code-motion --test-tensor-transform-patterns=\"test-fold-constant-extract-slice\" --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse --linalg-specialize-generic-ops --topological-sort --linalg-specialize-generic-ops --fold-tensor-subset-ops --convert-elementwise-to-linalg --cse --test-func-insert-result --inline --test-math-to-vcix --canonicalize=\"test-convergence top-down=0\" --test-math-to-vcix --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --topological-sort --symbol-dce --math-extend-to-supported-types --math-uplift-to-fma --test-linalg-decompose-ops --int-range-optimizations --linalg-generalize-named-ops --symbol-dce --arith-unsigned-when-equivalent --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --test-func-erase-result --math-extend-to-supported-types --duplicate-function-elimination --arith-unsigned-when-equivalent --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-generalize-named-ops --test-math-to-vcix --mem2reg --test-function-pass --test-func-set-type --linalg-generalize-named-ops --test-func-erase-arg --linalg-named-op-conversion --linalg-fuse-elementwise-ops --linalg-generalize-named-ops --test-func-insert-result --test-func-erase-arg --test-func-erase-arg --loop-invariant-code-motion --test-linalg-data-layout-propagation --test-linalg-pad-fusion --test-math-polynomial-approximation --test-linalg-decompose-ops=\"remove-dead-args-and-results\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-greedy-fusion --test-function-pass --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-arg --cse --test-function-pass --duplicate-function-elimination --test-linalg-data-layout-propagation --linalg-fuse-elementwise-ops --test-func-insert-result --test-linalg-decompose-ops --composite-fixed-point-pass --linalg-specialize-generic-ops --linalg-generalize-named-ops --linalg-inline-scalar-operands --inline --convert-elementwise-to-linalg --sccp --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --linalg-fold-unit-extent-dims --convert-elementwise-to-linalg --sroa --inline --composite-fixed-point-pass --test-linalg-greedy-fusion --test-func-erase-arg --linalg-inline-scalar-operands --convert-elementwise-to-linalg --control-flow-sink --test-function-pass --convert-elementwise-to-linalg --sccp --topological-sort --linalg-fuse-elementwise-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize=\"test-convergence top-down=0\" --test-func-insert-result --test-func-erase-arg --test-func-erase-arg --sccp --test-linalg-drop-unit-dims --test-linalg-greedy-fusion --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-scf-while-op-builder --mem2reg --test-scf-uplift-while-to-for --arith-int-range-narrowing --test-func-set-type --test-func-erase-arg --scf-for-loop-peeling=\"peel-front\" --resolve-shaped-type-result-dims --scf-parallel-loop-specialization --arith-emulate-wide-int --scf-for-loop-peeling=\"peel-front\" --normalize-memrefs --composite-fixed-point-pass --loop-invariant-subset-hoisting --mem2reg --arith-int-range-narrowing --normalize-memrefs --symbol-dce --symbol-dce --test-func-set-type --test-scf-pipelining=\"annotate\" --expand-strided-metadata --arith-emulate-unsupported-floats --topological-sort --scf-for-loop-peeling=\"skip-partial\" --arith-emulate-wide-int --symbol-dce --duplicate-function-elimination --scf-for-to-while --arith-expand=\"include-bf16\" --arith-unsigned-when-equivalent --test-func-insert-result --test-scf-uplift-while-to-for --test-function-pass --fold-memref-alias-ops --resolve-shaped-type-result-dims --scf-parallel-loop-tiling=\"parallel-loop-tile-sizes=1,4 no-min-max-bounds=true\" --scf-forall-to-for | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-arg --cse --scf-for-loop-range-folding --canonicalize --loop-invariant-code-motion --test-func-insert-arg --scf-forall-to-parallel --arith-emulate-unsupported-floats --scf-for-loop-specialization --duplicate-function-elimination --arith-expand=\"include-bf16\" --test-scf-pipelining=\"no-epilogue-peeling\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-forall-to-parallel --test-scf-uplift-while-to-for --scf-for-to-while --scf-for-loop-peeling=\"peel-front\" --scf-parallel-loop-fusion --scf-for-loop-range-folding --remove-dead-values --test-scf-if-utils --control-flow-sink --composite-fixed-point-pass --composite-fixed-point-pass --control-flow-sink --scf-parallel-loop-tiling=\"parallel-loop-tile-sizes=1,4 no-min-max-bounds=true\" --cse --scf-for-loop-peeling --scf-for-loop-specialization | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-arg --loop-invariant-subset-hoisting --loop-invariant-subset-hoisting --cse --control-flow-sink --test-func-insert-arg --composite-fixed-point-pass --canonicalize | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    1.34525e-43,    0,    6.72623e-44,    0,    0.000506188,    3.08188e-41,    0.000469319,    3.08188e-41,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    3.08188e-41,    0,    0,    0,    0,    6.72623e-44,    0,    6.72623e-44,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    6.72623e-44,    0,    0.000536726,    3.08188e-41,    0.000469319,    3.08188e-41,    0,    0,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    0,    0,    0,    -nan,    -nan,    0.000540343,    3.08188e-41,    -nan,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -nan,    -nan,    0.000540352,    3.08188e-41,    -nan,    -nan,    0.000540399,    3.08188e-41,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    3.08188e-41,    -nan,    -nan,    0.000540362,    3.08188e-41,    -nan,    -nan,    0.000540371,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    0.000540297,    3.08188e-41,    -nan,    -nan,    0.000540297,    3.08188e-41,    -nan,    -nan,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -nan,    0.000466819,    3.08188e-41,    -nan,    -nan,    -nan,    -nan,    -nan,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -nan,    -nan,    2.8026e-45,    -nan,    -nan,    -nan,    0.000540343,    3.08188e-41,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    3.08188e-41,    -nan,    -nan,    0.000540324,    3.08188e-41,    -nan,    -nan,    0.000540362,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    2.8026e-45,    -nan,    -nan,    -nan,    0.00054039,    3.08188e-41,    -nan,    -nan,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -nan,    -nan,    -nan,    -nan,    -nan,    -nan,    -nan,    -nan,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -nan,    -nan,    -nan,    -nan,    -nan,    -nan,    -nan,    -nan,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    3.08188e-41,    -nan,    -nan,    0.000540315,    3.08188e-41,    -nan,    -nan,    0.000540324,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    0.000540352,    3.08188e-41,    -nan,    -nan,    0.000540297,    3.08188e-41,    -nan,    -nan,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -nan,    0.000540371,    3.08188e-41,    -nan,    -nan,    2.8026e-45,    -nan,    -nan,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --test-func-insert-result --tosa-reduce-transposes --loop-invariant-subset-hoisting --topological-sort --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --tosa-make-broadcastable --test-func-erase-arg --test-function-pass --tosa-reduce-transposes --control-flow-sink --tosa-reduce-transposes --test-func-insert-result --fold-tensor-subset-ops --sroa --test-func-insert-arg --canonicalize --control-flow-sink --remove-dead-values --mem2reg=\"region-simplify\" --tosa-reduce-transposes --test-tensor-copy-insertion --tosa-optional-decompositions --fold-tensor-subset-ops --composite-fixed-point-pass --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --test-func-erase-result --test-func-insert-result --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --linalg-generalize-named-ops --symbol-dce --composite-fixed-point-pass --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --sccp --arith-emulate-wide-int --math-uplift-to-fma --topological-sort --linalg-inline-scalar-operands --test-linalg-transform-patterns=\"test-decompose-winograd-ops\" --mem2reg --tosa-infer-shapes --arith-emulate-wide-int=\"widest-int-supported=32\" --tosa-reduce-transposes --math-extend-to-supported-types --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --arith-expand=\"include-bf16\" --cse --test-linalg-greedy-fusion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-pad-fusion --sccp --control-flow-sink --memref-expand --linalg-generalize-named-ops --test-func-set-type --expand-realloc=\"emit-deallocs\" --canonicalize=\"test-convergence\" --arith-int-range-narrowing --test-memref-bound-check --memref-emulate-wide-int=\"widest-int-supported=32\" --test-function-pass --test-memref-dependence-check --topological-sort --test-expand-math --test-linalg-drop-unit-dims --resolve-ranked-shaped-type-result-dims --test-math-polynomial-approximation=\"enable-avx2\" --test-math-polynomial-approximation | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sroa --scf-for-loop-range-folding --expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --remove-dead-values | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --loop-invariant-subset-hoisting --test-func-set-type --symbol-dce --loop-invariant-subset-hoisting --control-flow-sink --mem2reg --sroa --test-func-insert-result --duplicate-function-elimination --control-flow-sink --test-func-insert-arg --inline --sccp --remove-dead-values --test-func-set-type --control-flow-sink --canonicalize --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --cse --composite-fixed-point-pass --inline --symbol-dce --duplicate-function-elimination --test-func-insert-arg --duplicate-function-elimination --test-function-pass --duplicate-function-elimination --test-func-erase-arg --control-flow-sink --tosa-test-quant-utils --remove-dead-values --tosa-test-quant-utils --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --test-tensor-copy-insertion --tosa-reduce-transposes --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --duplicate-function-elimination --duplicate-function-elimination --cse --canonicalize --mem2reg=\"region-simplify\" --tosa-test-quant-utils | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-math-algebraic-simplification --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --test-func-erase-result --tosa-optional-decompositions --arith-expand=\"include-bf16\" --test-arith-emulate-wide-int=\"widest-int-supported=8\" --tosa-infer-shapes --test-math-polynomial-approximation=\"enable-avx2\" --math-uplift-to-fma --test-math-to-vcix --loop-invariant-code-motion --duplicate-function-elimination --test-linalg-transform-patterns=\"test-swap-extract-slice-with-fill-pattern\" --tosa-optional-decompositions --test-tensor-transform-patterns=\"use-foreach\" --test-math-to-vcix --test-function-pass --mem2reg --test-linalg-drop-unit-dims --math-uplift-to-fma --int-range-optimizations --test-func-insert-arg --mem2reg=\"region-simplify\" --linalg-generalize-named-ops --tosa-make-broadcastable | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --math-extend-to-supported-types --test-function-pass --linalg-named-op-conversion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --canonicalize --composite-fixed-point-pass --test-func-insert-result --linalg-generalize-named-ops --topological-sort --sccp --test-linalg-transform-patterns=\"test-decompose-winograd-ops\" --test-func-erase-arg --test-linalg-rank-reduce-contraction-ops --linalg-generalize-named-ops --test-function-pass --linalg-named-op-conversion --loop-invariant-code-motion --convert-elementwise-to-linalg --cse --linalg-fold-unit-extent-dims --composite-fixed-point-pass --control-flow-sink --test-func-insert-result --cse --control-flow-sink --topological-sort --linalg-generalize-named-ops --cse --symbol-dce --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-for-loop-specialization --arith-expand=\"include-bf16\" --scf-parallel-loop-fusion --memref-expand --memref-expand --test-memref-dependence-check --test-memref-dependence-check --expand-strided-metadata --mem2reg=\"region-simplify\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --sccp --topological-sort --arith-expand=\"include-bf16\" --sccp --canonicalize=\"test-convergence\" --arith-emulate-unsupported-floats --control-flow-sink --inline --canonicalize=\"test-convergence top-down=0\" --test-memref-dependence-check --arith-expand --sroa --arith-int-range-narrowing --symbol-dce --duplicate-function-elimination --test-func-erase-arg --test-func-insert-arg --expand-strided-metadata --arith-int-range-narrowing --test-memref-bound-check --canonicalize=\"test-convergence\" --remove-dead-values --test-function-pass --resolve-ranked-shaped-type-result-dims --fold-memref-alias-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --cse --symbol-dce --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --test-func-insert-arg --tosa-test-quant-utils --symbol-dce --loop-invariant-code-motion --test-func-erase-arg --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-make-broadcastable --tosa-make-broadcastable --duplicate-function-elimination --test-math-algebraic-simplification --test-linalg-transform-patterns=\"test-vector-transfer-forwarding-patterns\" --loop-invariant-code-motion --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --test-math-polynomial-approximation --linalg-specialize-generic-ops --linalg-generalize-named-ops --tosa-make-broadcastable --test-linalg-transform-patterns=\"test-erase-unnecessary-inputs\" --test-func-set-type --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --symbol-dce --linalg-fold-unit-extent-dims --test-linalg-pad-fusion --test-linalg-drop-unit-dims --loop-invariant-subset-hoisting --symbol-dce --control-flow-sink --test-linalg-drop-unit-dims | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-tensor-copy-insertion=\"must-infer-memory-space\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --test-func-insert-result --test-linalg-elementwise-fusion-patterns=\"control-fusion-by-expansion\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --convert-elementwise-to-linalg --composite-fixed-point-pass --symbol-dce --convert-elementwise-to-linalg --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --composite-fixed-point-pass --linalg-fuse-elementwise-ops --test-linalg-rank-reduce-contraction-ops --resolve-ranked-shaped-type-result-dims --test-linalg-pad-fusion --test-function-pass --test-linalg-data-layout-propagation --linalg-fuse-elementwise-ops --test-linalg-drop-unit-dims | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-parallel-loop-tiling --memref-emulate-wide-int --scf-parallel-loop-specialization --memref-emulate-wide-int=\"widest-int-supported=32\" --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --fold-memref-alias-ops --expand-strided-metadata --test-scf-if-utils --inline --control-flow-sink --symbol-dce --scf-forall-to-for --test-scf-pipelining=\"annotate\" --sroa --inline --scf-forall-to-for --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --scf-forall-to-parallel | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --memref-emulate-wide-int=\"widest-int-supported=32\" --test-memref-bound-check --test-func-erase-result --cse --test-memref-bound-check --test-func-erase-result --composite-fixed-point-pass --sccp --int-range-optimizations --test-arith-emulate-wide-int --fold-memref-alias-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --remove-dead-values --resolve-shaped-type-result-dims --test-func-erase-result --test-memref-bound-check --resolve-ranked-shaped-type-result-dims --mem2reg=\"region-simplify\" --mem2reg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg=\"region-simplify\" --test-func-set-type --test-func-erase-arg --composite-fixed-point-pass --loop-invariant-subset-hoisting --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --tosa-test-quant-utils --test-tensor-copy-insertion --tosa-reduce-transposes --sccp --test-func-set-type --control-flow-sink --test-func-set-type --control-flow-sink --tosa-test-quant-utils --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --symbol-dce --fold-tensor-subset-ops --fold-tensor-subset-ops --test-func-erase-result --duplicate-function-elimination --tosa-make-broadcastable --sroa --inline --tosa-reduce-transposes --tosa-infer-shapes --canonicalize=\"test-convergence top-down=0\" --tosa-reduce-transposes --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --tosa-infer-shapes --composite-fixed-point-pass --tosa-test-quant-utils --test-function-pass --mem2reg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --topological-sort --mem2reg=\"region-simplify\" --duplicate-function-elimination --test-linalg-greedy-fusion --linalg-specialize-generic-ops --test-arith-emulate-wide-int --arith-expand=\"include-bf16\" --tosa-make-broadcastable --sccp --test-function-pass --linalg-inline-scalar-operands --canonicalize --convert-elementwise-to-linalg --test-func-erase-arg --test-linalg-pad-fusion --test-func-set-type --arith-emulate-wide-int=\"widest-int-supported=32\" --test-linalg-greedy-fusion --linalg-specialize-generic-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-expand-math --test-func-set-type --linalg-inline-scalar-operands --test-func-insert-result --test-math-polynomial-approximation=\"enable-avx2\" --test-math-algebraic-simplification --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --test-function-pass --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --int-range-optimizations --test-function-pass --test-expand-math --test-func-insert-result --test-linalg-data-layout-propagation --test-func-insert-result --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-expand-math --mem2reg=\"region-simplify\" --arith-emulate-wide-int=\"widest-int-supported=32\" --linalg-inline-scalar-operands --linalg-inline-scalar-operands --int-range-optimizations --convert-elementwise-to-linalg --linalg-named-op-conversion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-rank-reduce-contraction-ops --arith-expand=\"include-bf16\" --resolve-ranked-shaped-type-result-dims --test-func-insert-result --test-linalg-greedy-fusion --duplicate-function-elimination --expand-realloc=\"emit-deallocs\" --arith-expand --test-memref-bound-check --resolve-ranked-shaped-type-result-dims --test-func-erase-arg --control-flow-sink --test-linalg-rank-reduce-contraction-ops --composite-fixed-point-pass --inline --test-memref-bound-check --test-func-erase-result --fold-memref-alias-ops --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --fold-memref-alias-ops --resolve-ranked-shaped-type-result-dims --sccp --memref-expand --test-func-set-type --test-memref-dependence-check --canonicalize=\"test-convergence\" --test-func-insert-arg --sccp --test-function-pass --test-linalg-greedy-fusion --inline --memref-emulate-wide-int=\"widest-int-supported=32\" --test-function-pass --sroa --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-func-insert-arg --test-linalg-transform-patterns=\"test-decompose-winograd-ops\" --control-flow-sink --convert-elementwise-to-linalg --test-linalg-drop-unit-dims --test-linalg-drop-unit-dims --int-range-optimizations --sroa --loop-invariant-code-motion --memref-emulate-wide-int --test-func-erase-arg --test-arith-emulate-wide-int --test-emulate-narrow-int=\"arith-compute-bitwidth=8\" --loop-invariant-code-motion --arith-unsigned-when-equivalent | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sroa --scf-for-loop-canonicalization | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --test-memref-bound-check --sroa --test-scf-for-utils --canonicalize=\"test-convergence top-down=0\" --resolve-shaped-type-result-dims --mem2reg=\"region-simplify\" --resolve-shaped-type-result-dims --test-func-erase-arg --scf-forall-to-for --test-func-set-type --test-function-pass --resolve-shaped-type-result-dims --loop-invariant-subset-hoisting --int-range-optimizations --normalize-memrefs --test-scf-for-utils=\"test-replace-with-new-yields\" --test-emulate-narrow-int=\"arith-compute-bitwidth=8\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-result --sccp --test-func-erase-result --symbol-dce --expand-strided-metadata --control-flow-sink --topological-sort --memref-emulate-wide-int=\"widest-int-supported=32\" --symbol-dce --test-memref-bound-check --sccp --test-func-erase-result --mem2reg --memref-emulate-wide-int=\"widest-int-supported=32\" --test-func-insert-result --expand-strided-metadata --sccp --test-func-insert-arg --normalize-memrefs --expand-strided-metadata --control-flow-sink --test-function-pass --normalize-memrefs --test-func-insert-arg --test-memref-dependence-check --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --sroa --loop-invariant-subset-hoisting --mem2reg --test-function-pass --test-func-insert-arg --test-func-set-type --test-function-pass --duplicate-function-elimination --sroa --topological-sort --cse --duplicate-function-elimination --loop-invariant-code-motion --canonicalize=\"test-convergence\" --inline --test-func-insert-arg --remove-dead-values --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --tosa-make-broadcastable --sroa --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --test-func-erase-arg --tosa-validate --composite-fixed-point-pass --remove-dead-values --tosa-layerwise-constant-fold --tosa-test-quant-utils --test-func-insert-arg --cse --tosa-test-quant-utils --inline --tosa-optional-decompositions | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-elementwise-fusion-patterns --math-uplift-to-fma --test-linalg-greedy-fusion --symbol-dce --test-func-erase-arg --convert-elementwise-to-linalg --test-linalg-rank-reduce-contraction-ops --test-func-erase-result --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --test-memref-bound-check | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse --test-scf-for-utils --duplicate-function-elimination --scf-for-loop-peeling=\"skip-partial\" --control-flow-sink --scf-parallel-loop-tiling --scf-parallel-loop-tiling --scf-forall-to-parallel --cse --scf-for-to-while --scf-for-loop-canonicalization --loop-invariant-code-motion --scf-for-loop-peeling=\"peel-front\" --scf-for-loop-canonicalization --inline --scf-for-loop-peeling --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --scf-parallel-loop-specialization --test-emulate-narrow-int=\"memref-load-bitwidth=8\" --sccp --control-flow-sink --scf-for-loop-peeling=\"skip-partial\" --test-func-insert-arg --composite-fixed-point-pass --test-func-insert-arg --inline --test-scf-for-utils --test-math-polynomial-approximation --test-expand-math | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --test-func-erase-arg --test-func-set-type --inline --arith-emulate-wide-int=\"widest-int-supported=32\" --test-func-set-type --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --arith-expand=\"include-bf16\" --mem2reg=\"region-simplify\" --arith-emulate-wide-int --arith-emulate-wide-int=\"widest-int-supported=32\" --arith-emulate-wide-int=\"widest-int-supported=32\" --test-func-erase-result --int-range-optimizations --test-function-pass --test-func-insert-arg --test-function-pass --composite-fixed-point-pass --loop-invariant-code-motion --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --test-func-erase-arg --arith-int-range-narrowing --arith-emulate-unsupported-floats --arith-expand=\"include-bf16\" --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-wide-int --test-func-insert-result --arith-expand=\"include-bf16\" --sccp --test-func-erase-arg --sccp --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --remove-dead-values --topological-sort --cse --sccp --test-func-insert-result --test-func-insert-arg --symbol-dce --control-flow-sink --topological-sort --sroa --test-function-pass --canonicalize --test-func-erase-arg --mem2reg=\"region-simplify\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --cse --mem2reg=\"region-simplify\" --remove-dead-values --canonicalize=\"test-convergence\" --remove-dead-values --test-func-insert-arg --canonicalize=\"test-convergence top-down=0\" --test-tensor-transform-patterns=\"test-fold-constant-extract-slice\" --tosa-optional-decompositions --test-func-insert-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --math-uplift-to-fma --linalg-named-op-conversion --fold-tensor-subset-ops --arith-unsigned-when-equivalent --arith-expand --test-func-set-type --symbol-dce --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --test-function-pass --test-function-pass --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --linalg-generalize-named-ops --arith-emulate-wide-int --tosa-layerwise-constant-fold --test-func-erase-result --convert-elementwise-to-linalg --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --test-math-to-vcix --test-func-erase-arg --sroa --tosa-test-quant-utils --test-linalg-transform-patterns=\"test-swap-subtensor-padtensor\" --symbol-dce --linalg-specialize-generic-ops --symbol-dce --tosa-make-broadcastable --tosa-infer-shapes --linalg-generalize-named-ops --math-extend-to-supported-types --symbol-dce --test-func-insert-arg --test-func-erase-arg --test-linalg-greedy-fusion --test-func-set-type --test-math-to-vcix --tosa-optional-decompositions | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-greedy-fusion --resolve-shaped-type-result-dims --test-linalg-drop-unit-dims --memref-expand --normalize-memrefs --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --topological-sort --test-function-pass --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --test-linalg-drop-unit-dims --test-memref-dependence-check --inline --linalg-named-op-conversion --arith-unsigned-when-equivalent --linalg-generalize-named-ops --topological-sort --math-extend-to-supported-types --composite-fixed-point-pass --mem2reg --test-linalg-drop-unit-dims --loop-invariant-code-motion --test-linalg-drop-unit-dims --duplicate-function-elimination --sroa --test-memref-bound-check --linalg-specialize-generic-ops --linalg-inline-scalar-operands --resolve-ranked-shaped-type-result-dims --test-func-insert-arg --cse --test-math-polynomial-approximation=\"enable-avx2\" --composite-fixed-point-pass --resolve-shaped-type-result-dims --memref-expand --linalg-fuse-elementwise-ops --arith-expand --convert-elementwise-to-linalg --test-memref-dependence-check --test-func-erase-arg --expand-strided-metadata --arith-emulate-wide-int=\"widest-int-supported=32\" --test-linalg-greedy-fusion --test-linalg-rank-reduce-contraction-ops --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --loop-invariant-subset-hoisting --arith-emulate-unsupported-floats --memref-expand --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --test-func-erase-result --linalg-fuse-elementwise-ops --test-math-to-vcix --composite-fixed-point-pass --test-linalg-greedy-fusion --loop-invariant-code-motion --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --convert-elementwise-to-linalg --test-linalg-elementwise-fusion-patterns=\"collapse-dimensions-control=2,3\" --test-function-pass --test-linalg-pad-fusion --test-math-to-vcix --test-linalg-pad-fusion --mem2reg=\"region-simplify\" --inline --test-func-erase-arg --test-math-algebraic-simplification --test-linalg-data-layout-propagation --mem2reg --convert-elementwise-to-linalg --test-linalg-transform-patterns=\"test-swap-subtensor-padtensor\" --test-func-insert-result --test-linalg-drop-unit-dims --linalg-inline-scalar-operands --canonicalize=\"test-convergence\" --test-linalg-transform-patterns=\"test-decompose-winograd-ops\" --arith-expand=\"include-bf16\" --loop-invariant-code-motion --arith-emulate-wide-int=\"widest-int-supported=32\" --mem2reg=\"region-simplify\" --mem2reg=\"region-simplify\" --test-func-erase-arg --test-expand-math --control-flow-sink --composite-fixed-point-pass --canonicalize --test-linalg-rank-reduce-contraction-ops --linalg-named-op-conversion --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-linalg-data-layout-propagation --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-math-algebraic-simplification --canonicalize --test-func-insert-result --test-linalg-rank-reduce-contraction-ops --control-flow-sink --mem2reg=\"region-simplify\" --test-linalg-elementwise-fusion-patterns=\"fuse-multiuse-producer\" --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --linalg-fuse-elementwise-ops --test-linalg-greedy-fusion --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --remove-dead-values --remove-dead-values --expand-strided-metadata --test-func-set-type --test-expand-math --test-func-insert-arg --canonicalize=\"test-convergence\" --composite-fixed-point-pass --memref-expand | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --loop-invariant-code-motion --test-func-insert-arg --topological-sort --memref-emulate-wide-int=\"widest-int-supported=32\" --mem2reg=\"region-simplify\" --cse --resolve-ranked-shaped-type-result-dims --duplicate-function-elimination --resolve-shaped-type-result-dims --duplicate-function-elimination --test-func-set-type --topological-sort --control-flow-sink --expand-realloc --test-func-insert-arg --test-func-erase-arg --test-func-erase-result --topological-sort --resolve-ranked-shaped-type-result-dims --remove-dead-values | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --test-function-pass --test-function-pass --test-func-insert-result --test-function-pass --loop-invariant-code-motion --control-flow-sink --topological-sort --topological-sort --cse --test-func-erase-result --symbol-dce --cse --mem2reg --remove-dead-values --topological-sort --inline --inline --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --inline --canonicalize=\"test-convergence\" --test-function-pass --test-func-insert-arg --test-func-insert-arg --sccp --test-func-insert-arg --sroa --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --test-arith-emulate-wide-int --test-linalg-greedy-fusion --arith-emulate-unsupported-floats --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --test-linalg-transform-patterns=\"test-vector-transfer-forwarding-patterns\" --tosa-infer-shapes --canonicalize --tosa-infer-shapes --arith-expand=\"include-bf16\" --tosa-make-broadcastable --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --tosa-layerwise-constant-fold --math-extend-to-supported-types --tosa-make-broadcastable --tosa-infer-shapes --test-func-erase-result --test-linalg-transform-patterns=\"test-vector-transfer-forwarding-patterns\" --test-linalg-pad-fusion --sccp --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-linalg-data-layout-propagation --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --tosa-infer-shapes --duplicate-function-elimination --linalg-inline-scalar-operands --test-expand-math --fold-tensor-subset-ops --arith-int-range-narrowing --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-optional-decompositions --linalg-named-op-conversion --test-linalg-transform-patterns=\"test-vector-transfer-forwarding-patterns\" --linalg-named-op-conversion --test-linalg-transform-patterns=\"test-decompose-winograd-ops\" --linalg-generalize-named-ops --composite-fixed-point-pass --test-math-polynomial-approximation --test-math-polynomial-approximation --duplicate-function-elimination --convert-elementwise-to-linalg --test-expand-math --math-extend-to-supported-types --test-linalg-drop-unit-dims --math-uplift-to-fma --test-func-insert-arg --test-func-insert-result --test-func-insert-arg --test-tensor-transform-patterns=\"test-fold-constant-extract-slice\" --test-func-insert-result --test-func-set-type --test-func-erase-arg --linalg-inline-scalar-operands --convert-elementwise-to-linalg --tosa-validate --test-math-to-vcix --sroa --test-math-to-vcix --tosa-infer-shapes --linalg-named-op-conversion --cse --test-linalg-elementwise-fusion-patterns=\"fuse-multiuse-producer\" --sccp --control-flow-sink --test-func-erase-arg --test-math-algebraic-simplification --test-linalg-greedy-fusion --control-flow-sink --linalg-generalize-named-ops --topological-sort --test-linalg-data-layout-propagation --math-extend-to-supported-types --linalg-fold-unit-extent-dims | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-wide-int --symbol-dce --control-flow-sink --test-linalg-elementwise-fusion-patterns --canonicalize=\"test-convergence top-down=0\" --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --test-math-algebraic-simplification --linalg-fold-unit-extent-dims --test-linalg-transform-patterns=\"test-vector-transfer-forwarding-patterns\" --test-linalg-elementwise-fusion-patterns=\"fuse-generic-ops-control\" --linalg-generalize-named-ops --arith-unsigned-when-equivalent --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --arith-emulate-wide-int --control-flow-sink --arith-expand --test-arith-emulate-wide-int=\"widest-int-supported=8\" --symbol-dce --test-linalg-greedy-fusion --linalg-fuse-elementwise-ops --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --linalg-named-op-conversion --topological-sort --arith-emulate-wide-int=\"widest-int-supported=32\" --test-math-polynomial-approximation --linalg-fuse-elementwise-ops --test-math-to-vcix --sccp --test-math-polynomial-approximation=\"enable-avx2\" --test-linalg-drop-unit-dims --test-linalg-elementwise-fusion-patterns=\"collapse-dimensions-control=2,3\" --mem2reg --sroa --linalg-inline-scalar-operands --arith-int-range-narrowing --test-math-polynomial-approximation=\"enable-avx2\" --test-tensor-transform-patterns=\"test-fold-constant-extract-slice\" --duplicate-function-elimination --test-func-erase-arg --test-emulate-narrow-int=\"memref-load-bitwidth=8\" --test-expand-math --test-math-algebraic-simplification --test-math-to-vcix --cse --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --test-math-polynomial-approximation=\"enable-avx2\" --arith-int-range-narrowing=\"int-bitwidths-supported=32\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --test-linalg-decompose-ops --test-linalg-decompose-ops --test-linalg-pad-fusion --sroa --test-math-to-vcix --sroa --convert-elementwise-to-linalg --test-math-to-vcix --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --test-linalg-greedy-fusion --inline --arith-expand --test-expand-math --test-func-erase-arg --linalg-fold-unit-extent-dims --test-func-erase-arg --test-expand-math --arith-int-range-narrowing --linalg-generalize-named-ops --test-emulate-narrow-int=\"memref-load-bitwidth=32\" --inline --sccp --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --math-uplift-to-fma --test-linalg-pad-fusion --inline --arith-unsigned-when-equivalent --test-linalg-data-layout-propagation --topological-sort --test-arith-emulate-wide-int=\"widest-int-supported=8\" --int-range-optimizations --linalg-generalize-named-ops --test-linalg-greedy-fusion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-arith-emulate-wide-int=\"widest-int-supported=8\" --linalg-named-op-conversion --loop-invariant-subset-hoisting --test-math-algebraic-simplification --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --int-range-optimizations --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --duplicate-function-elimination --linalg-named-op-conversion --linalg-specialize-generic-ops --resolve-ranked-shaped-type-result-dims | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg --arith-emulate-wide-int=\"widest-int-supported=32\" --cse --topological-sort --memref-emulate-wide-int --mem2reg --test-function-pass --cse --scf-for-loop-specialization --topological-sort --expand-realloc --test-scf-pipelining=\"no-epilogue-peeling\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --test-arith-emulate-wide-int --scf-for-loop-range-folding --cse --test-scf-while-op-builder --test-func-erase-result --duplicate-function-elimination --scf-for-loop-peeling=\"skip-partial\" --canonicalize=\"test-convergence\" --test-scf-uplift-while-to-for --test-func-set-type --scf-parallel-loop-specialization --scf-for-loop-canonicalization --duplicate-function-elimination --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --inline --int-range-optimizations --arith-unsigned-when-equivalent --duplicate-function-elimination --duplicate-function-elimination --test-func-erase-arg --loop-invariant-subset-hoisting --int-range-optimizations --test-emulate-narrow-int=\"arith-compute-bitwidth=8\" --test-emulate-narrow-int --scf-parallel-loop-specialization --scf-forall-to-parallel --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --test-function-pass --test-func-erase-arg --scf-forall-to-parallel --mem2reg=\"region-simplify\" --test-function-pass --test-function-pass --test-scf-while-op-builder --loop-invariant-subset-hoisting --remove-dead-values | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-wide-int --test-func-insert-result --mem2reg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse --sccp --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --mem2reg --sccp --control-flow-sink --control-flow-sink --test-func-erase-result --test-func-insert-result --tosa-infer-shapes --cse --control-flow-sink --test-func-erase-result --test-func-insert-result --sccp --tosa-validate | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-arg --remove-dead-values --tosa-test-quant-utils --test-func-erase-arg --duplicate-function-elimination --duplicate-function-elimination --test-func-erase-result --sroa --loop-invariant-subset-hoisting --composite-fixed-point-pass --test-function-pass --fold-tensor-subset-ops --control-flow-sink --test-func-insert-result --test-func-set-type --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --test-func-insert-arg --test-func-erase-result --tosa-infer-shapes --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --fold-tensor-subset-ops --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --tosa-infer-shapes --tosa-infer-shapes --loop-invariant-subset-hoisting --tosa-reduce-transposes --tosa-optional-decompositions --mem2reg=\"region-simplify\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-named-op-conversion --arith-emulate-wide-int --tosa-layerwise-constant-fold --arith-int-range-narrowing --sccp --test-tensor-transform-patterns=\"test-reassociative-reshape-folding\" --math-uplift-to-fma --sroa --loop-invariant-code-motion --linalg-inline-scalar-operands | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --test-function-pass --test-linalg-greedy-fusion --test-math-polynomial-approximation=\"enable-avx2\" --test-math-polynomial-approximation=\"enable-avx2\" --test-math-polynomial-approximation=\"enable-avx2\" --test-linalg-decompose-ops --composite-fixed-point-pass --mem2reg=\"region-simplify\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --test-linalg-drop-unit-dims --control-flow-sink --loop-invariant-subset-hoisting --control-flow-sink --linalg-fold-unit-extent-dims --tosa-test-quant-utils --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --canonicalize=\"test-convergence\" --loop-invariant-subset-hoisting --topological-sort --test-func-insert-result --canonicalize=\"test-convergence\" --test-linalg-drop-unit-dims --test-linalg-greedy-fusion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --test-memref-bound-check --test-linalg-pad-fusion --expand-strided-metadata --convert-elementwise-to-linalg --test-func-erase-result --test-linalg-transform-patterns=\"test-swap-subtensor-padtensor\" --composite-fixed-point-pass --canonicalize=\"test-convergence top-down=0\" --test-memref-bound-check --sroa --resolve-ranked-shaped-type-result-dims --inline --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-collapsing\" --sroa --test-func-set-type --test-func-erase-arg --duplicate-function-elimination --resolve-ranked-shaped-type-result-dims --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --test-linalg-rank-reduce-contraction-ops --mem2reg=\"region-simplify\" --symbol-dce --test-linalg-drop-unit-dims --test-memref-bound-check --loop-invariant-subset-hoisting --loop-invariant-subset-hoisting --cse --mem2reg --test-func-erase-arg --linalg-fuse-elementwise-ops --memref-emulate-wide-int --test-linalg-drop-unit-dims --test-linalg-elementwise-fusion-patterns --fold-memref-alias-ops --test-linalg-elementwise-fusion-patterns=\"collapse-dimensions-control=2,3\" --memref-emulate-wide-int=\"widest-int-supported=32\" --loop-invariant-subset-hoisting --resolve-ranked-shaped-type-result-dims --expand-strided-metadata --test-linalg-elementwise-fusion-patterns=\"fuse-multiuse-producer\" --test-func-insert-result --test-linalg-data-layout-propagation --linalg-specialize-generic-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-parallel-loop-fusion --mem2reg=\"region-simplify\" --test-func-erase-arg --test-scf-uplift-while-to-for --test-function-pass --scf-forall-to-for --arith-unsigned-when-equivalent --test-function-pass --test-scf-for-utils --test-scf-if-utils --arith-unsigned-when-equivalent --int-range-optimizations --test-func-set-type --scf-forall-to-parallel --composite-fixed-point-pass --loop-invariant-subset-hoisting --duplicate-function-elimination --test-emulate-narrow-int=\"memref-load-bitwidth=8\" --test-function-pass --loop-invariant-subset-hoisting --scf-forall-to-parallel --scf-forall-to-for --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --sroa --mem2reg --test-func-erase-arg --duplicate-function-elimination --test-function-pass --topological-sort --control-flow-sink --topological-sort --sroa --test-func-set-type --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --tosa-optional-decompositions --test-func-insert-result --sccp --test-func-erase-arg --composite-fixed-point-pass --inline --test-tensor-transform-patterns=\"use-foreach\" --control-flow-sink --tosa-test-quant-utils --control-flow-sink --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --test-tensor-copy-insertion=\"must-infer-memory-space\" --arith-unsigned-when-equivalent --linalg-specialize-generic-ops --test-math-algebraic-simplification --topological-sort --linalg-inline-scalar-operands --loop-invariant-code-motion --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --linalg-named-op-conversion --test-func-erase-arg --test-tensor-copy-insertion=\"must-infer-memory-space\" --linalg-named-op-conversion --test-linalg-transform-patterns=\"test-decompose-winograd-ops\" --math-uplift-to-fma --linalg-named-op-conversion --tosa-reduce-transposes --symbol-dce --linalg-generalize-named-ops --control-flow-sink --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-linalg-greedy-fusion --test-linalg-pad-fusion --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --test-func-insert-result --topological-sort --test-func-insert-result --test-emulate-narrow-int=\"memref-load-bitwidth=32\" --linalg-named-op-conversion --test-linalg-decompose-ops --test-func-set-type --cse --test-linalg-greedy-fusion --test-expand-math --linalg-specialize-generic-ops --int-range-optimizations | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-math-polynomial-approximation --linalg-specialize-generic-ops --linalg-named-op-conversion --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --test-func-insert-arg --tosa-make-broadcastable --test-func-set-type --sroa --test-func-erase-result --linalg-fold-unit-extent-dims --test-linalg-transform-patterns=\"test-bubble-up-extract-slice-op-pattern\" --linalg-named-op-conversion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-fuse-elementwise-ops --test-func-insert-result --normalize-memrefs --cse --test-linalg-pad-fusion --test-linalg-rank-reduce-contraction-ops --inline --test-linalg-data-layout-propagation --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --memref-expand --resolve-ranked-shaped-type-result-dims --memref-emulate-wide-int --loop-invariant-subset-hoisting --test-arith-emulate-wide-int --arith-expand=\"include-bf16\" --resolve-shaped-type-result-dims --inline --arith-emulate-unsupported-floats --duplicate-function-elimination --test-function-pass --arith-emulate-unsupported-floats --int-range-optimizations --test-arith-emulate-wide-int --memref-emulate-wide-int --expand-strided-metadata --arith-unsigned-when-equivalent --loop-invariant-subset-hoisting --composite-fixed-point-pass --memref-emulate-wide-int --expand-strided-metadata --int-range-optimizations --test-func-set-type --control-flow-sink --control-flow-sink --expand-realloc --normalize-memrefs --normalize-memrefs --test-function-pass --test-memref-dependence-check --memref-expand --sroa --resolve-shaped-type-result-dims --canonicalize=\"test-convergence top-down=0\" --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --inline --canonicalize=\"test-convergence\" --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --test-func-erase-arg --symbol-dce --sccp --tosa-reduce-transposes --remove-dead-values --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-result --test-arith-emulate-wide-int=\"widest-int-supported=8\" --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --convert-elementwise-to-linalg --linalg-inline-scalar-operands --composite-fixed-point-pass --composite-fixed-point-pass --tosa-test-quant-utils --test-math-to-vcix --linalg-generalize-named-ops --tosa-infer-shapes --duplicate-function-elimination --test-linalg-pad-fusion --test-expand-math --linalg-inline-scalar-operands --mem2reg=\"region-simplify\" --composite-fixed-point-pass --test-func-erase-arg --tosa-reduce-transposes --topological-sort --composite-fixed-point-pass --cse --test-func-insert-arg --composite-fixed-point-pass --test-linalg-transform-patterns --linalg-named-op-conversion --symbol-dce --fold-tensor-subset-ops --loop-invariant-subset-hoisting --tosa-make-broadcastable --linalg-inline-scalar-operands --tosa-infer-shapes --inline --sroa --math-extend-to-supported-types --linalg-inline-scalar-operands --tosa-optional-decompositions --fold-tensor-subset-ops --fold-tensor-subset-ops --tosa-test-quant-utils --test-linalg-rank-reduce-contraction-ops --test-linalg-rank-reduce-contraction-ops --test-func-erase-result --control-flow-sink --test-math-polynomial-approximation=\"enable-avx2\" --math-extend-to-supported-types --test-func-erase-arg --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --linalg-inline-scalar-operands --arith-unsigned-when-equivalent --test-func-insert-arg --test-linalg-decompose-ops --cse --test-math-algebraic-simplification --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --test-linalg-data-layout-propagation --symbol-dce --linalg-generalize-named-ops --sccp --sccp --symbol-dce --test-emulate-narrow-int=\"memref-load-bitwidth=8\" --test-func-erase-result --test-func-insert-result --sccp --math-uplift-to-fma --arith-unsigned-when-equivalent | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-unsigned-when-equivalent --cse --scf-parallel-loop-fusion --scf-for-loop-peeling --arith-emulate-unsupported-floats --cse --sroa --test-func-erase-result --arith-emulate-wide-int --canonicalize=\"test-convergence top-down=0\" --inline --test-scf-uplift-while-to-for --sccp --composite-fixed-point-pass --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sroa --int-range-optimizations --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --cse --test-arith-emulate-wide-int --test-func-erase-arg --arith-emulate-wide-int --arith-emulate-wide-int --topological-sort --control-flow-sink --canonicalize --loop-invariant-subset-hoisting --arith-int-range-narrowing --duplicate-function-elimination --composite-fixed-point-pass --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --canonicalize --remove-dead-values --canonicalize=\"test-convergence\" --mem2reg=\"region-simplify\" --loop-invariant-subset-hoisting --remove-dead-values --composite-fixed-point-pass --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --tosa-layerwise-constant-fold --canonicalize --test-func-insert-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --test-func-insert-arg --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-math-polynomial-approximation=\"enable-avx2\" --test-expand-math --control-flow-sink --test-expand-math --convert-elementwise-to-linalg --arith-unsigned-when-equivalent --test-linalg-rank-reduce-contraction-ops --test-function-pass --int-range-optimizations --convert-elementwise-to-linalg --test-func-erase-arg --test-expand-math --test-func-erase-arg --sroa --test-linalg-data-layout-propagation --symbol-dce --sccp --test-func-insert-arg --test-function-pass --test-function-pass --control-flow-sink --topological-sort --linalg-fuse-elementwise-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-result --linalg-specialize-generic-ops --test-linalg-drop-unit-dims --sroa --test-func-set-type --linalg-specialize-generic-ops --test-func-set-type --test-func-set-type --mem2reg=\"region-simplify\" --duplicate-function-elimination --test-func-erase-arg --duplicate-function-elimination --duplicate-function-elimination --linalg-named-op-conversion --linalg-generalize-named-ops --linalg-inline-scalar-operands --test-linalg-pad-fusion --topological-sort --test-func-erase-arg --test-linalg-drop-unit-dims | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --test-func-set-type --mem2reg --fold-memref-alias-ops --cse --linalg-inline-scalar-operands --canonicalize --memref-expand --test-linalg-data-layout-propagation --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-for-loop-range-folding --int-range-optimizations --scf-for-loop-canonicalization --scf-for-loop-canonicalization --test-scf-pipelining=\"no-epilogue-peeling\" --test-func-insert-result --test-function-pass --test-scf-pipelining=\"annotate\" --scf-for-loop-range-folding --test-scf-uplift-while-to-for --int-range-optimizations --duplicate-function-elimination --mem2reg=\"region-simplify\" --test-func-set-type --scf-for-to-while --sccp --scf-parallel-loop-specialization --scf-parallel-loop-specialization --duplicate-function-elimination --test-arith-emulate-wide-int --test-scf-if-utils --scf-parallel-loop-tiling=\"parallel-loop-tile-sizes=1,4 no-min-max-bounds=true\" --scf-parallel-loop-specialization --scf-for-loop-range-folding --sccp --control-flow-sink --test-func-set-type --sccp --arith-expand=\"include-bf16\" --test-func-insert-arg --test-scf-if-utils --test-func-erase-arg --arith-expand --canonicalize=\"test-convergence top-down=0\" --scf-parallel-loop-tiling=\"parallel-loop-tile-sizes=1,4 no-min-max-bounds=true\" --loop-invariant-subset-hoisting --test-func-erase-result --scf-parallel-loop-tiling=\"parallel-loop-tile-sizes=1,4 no-min-max-bounds=true\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize=\"test-convergence top-down=0\" --test-func-insert-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --control-flow-sink --remove-dead-values --test-function-pass --mem2reg=\"region-simplify\" --loop-invariant-subset-hoisting --test-func-erase-arg --test-func-erase-arg --loop-invariant-subset-hoisting --composite-fixed-point-pass --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --control-flow-sink --tosa-infer-shapes --inline --mem2reg=\"region-simplify\" --symbol-dce --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --topological-sort --topological-sort --cse --tosa-validate --test-tensor-copy-insertion=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-generalize-named-ops --tosa-reduce-transposes --inline --test-linalg-greedy-fusion --tosa-layerwise-constant-fold --convert-elementwise-to-linalg --math-uplift-to-fma --test-linalg-drop-unit-dims --test-emulate-narrow-int=\"memref-load-bitwidth=8\" --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --test-math-to-vcix --test-math-algebraic-simplification --test-math-polynomial-approximation=\"enable-avx2\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --resolve-shaped-type-result-dims --scf-parallel-loop-fusion --arith-emulate-wide-int=\"widest-int-supported=32\" --cse --int-range-optimizations --test-func-insert-arg --test-memref-bound-check --fold-memref-alias-ops --inline --test-func-set-type --scf-forall-to-for --scf-parallel-loop-tiling=\"parallel-loop-tile-sizes=1,4 no-min-max-bounds=true\" --arith-emulate-wide-int --duplicate-function-elimination --test-scf-while-op-builder --resolve-ranked-shaped-type-result-dims --test-memref-dependence-check --remove-dead-values --test-emulate-narrow-int=\"memref-load-bitwidth=32\" --symbol-dce --int-range-optimizations --mem2reg --test-scf-while-op-builder --test-func-set-type --loop-invariant-code-motion --test-func-insert-arg --loop-invariant-code-motion --test-memref-bound-check --scf-forall-to-parallel --scf-parallel-loop-fusion --loop-invariant-code-motion --test-func-insert-arg --test-func-insert-arg --scf-forall-to-parallel --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --scf-for-to-while --arith-unsigned-when-equivalent --test-scf-while-op-builder --test-scf-while-op-builder --scf-forall-to-for --scf-for-to-while --control-flow-sink --scf-for-loop-peeling=\"peel-front\" --test-scf-while-op-builder --symbol-dce --int-range-optimizations --test-function-pass --arith-expand --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --control-flow-sink --test-func-erase-arg --remove-dead-values --arith-emulate-unsupported-floats --test-arith-emulate-wide-int | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-result --test-func-erase-result --composite-fixed-point-pass --test-func-set-type --remove-dead-values --test-func-set-type --test-func-set-type --test-func-insert-result --duplicate-function-elimination --remove-dead-values --duplicate-function-elimination --test-func-erase-arg --sroa --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-arg --topological-sort --symbol-dce --test-function-pass --remove-dead-values --control-flow-sink --control-flow-sink --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --inline --tosa-infer-shapes --control-flow-sink --test-function-pass --control-flow-sink --control-flow-sink --tosa-reduce-transposes --test-func-set-type --topological-sort --test-func-erase-arg --test-function-pass --tosa-optional-decompositions --composite-fixed-point-pass --fold-tensor-subset-ops --test-func-erase-arg --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-greedy-fusion --test-func-erase-result --tosa-test-quant-utils --test-math-polynomial-approximation --tosa-make-broadcastable --tosa-validate | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg=\"region-simplify\" --convert-elementwise-to-linalg --test-expand-math --arith-expand=\"include-bf16\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-rank-reduce-contraction-ops --linalg-inline-scalar-operands --sroa --control-flow-sink --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-pad-fusion --fold-memref-alias-ops --math-uplift-to-fma --normalize-memrefs --test-math-algebraic-simplification --test-linalg-rank-reduce-contraction-ops --test-linalg-decompose-ops=\"remove-dead-args-and-results\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --memref-expand --loop-invariant-subset-hoisting --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --arith-emulate-unsupported-floats --test-func-erase-arg --expand-strided-metadata --expand-realloc --test-memref-bound-check --test-scf-while-op-builder --scf-for-loop-specialization --test-arith-emulate-wide-int --test-memref-bound-check --cse --test-emulate-narrow-int=\"arith-compute-bitwidth=8\" --test-scf-if-utils --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --scf-parallel-loop-specialization --test-scf-while-op-builder --test-func-insert-arg --remove-dead-values --scf-for-loop-peeling --symbol-dce --arith-expand=\"include-bf16\" --scf-for-loop-specialization --inline --test-func-insert-arg --test-scf-if-utils --test-emulate-narrow-int=\"arith-compute-bitwidth=8\" --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-wide-int=\"widest-int-supported=32\" --symbol-dce --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-unsigned-when-equivalent --symbol-dce --duplicate-function-elimination --test-arith-emulate-wide-int=\"widest-int-supported=8\" --arith-emulate-unsupported-floats --composite-fixed-point-pass --sroa --arith-emulate-wide-int --sroa --arith-unsigned-when-equivalent --remove-dead-values --cse --arith-expand=\"include-bf16\" --loop-invariant-subset-hoisting --test-arith-emulate-wide-int --composite-fixed-point-pass --test-func-insert-arg --sroa --test-function-pass --test-arith-emulate-wide-int=\"widest-int-supported=8\" --remove-dead-values --arith-emulate-wide-int --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize=\"test-convergence\" --test-func-set-type --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --control-flow-sink --tosa-infer-shapes --test-func-erase-arg --test-func-insert-result --tosa-infer-shapes --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-arg --topological-sort --inline --test-func-erase-result --test-func-set-type --symbol-dce --test-function-pass --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --fold-tensor-subset-ops --tosa-make-broadcastable | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-layerwise-constant-fold --int-range-optimizations --arith-expand=\"include-bf16\" --test-func-insert-result --test-tensor-transform-patterns=\"test-fold-consecutive-insert-extract-slice\" --test-emulate-narrow-int=\"memref-load-bitwidth=8\" --test-func-set-type --arith-unsigned-when-equivalent | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-greedy-fusion --arith-expand=\"include-bf16\" --linalg-specialize-generic-ops --linalg-generalize-named-ops --sccp --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --control-flow-sink --test-math-polynomial-approximation=\"enable-avx2\" --test-math-algebraic-simplification --linalg-fuse-elementwise-ops --math-uplift-to-fma --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-rank-reduce-contraction-ops --linalg-fuse-elementwise-ops --linalg-generalize-named-ops --control-flow-sink --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --resolve-ranked-shaped-type-result-dims --test-func-erase-arg --cse --normalize-memrefs --memref-expand --duplicate-function-elimination --fold-memref-alias-ops --loop-invariant-code-motion --topological-sort --test-linalg-pad-fusion --inline --test-linalg-transform-patterns=\"test-vector-transfer-forwarding-patterns\" --mem2reg --test-linalg-transform-patterns=\"test-winograd-conv2d\" --test-linalg-rank-reduce-contraction-ops --duplicate-function-elimination --topological-sort --loop-invariant-subset-hoisting --canonicalize=\"test-convergence top-down=0\" --memref-emulate-wide-int=\"widest-int-supported=32\" --linalg-named-op-conversion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --test-function-pass --test-affine-data-copy=\"for-memref-region\" --inline --control-flow-sink --inline --test-loop-permutation=\"permutation-map=2,0,1\" --loop-invariant-code-motion --test-constant-fold | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-expand --scf-forall-to-parallel --scf-forall-to-for --test-func-erase-arg --arith-expand --test-arith-emulate-wide-int --scf-for-loop-range-folding --arith-expand --scf-forall-to-for --test-scf-for-utils --control-flow-sink --test-func-set-type --scf-for-loop-peeling=\"peel-front\" --test-arith-emulate-wide-int --inline --test-function-pass --test-func-set-type --test-scf-uplift-while-to-for --scf-for-loop-range-folding --test-scf-for-utils=\"test-replace-with-new-yields\" --composite-fixed-point-pass --remove-dead-values --scf-parallel-loop-specialization --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-function-pass --cse --test-function-pass --test-func-erase-arg --inline --test-scf-while-op-builder --test-scf-for-utils=\"test-replace-with-new-yields\" --arith-emulate-unsupported-floats | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --test-function-pass --arith-emulate-wide-int --inline --test-func-erase-result --sccp --mem2reg=\"region-simplify\" --arith-emulate-wide-int --inline --topological-sort --int-range-optimizations --test-func-set-type --composite-fixed-point-pass --arith-expand --topological-sort --loop-invariant-code-motion --arith-emulate-unsupported-floats --test-function-pass --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --sccp --canonicalize=\"test-convergence top-down=0\" --cse --cse --test-function-pass --remove-dead-values --inline --mem2reg=\"region-simplify\" --control-flow-sink --topological-sort --composite-fixed-point-pass --symbol-dce --inline --test-func-set-type --test-func-erase-result --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --tosa-reduce-transposes --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --test-func-set-type --loop-invariant-code-motion --canonicalize | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --tosa-make-broadcastable --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --linalg-fold-unit-extent-dims --test-math-to-vcix --math-extend-to-supported-types --test-math-polynomial-approximation --linalg-generalize-named-ops --linalg-fuse-elementwise-ops --canonicalize=\"test-convergence\" --symbol-dce --canonicalize --linalg-fuse-elementwise-ops --math-uplift-to-fma --test-linalg-pad-fusion --canonicalize --mem2reg --test-linalg-transform-patterns=\"test-bubble-up-extract-slice-op-pattern\" --inline --test-expand-math --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --expand-realloc=\"emit-deallocs\" --canonicalize=\"test-convergence top-down=0\" --test-func-insert-arg --test-func-erase-arg --remove-dead-values --test-func-set-type --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --fold-memref-alias-ops --loop-invariant-code-motion --canonicalize=\"test-convergence\" --test-func-erase-result --symbol-dce --test-func-erase-result --test-func-erase-result --memref-emulate-wide-int --symbol-dce --loop-invariant-subset-hoisting --mem2reg=\"region-simplify\" --resolve-shaped-type-result-dims --control-flow-sink --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --test-function-pass --symbol-dce --canonicalize=\"test-convergence top-down=0\" --test-function-pass --mem2reg=\"region-simplify\" --sccp --test-func-erase-result --control-flow-sink --symbol-dce --control-flow-sink --loop-invariant-code-motion --duplicate-function-elimination --remove-dead-values --control-flow-sink --control-flow-sink --sccp --loop-invariant-subset-hoisting --test-func-set-type --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --sroa --duplicate-function-elimination --canonicalize --mem2reg --cse --test-func-erase-arg --test-func-erase-arg --sccp --test-func-erase-arg --test-func-insert-result --sccp --test-func-set-type --tosa-make-broadcastable --duplicate-function-elimination --loop-invariant-subset-hoisting --cse --tosa-make-broadcastable --fold-tensor-subset-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-generalize-named-ops --tosa-make-broadcastable --test-emulate-narrow-int=\"arith-compute-bitwidth=8\" --int-range-optimizations --test-linalg-pad-fusion --sccp --duplicate-function-elimination --symbol-dce --test-math-polynomial-approximation=\"enable-avx2\" --test-linalg-pad-fusion --inline --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --test-linalg-drop-unit-dims --tosa-infer-shapes --tosa-make-broadcastable --test-func-erase-result --tosa-validate --symbol-dce --loop-invariant-subset-hoisting --fold-tensor-subset-ops --mem2reg=\"region-simplify\" --tosa-reduce-transposes --composite-fixed-point-pass --sroa --symbol-dce --fold-tensor-subset-ops --linalg-generalize-named-ops --loop-invariant-subset-hoisting --loop-invariant-code-motion --tosa-optional-decompositions --inline --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-elementwise-fusion-patterns=\"control-fusion-by-expansion\" --test-function-pass --test-func-insert-arg --convert-elementwise-to-linalg --linalg-named-op-conversion --test-linalg-transform-patterns=\"test-swap-subtensor-padtensor\" --symbol-dce --loop-invariant-subset-hoisting --linalg-inline-scalar-operands --cse --test-linalg-greedy-fusion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-unsupported-floats --composite-fixed-point-pass --topological-sort --test-function-pass --remove-dead-values --remove-dead-values | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize --sroa --test-func-insert-arg --mem2reg --loop-invariant-subset-hoisting --topological-sort --sroa --topological-sort --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --tosa-infer-shapes --test-func-insert-arg --topological-sort --sroa --sroa --topological-sort --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize=\"test-convergence top-down=0\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-drop-unit-dims --linalg-fold-unit-extent-dims --control-flow-sink --linalg-fold-unit-extent-dims --test-func-set-type --test-linalg-pad-fusion --composite-fixed-point-pass --test-math-algebraic-simplification --loop-invariant-code-motion --test-linalg-rank-reduce-contraction-ops --test-math-polynomial-approximation | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-arg --math-uplift-to-fma --cse --expand-strided-metadata --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-greedy-fusion --test-func-insert-arg --symbol-dce --linalg-fuse-elementwise-ops --test-func-erase-result --inline --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --test-func-erase-arg --loop-invariant-subset-hoisting --symbol-dce --inline --arith-emulate-wide-int --test-func-erase-arg --duplicate-function-elimination --topological-sort --duplicate-function-elimination --mem2reg --arith-expand=\"include-bf16\" --arith-emulate-unsupported-floats --test-func-erase-result --duplicate-function-elimination --cse --loop-invariant-subset-hoisting --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-result --loop-invariant-subset-hoisting --canonicalize --composite-fixed-point-pass --test-func-insert-arg --test-func-insert-arg --canonicalize=\"test-convergence top-down=0\" --canonicalize=\"test-convergence top-down=0\" --mem2reg --test-func-insert-arg --duplicate-function-elimination --canonicalize=\"test-convergence\" --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --test-tensor-transform-patterns=\"use-foreach\" --sccp --loop-invariant-subset-hoisting --composite-fixed-point-pass --canonicalize=\"test-convergence\" --test-func-insert-result --tosa-reduce-transposes --sroa --composite-fixed-point-pass --mem2reg=\"region-simplify\" --remove-dead-values | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --math-extend-to-supported-types --linalg-fold-unit-extent-dims --sccp --control-flow-sink --math-extend-to-supported-types --test-linalg-decompose-ops --linalg-inline-scalar-operands --tosa-infer-shapes --linalg-generalize-named-ops --linalg-inline-scalar-operands --test-math-polynomial-approximation --test-linalg-greedy-fusion --test-math-algebraic-simplification --test-linalg-elementwise-fusion-patterns --test-linalg-decompose-ops --test-func-insert-arg --fold-tensor-subset-ops --math-extend-to-supported-types --test-linalg-elementwise-fusion-patterns=\"fuse-generic-ops-control\" --sccp --test-func-set-type --tosa-optional-decompositions --test-linalg-decompose-ops --test-linalg-rank-reduce-contraction-ops --test-math-polynomial-approximation --cse --symbol-dce --test-func-erase-result --loop-invariant-subset-hoisting --test-func-erase-result --tosa-make-broadcastable --topological-sort --test-func-insert-result --test-linalg-drop-unit-dims --inline --linalg-fold-unit-extent-dims --linalg-fold-unit-extent-dims --tosa-optional-decompositions --composite-fixed-point-pass --mem2reg --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-inline-scalar-operands --test-linalg-greedy-fusion --canonicalize=\"test-convergence\" --topological-sort --convert-elementwise-to-linalg --test-linalg-transform-patterns=\"test-vector-transfer-forwarding-patterns\" --duplicate-function-elimination --test-function-pass --test-linalg-elementwise-fusion-patterns=\"control-fusion-by-expansion\" --test-linalg-greedy-fusion --memref-emulate-wide-int=\"widest-int-supported=32\" --test-linalg-greedy-fusion --linalg-specialize-generic-ops --control-flow-sink --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-arg --mem2reg --test-func-insert-arg --test-scf-pipelining=\"annotate\" --test-scf-pipelining=\"no-epilogue-peeling\" --cse --arith-emulate-wide-int=\"widest-int-supported=32\" --sroa --arith-unsigned-when-equivalent --test-function-pass --control-flow-sink --arith-int-range-narrowing --test-scf-for-utils --topological-sort --test-emulate-narrow-int=\"arith-compute-bitwidth=8\" --inline --test-func-set-type --test-func-insert-result --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-scf-pipelining --test-func-insert-result --arith-emulate-unsupported-floats --test-func-set-type --test-func-insert-arg --test-scf-while-op-builder --scf-forall-to-for --canonicalize --test-scf-if-utils --scf-for-loop-range-folding --scf-for-loop-specialization | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --sccp --canonicalize=\"test-convergence\" --test-function-pass --duplicate-function-elimination --inline --sroa --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --duplicate-function-elimination --cse --sroa --test-func-set-type --loop-invariant-code-motion --loop-invariant-code-motion --test-func-set-type --duplicate-function-elimination --test-function-pass --test-func-set-type --topological-sort --remove-dead-values --duplicate-function-elimination --canonicalize --loop-invariant-subset-hoisting --composite-fixed-point-pass --duplicate-function-elimination --test-function-pass --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --symbol-dce --tosa-infer-shapes --test-func-erase-result --canonicalize=\"test-convergence\" --control-flow-sink --topological-sort --tosa-reduce-transposes --symbol-dce --loop-invariant-subset-hoisting --sroa --cse --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --cse --tosa-make-broadcastable --duplicate-function-elimination --mem2reg --canonicalize=\"test-convergence\" --tosa-optional-decompositions --cse --sroa --test-func-erase-result --duplicate-function-elimination --topological-sort --test-tensor-copy-insertion --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --test-expand-math --cse --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --inline --test-expand-math --loop-invariant-code-motion --test-linalg-greedy-fusion --tosa-make-broadcastable --test-linalg-rank-reduce-contraction-ops --mem2reg --tosa-layerwise-constant-fold --test-tensor-transform-patterns=\"test-drop-redundant-insert-slice-rank-expansion\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-result --arith-unsigned-when-equivalent --sroa --math-uplift-to-fma --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --loop-invariant-subset-hoisting --cse --linalg-named-op-conversion --test-expand-math --test-func-insert-arg --tosa-infer-shapes --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-func-insert-result --test-linalg-transform-patterns=\"test-patterns\" --test-linalg-drop-unit-dims --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --math-extend-to-supported-types --tosa-validate | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse --linalg-specialize-generic-ops --test-expand-math --test-func-set-type --loop-invariant-subset-hoisting --test-math-polynomial-approximation=\"enable-avx2\" --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --fold-tensor-subset-ops --test-linalg-drop-unit-dims --test-expand-math --test-linalg-transform-patterns=\"test-swap-extract-slice-with-fill-pattern\" --int-range-optimizations --test-linalg-decompose-ops --mem2reg --arith-unsigned-when-equivalent --duplicate-function-elimination --math-uplift-to-fma --mem2reg --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --arith-emulate-wide-int=\"widest-int-supported=32\" --sccp --test-math-algebraic-simplification --test-tensor-transform-patterns=\"test-drop-redundant-insert-slice-rank-expansion\" --test-linalg-drop-unit-dims --test-function-pass --test-expand-math | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-fuse-elementwise-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize --test-scf-pipelining --normalize-memrefs --scf-for-to-while | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-for-to-while --test-scf-for-utils --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --inline --loop-invariant-code-motion --sroa --test-func-insert-result --loop-invariant-code-motion --duplicate-function-elimination --sccp --composite-fixed-point-pass --control-flow-sink --test-func-set-type --sccp --remove-dead-values --test-func-insert-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --test-func-erase-arg --test-func-insert-arg --sccp --composite-fixed-point-pass --remove-dead-values --mem2reg --test-func-insert-arg --canonicalize --test-function-pass --test-func-set-type --test-func-set-type --sccp --loop-invariant-subset-hoisting --test-func-insert-arg --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --test-func-erase-arg --control-flow-sink --composite-fixed-point-pass --tosa-optional-decompositions --test-func-insert-result --test-func-erase-arg --sccp --test-func-set-type --tosa-optional-decompositions --sccp --test-func-erase-result --tosa-reduce-transposes --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --test-func-set-type --duplicate-function-elimination --tosa-optional-decompositions --remove-dead-values --mem2reg=\"region-simplify\" --inline --tosa-reduce-transposes | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --control-flow-sink --linalg-named-op-conversion --linalg-named-op-conversion --linalg-inline-scalar-operands --cse --test-math-algebraic-simplification --test-tensor-transform-patterns=\"use-foreach\" --topological-sort --test-math-algebraic-simplification --test-tensor-transform-patterns=\"test-reassociative-reshape-folding\" --test-linalg-data-layout-propagation --inline --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --mem2reg=\"region-simplify\" --sroa --test-linalg-drop-unit-dims --mem2reg --test-emulate-narrow-int=\"memref-load-bitwidth=32\" --test-func-erase-arg --test-math-polynomial-approximation=\"enable-avx2\" --arith-unsigned-when-equivalent --math-uplift-to-fma --test-linalg-greedy-fusion --inline --tosa-infer-shapes --arith-emulate-unsupported-floats --control-flow-sink --fold-tensor-subset-ops --sroa --tosa-optional-decompositions --int-range-optimizations --topological-sort --test-arith-emulate-wide-int --arith-emulate-wide-int --math-extend-to-supported-types --symbol-dce --arith-expand=\"include-bf16\" --arith-emulate-unsupported-floats --linalg-inline-scalar-operands --cse --loop-invariant-subset-hoisting --tosa-optional-decompositions --control-flow-sink --tosa-test-quant-utils --test-linalg-decompose-ops --linalg-generalize-named-ops --fold-tensor-subset-ops --sroa --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --tosa-optional-decompositions --topological-sort --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --int-range-optimizations --arith-unsigned-when-equivalent --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --test-emulate-narrow-int --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --sroa --test-math-polynomial-approximation --test-linalg-greedy-fusion --test-math-polynomial-approximation --arith-emulate-wide-int=\"widest-int-supported=32\" --test-math-polynomial-approximation --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --test-linalg-greedy-fusion --test-func-erase-arg --test-func-erase-result --loop-invariant-subset-hoisting --int-range-optimizations --linalg-inline-scalar-operands --test-linalg-data-layout-propagation --duplicate-function-elimination --test-func-insert-arg --test-func-erase-arg --cse --int-range-optimizations --control-flow-sink --linalg-inline-scalar-operands --test-tensor-transform-patterns=\"test-fold-constant-extract-slice\" --symbol-dce --test-func-set-type --topological-sort --test-linalg-rank-reduce-contraction-ops --duplicate-function-elimination --control-flow-sink --test-func-insert-result --test-func-insert-result --arith-expand --fold-tensor-subset-ops --topological-sort --loop-invariant-code-motion --inline --loop-invariant-code-motion --inline --linalg-specialize-generic-ops --linalg-generalize-named-ops --topological-sort --linalg-inline-scalar-operands --loop-invariant-subset-hoisting --test-func-erase-arg --test-tensor-transform-patterns --test-linalg-rank-reduce-contraction-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-expand-math --cse --linalg-specialize-generic-ops --convert-elementwise-to-linalg --test-linalg-pad-fusion --test-func-erase-arg --linalg-fuse-elementwise-ops --cse --test-math-polynomial-approximation=\"enable-avx2\" --test-linalg-pad-fusion --test-math-polynomial-approximation --sccp --inline --cse --topological-sort --test-linalg-rank-reduce-contraction-ops --mem2reg=\"region-simplify\" --test-expand-math --duplicate-function-elimination --test-math-to-vcix --cse --test-linalg-data-layout-propagation | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --control-flow-sink --inline --duplicate-function-elimination --canonicalize=\"test-convergence top-down=0\" --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-make-broadcastable --mem2reg --test-math-polynomial-approximation --tosa-test-quant-utils --int-range-optimizations --scf-for-loop-range-folding --test-linalg-elementwise-fusion-patterns --test-math-to-vcix | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-wide-int=\"widest-int-supported=32\" --arith-expand=\"include-bf16\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --arith-emulate-wide-int | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --int-range-optimizations --control-flow-sink --control-flow-sink --test-func-erase-arg --topological-sort --test-function-pass --topological-sort --topological-sort --test-arith-emulate-wide-int --arith-expand=\"include-bf16\" --sroa --test-func-set-type --int-range-optimizations | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-func-erase-result --sroa --symbol-dce --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --composite-fixed-point-pass --loop-invariant-subset-hoisting --topological-sort --test-func-erase-result --test-func-insert-arg --test-function-pass --sroa --test-function-pass --test-func-set-type --test-function-pass --loop-invariant-code-motion --control-flow-sink --inline --mem2reg --test-func-erase-arg --inline --mem2reg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --sroa --tosa-test-quant-utils --inline --tosa-infer-shapes --test-func-erase-arg --test-func-erase-arg --control-flow-sink --canonicalize --tosa-infer-shapes --remove-dead-values --topological-sort --tosa-optional-decompositions --loop-invariant-subset-hoisting --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-arg --topological-sort --test-math-polynomial-approximation --canonicalize --tosa-infer-shapes --test-math-polynomial-approximation --control-flow-sink --fold-tensor-subset-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --symbol-dce --test-linalg-data-layout-propagation --test-linalg-greedy-fusion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-transform-patterns=\"test-bubble-up-extract-slice-op-pattern\" --memref-expand --test-func-set-type --composite-fixed-point-pass --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --remove-dead-values --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sroa --remove-dead-values --int-range-optimizations --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --cse --remove-dead-values --test-func-insert-result --test-func-erase-arg --loop-invariant-code-motion --sccp --sroa --canonicalize | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-result --canonicalize=\"test-convergence\" --composite-fixed-point-pass --sccp --duplicate-function-elimination --test-func-erase-result --test-func-insert-arg --test-func-insert-result --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --topological-sort --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --tosa-infer-shapes --fold-tensor-subset-ops --test-func-set-type --composite-fixed-point-pass --test-func-insert-result --test-tensor-transform-patterns=\"test-fold-constant-extract-slice\" --test-func-insert-result --canonicalize=\"test-convergence top-down=0\" --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --topological-sort --linalg-inline-scalar-operands --fold-tensor-subset-ops --test-tensor-copy-insertion=\"must-infer-memory-space\" --loop-invariant-code-motion --test-func-set-type --test-linalg-drop-unit-dims --test-linalg-rank-reduce-contraction-ops --test-linalg-data-layout-propagation --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --int-range-optimizations --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-linalg-rank-reduce-contraction-ops --linalg-generalize-named-ops --arith-emulate-wide-int=\"widest-int-supported=32\" --test-linalg-greedy-fusion --test-linalg-rank-reduce-contraction-ops --test-func-erase-result --test-linalg-drop-unit-dims --test-linalg-greedy-fusion --arith-emulate-unsupported-floats --duplicate-function-elimination --linalg-fuse-elementwise-ops --symbol-dce --sroa --test-linalg-decompose-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --test-func-erase-result --scf-forall-to-parallel --test-func-erase-result --cse --inline --resolve-ranked-shaped-type-result-dims --loop-invariant-code-motion --test-scf-while-op-builder --scf-for-loop-range-folding --scf-forall-to-parallel --test-memref-dependence-check --scf-for-to-while --test-func-erase-result --test-func-erase-result --test-scf-if-utils --test-math-polynomial-approximation=\"enable-avx2\" --loop-invariant-code-motion --test-math-polynomial-approximation=\"enable-avx2\" --resolve-shaped-type-result-dims --test-func-erase-arg --scf-for-loop-range-folding --loop-invariant-subset-hoisting --test-func-erase-arg --canonicalize=\"test-convergence\" --scf-for-loop-canonicalization --test-func-erase-result --test-func-insert-result --scf-forall-to-parallel --expand-strided-metadata --test-memref-dependence-check --test-func-set-type --scf-parallel-loop-specialization --scf-parallel-loop-tiling=\"parallel-loop-tile-sizes=1,4 no-min-max-bounds=true\" --scf-for-loop-canonicalization | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-result --test-func-erase-result --test-arith-emulate-wide-int=\"widest-int-supported=8\" --scf-forall-to-parallel --cse --loop-invariant-subset-hoisting --scf-parallel-loop-specialization --inline --arith-unsigned-when-equivalent --test-scf-if-utils --test-scf-pipelining=\"no-epilogue-peeling\" --scf-parallel-loop-tiling=\"parallel-loop-tile-sizes=1,4 no-min-max-bounds=true\" --fold-memref-alias-ops --inline --control-flow-sink --topological-sort --test-func-erase-arg --test-func-insert-arg --scf-for-loop-specialization --composite-fixed-point-pass --arith-unsigned-when-equivalent | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --resolve-ranked-shaped-type-result-dims --fold-memref-alias-ops --fold-memref-alias-ops --normalize-memrefs --resolve-shaped-type-result-dims --sccp --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --resolve-shaped-type-result-dims --symbol-dce --arith-unsigned-when-equivalent --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-func-insert-arg --sroa --test-func-erase-arg --symbol-dce --duplicate-function-elimination --resolve-ranked-shaped-type-result-dims --test-memref-dependence-check --symbol-dce --mem2reg --arith-expand=\"include-bf16\" --normalize-memrefs --sroa --fold-memref-alias-ops --topological-sort --composite-fixed-point-pass --inline --sccp --int-range-optimizations --cse --sroa --test-memref-dependence-check | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --canonicalize=\"test-convergence\" --resolve-ranked-shaped-type-result-dims --symbol-dce --sroa --test-func-set-type --remove-dead-values --resolve-shaped-type-result-dims --memref-expand --control-flow-sink --cse --sccp --test-memref-bound-check --loop-invariant-subset-hoisting --loop-invariant-subset-hoisting --normalize-memrefs --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --cse --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[8.69246e-15,    3.08846e-41,    8.69246e-15,    3.08846e-41,    8.52086e-15,    3.08846e-41,    8.5191e-15,    3.08846e-41,    8.69991e-15,    3.08846e-41,    8.51909e-15,    3.08846e-41,    8.51149e-15,    3.08846e-41,    4.27396e-43,    0,    1.12356e-13,    3.08846e-41,    1.19323e-13],\n[3.08846e-41,    1.15749e-13,    3.08846e-41,    1.06042e-13,    3.08846e-41,    6.72623e-44,    0,    8.96831e-44,    0,    1.19324e-13,    3.08846e-41,    1.12356e-13,    3.08846e-41,    8.51514e-15,    3.08846e-41,    2.8026e-45,    0,    1.12228e-13,    3.08846e-41],\n[-1.9409e-12,    4.57244e-41,    5.60519e-45,    0,    2.70451e-43,    0,    1.22805e-13,    3.08846e-41,    1.23249e-13,    3.08846e-41,    8.69991e-15,    3.08846e-41,    2.8026e-45,    3.08846e-41,    1.12354e-13,    3.08846e-41,    0,    5.60519e-45,    1.07281e-13],\n[3.08846e-41,    8.56826e-15,    3.08846e-41,    8.56159e-15,    3.08846e-41,    8.56158e-15,    3.08846e-41,    1.25393e-13,    3.08846e-41,    0,    3.32108e-43,    0,    0,    0,    0,    8.69246e-15,    3.08846e-41,    8.69246e-15,    3.08846e-41],\n[8.52086e-15,    3.08846e-41,    8.5191e-15,    3.08846e-41,    8.69991e-15,    3.08846e-41,    0,    0,    0,    0,    0,    0,    9.41673e-43,    0,    2.46629e-43,    0,    8.56675e-15,    3.08846e-41,    8.67533e-15],\n[3.08846e-41,    8.53664e-15,    3.08846e-41,    8.83294e-15,    3.08846e-41,    8.51665e-15,    3.08846e-41,    8.69493e-15,    3.08846e-41,    8.56827e-15,    3.08846e-41,    8.56826e-15,    3.08846e-41,    8.56159e-15,    3.08846e-41,    8.56158e-15,    3.08846e-41,    8.67568e-15,    3.08846e-41],\n[8.52107e-15,    3.08846e-41,    8.52111e-15,    3.08846e-41,    8.51552e-15,    3.08846e-41,    8.69246e-15,    3.08846e-41,    8.69246e-15,    3.08846e-41,    8.52086e-15,    3.08846e-41,    8.5191e-15,    3.08846e-41,    8.69991e-15,    3.08846e-41,    8.51909e-15,    3.08846e-41,    8.51149e-15],\n[3.08846e-41,    4.27396e-43,    0,    1.2261e-13,    3.08846e-41,    1.19323e-13,    3.08846e-41,    1.15752e-13,    3.08846e-41,    1.06042e-13,    3.08846e-41,    6.72623e-44,    0,    8.96831e-44,    0,    1.12353e-13,    3.08846e-41,    1.12374e-13,    3.08846e-41],\n[8.36674e-15,    3.08846e-41,    2.8026e-45,    0,    1.04335e-13,    3.08846e-41,    -1.94067e-12,    4.57244e-41,    0,    0,    2.70451e-43,    0,    1.19226e-13,    3.08846e-41,    1.1562e-13,    3.08846e-41,    8.69493e-15,    3.08846e-41,    2.8026e-45],\n[3.08846e-41,    3.5593e-43,    0,    1.19227e-13,    3.08846e-41,    0,    0,    3.58732e-43,    3.08846e-41,    1.24188e-13,    3.08846e-41,    1.24188e-13,    3.08846e-41,    1.24189e-13,    3.08846e-41,    1.23496e-13,    3.08846e-41,    1.23552e-13,    3.08846e-41],\n[1.12358e-13,    3.08846e-41,    1.4013e-45,    5.60519e-45,    1.23496e-13,    3.08846e-41,    1.22805e-13,    3.08846e-41,    8.5191e-15,    3.08846e-41,    8.69991e-15,    3.08846e-41,    1.12358e-13,    3.08846e-41,    0,    0,    0,    0,    1.6143e-42],\n[0,    2.46629e-43,    0,    8.56675e-15,    3.08846e-41,    8.67533e-15,    3.08846e-41,    8.53664e-15,    3.08846e-41,    8.83294e-15,    3.08846e-41,    8.51665e-15,    3.08846e-41,    8.69493e-15,    3.08846e-41,    8.56827e-15,    3.08846e-41,    8.56826e-15,    3.08846e-41]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --test-tensor-transform-patterns=\"test-rewrite-extract-slice-from-collapse-shape\" --cse --tosa-infer-shapes --test-func-set-type --control-flow-sink --composite-fixed-point-pass --inline --loop-invariant-subset-hoisting --tosa-make-broadcastable --test-func-erase-arg --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --mem2reg=\"region-simplify\" --sccp --sroa --loop-invariant-code-motion --loop-invariant-code-motion --test-func-insert-arg --tosa-infer-shapes --tosa-make-broadcastable --tosa-test-quant-utils --control-flow-sink --loop-invariant-subset-hoisting --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-layerwise-constant-fold --symbol-dce --test-tensor-copy-insertion=\"must-infer-memory-space\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --test-func-insert-arg --cse --test-function-pass --test-func-erase-result --arith-unsigned-when-equivalent --test-func-insert-arg --test-arith-emulate-wide-int --control-flow-sink --remove-dead-values --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --duplicate-function-elimination --composite-fixed-point-pass --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --remove-dead-values --topological-sort --arith-emulate-wide-int=\"widest-int-supported=32\" --arith-emulate-wide-int | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --test-tensor-transform-patterns=\"test-drop-redundant-insert-slice-rank-expansion\" --duplicate-function-elimination --sroa --canonicalize=\"test-convergence top-down=0\" --sccp --tosa-optional-decompositions | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-math-polynomial-approximation=\"enable-avx2\" --math-uplift-to-fma --topological-sort --linalg-inline-scalar-operands --linalg-fuse-elementwise-ops --topological-sort --linalg-fuse-elementwise-ops --inline --composite-fixed-point-pass --sccp --test-expand-math --arith-unsigned-when-equivalent --test-tensor-transform-patterns=\"test-rewrite-extract-slice-from-collapse-shape\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-generalize-named-ops --convert-elementwise-to-linalg --test-function-pass --arith-expand --test-func-erase-arg --linalg-fuse-elementwise-ops --composite-fixed-point-pass --test-function-pass --memref-expand --int-range-optimizations --resolve-ranked-shaped-type-result-dims --canonicalize=\"test-convergence\" --linalg-generalize-named-ops --test-memref-bound-check --loop-invariant-subset-hoisting --canonicalize=\"test-convergence top-down=0\" --test-linalg-pad-fusion --test-linalg-rank-reduce-contraction-ops --test-func-erase-result --resolve-ranked-shaped-type-result-dims --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-emulate-narrow-int=\"memref-load-bitwidth=32\" --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --composite-fixed-point-pass --test-scf-while-op-builder --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --test-arith-emulate-wide-int --test-scf-for-utils=\"test-replace-with-new-yields\" --test-function-pass --test-scf-for-utils=\"test-replace-with-new-yields\" --symbol-dce --int-range-optimizations --remove-dead-values --arith-expand --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --loop-invariant-subset-hoisting --canonicalize=\"test-convergence top-down=0\" --test-func-erase-arg --symbol-dce --canonicalize=\"test-convergence\" --control-flow-sink --control-flow-sink --sccp --loop-invariant-code-motion --topological-sort --test-func-erase-arg --test-func-erase-result --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --sccp --canonicalize --mem2reg=\"region-simplify\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --test-tensor-transform-patterns=\"test-rewrite-extract-slice-from-collapse-shape\" --test-func-erase-result --test-func-erase-arg --tosa-reduce-transposes --cse --composite-fixed-point-pass --topological-sort --inline --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --test-func-erase-result --test-func-set-type --test-func-set-type --test-function-pass --inline --loop-invariant-subset-hoisting --test-tensor-copy-insertion=\"must-infer-memory-space\" --test-func-erase-arg --control-flow-sink --tosa-make-broadcastable --test-func-set-type --inline --tosa-infer-shapes --test-func-erase-result --tosa-optional-decompositions --inline --test-func-set-type --tosa-optional-decompositions | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --test-function-pass --mem2reg --cse --tosa-infer-shapes --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --duplicate-function-elimination --inline --tosa-test-quant-utils --inline --arith-expand=\"include-bf16\" --test-func-erase-arg --tosa-test-quant-utils --tosa-infer-shapes --arith-emulate-wide-int --tosa-reduce-transposes --sroa --arith-emulate-wide-int=\"widest-int-supported=32\" --control-flow-sink --sccp --test-func-erase-result --test-func-insert-result --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse --duplicate-function-elimination --inline --test-arith-emulate-wide-int --mem2reg=\"region-simplify\" --sroa --int-range-optimizations --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --arith-expand=\"include-bf16\" --test-arith-emulate-wide-int --test-tensor-transform-patterns=\"test-rewrite-extract-slice-from-collapse-shape\" --test-function-pass --remove-dead-values --arith-unsigned-when-equivalent --canonicalize --sroa --tosa-test-quant-utils --test-func-erase-result --tosa-reduce-transposes | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-data-layout-propagation --symbol-dce --memref-emulate-wide-int --test-func-set-type --test-linalg-drop-unit-dims --topological-sort --arith-emulate-wide-int --test-math-polynomial-approximation=\"enable-avx2\" --arith-unsigned-when-equivalent --memref-expand --test-linalg-drop-unit-dims --test-func-set-type --math-extend-to-supported-types --expand-strided-metadata --linalg-generalize-named-ops --composite-fixed-point-pass --symbol-dce --int-range-optimizations --test-linalg-rank-reduce-contraction-ops --linalg-fuse-elementwise-ops --cse --canonicalize=\"test-convergence top-down=0\" --test-function-pass --math-extend-to-supported-types --linalg-inline-scalar-operands --sccp --test-func-insert-result --mem2reg --control-flow-sink --arith-unsigned-when-equivalent --test-math-algebraic-simplification --composite-fixed-point-pass --linalg-generalize-named-ops --symbol-dce --canonicalize=\"test-convergence\" --test-memref-bound-check --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sroa --inline --memref-emulate-wide-int --test-linalg-transform-patterns=\"test-winograd-conv2d\" --test-func-set-type --test-math-algebraic-simplification --linalg-fuse-elementwise-ops --test-linalg-greedy-fusion --canonicalize=\"test-convergence top-down=0\" --test-linalg-decompose-ops --test-math-to-vcix --expand-realloc=\"emit-deallocs\" --test-memref-dependence-check --linalg-inline-scalar-operands --expand-strided-metadata --test-math-polynomial-approximation=\"enable-avx2\" --convert-elementwise-to-linalg --fold-memref-alias-ops --linalg-fold-unit-extent-dims --test-linalg-elementwise-fusion-patterns=\"fuse-generic-ops-control\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-data-layout-propagation --canonicalize --test-linalg-pad-fusion --duplicate-function-elimination --test-linalg-drop-unit-dims --linalg-generalize-named-ops --canonicalize=\"test-convergence top-down=0\" --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --resolve-shaped-type-result-dims --memref-expand --fold-memref-alias-ops --sroa --test-func-erase-result --duplicate-function-elimination --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg --duplicate-function-elimination --duplicate-function-elimination --loop-invariant-subset-hoisting --symbol-dce --composite-fixed-point-pass --symbol-dce --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize --symbol-dce --test-func-set-type --arith-emulate-wide-int=\"widest-int-supported=32\" --canonicalize=\"test-convergence\" --cse --test-func-insert-result --test-arith-emulate-wide-int --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --mem2reg=\"region-simplify\" --test-func-erase-arg --cse --mem2reg=\"region-simplify\" --loop-invariant-subset-hoisting --test-func-erase-result --test-function-pass --sroa --sroa --remove-dead-values --symbol-dce --sccp --test-func-erase-arg --symbol-dce --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --tosa-optional-decompositions | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-unsupported-floats --symbol-dce --test-linalg-transform-patterns=\"test-vector-transfer-forwarding-patterns\" --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --linalg-inline-scalar-operands --linalg-inline-scalar-operands --math-extend-to-supported-types --test-function-pass --test-func-erase-arg --test-func-erase-arg --test-linalg-pad-fusion --test-linalg-decompose-ops --test-expand-math --test-linalg-rank-reduce-contraction-ops --test-math-to-vcix --tosa-make-broadcastable --test-arith-emulate-wide-int --test-func-erase-result --test-func-set-type --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --expand-strided-metadata --test-math-polynomial-approximation --expand-strided-metadata --sccp --linalg-generalize-named-ops --linalg-fuse-elementwise-ops --resolve-shaped-type-result-dims --arith-expand=\"include-bf16\" --composite-fixed-point-pass --test-linalg-pad-fusion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-math-polynomial-approximation=\"enable-avx2\" --symbol-dce --test-linalg-greedy-fusion --test-linalg-data-layout-propagation --cse --sccp --test-func-set-type --topological-sort --test-func-set-type --math-extend-to-supported-types --duplicate-function-elimination --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-collapsing-control\" --math-extend-to-supported-types --linalg-specialize-generic-ops --test-linalg-transform-patterns=\"test-patterns\" --test-func-insert-result --test-math-polynomial-approximation=\"enable-avx2\" --test-linalg-elementwise-fusion-patterns=\"collapse-dimensions-control=2,3\" --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --convert-elementwise-to-linalg --linalg-fuse-elementwise-ops --linalg-generalize-named-ops --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-result --remove-dead-values --sroa --remove-dead-values --test-func-insert-result --test-func-set-type --arith-expand --loop-invariant-code-motion --symbol-dce --test-scf-pipelining --test-func-insert-arg --scf-parallel-loop-specialization --scf-forall-to-parallel --scf-forall-to-parallel --scf-for-loop-peeling=\"peel-front\" --scf-for-loop-peeling --composite-fixed-point-pass --test-arith-emulate-wide-int --scf-parallel-loop-specialization --scf-for-loop-range-folding --symbol-dce --test-func-insert-result --topological-sort --composite-fixed-point-pass --test-func-erase-arg --duplicate-function-elimination --canonicalize --cse --control-flow-sink --test-func-set-type --scf-for-loop-range-folding --test-scf-uplift-while-to-for --test-scf-for-utils --test-arith-emulate-wide-int --loop-invariant-subset-hoisting --symbol-dce --remove-dead-values --arith-expand --test-func-set-type --scf-parallel-loop-tiling --loop-invariant-subset-hoisting --topological-sort --scf-parallel-loop-fusion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-arith-emulate-wide-int=\"widest-int-supported=8\" --mem2reg=\"region-simplify\" --topological-sort --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse --control-flow-sink --test-func-set-type --test-func-insert-arg --sccp --test-func-insert-arg --symbol-dce --sccp --loop-invariant-subset-hoisting --test-func-insert-arg --loop-invariant-subset-hoisting --loop-invariant-code-motion --test-func-set-type --test-func-erase-result --sroa --test-func-erase-arg --remove-dead-values --symbol-dce --symbol-dce --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --test-func-erase-result --test-func-insert-result --test-tensor-copy-insertion=\"must-infer-memory-space\" --tosa-infer-shapes --loop-invariant-code-motion --canonicalize=\"test-convergence\" --tosa-infer-shapes --fold-tensor-subset-ops --remove-dead-values --sroa --fold-tensor-subset-ops --tosa-layerwise-constant-fold --test-func-insert-arg --fold-tensor-subset-ops --test-func-erase-arg --sroa --remove-dead-values --tosa-make-broadcastable --remove-dead-values --tosa-reduce-transposes | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --duplicate-function-elimination --control-flow-sink --tosa-optional-decompositions --test-func-insert-arg --symbol-dce --test-func-erase-arg --tosa-test-quant-utils --symbol-dce --test-func-insert-result --topological-sort --composite-fixed-point-pass --fold-tensor-subset-ops --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-unsigned-when-equivalent --loop-invariant-code-motion --arith-expand --math-uplift-to-fma --linalg-inline-scalar-operands --test-math-to-vcix --convert-elementwise-to-linalg --tosa-make-broadcastable --test-arith-emulate-wide-int=\"widest-int-supported=8\" --fold-tensor-subset-ops --composite-fixed-point-pass --test-linalg-drop-unit-dims --test-math-polynomial-approximation=\"enable-avx2\" --linalg-specialize-generic-ops --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --arith-emulate-wide-int --test-func-insert-arg --test-expand-math --tosa-test-quant-utils --test-linalg-rank-reduce-contraction-ops --symbol-dce --test-tensor-transform-patterns=\"test-drop-redundant-insert-slice-rank-expansion\" --math-uplift-to-fma --linalg-generalize-named-ops --sroa --math-uplift-to-fma --mem2reg --linalg-fuse-elementwise-ops --linalg-inline-scalar-operands --sccp --test-linalg-rank-reduce-contraction-ops --test-math-polynomial-approximation=\"enable-avx2\" --duplicate-function-elimination --tosa-reduce-transposes --loop-invariant-code-motion --tosa-validate --linalg-named-op-conversion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --scf-for-loop-canonicalization --test-arith-emulate-wide-int --test-memref-bound-check --symbol-dce --symbol-dce --scf-parallel-loop-fusion --test-func-erase-result --memref-expand --memref-emulate-wide-int=\"widest-int-supported=32\" --duplicate-function-elimination --scf-for-loop-range-folding --test-func-insert-result --remove-dead-values --scf-for-to-while | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse --remove-dead-values --sccp --canonicalize --test-function-pass --topological-sort --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --resolve-shaped-type-result-dims --duplicate-function-elimination --test-func-insert-arg --fold-memref-alias-ops --loop-invariant-subset-hoisting --memref-emulate-wide-int --loop-invariant-code-motion --fold-memref-alias-ops --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --cse --test-func-erase-arg --symbol-dce --cse --mem2reg=\"region-simplify\" --test-function-pass --sccp --test-func-erase-result --test-func-insert-arg --composite-fixed-point-pass --loop-invariant-code-motion --loop-invariant-subset-hoisting --composite-fixed-point-pass --test-func-erase-arg --test-func-erase-result --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --symbol-dce --topological-sort --remove-dead-values --tosa-infer-shapes --test-tensor-transform-patterns=\"test-fold-constant-extract-slice\" --tosa-test-quant-utils --sccp --composite-fixed-point-pass --sccp --sccp --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-math-algebraic-simplification --control-flow-sink --test-function-pass --test-function-pass --arith-int-range-narrowing --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-math-to-vcix --test-linalg-pad-fusion --test-func-insert-arg --fold-tensor-subset-ops --sroa --inline --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-collapsing\" --canonicalize --test-func-erase-result --test-linalg-transform-patterns=\"test-erase-unused-operands-and-results\" --test-arith-emulate-wide-int --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-collapsing-control\" --test-tensor-transform-patterns=\"use-foreach\" --linalg-generalize-named-ops --test-expand-math --arith-unsigned-when-equivalent --test-tensor-copy-insertion --test-math-polynomial-approximation=\"enable-avx2\" --arith-int-range-narrowing --test-linalg-pad-fusion --int-range-optimizations --tosa-optional-decompositions --test-linalg-data-layout-propagation --linalg-specialize-generic-ops --test-math-to-vcix --linalg-specialize-generic-ops --inline --arith-unsigned-when-equivalent --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --test-function-pass --sccp --tosa-optional-decompositions --tosa-test-quant-utils --test-linalg-elementwise-fusion-patterns=\"fuse-generic-ops-control\" --fold-tensor-subset-ops --linalg-fold-unit-extent-dims --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --test-linalg-drop-unit-dims --control-flow-sink --test-linalg-drop-unit-dims --linalg-generalize-named-ops --tosa-test-quant-utils --duplicate-function-elimination --cse --inline --canonicalize=\"test-convergence\" --linalg-generalize-named-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize --topological-sort --inline --linalg-named-op-conversion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --memref-expand --test-scf-for-utils=\"test-replace-with-new-yields\" --control-flow-sink --resolve-ranked-shaped-type-result-dims --scf-for-to-while --scf-forall-to-parallel | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --symbol-dce --resolve-shaped-type-result-dims --test-function-pass --test-func-erase-arg --resolve-shaped-type-result-dims --control-flow-sink --expand-strided-metadata --loop-invariant-subset-hoisting --memref-emulate-wide-int --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --loop-invariant-code-motion --remove-dead-values --memref-emulate-wide-int --symbol-dce --canonicalize=\"test-convergence top-down=0\" --composite-fixed-point-pass --loop-invariant-code-motion --test-func-erase-arg --resolve-shaped-type-result-dims --normalize-memrefs --test-function-pass --resolve-ranked-shaped-type-result-dims --sccp --test-func-insert-arg --loop-invariant-code-motion --test-func-erase-arg --sroa --expand-realloc --duplicate-function-elimination --mem2reg --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --loop-invariant-subset-hoisting --composite-fixed-point-pass --sccp --mem2reg --sccp --topological-sort --inline --topological-sort --loop-invariant-code-motion --cse --cse --test-function-pass --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --tosa-layerwise-constant-fold --test-func-insert-result --tosa-infer-shapes --loop-invariant-subset-hoisting --canonicalize=\"test-convergence top-down=0\" --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --topological-sort --topological-sort --loop-invariant-subset-hoisting --test-function-pass --tosa-test-quant-utils --loop-invariant-code-motion --fold-tensor-subset-ops --tosa-validate --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --test-expand-math --sccp --test-math-polynomial-approximation --test-linalg-pad-fusion --test-math-polynomial-approximation=\"enable-avx2\" --test-linalg-greedy-fusion --loop-invariant-code-motion --test-func-erase-arg --canonicalize=\"test-convergence top-down=0\" --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --test-expand-math --test-arith-emulate-wide-int --test-func-insert-arg --test-linalg-pad-fusion --loop-invariant-code-motion --test-func-erase-result --test-math-to-vcix --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-collapsing-control\" --test-tensor-transform-patterns=\"test-reassociative-reshape-folding\" --test-func-insert-arg --tosa-make-broadcastable --test-linalg-pad-fusion --loop-invariant-subset-hoisting --mem2reg --tosa-test-quant-utils --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --linalg-fuse-elementwise-ops --linalg-named-op-conversion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --memref-expand --control-flow-sink --scf-parallel-loop-fusion --scf-for-loop-specialization --cse --arith-expand=\"include-bf16\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-parallel-loop-specialization --scf-forall-to-for --fold-memref-alias-ops --expand-realloc --sccp --test-func-erase-result --fold-memref-alias-ops --memref-expand --memref-expand --test-scf-pipelining=\"no-epilogue-peeling\" --test-scf-while-op-builder --test-func-set-type --scf-parallel-loop-fusion --symbol-dce --test-memref-dependence-check --mem2reg=\"region-simplify\" --cse --expand-realloc | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-scf-if-utils --scf-for-loop-peeling=\"skip-partial\" --scf-parallel-loop-specialization --cse --test-func-insert-arg --scf-for-to-while --loop-invariant-code-motion --scf-for-loop-specialization --test-func-insert-arg --test-scf-uplift-while-to-for --sccp --test-scf-uplift-while-to-for --scf-for-loop-specialization --test-scf-pipelining --scf-parallel-loop-fusion --scf-parallel-loop-fusion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --mem2reg --cse --composite-fixed-point-pass --duplicate-function-elimination --mem2reg --inline --test-function-pass --test-func-insert-arg --composite-fixed-point-pass --canonicalize=\"test-convergence top-down=0\" --duplicate-function-elimination --loop-invariant-code-motion --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --duplicate-function-elimination --test-func-insert-result --test-func-insert-result --test-func-erase-arg --cse --int-range-optimizations --test-func-set-type --loop-invariant-code-motion --sccp --composite-fixed-point-pass --arith-unsigned-when-equivalent --mem2reg=\"region-simplify\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --inline --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --remove-dead-values --mem2reg=\"region-simplify\" --mem2reg --topological-sort --inline --mem2reg --composite-fixed-point-pass --mem2reg --composite-fixed-point-pass --test-func-erase-arg --cse --sccp --inline --test-func-erase-result --test-func-insert-arg --topological-sort --loop-invariant-code-motion --control-flow-sink --test-func-erase-result --test-func-insert-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --test-func-erase-arg --tosa-reduce-transposes --control-flow-sink --inline --sroa --composite-fixed-point-pass --loop-invariant-code-motion --test-func-set-type --tosa-layerwise-constant-fold | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-test-quant-utils --test-math-polynomial-approximation --test-linalg-drop-unit-dims --test-tensor-transform-patterns=\"test-reassociative-reshape-folding\" --tosa-infer-shapes --convert-elementwise-to-linalg --test-linalg-drop-unit-dims --test-linalg-elementwise-fusion-patterns=\"fuse-generic-ops-control\" --control-flow-sink --fold-tensor-subset-ops --test-math-to-vcix --linalg-fuse-elementwise-ops --test-function-pass --loop-invariant-subset-hoisting --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-generalize-named-ops --fold-memref-alias-ops --memref-expand --test-linalg-rank-reduce-contraction-ops --mem2reg --test-func-erase-result --math-extend-to-supported-types | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --math-uplift-to-fma --test-linalg-greedy-fusion --test-math-algebraic-simplification --linalg-specialize-generic-ops --convert-elementwise-to-linalg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-emulate-narrow-int=\"memref-load-bitwidth=8\" --test-func-erase-result --test-math-to-vcix --expand-strided-metadata --scf-forall-to-parallel --test-expand-math --test-scf-uplift-while-to-for --expand-realloc --test-func-erase-result --scf-for-loop-range-folding --test-scf-if-utils --test-function-pass --test-func-set-type --fold-memref-alias-ops --loop-invariant-code-motion --canonicalize --arith-expand --test-math-algebraic-simplification --expand-strided-metadata --expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --expand-strided-metadata --test-math-to-vcix --test-memref-bound-check --scf-parallel-loop-fusion --math-uplift-to-fma --math-uplift-to-fma --memref-emulate-wide-int=\"widest-int-supported=32\" --scf-parallel-loop-fusion --mem2reg --test-scf-while-op-builder --loop-invariant-subset-hoisting --scf-parallel-loop-specialization --normalize-memrefs --test-func-insert-result --test-scf-while-op-builder --loop-invariant-subset-hoisting --composite-fixed-point-pass --composite-fixed-point-pass --test-math-algebraic-simplification | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-math-polynomial-approximation=\"enable-avx2\" --composite-fixed-point-pass --topological-sort --control-flow-sink --canonicalize=\"test-convergence top-down=0\" --cse --topological-sort --topological-sort --test-func-set-type --loop-invariant-code-motion --test-math-polynomial-approximation --duplicate-function-elimination --topological-sort --mem2reg --sccp --symbol-dce --control-flow-sink --test-math-algebraic-simplification --math-uplift-to-fma --test-func-erase-result --test-func-insert-arg --loop-invariant-code-motion --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --control-flow-sink --test-expand-math --test-function-pass --test-func-set-type --math-uplift-to-fma --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse --test-func-erase-arg --test-func-insert-result --test-func-erase-arg --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-for-loop-range-folding --test-func-insert-result --tosa-make-broadcastable --arith-int-range-narrowing --tosa-infer-shapes --test-linalg-greedy-fusion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-tensor-transform-patterns=\"test-fold-consecutive-insert-extract-slice\" --linalg-generalize-named-ops --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --control-flow-sink --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --sccp --tosa-optional-decompositions --linalg-generalize-named-ops --test-linalg-transform-patterns=\"test-swap-extract-slice-with-fill-pattern\" --test-linalg-pad-fusion --tosa-layerwise-constant-fold --convert-elementwise-to-linalg --test-expand-math --control-flow-sink --composite-fixed-point-pass --test-math-polynomial-approximation=\"enable-avx2\" --loop-invariant-code-motion --tosa-make-broadcastable --linalg-generalize-named-ops --linalg-named-op-conversion --math-extend-to-supported-types --test-math-algebraic-simplification --tosa-make-broadcastable --topological-sort --convert-elementwise-to-linalg --linalg-fuse-elementwise-ops --test-func-set-type --test-linalg-data-layout-propagation --test-linalg-transform-patterns --tosa-optional-decompositions --test-linalg-drop-unit-dims --test-linalg-rank-reduce-contraction-ops --linalg-specialize-generic-ops --test-func-erase-result --test-linalg-greedy-fusion --linalg-inline-scalar-operands --test-math-polynomial-approximation=\"enable-avx2\" --symbol-dce --test-function-pass --test-func-insert-arg --duplicate-function-elimination --math-extend-to-supported-types --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --test-func-insert-result --composite-fixed-point-pass --convert-elementwise-to-linalg --test-linalg-data-layout-propagation --test-linalg-decompose-ops --math-extend-to-supported-types | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg=\"region-simplify\" --scf-for-loop-range-folding --scf-parallel-loop-fusion --memref-expand --fold-memref-alias-ops --test-memref-bound-check --loop-invariant-code-motion --test-memref-dependence-check --resolve-shaped-type-result-dims --test-memref-bound-check --test-func-insert-arg --scf-parallel-loop-fusion --test-memref-dependence-check --expand-realloc=\"emit-deallocs\" --arith-expand --arith-expand=\"include-bf16\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-scf-uplift-while-to-for --test-scf-while-op-builder --mem2reg --scf-forall-to-for --scf-for-loop-range-folding --test-scf-if-utils --test-scf-for-utils=\"test-replace-with-new-yields\" --sroa --remove-dead-values --scf-for-loop-range-folding --arith-emulate-wide-int=\"widest-int-supported=32\" --scf-for-loop-peeling=\"peel-front\" --test-scf-while-op-builder --scf-for-loop-canonicalization --canonicalize=\"test-convergence\" --sroa --test-func-insert-result --arith-expand=\"include-bf16\" --scf-for-loop-canonicalization --sroa --scf-parallel-loop-specialization --test-func-erase-result --mem2reg=\"region-simplify\" --loop-invariant-subset-hoisting --arith-expand --test-scf-pipelining=\"annotate\" --test-scf-uplift-while-to-for --topological-sort --sroa --scf-for-loop-peeling=\"skip-partial\" --test-scf-while-op-builder --canonicalize=\"test-convergence top-down=0\" --scf-forall-to-for --remove-dead-values --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --scf-for-loop-specialization --cse --cse --test-arith-emulate-wide-int --test-scf-pipelining=\"annotate\" --loop-invariant-code-motion --test-scf-while-op-builder | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --remove-dead-values --mem2reg=\"region-simplify\" --composite-fixed-point-pass --test-func-insert-result --remove-dead-values --mem2reg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --sccp --tosa-test-quant-utils --topological-sort --topological-sort --tosa-optional-decompositions | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-test-quant-utils --tosa-validate --remove-dead-values --mem2reg=\"region-simplify\" --arith-unsigned-when-equivalent --tosa-reduce-transposes --test-func-insert-arg --arith-expand=\"include-bf16\" --test-func-set-type --tosa-infer-shapes --tosa-make-broadcastable --loop-invariant-code-motion --topological-sort --canonicalize --inline --duplicate-function-elimination --symbol-dce --cse --cse --test-arith-emulate-wide-int=\"widest-int-supported=8\" --fold-tensor-subset-ops --tosa-infer-shapes --remove-dead-values --inline --test-arith-emulate-wide-int --sroa --arith-int-range-narrowing --topological-sort --tosa-reduce-transposes --topological-sort --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --cse --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-fuse-elementwise-ops --linalg-inline-scalar-operands --expand-strided-metadata --expand-strided-metadata --cse --test-linalg-drop-unit-dims --convert-elementwise-to-linalg --test-func-set-type --inline --test-linalg-rank-reduce-contraction-ops --fold-memref-alias-ops --test-linalg-elementwise-fusion-patterns=\"collapse-dimensions-control=2,3\" --canonicalize=\"test-convergence\" --inline --memref-emulate-wide-int --cse --test-linalg-drop-unit-dims --canonicalize --arith-unsigned-when-equivalent --composite-fixed-point-pass --linalg-fuse-elementwise-ops --fold-memref-alias-ops --symbol-dce --cse --test-math-polynomial-approximation --symbol-dce --test-func-erase-arg --test-linalg-data-layout-propagation --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --topological-sort --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-collapsing\" --symbol-dce --test-math-to-vcix --duplicate-function-elimination --sccp --test-arith-emulate-wide-int=\"widest-int-supported=8\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --fold-memref-alias-ops --sccp --test-scf-pipelining=\"annotate\" --test-scf-while-op-builder --test-scf-while-op-builder --test-math-to-vcix --test-function-pass --test-function-pass --scf-for-loop-canonicalization --test-func-erase-arg --inline --test-memref-dependence-check --resolve-shaped-type-result-dims --symbol-dce --scf-forall-to-parallel --test-memref-dependence-check --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --affine-pipeline-data-transfer --test-func-erase-result --test-math-algebraic-simplification --loop-invariant-code-motion --test-func-set-type --test-function-pass --cse --affine-simplify-structures --cse --test-memref-bound-check --remove-dead-values --canonicalize=\"test-convergence top-down=0\" --affine-super-vectorizer-test=\"vectorize-affine-loop-nest\" --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-expand=\"include-bf16\" --int-range-optimizations --mem2reg=\"region-simplify\" --symbol-dce --arith-emulate-wide-int --test-func-insert-result --remove-dead-values --sccp --composite-fixed-point-pass --control-flow-sink --control-flow-sink --loop-invariant-subset-hoisting --cse --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --sroa --int-range-optimizations --loop-invariant-code-motion --test-func-insert-arg --test-function-pass --int-range-optimizations --inline --test-func-erase-result --mem2reg=\"region-simplify\" --test-func-erase-result --test-arith-emulate-wide-int=\"widest-int-supported=8\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-result --loop-invariant-code-motion --loop-invariant-subset-hoisting --symbol-dce --duplicate-function-elimination --loop-invariant-code-motion --control-flow-sink --inline --loop-invariant-code-motion --cse --remove-dead-values --test-function-pass --test-func-erase-arg --sccp --test-function-pass --composite-fixed-point-pass --duplicate-function-elimination --remove-dead-values | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-optional-decompositions --tosa-infer-shapes --tosa-make-broadcastable --mem2reg --tosa-test-quant-utils --test-func-erase-result --tosa-validate --arith-expand --arith-unsigned-when-equivalent --symbol-dce --composite-fixed-point-pass --test-func-insert-result --symbol-dce --arith-emulate-wide-int=\"widest-int-supported=32\" --test-func-erase-arg --cse --control-flow-sink --mem2reg=\"region-simplify\" --composite-fixed-point-pass --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --composite-fixed-point-pass --test-linalg-pad-fusion --test-math-to-vcix --test-linalg-rank-reduce-contraction-ops --arith-unsigned-when-equivalent --arith-emulate-unsupported-floats --test-linalg-rank-reduce-contraction-ops --arith-unsigned-when-equivalent --linalg-inline-scalar-operands --symbol-dce --test-linalg-rank-reduce-contraction-ops --test-linalg-greedy-fusion --test-func-erase-result --linalg-named-op-conversion --convert-elementwise-to-linalg --test-tensor-transform-patterns --test-linalg-data-layout-propagation --test-function-pass --linalg-fold-unit-extent-dims --test-math-algebraic-simplification --sroa --test-emulate-narrow-int=\"memref-load-bitwidth=8\" --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-linalg-data-layout-propagation --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --linalg-generalize-named-ops --inline --test-expand-math --test-linalg-data-layout-propagation --linalg-inline-scalar-operands --test-tensor-copy-insertion=\"must-infer-memory-space\" --test-math-polynomial-approximation --math-uplift-to-fma --cse --test-linalg-drop-unit-dims --test-math-to-vcix --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --scf-for-to-while --remove-dead-values --test-func-set-type --remove-dead-values --loop-invariant-subset-hoisting --test-function-pass --scf-forall-to-parallel --control-flow-sink --scf-forall-to-parallel --scf-for-loop-peeling=\"peel-front\" --scf-forall-to-parallel --test-scf-for-utils --scf-forall-to-for --loop-invariant-subset-hoisting --scf-parallel-loop-fusion --sccp --scf-for-loop-range-folding --loop-invariant-subset-hoisting --test-func-insert-arg --scf-parallel-loop-specialization | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --int-range-optimizations --mem2reg --control-flow-sink --loop-invariant-code-motion --arith-int-range-narrowing --test-func-insert-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --loop-invariant-code-motion --composite-fixed-point-pass --symbol-dce --loop-invariant-code-motion --test-func-insert-result --composite-fixed-point-pass --cse --test-func-erase-arg --test-func-erase-result --composite-fixed-point-pass --test-func-erase-result --composite-fixed-point-pass --test-func-erase-result --test-func-erase-result --mem2reg=\"region-simplify\" --canonicalize=\"test-convergence top-down=0\" --test-func-insert-result --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --test-func-set-type --loop-invariant-code-motion --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --duplicate-function-elimination --sccp --topological-sort --topological-sort --test-func-insert-result --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-greedy-fusion --tosa-test-quant-utils --tosa-infer-shapes | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-decompose-ops --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-collapsing-control\" --test-expand-math --convert-elementwise-to-linalg --math-uplift-to-fma --sroa --test-linalg-greedy-fusion --test-linalg-data-layout-propagation --test-math-to-vcix --test-linalg-data-layout-propagation --test-linalg-elementwise-fusion-patterns --linalg-inline-scalar-operands --test-math-algebraic-simplification --math-extend-to-supported-types --test-linalg-greedy-fusion --convert-elementwise-to-linalg --fold-tensor-subset-ops --sccp --test-func-insert-arg --linalg-specialize-generic-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-rank-reduce-contraction-ops --fold-memref-alias-ops --int-range-optimizations --test-func-insert-result --linalg-inline-scalar-operands --convert-elementwise-to-linalg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-parallel-loop-tiling=\"parallel-loop-tile-sizes=1,4 no-min-max-bounds=true\" --resolve-shaped-type-result-dims --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --arith-emulate-unsupported-floats --symbol-dce --resolve-ranked-shaped-type-result-dims --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-result --sccp --test-func-set-type --normalize-memrefs --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-expand-math --normalize-memrefs --sroa --test-math-to-vcix --sroa --test-func-erase-result --test-func-insert-arg --math-uplift-to-fma --loop-invariant-subset-hoisting --test-math-polynomial-approximation=\"enable-avx2\" --test-math-to-vcix --arith-expand=\"include-bf16\" --cse --test-function-pass --fold-memref-alias-ops --test-math-to-vcix --test-expand-math --sroa --arith-emulate-wide-int=\"widest-int-supported=32\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-memref-bound-check --canonicalize=\"test-convergence\" --mem2reg=\"region-simplify\" --sroa --math-uplift-to-fma --sccp --memref-emulate-wide-int=\"widest-int-supported=32\" --mem2reg=\"region-simplify\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --remove-dead-values --remove-dead-values --topological-sort --remove-dead-values --math-extend-to-supported-types --cse --test-func-insert-arg --composite-fixed-point-pass --control-flow-sink --mem2reg --sroa --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --test-func-erase-result --test-func-erase-arg --test-func-erase-result --test-func-insert-result --test-func-insert-arg --test-func-erase-result --topological-sort --topological-sort --inline --cse --sroa --topological-sort --loop-invariant-code-motion --sccp --loop-invariant-subset-hoisting --test-func-insert-arg --sccp --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --test-func-set-type --test-func-insert-arg --test-func-insert-result --test-func-insert-arg --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --test-func-set-type --topological-sort --test-function-pass --control-flow-sink --sccp --tosa-layerwise-constant-fold --test-func-erase-arg --remove-dead-values --mem2reg --tosa-reduce-transposes --tosa-infer-shapes --loop-invariant-subset-hoisting --canonicalize=\"test-convergence\" --tosa-reduce-transposes --test-func-erase-result --loop-invariant-subset-hoisting --duplicate-function-elimination --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-result --remove-dead-values --duplicate-function-elimination --test-function-pass --tosa-validate --test-func-set-type --fold-tensor-subset-ops --test-func-insert-result --mem2reg --test-func-insert-result --canonicalize=\"test-convergence\" --test-func-erase-arg --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize=\"test-convergence\" --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --duplicate-function-elimination --fold-tensor-subset-ops --linalg-generalize-named-ops --topological-sort --symbol-dce --duplicate-function-elimination --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --test-func-insert-result --test-math-polynomial-approximation=\"enable-avx2\" --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-collapsing-control\" --linalg-specialize-generic-ops --int-range-optimizations --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse --inline --mem2reg=\"region-simplify\" --linalg-fold-unit-extent-dims --fold-tensor-subset-ops --arith-emulate-wide-int --composite-fixed-point-pass --mem2reg --test-func-set-type --fold-tensor-subset-ops --test-func-insert-arg --loop-invariant-code-motion --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --linalg-inline-scalar-operands --test-func-erase-result --inline --convert-elementwise-to-linalg --control-flow-sink --test-linalg-greedy-fusion --arith-unsigned-when-equivalent --math-uplift-to-fma --test-linalg-data-layout-propagation --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --test-func-insert-arg --topological-sort --test-linalg-elementwise-fusion-patterns=\"collapse-dimensions-control=2,3\" --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --mem2reg --math-uplift-to-fma --arith-emulate-unsupported-floats --math-extend-to-supported-types --arith-expand --cse --sroa --math-extend-to-supported-types --duplicate-function-elimination --test-linalg-pad-fusion --linalg-generalize-named-ops --arith-unsigned-when-equivalent --control-flow-sink --test-func-insert-result --loop-invariant-subset-hoisting --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-inline-scalar-operands --expand-realloc --test-func-erase-result --linalg-specialize-generic-ops --test-linalg-transform-patterns=\"test-vector-transfer-forwarding-patterns\" --fold-memref-alias-ops --canonicalize --linalg-generalize-named-ops --test-linalg-data-layout-propagation --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg --linalg-inline-scalar-operands --test-linalg-data-layout-propagation --convert-elementwise-to-linalg --resolve-ranked-shaped-type-result-dims --test-func-insert-arg --symbol-dce --topological-sort --sccp --linalg-fold-unit-extent-dims --linalg-named-op-conversion --fold-memref-alias-ops --resolve-ranked-shaped-type-result-dims --loop-invariant-subset-hoisting --test-linalg-data-layout-propagation --loop-invariant-code-motion --test-func-insert-result --sroa --resolve-shaped-type-result-dims --linalg-named-op-conversion --test-func-set-type --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --test-linalg-pad-fusion --inline --inline --sccp --memref-emulate-wide-int --fold-memref-alias-ops --inline --test-linalg-rank-reduce-contraction-ops --test-linalg-rank-reduce-contraction-ops --mem2reg --cse --symbol-dce --sroa --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-for-loop-specialization --scf-for-loop-specialization --topological-sort --test-scf-while-op-builder --scf-forall-to-for --composite-fixed-point-pass --scf-for-loop-canonicalization --test-func-insert-result --scf-for-loop-peeling=\"peel-front\" --symbol-dce --test-scf-uplift-while-to-for --topological-sort --test-func-set-type --scf-for-loop-canonicalization --sroa --scf-for-loop-canonicalization --test-func-erase-result --scf-parallel-loop-fusion --mem2reg=\"region-simplify\" --scf-parallel-loop-fusion --test-scf-uplift-while-to-for --inline --loop-invariant-code-motion --duplicate-function-elimination --scf-for-to-while --scf-forall-to-parallel --scf-for-loop-canonicalization --scf-parallel-loop-specialization --remove-dead-values --scf-parallel-loop-specialization --scf-for-to-while | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-arg --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --sccp --loop-invariant-code-motion --inline --canonicalize=\"test-convergence top-down=0\" --test-func-set-type --remove-dead-values --test-func-set-type --cse --test-func-erase-result --topological-sort --cse --test-func-erase-result --sccp --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --composite-fixed-point-pass --test-function-pass --symbol-dce --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --tosa-test-quant-utils --test-function-pass --topological-sort --loop-invariant-code-motion --test-func-set-type --tosa-make-broadcastable --test-func-set-type --test-tensor-transform-patterns --loop-invariant-code-motion --test-func-insert-arg --tosa-optional-decompositions --loop-invariant-subset-hoisting --symbol-dce --test-func-insert-arg --topological-sort --tosa-test-quant-utils --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --tosa-optional-decompositions --test-func-set-type --tosa-test-quant-utils --test-math-polynomial-approximation=\"enable-avx2\" --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --test-function-pass --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --test-linalg-data-layout-propagation --test-func-insert-arg --duplicate-function-elimination --test-function-pass --test-linalg-pad-fusion --test-func-insert-result --test-tensor-copy-insertion --math-extend-to-supported-types --test-func-erase-arg --test-math-polynomial-approximation=\"enable-avx2\" --test-linalg-drop-unit-dims --test-func-insert-arg --test-function-pass --sccp --sroa --sccp --composite-fixed-point-pass --test-tensor-transform-patterns=\"test-fold-constant-extract-slice\" --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --memref-expand --test-memref-dependence-check --test-func-insert-arg --test-math-polynomial-approximation --fold-memref-alias-ops --test-linalg-pad-fusion --expand-strided-metadata --loop-invariant-code-motion --expand-strided-metadata --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --inline --linalg-generalize-named-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --loop-invariant-code-motion --test-function-pass --sroa --test-func-insert-arg --sroa --loop-invariant-subset-hoisting --composite-fixed-point-pass --test-func-insert-arg --cse --test-func-insert-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-result --loop-invariant-code-motion --control-flow-sink --sroa --inline --loop-invariant-code-motion --canonicalize --test-function-pass --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --fold-tensor-subset-ops --canonicalize=\"test-convergence\" --tosa-make-broadcastable --tosa-layerwise-constant-fold --tosa-test-quant-utils --test-func-insert-arg --tosa-infer-shapes --cse --symbol-dce --mem2reg --tosa-validate | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --test-math-polynomial-approximation --linalg-fold-unit-extent-dims --test-func-erase-result --tosa-test-quant-utils --control-flow-sink --math-uplift-to-fma --test-linalg-decompose-ops --test-func-set-type --linalg-generalize-named-ops --mem2reg=\"region-simplify\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-pad-fusion --mem2reg --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --test-func-erase-result --test-linalg-greedy-fusion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --test-func-erase-result --normalize-memrefs | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sroa --loop-invariant-code-motion --test-func-erase-result --test-function-pass --mem2reg --test-func-insert-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --test-func-set-type --test-function-pass --fold-tensor-subset-ops --inline --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --test-func-erase-result --remove-dead-values --canonicalize=\"test-convergence\" --test-func-set-type --mem2reg=\"region-simplify\" --tosa-reduce-transposes --inline --sccp --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --math-extend-to-supported-types --convert-elementwise-to-linalg --loop-invariant-code-motion --test-math-polynomial-approximation=\"enable-avx2\" --test-func-insert-result --tosa-make-broadcastable --test-linalg-greedy-fusion --inline --convert-elementwise-to-linalg --tosa-make-broadcastable --test-expand-math --test-math-algebraic-simplification --test-tensor-transform-patterns=\"test-rewrite-extract-slice-from-collapse-shape\" --test-linalg-greedy-fusion --test-linalg-pad-fusion --tosa-optional-decompositions --test-linalg-transform-patterns=\"test-bubble-up-extract-slice-op-pattern\" --test-tensor-transform-patterns=\"test-drop-redundant-insert-slice-rank-expansion\" --canonicalize=\"test-convergence top-down=0\" --test-linalg-rank-reduce-contraction-ops --linalg-fuse-elementwise-ops --convert-elementwise-to-linalg --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --expand-realloc --duplicate-function-elimination --test-memref-dependence-check --memref-expand --test-linalg-greedy-fusion --test-linalg-greedy-fusion --sccp --fold-memref-alias-ops --linalg-fuse-elementwise-ops --memref-emulate-wide-int=\"widest-int-supported=32\" --test-function-pass --resolve-ranked-shaped-type-result-dims --linalg-inline-scalar-operands --test-linalg-drop-unit-dims | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --normalize-memrefs --mem2reg=\"region-simplify\" --composite-fixed-point-pass --memref-expand --test-func-erase-result --linalg-specialize-generic-ops --memref-expand --test-linalg-rank-reduce-contraction-ops --memref-expand --loop-invariant-subset-hoisting --sccp --test-linalg-elementwise-fusion-patterns=\"collapse-dimensions-control=2,3\" --test-func-erase-result --loop-invariant-code-motion --test-func-set-type --convert-elementwise-to-linalg --test-memref-bound-check --normalize-memrefs --expand-strided-metadata --test-func-erase-result --test-linalg-drop-unit-dims --loop-invariant-code-motion --fold-memref-alias-ops --expand-strided-metadata --test-linalg-elementwise-fusion-patterns=\"control-fusion-by-expansion\" --test-linalg-rank-reduce-contraction-ops --convert-elementwise-to-linalg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-drop-unit-dims --linalg-inline-scalar-operands --linalg-inline-scalar-operands --test-linalg-pad-fusion --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-collapsing\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --expand-strided-metadata --duplicate-function-elimination --inline --memref-emulate-wide-int --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --loop-invariant-subset-hoisting --test-func-erase-arg --loop-invariant-code-motion --control-flow-sink --canonicalize --loop-invariant-code-motion --canonicalize=\"test-convergence top-down=0\" --sroa --test-func-set-type --test-func-insert-result --composite-fixed-point-pass --test-func-insert-result --test-func-insert-result --test-func-set-type --topological-sort --mem2reg=\"region-simplify\" --symbol-dce --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --control-flow-sink --test-emulate-narrow-int --canonicalize --sccp --tosa-test-quant-utils --tosa-layerwise-constant-fold --test-function-pass --composite-fixed-point-pass --test-func-set-type --test-function-pass --fold-tensor-subset-ops --test-emulate-narrow-int=\"arith-compute-bitwidth=8\" --remove-dead-values --tosa-test-quant-utils --sccp --test-func-insert-result --sroa --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --inline --sroa --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-expand-math --math-extend-to-supported-types --arith-emulate-wide-int=\"widest-int-supported=32\" --test-emulate-narrow-int=\"memref-load-bitwidth=8\" --test-linalg-rank-reduce-contraction-ops --test-func-set-type --test-emulate-narrow-int=\"memref-load-bitwidth=32\" --math-extend-to-supported-types --loop-invariant-code-motion --resolve-shaped-type-result-dims --memref-emulate-wide-int --test-func-erase-arg --test-math-polynomial-approximation --int-range-optimizations --symbol-dce --test-math-algebraic-simplification --composite-fixed-point-pass --expand-realloc --test-function-pass --arith-emulate-wide-int=\"widest-int-supported=32\" --test-memref-dependence-check --test-linalg-drop-unit-dims --composite-fixed-point-pass --linalg-inline-scalar-operands --sroa --sroa --symbol-dce --loop-invariant-subset-hoisting --inline --composite-fixed-point-pass --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-function-pass --canonicalize=\"test-convergence\" --test-linalg-decompose-ops --arith-emulate-wide-int=\"widest-int-supported=32\" --test-arith-emulate-wide-int=\"widest-int-supported=8\" --resolve-shaped-type-result-dims --test-math-polynomial-approximation --topological-sort --linalg-specialize-generic-ops --arith-emulate-unsupported-floats --resolve-shaped-type-result-dims --topological-sort --inline --test-math-polynomial-approximation --test-linalg-pad-fusion --test-math-polynomial-approximation --test-math-to-vcix --test-func-erase-result --test-linalg-rank-reduce-contraction-ops --test-linalg-transform-patterns | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-math-algebraic-simplification --test-func-erase-arg --test-func-set-type --memref-emulate-wide-int --test-math-to-vcix --loop-invariant-code-motion --math-uplift-to-fma --expand-strided-metadata --math-uplift-to-fma --canonicalize=\"test-convergence top-down=0\" --test-arith-emulate-wide-int=\"widest-int-supported=8\" --inline --test-func-insert-result --test-expand-math --test-func-insert-result --resolve-ranked-shaped-type-result-dims --test-func-erase-arg --sccp --sroa --test-scf-if-utils --scf-for-loop-range-folding --loop-invariant-subset-hoisting --test-func-erase-result --loop-invariant-code-motion --test-function-pass --test-func-insert-result --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --memref-expand --memref-emulate-wide-int=\"widest-int-supported=32\" --test-math-to-vcix --arith-unsigned-when-equivalent --math-uplift-to-fma --symbol-dce --fold-memref-alias-ops --test-arith-emulate-wide-int --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --resolve-shaped-type-result-dims --math-extend-to-supported-types --cse --test-func-insert-result --loop-invariant-code-motion --math-uplift-to-fma --mem2reg --int-range-optimizations --cse --loop-invariant-subset-hoisting --memref-expand --test-memref-bound-check --test-memref-bound-check | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sroa --composite-fixed-point-pass --test-arith-emulate-wide-int --test-function-pass --symbol-dce --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --arith-int-range-narrowing --cse --sccp --test-math-to-vcix --arith-emulate-unsupported-floats --canonicalize=\"test-convergence top-down=0\" --math-extend-to-supported-types --test-math-to-vcix --topological-sort --test-func-set-type --arith-expand --remove-dead-values --arith-emulate-unsupported-floats --arith-expand=\"include-bf16\" --canonicalize | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-arith-emulate-wide-int=\"widest-int-supported=8\" --arith-expand=\"include-bf16\" --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --loop-invariant-code-motion --arith-emulate-wide-int --control-flow-sink --canonicalize --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-result --test-function-pass --control-flow-sink --composite-fixed-point-pass --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --cse --topological-sort --composite-fixed-point-pass --loop-invariant-code-motion --tosa-reduce-transposes --canonicalize --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --test-func-insert-arg --loop-invariant-code-motion --symbol-dce --tosa-test-quant-utils --sroa --test-tensor-transform-patterns=\"test-reassociative-reshape-folding\" --composite-fixed-point-pass --canonicalize=\"test-convergence\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-test-quant-utils --tosa-reduce-transposes --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-math-polynomial-approximation --test-tensor-copy-insertion=\"must-infer-memory-space\" --cse --arith-expand --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --test-func-erase-arg --test-tensor-transform-patterns=\"test-drop-redundant-insert-slice-rank-expansion\" --tosa-make-broadcastable --linalg-fuse-elementwise-ops --control-flow-sink --inline --test-expand-math --sccp --test-linalg-greedy-fusion --fold-tensor-subset-ops --tosa-optional-decompositions --test-func-erase-arg --math-uplift-to-fma --tosa-test-quant-utils --test-expand-math --test-expand-math --test-math-polynomial-approximation --canonicalize=\"test-convergence\" --loop-invariant-code-motion --test-tensor-transform-patterns=\"test-reassociative-reshape-folding\" --linalg-fuse-elementwise-ops --test-function-pass --linalg-named-op-conversion --symbol-dce --tosa-infer-shapes --mem2reg --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --test-func-erase-arg --sroa --arith-emulate-unsupported-floats --mem2reg=\"region-simplify\" --arith-unsigned-when-equivalent --duplicate-function-elimination --test-func-insert-arg --canonicalize=\"test-convergence top-down=0\" --test-func-erase-result --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --arith-unsigned-when-equivalent --loop-invariant-subset-hoisting --arith-emulate-wide-int --sccp --canonicalize=\"test-convergence top-down=0\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --mem2reg --loop-invariant-code-motion --topological-sort --canonicalize=\"test-convergence\" --test-func-set-type --test-func-insert-result --canonicalize --test-func-erase-arg --control-flow-sink --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --canonicalize=\"test-convergence top-down=0\" --mem2reg=\"region-simplify\" --test-func-erase-arg --inline --sroa --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --loop-invariant-code-motion --test-func-set-type --test-func-insert-arg --sroa --test-function-pass --composite-fixed-point-pass --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --mem2reg --test-func-set-type --canonicalize=\"test-convergence top-down=0\" --test-func-insert-result --fold-tensor-subset-ops --tosa-test-quant-utils --sroa --test-tensor-copy-insertion --loop-invariant-subset-hoisting --tosa-infer-shapes --loop-invariant-code-motion --inline --duplicate-function-elimination --test-function-pass --sccp --inline --test-func-insert-result --mem2reg=\"region-simplify\" --fold-tensor-subset-ops --topological-sort --tosa-test-quant-utils | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --convert-elementwise-to-linalg --test-arith-emulate-wide-int=\"widest-int-supported=8\" --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --test-math-algebraic-simplification --tosa-infer-shapes --test-math-polynomial-approximation --linalg-specialize-generic-ops --mem2reg=\"region-simplify\" --control-flow-sink --math-uplift-to-fma | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-transform-patterns=\"test-erase-unnecessary-inputs\" --canonicalize=\"test-convergence top-down=0\" --memref-expand --mem2reg=\"region-simplify\" --cse --test-linalg-drop-unit-dims --fold-memref-alias-ops --test-memref-dependence-check --duplicate-function-elimination --test-function-pass --convert-elementwise-to-linalg --resolve-ranked-shaped-type-result-dims --linalg-named-op-conversion --test-func-insert-result --test-func-set-type --linalg-specialize-generic-ops --expand-realloc=\"emit-deallocs\" --symbol-dce --loop-invariant-code-motion --resolve-ranked-shaped-type-result-dims --test-linalg-rank-reduce-contraction-ops --test-func-erase-arg --canonicalize=\"test-convergence top-down=0\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-expansion\" --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --control-flow-sink --normalize-memrefs --test-linalg-pad-fusion --inline --sccp --resolve-ranked-shaped-type-result-dims --expand-strided-metadata --loop-invariant-code-motion --test-linalg-elementwise-fusion-patterns=\"collapse-dimensions-control=2,3\" --inline --control-flow-sink --test-linalg-data-layout-propagation --resolve-shaped-type-result-dims --composite-fixed-point-pass --cse --test-memref-dependence-check --mem2reg --topological-sort --test-func-set-type --test-func-erase-arg --test-function-pass --test-memref-dependence-check --expand-strided-metadata --loop-invariant-subset-hoisting --linalg-specialize-generic-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --sccp --loop-invariant-code-motion --inline --convert-elementwise-to-linalg --test-linalg-rank-reduce-contraction-ops --control-flow-sink --topological-sort --duplicate-function-elimination --convert-elementwise-to-linalg --loop-invariant-subset-hoisting --test-linalg-elementwise-fusion-patterns=\"fuse-multiuse-producer\" --linalg-inline-scalar-operands --canonicalize --test-func-set-type --linalg-named-op-conversion --test-func-erase-arg --linalg-generalize-named-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-for-loop-canonicalization --test-func-insert-arg --remove-dead-values --sroa --scf-for-loop-peeling=\"skip-partial\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --affine-loop-coalescing --sccp --sccp --duplicate-function-elimination --test-loop-permutation=\"permutation-map=2,0,1\" --test-func-insert-arg --test-loop-fusion --affine-scalrep --test-decompose-affine-ops --affine-loop-tile=\"tile-size=32\" --affine-expand-index-ops-as-affine --arith-expand=\"include-bf16\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --duplicate-function-elimination --canonicalize=\"test-convergence top-down=0\" --canonicalize --mem2reg --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --arith-unsigned-when-equivalent --inline --remove-dead-values --symbol-dce --sroa --mem2reg=\"region-simplify\" --topological-sort --composite-fixed-point-pass --cse --sroa --remove-dead-values --test-arith-emulate-wide-int=\"widest-int-supported=8\" --sccp --symbol-dce --canonicalize=\"test-convergence top-down=0\" --sroa --test-func-erase-arg --sccp --canonicalize=\"test-convergence\" --loop-invariant-code-motion --remove-dead-values | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --test-func-insert-arg --canonicalize=\"test-convergence top-down=0\" --cse --canonicalize=\"test-convergence\" --test-function-pass --sccp --cse --canonicalize=\"test-convergence\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --tosa-infer-shapes --duplicate-function-elimination --fold-tensor-subset-ops --sroa --remove-dead-values | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-result --canonicalize=\"test-convergence\" --test-func-insert-arg --tosa-infer-shapes --tosa-optional-decompositions --duplicate-function-elimination --tosa-validate --remove-dead-values --test-func-erase-arg --test-function-pass --test-func-insert-result --test-func-set-type --tosa-test-quant-utils --topological-sort --test-tensor-transform-patterns=\"test-fold-consecutive-insert-extract-slice\" --mem2reg=\"region-simplify\" --cse --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-unsigned-when-equivalent --cse --int-range-optimizations --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-arg --mem2reg=\"region-simplify\" --loop-invariant-code-motion --inline --arith-emulate-unsupported-floats --test-func-insert-arg --test-func-erase-arg --sccp --test-func-insert-result --arith-emulate-unsupported-floats --mem2reg=\"region-simplify\" --test-func-erase-result --test-tensor-transform-patterns=\"test-fold-constant-extract-slice\" --tosa-optional-decompositions --arith-expand=\"include-bf16\" --test-func-insert-arg --test-emulate-narrow-int --test-func-set-type --test-arith-emulate-wide-int --test-func-erase-result --arith-expand --int-range-optimizations --test-func-insert-result --topological-sort --test-func-insert-result --duplicate-function-elimination --test-tensor-copy-insertion --control-flow-sink --tosa-reduce-transposes --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --tosa-optional-decompositions --control-flow-sink --sroa --topological-sort --tosa-validate --test-func-insert-arg --sroa --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-emulate-narrow-int=\"arith-compute-bitwidth=8\" --test-linalg-greedy-fusion --test-math-polynomial-approximation --test-tensor-transform-patterns=\"use-foreach\" --test-func-set-type --test-tensor-transform-patterns --symbol-dce --convert-elementwise-to-linalg --test-math-polynomial-approximation | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --fold-memref-alias-ops --cse --test-func-erase-arg --math-uplift-to-fma --composite-fixed-point-pass --test-linalg-drop-unit-dims --control-flow-sink --test-func-set-type --test-math-polynomial-approximation --test-memref-bound-check | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --cse --loop-invariant-code-motion --test-memref-dependence-check --arith-unsigned-when-equivalent --cse --inline --test-function-pass --expand-strided-metadata --test-function-pass --symbol-dce --test-arith-emulate-wide-int=\"widest-int-supported=8\" --remove-dead-values --topological-sort --scf-parallel-loop-fusion --fold-memref-alias-ops --loop-invariant-subset-hoisting --scf-for-loop-range-folding --expand-realloc=\"emit-deallocs\" --int-range-optimizations | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --duplicate-function-elimination --topological-sort --arith-unsigned-when-equivalent --loop-invariant-code-motion --mem2reg=\"region-simplify\" --mem2reg=\"region-simplify\" --topological-sort --arith-emulate-wide-int=\"widest-int-supported=32\" --remove-dead-values --remove-dead-values --sccp --sroa --arith-unsigned-when-equivalent --test-function-pass --canonicalize=\"test-convergence top-down=0\" --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-arg --arith-int-range-narrowing --remove-dead-values --cse --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --test-func-erase-result --test-func-set-type --arith-emulate-wide-int --composite-fixed-point-pass --int-range-optimizations --inline --loop-invariant-code-motion --duplicate-function-elimination --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --sccp --remove-dead-values --test-arith-emulate-wide-int --symbol-dce --inline --arith-int-range-narrowing | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --test-function-pass --test-func-erase-arg --sccp --test-func-insert-result --loop-invariant-subset-hoisting --remove-dead-values --test-func-erase-arg --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --test-func-set-type --test-func-insert-arg --test-func-erase-arg --control-flow-sink --control-flow-sink --sccp --tosa-test-quant-utils --tosa-optional-decompositions --sroa --fold-tensor-subset-ops --duplicate-function-elimination --symbol-dce --remove-dead-values --mem2reg --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --sccp --tosa-make-broadcastable --cse --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --test-function-pass --tosa-infer-shapes --test-function-pass --test-tensor-copy-insertion --loop-invariant-subset-hoisting --tosa-infer-shapes --tosa-optional-decompositions --symbol-dce --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --convert-elementwise-to-linalg --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --test-func-erase-arg --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --test-math-polynomial-approximation=\"enable-avx2\" --test-linalg-pad-fusion --linalg-specialize-generic-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --convert-elementwise-to-linalg --control-flow-sink --control-flow-sink --test-linalg-decompose-ops --test-tensor-transform-patterns=\"test-fold-consecutive-insert-extract-slice\" --symbol-dce --test-tensor-transform-patterns=\"test-fold-consecutive-insert-extract-slice\" --linalg-named-op-conversion --test-linalg-drop-unit-dims | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --memref-emulate-wide-int=\"widest-int-supported=32\" --resolve-shaped-type-result-dims --sccp --scf-parallel-loop-specialization --test-func-erase-result --scf-for-loop-peeling=\"peel-front\" --test-function-pass --duplicate-function-elimination --cse --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-arg --test-memref-dependence-check --resolve-ranked-shaped-type-result-dims --arith-int-range-narrowing --duplicate-function-elimination --test-memref-bound-check --arith-int-range-narrowing --test-func-insert-result --test-func-set-type --topological-sort --expand-realloc --test-func-insert-arg --memref-expand --arith-emulate-unsupported-floats --loop-invariant-subset-hoisting --test-memref-bound-check --expand-strided-metadata --test-func-set-type --normalize-memrefs --memref-expand --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --sccp --loop-invariant-code-motion --arith-expand --sccp --duplicate-function-elimination --int-range-optimizations --fold-memref-alias-ops --sroa --composite-fixed-point-pass --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --symbol-dce --inline --inline --test-func-erase-result --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --expand-realloc=\"emit-deallocs\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --duplicate-function-elimination --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-arg --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --test-func-set-type --composite-fixed-point-pass --canonicalize=\"test-convergence\" --tosa-make-broadcastable --canonicalize --tosa-infer-shapes --canonicalize | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-inline-scalar-operands --test-func-set-type --normalize-memrefs --test-math-polynomial-approximation=\"enable-avx2\" --memref-expand --sroa --test-linalg-drop-unit-dims --test-function-pass --fold-memref-alias-ops --expand-realloc --test-linalg-data-layout-propagation --sccp --expand-strided-metadata --composite-fixed-point-pass --test-memref-dependence-check --test-linalg-pad-fusion --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-forall-to-for --scf-for-loop-specialization --test-emulate-narrow-int=\"memref-load-bitwidth=32\" --topological-sort --composite-fixed-point-pass --test-math-to-vcix --arith-emulate-wide-int=\"widest-int-supported=32\" --duplicate-function-elimination --test-expand-math --test-expand-math --scf-forall-to-for --arith-emulate-wide-int=\"widest-int-supported=32\" --scf-for-loop-specialization --test-func-insert-result --sroa --symbol-dce --test-func-erase-arg --test-func-erase-result --arith-emulate-unsupported-floats --int-range-optimizations --arith-expand=\"include-bf16\" --scf-forall-to-parallel --loop-invariant-code-motion --arith-expand=\"include-bf16\" --math-extend-to-supported-types --test-emulate-narrow-int=\"arith-compute-bitwidth=8\" --loop-invariant-subset-hoisting --scf-for-loop-specialization --cse --arith-emulate-unsupported-floats --test-math-algebraic-simplification --int-range-optimizations --test-math-algebraic-simplification --math-uplift-to-fma --test-scf-for-utils --test-emulate-narrow-int=\"arith-compute-bitwidth=8\" --loop-invariant-code-motion --scf-for-loop-canonicalization --scf-for-loop-canonicalization | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-parallel-loop-tiling=\"parallel-loop-tile-sizes=1,4 no-min-max-bounds=true\" --loop-invariant-subset-hoisting --remove-dead-values --sroa --scf-for-loop-peeling=\"peel-front\" --duplicate-function-elimination --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-func-set-type --scf-parallel-loop-tiling --duplicate-function-elimination --scf-for-loop-peeling=\"peel-front\" --scf-forall-to-for | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-result --test-func-set-type --test-arith-emulate-wide-int=\"widest-int-supported=8\" --remove-dead-values --control-flow-sink --cse --arith-unsigned-when-equivalent --canonicalize=\"test-convergence\" --arith-expand=\"include-bf16\" --test-func-erase-result --arith-expand=\"include-bf16\" --arith-expand --loop-invariant-subset-hoisting --topological-sort --mem2reg=\"region-simplify\" --arith-emulate-wide-int=\"widest-int-supported=32\" --test-func-insert-arg --control-flow-sink --test-arith-emulate-wide-int=\"widest-int-supported=8\" --loop-invariant-code-motion --arith-unsigned-when-equivalent --duplicate-function-elimination --test-func-insert-arg --remove-dead-values --int-range-optimizations --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --test-func-insert-arg --test-func-set-type --test-func-insert-result --loop-invariant-subset-hoisting --test-function-pass --test-function-pass --remove-dead-values --cse --sccp --remove-dead-values --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-result --canonicalize=\"test-convergence top-down=0\" --test-scf-if-utils --scf-for-loop-canonicalization --test-scf-for-utils=\"test-replace-with-new-yields\" --tosa-optional-decompositions --composite-fixed-point-pass --tosa-optional-decompositions --test-func-erase-arg --scf-parallel-loop-specialization --test-scf-uplift-while-to-for --test-tensor-transform-patterns=\"test-reassociative-reshape-folding\" --mem2reg=\"region-simplify\" --composite-fixed-point-pass --symbol-dce --loop-invariant-subset-hoisting --sccp --test-scf-if-utils --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --arith-unsigned-when-equivalent --test-math-polynomial-approximation --loop-invariant-subset-hoisting --tosa-infer-shapes --canonicalize=\"test-convergence\" --control-flow-sink --composite-fixed-point-pass --inline --test-function-pass --test-linalg-drop-unit-dims | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-memref-bound-check --resolve-ranked-shaped-type-result-dims --test-linalg-decompose-ops --test-function-pass --test-func-insert-arg --test-linalg-drop-unit-dims --test-linalg-greedy-fusion --test-func-erase-result --test-func-erase-result --expand-strided-metadata --linalg-named-op-conversion --linalg-generalize-named-ops --mem2reg=\"region-simplify\" --math-extend-to-supported-types --composite-fixed-point-pass --test-memref-dependence-check --test-func-erase-arg --sccp --duplicate-function-elimination --linalg-fold-unit-extent-dims --loop-invariant-subset-hoisting --inline --test-math-algebraic-simplification --memref-emulate-wide-int --expand-realloc --test-expand-math --symbol-dce --linalg-named-op-conversion --convert-elementwise-to-linalg --test-func-insert-arg --test-func-erase-arg --test-linalg-transform-patterns=\"test-erase-unused-operands-and-results\" --sccp --cse --linalg-inline-scalar-operands --test-func-insert-result --duplicate-function-elimination --canonicalize --test-linalg-greedy-fusion --test-func-insert-arg --inline --test-linalg-decompose-ops --linalg-named-op-conversion --test-linalg-elementwise-fusion-patterns=\"control-fusion-by-expansion\" --loop-invariant-code-motion --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --linalg-specialize-generic-ops --test-func-erase-arg --symbol-dce --arith-expand --test-math-algebraic-simplification --math-extend-to-supported-types --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --sccp --mem2reg=\"region-simplify\" --linalg-named-op-conversion --math-extend-to-supported-types --math-uplift-to-fma | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg --scf-for-loop-canonicalization --remove-dead-values --canonicalize | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --test-func-insert-arg --test-func-erase-arg --loop-invariant-subset-hoisting --sccp --test-func-erase-result --test-func-erase-arg --loop-invariant-subset-hoisting --sccp --arith-expand=\"include-bf16\" --cse --loop-invariant-subset-hoisting --loop-invariant-code-motion --test-arith-emulate-wide-int --test-func-insert-result --sroa --sroa --int-range-optimizations --inline --sccp --test-func-erase-arg --cse --loop-invariant-code-motion --composite-fixed-point-pass --test-func-erase-result --sccp --mem2reg=\"region-simplify\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --sroa --sccp --composite-fixed-point-pass --loop-invariant-code-motion --remove-dead-values --control-flow-sink --loop-invariant-code-motion --topological-sort --cse --test-func-erase-result --test-func-insert-arg --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --inline --test-func-erase-result --test-func-erase-result --loop-invariant-subset-hoisting --loop-invariant-code-motion --loop-invariant-subset-hoisting --sccp --canonicalize=\"test-convergence top-down=0\" --symbol-dce --sccp --duplicate-function-elimination --inline --test-func-set-type --test-func-set-type --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --test-function-pass --test-tensor-copy-insertion=\"must-infer-memory-space\" --remove-dead-values --loop-invariant-subset-hoisting --tosa-make-broadcastable --test-func-erase-result --sccp --test-func-insert-arg --composite-fixed-point-pass --topological-sort --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --normalize-memrefs --test-math-algebraic-simplification --math-uplift-to-fma --expand-realloc --duplicate-function-elimination --normalize-memrefs --memref-expand --convert-elementwise-to-linalg --loop-invariant-code-motion --test-linalg-drop-unit-dims --test-func-erase-arg --linalg-generalize-named-ops --math-extend-to-supported-types --sccp --test-linalg-pad-fusion --linalg-specialize-generic-ops --test-linalg-elementwise-fusion-patterns=\"fuse-multiuse-producer\" --test-math-to-vcix --test-linalg-data-layout-propagation --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --test-func-insert-arg --test-linalg-drop-unit-dims --test-expand-math --inline --normalize-memrefs --expand-strided-metadata --test-linalg-transform-patterns=\"test-vector-transfer-forwarding-patterns\" --test-linalg-data-layout-propagation --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --canonicalize=\"test-convergence\" --test-linalg-rank-reduce-contraction-ops --test-func-insert-arg --control-flow-sink --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-collapsing\" --resolve-ranked-shaped-type-result-dims --test-math-polynomial-approximation=\"enable-avx2\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --math-uplift-to-fma --linalg-generalize-named-ops --math-extend-to-supported-types --topological-sort --sroa --test-func-insert-arg --test-linalg-rank-reduce-contraction-ops --topological-sort --test-func-insert-result --symbol-dce --linalg-fuse-elementwise-ops --math-extend-to-supported-types --loop-invariant-code-motion --test-linalg-drop-unit-dims --test-func-insert-result --test-linalg-data-layout-propagation --test-linalg-data-layout-propagation --test-linalg-rank-reduce-contraction-ops --test-math-algebraic-simplification --test-expand-math --linalg-fold-unit-extent-dims --cse --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --test-math-algebraic-simplification --linalg-fuse-elementwise-ops --symbol-dce --test-linalg-drop-unit-dims --control-flow-sink --cse --test-linalg-data-layout-propagation --test-linalg-drop-unit-dims --loop-invariant-code-motion --test-linalg-decompose-ops --linalg-inline-scalar-operands --control-flow-sink --test-expand-math --linalg-specialize-generic-ops --test-linalg-greedy-fusion --test-math-to-vcix --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-arith-emulate-wide-int | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-arg --test-function-pass --canonicalize=\"test-convergence top-down=0\" --test-scf-if-utils --topological-sort --expand-realloc --memref-expand --test-func-erase-arg --canonicalize --math-uplift-to-fma --scf-for-loop-peeling=\"skip-partial\" --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --canonicalize=\"test-convergence\" --topological-sort --cse --sccp --cse --control-flow-sink --test-func-erase-arg --composite-fixed-point-pass --control-flow-sink --control-flow-sink --test-func-set-type --topological-sort --test-func-erase-arg --remove-dead-values | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --tosa-infer-shapes --test-function-pass --remove-dead-values --remove-dead-values --test-function-pass --loop-invariant-subset-hoisting --test-func-insert-arg --test-tensor-copy-insertion=\"must-infer-memory-space\" --tosa-make-broadcastable --cse --tosa-test-quant-utils --test-func-insert-arg --cse --tosa-infer-shapes --inline --test-func-erase-result --test-func-erase-arg --control-flow-sink --loop-invariant-code-motion --test-func-insert-result --loop-invariant-subset-hoisting --loop-invariant-code-motion --inline --tosa-optional-decompositions | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-optional-decompositions --test-linalg-data-layout-propagation --test-func-erase-arg --test-tensor-transform-patterns=\"test-fold-constant-extract-slice\" --tosa-infer-shapes --test-func-insert-result --convert-elementwise-to-linalg --duplicate-function-elimination --test-linalg-pad-fusion --test-math-polynomial-approximation=\"enable-avx2\" --test-math-algebraic-simplification --test-linalg-pad-fusion --convert-elementwise-to-linalg --linalg-inline-scalar-operands --tosa-infer-shapes --linalg-specialize-generic-ops --canonicalize --tosa-optional-decompositions --canonicalize=\"test-convergence top-down=0\" --test-func-insert-arg --topological-sort --loop-invariant-code-motion --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-generalize-named-ops --control-flow-sink --test-linalg-pad-fusion --tosa-test-quant-utils --loop-invariant-subset-hoisting --test-func-insert-arg --topological-sort --duplicate-function-elimination --linalg-named-op-conversion --test-func-insert-arg --linalg-fuse-elementwise-ops --math-uplift-to-fma --test-linalg-rank-reduce-contraction-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse --test-func-erase-arg --duplicate-function-elimination --canonicalize --symbol-dce --test-function-pass --test-func-erase-result --loop-invariant-code-motion --test-scf-while-op-builder --scf-for-to-while --scf-for-loop-canonicalization --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --arith-expand --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --inline --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --arith-emulate-wide-int --test-func-erase-result --test-func-erase-result --control-flow-sink --arith-unsigned-when-equivalent --int-range-optimizations --test-arith-emulate-wide-int=\"widest-int-supported=8\" --arith-emulate-wide-int --test-func-erase-arg --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-func-insert-result --int-range-optimizations --test-arith-emulate-wide-int=\"widest-int-supported=8\" --int-range-optimizations --arith-expand=\"include-bf16\" --inline --arith-unsigned-when-equivalent --arith-expand=\"include-bf16\" --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --arith-emulate-wide-int --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --control-flow-sink --loop-invariant-code-motion --sroa --topological-sort --sroa --test-func-set-type --test-func-erase-arg --sroa --mem2reg --cse --sccp --composite-fixed-point-pass --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --test-func-erase-result --inline --test-func-insert-result --tosa-infer-shapes --symbol-dce --cse --tosa-layerwise-constant-fold --topological-sort --tosa-infer-shapes --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-wide-int=\"widest-int-supported=32\" --test-math-to-vcix | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --test-func-erase-arg --sccp --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --math-uplift-to-fma --int-range-optimizations --test-math-polynomial-approximation --test-linalg-rank-reduce-contraction-ops --loop-invariant-code-motion --symbol-dce --linalg-specialize-generic-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-data-layout-propagation --test-func-erase-arg --test-linalg-data-layout-propagation --test-math-polynomial-approximation=\"enable-avx2\" --canonicalize=\"test-convergence\" --convert-elementwise-to-linalg --test-linalg-pad-fusion --duplicate-function-elimination --test-func-set-type --math-uplift-to-fma --test-linalg-rank-reduce-contraction-ops --test-func-insert-result --linalg-specialize-generic-ops --loop-invariant-subset-hoisting --math-uplift-to-fma --linalg-inline-scalar-operands --arith-unsigned-when-equivalent --mem2reg=\"region-simplify\" --control-flow-sink --test-linalg-greedy-fusion --loop-invariant-code-motion --test-func-erase-arg --arith-emulate-wide-int=\"widest-int-supported=32\" --math-extend-to-supported-types --test-expand-math --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --sroa --test-math-to-vcix --test-linalg-drop-unit-dims --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --linalg-generalize-named-ops --mem2reg=\"region-simplify\" --test-expand-math --cse --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --test-linalg-elementwise-fusion-patterns=\"control-fusion-by-expansion\" --inline --topological-sort --test-linalg-pad-fusion --mem2reg=\"region-simplify\" --loop-invariant-subset-hoisting --control-flow-sink --fold-tensor-subset-ops --test-expand-math --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-int-range-narrowing --canonicalize=\"test-convergence\" --linalg-fuse-elementwise-ops --symbol-dce --test-func-erase-result --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --resolve-shaped-type-result-dims --resolve-shaped-type-result-dims --linalg-named-op-conversion --test-func-erase-arg --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --memref-emulate-wide-int=\"widest-int-supported=32\" --test-func-set-type --memref-expand --test-func-erase-arg --test-func-set-type --test-emulate-narrow-int=\"memref-load-bitwidth=8\" --test-arith-emulate-wide-int --test-memref-bound-check --test-linalg-greedy-fusion --memref-emulate-wide-int --loop-invariant-subset-hoisting --resolve-shaped-type-result-dims --composite-fixed-point-pass --arith-expand=\"include-bf16\" --symbol-dce --test-linalg-pad-fusion --sccp --test-func-erase-result --test-func-insert-result --loop-invariant-code-motion --resolve-ranked-shaped-type-result-dims | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-parallel-loop-specialization --resolve-shaped-type-result-dims --mem2reg --test-func-set-type --inline --expand-realloc=\"emit-deallocs\" --scf-forall-to-for --test-scf-while-op-builder --symbol-dce --scf-forall-to-parallel --test-memref-dependence-check --test-func-erase-arg --normalize-memrefs --control-flow-sink --scf-for-to-while --test-func-erase-result --normalize-memrefs --test-scf-if-utils --test-function-pass --expand-realloc --control-flow-sink --scf-forall-to-for --inline --test-func-insert-result --test-func-insert-arg --loop-invariant-subset-hoisting --inline --topological-sort --remove-dead-values --test-scf-pipelining=\"annotate\" --test-scf-pipelining=\"no-epilogue-peeling\" --memref-emulate-wide-int=\"widest-int-supported=32\" --expand-realloc=\"emit-deallocs\" --scf-parallel-loop-fusion --scf-parallel-loop-fusion --symbol-dce --expand-realloc=\"emit-deallocs\" --mem2reg --sccp --test-scf-uplift-while-to-for --scf-for-loop-peeling=\"peel-front\" --scf-parallel-loop-fusion --test-func-set-type --scf-for-loop-range-folding | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-memref-bound-check --normalize-memrefs | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --canonicalize=\"test-convergence top-down=0\" --symbol-dce --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --tosa-layerwise-constant-fold --tosa-reduce-transposes --fold-tensor-subset-ops --tosa-validate --fold-tensor-subset-ops --tosa-infer-shapes --duplicate-function-elimination --loop-invariant-subset-hoisting --test-func-set-type --control-flow-sink --tosa-make-broadcastable | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --convert-elementwise-to-linalg --test-linalg-rank-reduce-contraction-ops --tosa-infer-shapes --composite-fixed-point-pass --test-func-set-type --math-uplift-to-fma --linalg-generalize-named-ops --loop-invariant-code-motion --canonicalize=\"test-convergence\" --arith-expand=\"include-bf16\" --fold-tensor-subset-ops --test-func-insert-arg --test-arith-emulate-wide-int --tosa-optional-decompositions --arith-unsigned-when-equivalent --arith-expand=\"include-bf16\" --test-tensor-copy-insertion=\"must-infer-memory-space\" --test-tensor-copy-insertion=\"must-infer-memory-space\" --test-func-set-type --loop-invariant-subset-hoisting --arith-emulate-unsupported-floats | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --math-extend-to-supported-types --fold-memref-alias-ops --memref-expand --test-linalg-transform-patterns=\"test-winograd-conv2d\" --test-linalg-transform-patterns=\"test-patterns\" --test-math-algebraic-simplification --sroa --test-math-polynomial-approximation=\"enable-avx2\" --test-func-set-type --fold-memref-alias-ops --test-memref-bound-check --composite-fixed-point-pass --test-linalg-transform-patterns --test-linalg-elementwise-fusion-patterns=\"fuse-multiuse-producer\" --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-named-op-conversion --test-linalg-greedy-fusion --linalg-fold-unit-extent-dims --linalg-inline-scalar-operands --test-func-erase-result --cse --test-func-erase-result --arith-unsigned-when-equivalent --int-range-optimizations --test-linalg-pad-fusion --test-linalg-pad-fusion --test-math-polynomial-approximation=\"enable-avx2\" --linalg-fuse-elementwise-ops --test-function-pass --math-extend-to-supported-types --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-func-set-type --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-func-erase-arg --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --arith-expand --test-expand-math --duplicate-function-elimination --test-func-set-type --test-func-erase-result --sccp --control-flow-sink --math-uplift-to-fma --test-func-erase-result --test-math-polynomial-approximation --linalg-fuse-elementwise-ops --linalg-fuse-elementwise-ops --test-func-erase-arg --linalg-fold-unit-extent-dims --linalg-fuse-elementwise-ops --topological-sort --linalg-named-op-conversion --cse --linalg-generalize-named-ops --composite-fixed-point-pass --arith-emulate-unsupported-floats | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --memref-expand --topological-sort --resolve-ranked-shaped-type-result-dims --resolve-ranked-shaped-type-result-dims --resolve-shaped-type-result-dims --test-linalg-rank-reduce-contraction-ops --memref-emulate-wide-int=\"widest-int-supported=32\" --composite-fixed-point-pass --sccp --sroa --memref-emulate-wide-int | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --linalg-specialize-generic-ops --linalg-named-op-conversion --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --convert-elementwise-to-linalg --test-linalg-drop-unit-dims --inline --linalg-inline-scalar-operands --control-flow-sink --test-linalg-data-layout-propagation --test-function-pass --test-func-set-type --composite-fixed-point-pass --test-func-set-type --test-func-insert-result --linalg-named-op-conversion --linalg-named-op-conversion --test-func-insert-result --test-func-set-type --test-linalg-data-layout-propagation | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-arith-emulate-wide-int --arith-emulate-wide-int --mem2reg --sroa --test-func-insert-arg --control-flow-sink --test-memref-dependence-check --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg --memref-expand --canonicalize=\"test-convergence\" --test-func-erase-result --test-function-pass --fold-memref-alias-ops --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-function-pass --topological-sort --sccp --resolve-shaped-type-result-dims | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sroa --inline --canonicalize --composite-fixed-point-pass --test-function-pass --canonicalize=\"test-convergence\" --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --test-func-set-type --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --test-function-pass --mem2reg=\"region-simplify\" --tosa-reduce-transposes --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --tosa-reduce-transposes --test-tensor-transform-patterns=\"test-drop-redundant-insert-slice-rank-expansion\" --sccp --sroa --control-flow-sink --tosa-optional-decompositions | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-math-algebraic-simplification --sroa --arith-int-range-narrowing --convert-elementwise-to-linalg --test-linalg-pad-fusion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --tosa-reduce-transposes --tosa-test-quant-utils --test-linalg-data-layout-propagation --loop-invariant-code-motion --test-tensor-copy-insertion=\"must-infer-memory-space\" --inline --mem2reg --tosa-optional-decompositions --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-collapsing\" --test-linalg-transform-patterns=\"test-vector-transfer-forwarding-patterns\" --tosa-test-quant-utils --test-math-polynomial-approximation=\"enable-avx2\" --topological-sort --tosa-reduce-transposes --test-linalg-data-layout-propagation --loop-invariant-code-motion --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --canonicalize --composite-fixed-point-pass --test-math-polynomial-approximation --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-collapsing\" --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --loop-invariant-subset-hoisting --test-func-erase-result --test-linalg-greedy-fusion --symbol-dce --tosa-make-broadcastable --tosa-make-broadcastable --tosa-make-broadcastable --linalg-named-op-conversion --test-math-to-vcix --test-linalg-data-layout-propagation --math-extend-to-supported-types --sccp --tosa-infer-shapes --test-tensor-transform-patterns=\"test-fold-consecutive-insert-extract-slice\" --math-extend-to-supported-types --topological-sort --test-linalg-decompose-ops --test-func-erase-arg --fold-tensor-subset-ops --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-collapsing-control\" --tosa-reduce-transposes | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-scf-while-op-builder --expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-expand-math --int-range-optimizations | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --inline --test-expand-math --symbol-dce --arith-unsigned-when-equivalent --canonicalize --test-func-erase-arg --test-math-algebraic-simplification --arith-unsigned-when-equivalent --topological-sort --cse --math-extend-to-supported-types --arith-expand --loop-invariant-subset-hoisting --loop-invariant-subset-hoisting --test-function-pass --test-math-to-vcix --canonicalize --test-func-insert-arg --test-math-polynomial-approximation --test-math-polynomial-approximation --arith-expand --int-range-optimizations --loop-invariant-code-motion --duplicate-function-elimination --test-func-insert-arg --test-func-set-type --math-extend-to-supported-types --cse --arith-emulate-wide-int=\"widest-int-supported=32\" --int-range-optimizations --topological-sort --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize=\"test-convergence\" --math-extend-to-supported-types --test-expand-math --test-func-insert-result --test-math-algebraic-simplification --test-func-insert-arg --sroa --symbol-dce --math-extend-to-supported-types --topological-sort --math-extend-to-supported-types --test-math-algebraic-simplification --topological-sort --sroa --test-func-insert-result --cse --control-flow-sink --test-expand-math --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --test-func-insert-result --test-func-insert-arg --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --test-func-insert-result --canonicalize=\"test-convergence\" --control-flow-sink --tosa-infer-shapes --tosa-reduce-transposes --tosa-infer-shapes --cse --duplicate-function-elimination --test-function-pass --remove-dead-values --tosa-make-broadcastable --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --sroa --tosa-reduce-transposes --symbol-dce --topological-sort --composite-fixed-point-pass --control-flow-sink --tosa-make-broadcastable --tosa-test-quant-utils --canonicalize=\"test-convergence top-down=0\" --duplicate-function-elimination --cse --sroa --topological-sort --remove-dead-values --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-named-op-conversion --fold-tensor-subset-ops --test-math-algebraic-simplification --test-math-polynomial-approximation=\"enable-avx2\" --sroa --test-func-erase-arg --tosa-optional-decompositions --test-math-algebraic-simplification --control-flow-sink --test-linalg-greedy-fusion --test-tensor-transform-patterns=\"use-foreach\" --topological-sort --arith-expand --arith-unsigned-when-equivalent --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --sroa --control-flow-sink --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --linalg-inline-scalar-operands --test-math-to-vcix --canonicalize=\"test-convergence top-down=0\" --arith-unsigned-when-equivalent --tosa-reduce-transposes --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --arith-int-range-narrowing --test-arith-emulate-wide-int --test-func-set-type --test-tensor-transform-patterns=\"test-drop-redundant-insert-slice-rank-expansion\" --sccp --int-range-optimizations --test-tensor-transform-patterns=\"test-fold-constant-extract-slice\" --tosa-infer-shapes --arith-unsigned-when-equivalent --loop-invariant-subset-hoisting --loop-invariant-subset-hoisting --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --tosa-make-broadcastable --test-linalg-pad-fusion --test-linalg-rank-reduce-contraction-ops --control-flow-sink --linalg-fold-unit-extent-dims --sroa --mem2reg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-drop-unit-dims --expand-strided-metadata --math-extend-to-supported-types --linalg-specialize-generic-ops --resolve-ranked-shaped-type-result-dims --symbol-dce --test-function-pass --linalg-generalize-named-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-result --topological-sort --test-func-erase-arg --math-uplift-to-fma --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --topological-sort --memref-emulate-wide-int --scf-for-loop-canonicalization --test-scf-if-utils --arith-expand=\"include-bf16\" --expand-realloc=\"emit-deallocs\" --scf-parallel-loop-fusion --topological-sort --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --test-math-to-vcix --control-flow-sink --scf-for-loop-specialization --loop-invariant-subset-hoisting --memref-expand --math-uplift-to-fma --scf-forall-to-for | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-arith-emulate-wide-int --sroa --test-math-polynomial-approximation --scf-forall-to-for --loop-invariant-code-motion --scf-parallel-loop-fusion --inline --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize=\"test-convergence\" --test-scf-uplift-while-to-for --composite-fixed-point-pass --scf-forall-to-parallel | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --canonicalize=\"test-convergence top-down=0\" --mem2reg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --remove-dead-values --test-func-erase-result --inline --mem2reg --mem2reg --test-func-insert-arg --remove-dead-values --composite-fixed-point-pass --arith-emulate-wide-int --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --symbol-dce --symbol-dce --sccp --arith-emulate-unsupported-floats --arith-emulate-wide-int=\"widest-int-supported=32\" --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --canonicalize --arith-emulate-unsupported-floats --loop-invariant-code-motion --sccp --composite-fixed-point-pass --loop-invariant-code-motion --topological-sort --loop-invariant-subset-hoisting --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --remove-dead-values --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --tosa-make-broadcastable --test-function-pass --test-func-insert-arg --topological-sort --tosa-reduce-transposes --test-func-erase-result --control-flow-sink --test-func-erase-arg --remove-dead-values --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --topological-sort --tosa-infer-shapes --test-func-insert-arg --tosa-make-broadcastable --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --composite-fixed-point-pass --test-tensor-transform-patterns --test-func-erase-result --remove-dead-values --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --inline --cse --test-func-insert-arg --remove-dead-values --arith-emulate-unsupported-floats --arith-int-range-narrowing --topological-sort --arith-unsigned-when-equivalent --cse --duplicate-function-elimination --tosa-make-broadcastable --int-range-optimizations --test-func-erase-result --test-func-insert-result --test-func-insert-arg --test-function-pass --test-function-pass --tosa-validate --arith-expand=\"include-bf16\" --test-function-pass --test-function-pass --test-func-erase-result --remove-dead-values --int-range-optimizations --test-tensor-copy-insertion=\"must-infer-memory-space\" --test-arith-emulate-wide-int=\"widest-int-supported=8\" --inline --symbol-dce --tosa-infer-shapes --test-func-insert-arg --tosa-test-quant-utils --composite-fixed-point-pass --loop-invariant-subset-hoisting --test-func-insert-result --symbol-dce --tosa-reduce-transposes --tosa-make-broadcastable | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-math-algebraic-simplification --linalg-named-op-conversion --composite-fixed-point-pass --test-expand-math --loop-invariant-subset-hoisting --symbol-dce --linalg-generalize-named-ops --test-math-polynomial-approximation --inline --canonicalize=\"test-convergence\" --mem2reg --test-linalg-transform-patterns=\"test-patterns\" --test-expand-math --test-linalg-greedy-fusion --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --test-function-pass --convert-elementwise-to-linalg --duplicate-function-elimination --canonicalize=\"test-convergence\" --test-linalg-transform-patterns=\"test-vector-transfer-forwarding-patterns\" --test-linalg-decompose-ops --duplicate-function-elimination --linalg-fold-unit-extent-dims --test-func-erase-arg --linalg-fuse-elementwise-ops --linalg-fold-unit-extent-dims --duplicate-function-elimination --linalg-inline-scalar-operands --test-linalg-data-layout-propagation --test-linalg-rank-reduce-contraction-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --memref-expand --arith-unsigned-when-equivalent --normalize-memrefs --normalize-memrefs --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --expand-strided-metadata --control-flow-sink --normalize-memrefs --fold-memref-alias-ops --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-result --memref-emulate-wide-int=\"widest-int-supported=32\" --loop-invariant-code-motion --composite-fixed-point-pass --control-flow-sink --mem2reg --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --mem2reg=\"region-simplify\" --remove-dead-values --control-flow-sink --symbol-dce --test-func-insert-arg --remove-dead-values --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --test-func-erase-result --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --test-function-pass --duplicate-function-elimination --sroa --sccp --remove-dead-values --duplicate-function-elimination --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --symbol-dce --duplicate-function-elimination --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-func-insert-arg --loop-invariant-subset-hoisting --tosa-reduce-transposes --control-flow-sink --test-tensor-transform-patterns=\"test-rewrite-extract-slice-from-collapse-shape\" --test-function-pass --inline --test-func-insert-arg --tosa-reduce-transposes --composite-fixed-point-pass --canonicalize=\"test-convergence top-down=0\" --inline --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --test-arith-emulate-wide-int=\"widest-int-supported=8\" --topological-sort --loop-invariant-code-motion --control-flow-sink --test-func-insert-arg --mem2reg --convert-elementwise-to-linalg --test-tensor-transform-patterns --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --arith-emulate-unsupported-floats --sccp --test-linalg-data-layout-propagation --linalg-named-op-conversion --linalg-inline-scalar-operands --loop-invariant-subset-hoisting --test-function-pass --test-func-erase-arg --loop-invariant-subset-hoisting --control-flow-sink --test-tensor-transform-patterns=\"test-reassociative-reshape-folding\" --arith-emulate-wide-int=\"widest-int-supported=32\" --test-linalg-rank-reduce-contraction-ops --linalg-named-op-conversion --test-math-algebraic-simplification --fold-tensor-subset-ops --symbol-dce --test-emulate-narrow-int=\"memref-load-bitwidth=8\" --loop-invariant-code-motion --test-linalg-data-layout-propagation --arith-unsigned-when-equivalent --inline --arith-emulate-unsupported-floats --test-func-erase-arg --inline --inline --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-linalg-greedy-fusion --test-tensor-transform-patterns --test-linalg-elementwise-fusion-patterns=\"control-fusion-by-expansion\" --test-linalg-pad-fusion --test-linalg-drop-unit-dims --int-range-optimizations --duplicate-function-elimination --convert-elementwise-to-linalg --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --fold-tensor-subset-ops --linalg-inline-scalar-operands --test-func-erase-arg --linalg-specialize-generic-ops --test-linalg-drop-unit-dims --linalg-specialize-generic-ops --test-linalg-pad-fusion --int-range-optimizations --test-expand-math --test-func-erase-result --test-func-insert-arg --cse --test-func-set-type --test-tensor-transform-patterns=\"use-foreach\" --composite-fixed-point-pass --inline --loop-invariant-subset-hoisting --test-linalg-decompose-ops --symbol-dce --test-linalg-drop-unit-dims --test-math-polynomial-approximation=\"enable-avx2\" --test-linalg-greedy-fusion --control-flow-sink --linalg-inline-scalar-operands --topological-sort --topological-sort --linalg-specialize-generic-ops --loop-invariant-subset-hoisting --loop-invariant-subset-hoisting --composite-fixed-point-pass --test-func-insert-result --test-linalg-pad-fusion --test-linalg-drop-unit-dims --loop-invariant-subset-hoisting --linalg-specialize-generic-ops --arith-int-range-narrowing --math-extend-to-supported-types --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-arg --test-memref-bound-check --test-func-insert-arg --topological-sort --test-linalg-data-layout-propagation --loop-invariant-code-motion --composite-fixed-point-pass --linalg-specialize-generic-ops --canonicalize=\"test-convergence top-down=0\" --fold-memref-alias-ops --expand-strided-metadata --linalg-inline-scalar-operands --test-linalg-elementwise-fusion-patterns=\"fuse-generic-ops-control\" --duplicate-function-elimination --expand-strided-metadata --test-linalg-rank-reduce-contraction-ops --convert-elementwise-to-linalg --loop-invariant-subset-hoisting --resolve-shaped-type-result-dims --resolve-ranked-shaped-type-result-dims --expand-strided-metadata --duplicate-function-elimination --expand-realloc --test-linalg-greedy-fusion --fold-memref-alias-ops --test-linalg-decompose-ops --cse --test-linalg-data-layout-propagation --test-func-insert-result --sccp --normalize-memrefs --expand-realloc --resolve-ranked-shaped-type-result-dims --test-linalg-data-layout-propagation --linalg-specialize-generic-ops --convert-elementwise-to-linalg --linalg-named-op-conversion --loop-invariant-code-motion --test-linalg-drop-unit-dims --test-linalg-drop-unit-dims --test-func-insert-arg --test-linalg-rank-reduce-contraction-ops --resolve-shaped-type-result-dims --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize=\"test-convergence\" --composite-fixed-point-pass --arith-expand --int-range-optimizations --arith-emulate-wide-int --symbol-dce --test-func-insert-result --test-func-insert-arg --arith-unsigned-when-equivalent --arith-emulate-wide-int --loop-invariant-subset-hoisting --composite-fixed-point-pass --topological-sort --mem2reg=\"region-simplify\" --sccp --mem2reg=\"region-simplify\" --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --test-func-erase-result --composite-fixed-point-pass --test-func-insert-result --test-func-erase-result --inline --sroa --test-func-insert-arg --loop-invariant-code-motion --remove-dead-values | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-optional-decompositions --test-tensor-transform-patterns=\"test-fold-consecutive-insert-extract-slice\" --symbol-dce --test-func-erase-arg --sroa --symbol-dce --fold-tensor-subset-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --test-tensor-copy-insertion=\"must-infer-memory-space\" --test-func-set-type --test-func-set-type --topological-sort --fold-tensor-subset-ops --arith-unsigned-when-equivalent --topological-sort --topological-sort --tosa-test-quant-utils --arith-int-range-narrowing --cse --arith-expand=\"include-bf16\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse --test-func-insert-result --test-func-insert-arg --loop-invariant-code-motion --test-emulate-narrow-int | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-arg --expand-realloc --memref-emulate-wide-int=\"widest-int-supported=32\" --test-func-set-type --arith-emulate-wide-int=\"widest-int-supported=32\" --topological-sort --linalg-fuse-elementwise-ops --convert-elementwise-to-linalg --test-linalg-data-layout-propagation --test-memref-bound-check --test-func-set-type --symbol-dce --test-func-insert-arg --normalize-memrefs --test-math-polynomial-approximation --cse --test-memref-bound-check --duplicate-function-elimination --cse --linalg-inline-scalar-operands | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --test-scf-for-utils --composite-fixed-point-pass --test-arith-emulate-wide-int --test-scf-for-utils --normalize-memrefs --sccp --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-function-pass --test-scf-while-op-builder --test-func-set-type --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-arg --inline --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse --test-function-pass --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --sccp --test-function-pass --test-func-insert-arg --test-func-erase-result --fold-tensor-subset-ops --cse --fold-tensor-subset-ops --inline --mem2reg --tosa-test-quant-utils --tosa-optional-decompositions --tosa-make-broadcastable --sccp --fold-tensor-subset-ops --cse --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --symbol-dce --symbol-dce --loop-invariant-subset-hoisting --remove-dead-values --remove-dead-values --tosa-make-broadcastable --tosa-test-quant-utils --mem2reg=\"region-simplify\" --loop-invariant-subset-hoisting --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --sroa --test-math-algebraic-simplification --mem2reg --tosa-validate --linalg-generalize-named-ops --mem2reg --tosa-reduce-transposes --cse --test-func-set-type --test-linalg-rank-reduce-contraction-ops --duplicate-function-elimination --test-math-polynomial-approximation --test-func-erase-arg --test-linalg-transform-patterns=\"test-swap-extract-slice-with-fill-pattern\" --test-linalg-pad-fusion --math-extend-to-supported-types --math-uplift-to-fma --linalg-fuse-elementwise-ops --loop-invariant-subset-hoisting --test-tensor-transform-patterns=\"test-drop-redundant-insert-slice-rank-expansion\" --linalg-specialize-generic-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-greedy-fusion --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-collapsing-control\" --fold-tensor-subset-ops --inline --cse --linalg-specialize-generic-ops --cse --test-linalg-greedy-fusion --test-func-erase-arg --fold-tensor-subset-ops --symbol-dce --test-linalg-transform-patterns=\"test-erase-unused-operands-and-results\" --test-func-insert-arg --test-linalg-rank-reduce-contraction-ops --loop-invariant-subset-hoisting --test-tensor-copy-insertion=\"must-infer-memory-space\" --convert-elementwise-to-linalg --test-linalg-rank-reduce-contraction-ops --test-function-pass --test-linalg-rank-reduce-contraction-ops --test-linalg-pad-fusion --linalg-specialize-generic-ops --inline --linalg-inline-scalar-operands --control-flow-sink --test-function-pass --duplicate-function-elimination --test-func-erase-arg --test-tensor-transform-patterns=\"test-fold-constant-extract-slice\" --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --canonicalize | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --expand-realloc=\"emit-deallocs\" --linalg-generalize-named-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --expand-strided-metadata --test-func-erase-arg --test-memref-dependence-check --scf-parallel-loop-tiling=\"parallel-loop-tile-sizes=1,4 no-min-max-bounds=true\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-int-range-narrowing --loop-invariant-code-motion --sccp --sroa --loop-invariant-subset-hoisting --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sroa --test-func-erase-result --remove-dead-values --test-func-set-type --composite-fixed-point-pass --duplicate-function-elimination --sccp --test-function-pass --loop-invariant-code-motion --symbol-dce --loop-invariant-subset-hoisting --cse --test-function-pass --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --cse --remove-dead-values --canonicalize=\"test-convergence top-down=0\" --fold-tensor-subset-ops --tosa-optional-decompositions --control-flow-sink --test-tensor-transform-patterns=\"test-drop-redundant-insert-slice-rank-expansion\" --duplicate-function-elimination --fold-tensor-subset-ops --tosa-reduce-transposes --test-func-insert-result --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --fold-tensor-subset-ops --symbol-dce --test-linalg-rank-reduce-contraction-ops --test-tensor-transform-patterns=\"test-rewrite-extract-slice-from-collapse-shape\" --symbol-dce --tosa-layerwise-constant-fold --test-func-erase-arg --sccp --tosa-test-quant-utils --math-uplift-to-fma --test-func-insert-result --inline --tosa-test-quant-utils --loop-invariant-code-motion --sccp --test-func-erase-arg --tosa-reduce-transposes --test-math-polynomial-approximation --composite-fixed-point-pass --linalg-inline-scalar-operands --symbol-dce --test-tensor-copy-insertion --test-linalg-pad-fusion --test-func-insert-arg --test-tensor-copy-insertion --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --test-linalg-decompose-ops --test-tensor-copy-insertion=\"must-infer-memory-space\" --test-math-to-vcix --test-func-set-type --test-linalg-decompose-ops --linalg-named-op-conversion --tosa-make-broadcastable --fold-tensor-subset-ops --inline --tosa-test-quant-utils --test-func-set-type --topological-sort --test-tensor-transform-patterns=\"test-reassociative-reshape-folding\" --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --linalg-fuse-elementwise-ops --fold-tensor-subset-ops --tosa-optional-decompositions --linalg-named-op-conversion --tosa-layerwise-constant-fold --linalg-specialize-generic-ops --duplicate-function-elimination --symbol-dce --test-linalg-pad-fusion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-named-op-conversion --inline --test-func-set-type --test-function-pass --test-func-insert-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --composite-fixed-point-pass --test-linalg-transform-patterns=\"test-swap-subtensor-padtensor\" --loop-invariant-code-motion --topological-sort --composite-fixed-point-pass --test-linalg-rank-reduce-contraction-ops --test-func-set-type --test-func-erase-result --loop-invariant-subset-hoisting --linalg-fuse-elementwise-ops --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-collapsing\" --symbol-dce --linalg-named-op-conversion --test-func-erase-arg --test-function-pass --control-flow-sink --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-function-pass --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --control-flow-sink --test-function-pass --normalize-memrefs --resolve-ranked-shaped-type-result-dims --normalize-memrefs --test-func-insert-arg --symbol-dce --symbol-dce --resolve-shaped-type-result-dims --test-func-insert-arg --duplicate-function-elimination --sccp --int-range-optimizations --inline --normalize-memrefs --arith-unsigned-when-equivalent --symbol-dce --loop-invariant-code-motion --canonicalize=\"test-convergence\" --arith-expand --remove-dead-values --fold-memref-alias-ops --arith-unsigned-when-equivalent --topological-sort --control-flow-sink --test-func-insert-arg --loop-invariant-subset-hoisting --arith-emulate-wide-int --arith-emulate-wide-int --arith-emulate-wide-int=\"widest-int-supported=32\" --sccp --sccp --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --sccp --memref-expand --resolve-ranked-shaped-type-result-dims --cse --remove-dead-values --test-func-erase-result --test-memref-bound-check --resolve-shaped-type-result-dims --loop-invariant-subset-hoisting --memref-expand --test-memref-dependence-check --expand-realloc --test-func-insert-result --fold-memref-alias-ops --mem2reg=\"region-simplify\" --test-memref-bound-check --fold-memref-alias-ops --normalize-memrefs --fold-memref-alias-ops --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --test-func-erase-result --test-func-insert-arg --loop-invariant-subset-hoisting --canonicalize --sccp --topological-sort --symbol-dce --test-func-insert-result --test-func-insert-result --control-flow-sink --sccp --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --loop-invariant-subset-hoisting --scf-for-loop-canonicalization | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-wide-int --cse --remove-dead-values --test-arith-emulate-wide-int --topological-sort --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-arg --arith-emulate-wide-int=\"widest-int-supported=32\" --test-tensor-copy-insertion=\"must-infer-memory-space\" --topological-sort --tosa-infer-shapes --composite-fixed-point-pass --test-func-set-type --arith-expand=\"include-bf16\" --composite-fixed-point-pass --remove-dead-values --loop-invariant-code-motion --loop-invariant-subset-hoisting --tosa-optional-decompositions --topological-sort --cse --tosa-make-broadcastable --canonicalize=\"test-convergence top-down=0\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-unsigned-when-equivalent --test-func-insert-result --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --arith-expand=\"include-bf16\" --canonicalize=\"test-convergence\" --topological-sort --test-func-erase-result --duplicate-function-elimination --test-func-erase-result --tosa-optional-decompositions --arith-unsigned-when-equivalent --symbol-dce --arith-int-range-narrowing --canonicalize --test-func-erase-result --tosa-infer-shapes --test-func-erase-arg --duplicate-function-elimination --tosa-test-quant-utils --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --cse --tosa-optional-decompositions --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --tosa-test-quant-utils --tosa-infer-shapes --arith-unsigned-when-equivalent --arith-expand=\"include-bf16\" --topological-sort --test-func-insert-arg --loop-invariant-subset-hoisting --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --loop-invariant-code-motion --tosa-layerwise-constant-fold --tosa-infer-shapes --sroa --tosa-optional-decompositions --test-func-erase-result --test-emulate-narrow-int=\"memref-load-bitwidth=8\" --tosa-validate --arith-emulate-wide-int --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --tosa-test-quant-utils --control-flow-sink --sroa --tosa-make-broadcastable --test-func-insert-arg --cse --loop-invariant-subset-hoisting --arith-expand=\"include-bf16\" --topological-sort --control-flow-sink --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --fold-tensor-subset-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-math-polynomial-approximation=\"enable-avx2\" --cse --arith-expand=\"include-bf16\" --test-func-insert-arg --arith-emulate-wide-int --test-func-set-type --test-linalg-drop-unit-dims --test-func-insert-arg --symbol-dce --math-extend-to-supported-types --fold-tensor-subset-ops --loop-invariant-subset-hoisting --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --inline --test-linalg-transform-patterns=\"test-winograd-conv2d\" --inline --test-linalg-transform-patterns=\"test-winograd-conv2d\" --topological-sort --test-func-insert-result --sroa --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --cse --test-linalg-greedy-fusion --arith-unsigned-when-equivalent --test-tensor-transform-patterns --test-linalg-greedy-fusion --canonicalize | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-drop-unit-dims --math-extend-to-supported-types --test-linalg-data-layout-propagation --sroa --test-memref-dependence-check | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-math-polynomial-approximation=\"enable-avx2\" --resolve-shaped-type-result-dims --scf-parallel-loop-specialization | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --remove-dead-values --inline --symbol-dce --test-func-insert-arg --duplicate-function-elimination --test-function-pass --sccp --fold-memref-alias-ops --symbol-dce --cse --mem2reg --control-flow-sink --composite-fixed-point-pass --remove-dead-values --canonicalize --canonicalize=\"test-convergence\" --resolve-ranked-shaped-type-result-dims --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --expand-realloc=\"emit-deallocs\" --duplicate-function-elimination --test-func-insert-arg --composite-fixed-point-pass --test-memref-dependence-check --test-function-pass --cse --expand-realloc | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize=\"test-convergence\" --sccp --test-func-set-type --test-func-insert-result --topological-sort --sccp --sccp --loop-invariant-code-motion --test-func-erase-arg --symbol-dce --composite-fixed-point-pass --inline --test-func-set-type --test-func-erase-result --loop-invariant-subset-hoisting --composite-fixed-point-pass --remove-dead-values | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --test-func-erase-result --canonicalize=\"test-convergence top-down=0\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --fold-tensor-subset-ops --symbol-dce --tosa-test-quant-utils --test-linalg-decompose-ops --test-func-set-type --math-extend-to-supported-types --test-math-polynomial-approximation=\"enable-avx2\" --test-math-to-vcix --test-linalg-rank-reduce-contraction-ops --test-function-pass --arith-unsigned-when-equivalent --arith-expand=\"include-bf16\" --arith-unsigned-when-equivalent --test-func-erase-arg --test-tensor-copy-insertion=\"must-infer-memory-space\" --tosa-layerwise-constant-fold | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-named-op-conversion --test-linalg-drop-unit-dims --mem2reg --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --linalg-inline-scalar-operands --test-function-pass --loop-invariant-subset-hoisting --composite-fixed-point-pass --linalg-fuse-elementwise-ops --test-func-insert-result --sccp --sroa --loop-invariant-subset-hoisting --test-linalg-decompose-ops --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --test-func-erase-result --topological-sort --linalg-specialize-generic-ops --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-collapsing-control\" --test-linalg-transform-patterns=\"test-swap-extract-slice-with-fill-pattern\" --mem2reg --test-linalg-elementwise-fusion-patterns=\"control-fusion-by-expansion\" --test-func-insert-arg --linalg-inline-scalar-operands --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-affine-data-copy --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize --symbol-dce --cse --loop-invariant-code-motion --sroa --int-range-optimizations --canonicalize=\"test-convergence top-down=0\" --remove-dead-values --arith-unsigned-when-equivalent --loop-invariant-subset-hoisting --test-func-erase-arg --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --symbol-dce --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --cse --control-flow-sink --composite-fixed-point-pass --loop-invariant-subset-hoisting --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --test-func-erase-result --test-func-erase-arg --inline --test-func-set-type --loop-invariant-subset-hoisting --test-func-set-type --sccp --inline --test-func-insert-arg --symbol-dce --canonicalize --test-func-erase-result --symbol-dce --topological-sort --canonicalize=\"test-convergence\" --topological-sort --remove-dead-values --test-func-insert-result --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --loop-invariant-subset-hoisting --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --tosa-optional-decompositions --tosa-test-quant-utils --tosa-make-broadcastable --tosa-make-broadcastable --tosa-test-quant-utils --test-func-insert-arg --test-function-pass --test-func-set-type --test-func-insert-result --test-tensor-copy-insertion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-make-broadcastable --test-emulate-narrow-int --mem2reg --loop-invariant-subset-hoisting --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-func-set-type --test-func-erase-result --loop-invariant-subset-hoisting --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-func-insert-arg --tosa-infer-shapes --inline --tosa-make-broadcastable --tosa-optional-decompositions --control-flow-sink --test-func-insert-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-arg --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --loop-invariant-code-motion --test-expand-math --test-func-erase-result --fold-tensor-subset-ops --linalg-specialize-generic-ops --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --control-flow-sink --test-tensor-transform-patterns=\"test-fold-constant-extract-slice\" --linalg-generalize-named-ops --test-linalg-data-layout-propagation --test-linalg-elementwise-fusion-patterns=\"fuse-multiuse-producer\" --math-uplift-to-fma --arith-unsigned-when-equivalent --math-uplift-to-fma --linalg-inline-scalar-operands --linalg-generalize-named-ops --cse --test-linalg-rank-reduce-contraction-ops --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --loop-invariant-subset-hoisting --test-func-set-type --sccp --linalg-generalize-named-ops --linalg-fuse-elementwise-ops --expand-strided-metadata --symbol-dce --loop-invariant-subset-hoisting --test-linalg-pad-fusion --linalg-inline-scalar-operands | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-math-polynomial-approximation --linalg-specialize-generic-ops --test-linalg-rank-reduce-contraction-ops --test-func-erase-arg --test-linalg-pad-fusion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-fuse-elementwise-ops --inline --linalg-fuse-elementwise-ops --linalg-fold-unit-extent-dims --test-function-pass --convert-elementwise-to-linalg --test-func-insert-result --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-wide-int --scf-for-to-while --normalize-memrefs --scf-for-loop-canonicalization --scf-forall-to-parallel --scf-forall-to-for --resolve-ranked-shaped-type-result-dims --composite-fixed-point-pass --resolve-shaped-type-result-dims | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-wide-int --int-range-optimizations --memref-emulate-wide-int --resolve-shaped-type-result-dims --test-func-erase-arg --resolve-shaped-type-result-dims --resolve-shaped-type-result-dims --int-range-optimizations --inline --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --symbol-dce --expand-strided-metadata --expand-realloc | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-arg --loop-invariant-subset-hoisting --sccp --test-func-erase-result --inline --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --tosa-test-quant-utils --tosa-infer-shapes --test-func-insert-arg --test-func-insert-arg --test-func-set-type --tosa-reduce-transposes --duplicate-function-elimination --tosa-optional-decompositions | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-unsigned-when-equivalent --int-range-optimizations --sccp --test-func-insert-result --test-func-erase-arg --symbol-dce --tosa-layerwise-constant-fold --math-extend-to-supported-types --math-extend-to-supported-types --sroa --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --duplicate-function-elimination --test-linalg-greedy-fusion --test-function-pass --test-func-insert-arg --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-math-polynomial-approximation=\"enable-avx2\" --test-func-set-type --composite-fixed-point-pass --tosa-reduce-transposes --test-function-pass --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-tensor-transform-patterns=\"use-foreach\" --math-extend-to-supported-types --loop-invariant-subset-hoisting --test-expand-math --linalg-specialize-generic-ops --test-func-set-type --math-uplift-to-fma --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --test-linalg-greedy-fusion --test-linalg-greedy-fusion --test-expand-math --test-func-set-type --test-function-pass --inline --sccp --tosa-reduce-transposes --linalg-inline-scalar-operands --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-transform-patterns=\"test-bubble-up-extract-slice-op-pattern\" --convert-elementwise-to-linalg --linalg-generalize-named-ops --test-math-algebraic-simplification | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --sroa --test-linalg-greedy-fusion --tosa-reduce-transposes --test-func-set-type --duplicate-function-elimination --duplicate-function-elimination --test-linalg-greedy-fusion --math-uplift-to-fma --tosa-test-quant-utils --duplicate-function-elimination --symbol-dce --linalg-inline-scalar-operands --tosa-make-broadcastable --test-linalg-rank-reduce-contraction-ops --tosa-layerwise-constant-fold --linalg-named-op-conversion --cse --convert-elementwise-to-linalg --topological-sort --tosa-layerwise-constant-fold --composite-fixed-point-pass --convert-elementwise-to-linalg --linalg-fold-unit-extent-dims --test-math-to-vcix --topological-sort --test-math-algebraic-simplification --test-func-insert-arg --test-expand-math | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize=\"test-convergence top-down=0\" --scf-for-loop-peeling=\"peel-front\" --topological-sort --topological-sort --test-scf-for-utils=\"test-replace-with-new-yields\" --scf-forall-to-for --mem2reg --arith-expand=\"include-bf16\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --test-func-erase-result --remove-dead-values --int-range-optimizations --arith-emulate-unsupported-floats --remove-dead-values --symbol-dce --composite-fixed-point-pass --control-flow-sink --symbol-dce --test-arith-emulate-wide-int --arith-emulate-unsupported-floats --duplicate-function-elimination --remove-dead-values --arith-unsigned-when-equivalent --inline --cse --remove-dead-values --test-arith-emulate-wide-int=\"widest-int-supported=8\" --duplicate-function-elimination --symbol-dce --loop-invariant-subset-hoisting --canonicalize --symbol-dce --test-func-erase-arg --control-flow-sink --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --int-range-optimizations --sroa --loop-invariant-code-motion --mem2reg --loop-invariant-code-motion --loop-invariant-code-motion --test-func-set-type --loop-invariant-subset-hoisting --control-flow-sink --sccp --test-func-set-type --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-arg --test-func-insert-result --inline --composite-fixed-point-pass --inline --cse --canonicalize=\"test-convergence\" --duplicate-function-elimination --mem2reg=\"region-simplify\" --test-function-pass --sccp --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --tosa-make-broadcastable --topological-sort --tosa-make-broadcastable --control-flow-sink --test-tensor-transform-patterns=\"test-rewrite-extract-slice-from-collapse-shape\" --composite-fixed-point-pass --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-reduce-transposes --loop-invariant-code-motion --fold-tensor-subset-ops --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --mem2reg=\"region-simplify\" --tosa-make-broadcastable --tosa-infer-shapes --duplicate-function-elimination --composite-fixed-point-pass --cse --test-func-erase-result --test-tensor-transform-patterns=\"test-fold-constant-extract-slice\" --loop-invariant-code-motion --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --sroa --tosa-make-broadcastable --sroa --topological-sort --test-function-pass --fold-tensor-subset-ops --composite-fixed-point-pass --tosa-make-broadcastable --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --test-func-erase-result --test-func-set-type --loop-invariant-code-motion --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --linalg-specialize-generic-ops --math-uplift-to-fma --test-linalg-transform-patterns=\"test-swap-subtensor-padtensor\" --duplicate-function-elimination --test-linalg-data-layout-propagation --tosa-optional-decompositions --test-math-to-vcix --test-linalg-drop-unit-dims --convert-elementwise-to-linalg --test-func-insert-arg --test-math-polynomial-approximation=\"enable-avx2\" --test-linalg-transform-patterns=\"test-erase-unused-operands-and-results\" --tosa-infer-shapes --topological-sort --cse --test-func-set-type --tosa-test-quant-utils --test-linalg-greedy-fusion --test-math-to-vcix | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-greedy-fusion --math-extend-to-supported-types --linalg-specialize-generic-ops --arith-unsigned-when-equivalent --test-tensor-copy-insertion --math-uplift-to-fma --math-extend-to-supported-types --linalg-fold-unit-extent-dims --arith-expand=\"include-bf16\" --mem2reg=\"region-simplify\" --linalg-generalize-named-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-expand=\"include-bf16\" --sccp --sroa --test-scf-if-utils --test-scf-if-utils --scf-parallel-loop-specialization --test-func-erase-arg --test-memref-dependence-check --arith-expand=\"include-bf16\" --sccp --expand-realloc --loop-invariant-subset-hoisting --test-arith-emulate-wide-int --mem2reg=\"region-simplify\" --test-func-erase-result --test-arith-emulate-wide-int --memref-emulate-wide-int --topological-sort --mem2reg=\"region-simplify\" --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg=\"region-simplify\" --scf-forall-to-parallel --sccp --symbol-dce --cse --scf-parallel-loop-fusion --cse --scf-for-loop-canonicalization --test-func-insert-result --test-memref-bound-check --test-scf-if-utils --expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-wide-int=\"widest-int-supported=32\" --topological-sort --int-range-optimizations --arith-expand --arith-unsigned-when-equivalent --arith-expand | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-result --remove-dead-values --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --remove-dead-values --test-func-erase-result --sccp --symbol-dce --composite-fixed-point-pass --test-func-erase-result --test-function-pass --arith-expand=\"include-bf16\" --loop-invariant-subset-hoisting --remove-dead-values --control-flow-sink --control-flow-sink --duplicate-function-elimination --arith-expand --remove-dead-values --sroa --arith-unsigned-when-equivalent --test-func-set-type --remove-dead-values --symbol-dce --arith-int-range-narrowing --test-func-erase-result --arith-expand | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --loop-invariant-subset-hoisting --canonicalize=\"test-convergence\" --canonicalize --topological-sort --topological-sort --test-func-erase-result --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --test-func-insert-result --control-flow-sink --test-func-set-type --mem2reg=\"region-simplify\" --tosa-make-broadcastable --test-tensor-transform-patterns=\"test-reassociative-reshape-folding\" --symbol-dce --topological-sort --test-func-insert-arg --loop-invariant-code-motion --tosa-reduce-transposes --canonicalize --canonicalize | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --test-function-pass --test-emulate-narrow-int=\"arith-compute-bitwidth=8\" --fold-tensor-subset-ops --test-func-insert-arg --fold-tensor-subset-ops --test-func-erase-arg --arith-emulate-wide-int=\"widest-int-supported=32\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --expand-strided-metadata --test-math-algebraic-simplification --cse --test-arith-emulate-wide-int --test-math-polynomial-approximation --memref-expand --test-func-erase-arg --sroa --math-uplift-to-fma --normalize-memrefs --sroa --test-math-polynomial-approximation --arith-unsigned-when-equivalent --memref-expand --test-arith-emulate-wide-int --canonicalize=\"test-convergence\" --canonicalize=\"test-convergence\" --test-func-insert-arg --loop-invariant-subset-hoisting --test-function-pass --math-uplift-to-fma --loop-invariant-subset-hoisting --memref-expand --resolve-ranked-shaped-type-result-dims --cse --test-arith-emulate-wide-int=\"widest-int-supported=8\" --math-extend-to-supported-types --int-range-optimizations | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-arg --test-func-insert-arg --loop-invariant-subset-hoisting --symbol-dce --topological-sort --remove-dead-values --loop-invariant-code-motion --sroa --test-func-erase-result --loop-invariant-subset-hoisting --inline --mem2reg --topological-sort --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --loop-invariant-code-motion --test-func-insert-result --sccp --cse --loop-invariant-subset-hoisting --loop-invariant-subset-hoisting --test-func-set-type --cse --symbol-dce --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --test-func-erase-result --sccp --tosa-test-quant-utils --topological-sort --mem2reg --loop-invariant-subset-hoisting --test-func-insert-result --canonicalize=\"test-convergence top-down=0\" --tosa-optional-decompositions --composite-fixed-point-pass --test-func-set-type --cse --tosa-reduce-transposes --duplicate-function-elimination --test-func-set-type --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --duplicate-function-elimination --tosa-reduce-transposes --tosa-reduce-transposes --loop-invariant-subset-hoisting --control-flow-sink --canonicalize=\"test-convergence top-down=0\" --cse --tosa-test-quant-utils --loop-invariant-subset-hoisting --tosa-make-broadcastable | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-infer-shapes --test-func-insert-arg --loop-invariant-subset-hoisting --control-flow-sink --canonicalize=\"test-convergence top-down=0\" --test-func-insert-result --inline --symbol-dce --test-func-set-type --fold-tensor-subset-ops --topological-sort --test-func-set-type --cse --topological-sort --test-func-insert-arg --tosa-make-broadcastable | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-math-polynomial-approximation --linalg-named-op-conversion --fold-tensor-subset-ops --test-linalg-rank-reduce-contraction-ops --test-func-erase-result --math-extend-to-supported-types --inline --fold-tensor-subset-ops --linalg-inline-scalar-operands --test-arith-emulate-wide-int --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-math-polynomial-approximation=\"enable-avx2\" --test-func-insert-result --test-linalg-greedy-fusion --tosa-make-broadcastable --tosa-reduce-transposes --sccp --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-make-broadcastable --cse --fold-tensor-subset-ops --test-function-pass --linalg-generalize-named-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-arg --test-func-erase-result --sroa --canonicalize=\"test-convergence\" --test-linalg-drop-unit-dims --linalg-fold-unit-extent-dims --control-flow-sink --test-func-insert-arg --sroa --test-func-erase-result --control-flow-sink --cse --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-for-loop-range-folding --scf-parallel-loop-specialization | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-unsigned-when-equivalent --loop-invariant-code-motion --duplicate-function-elimination --test-arith-emulate-wide-int=\"widest-int-supported=8\" --cse --control-flow-sink --test-func-erase-arg --sccp --sccp --composite-fixed-point-pass --test-func-erase-arg --duplicate-function-elimination --int-range-optimizations --loop-invariant-code-motion --arith-expand --loop-invariant-subset-hoisting --sroa --sccp --sccp --sroa --arith-unsigned-when-equivalent --arith-emulate-unsupported-floats --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --mem2reg --test-function-pass --test-func-insert-arg --canonicalize --test-func-set-type --mem2reg --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --test-func-erase-result --sroa --tosa-test-quant-utils --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --test-func-erase-result --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --tosa-reduce-transposes --test-math-to-vcix --test-func-set-type --linalg-named-op-conversion --arith-emulate-wide-int=\"widest-int-supported=32\" --test-func-set-type --test-arith-emulate-wide-int=\"widest-int-supported=8\" --arith-emulate-wide-int=\"widest-int-supported=32\" --test-linalg-decompose-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-arg --loop-invariant-subset-hoisting --test-func-set-type --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --control-flow-sink --int-range-optimizations --symbol-dce --test-math-polynomial-approximation --tosa-reduce-transposes --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --normalize-memrefs --test-memref-dependence-check --convert-elementwise-to-linalg --test-math-polynomial-approximation=\"enable-avx2\" --normalize-memrefs --sccp --test-expand-math --mem2reg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --resolve-ranked-shaped-type-result-dims --memref-emulate-wide-int=\"widest-int-supported=32\" --resolve-shaped-type-result-dims --test-func-set-type --test-memref-bound-check --test-memref-dependence-check --fold-memref-alias-ops --convert-elementwise-to-linalg --linalg-generalize-named-ops --test-memref-bound-check --test-linalg-greedy-fusion --test-linalg-elementwise-fusion-patterns=\"fuse-multiuse-producer\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --expand-realloc --scf-for-loop-range-folding --symbol-dce --loop-invariant-subset-hoisting --scf-for-loop-specialization --arith-emulate-wide-int --remove-dead-values --sroa --test-scf-if-utils --inline --remove-dead-values --test-scf-for-utils --sccp --test-memref-dependence-check --cse --test-scf-uplift-while-to-for --expand-strided-metadata --expand-strided-metadata --test-memref-dependence-check --remove-dead-values --remove-dead-values --test-expand-math --normalize-memrefs --test-math-algebraic-simplification --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --duplicate-function-elimination --arith-unsigned-when-equivalent --test-func-set-type --sroa --arith-expand=\"include-bf16\" --test-expand-math --sccp --remove-dead-values --test-func-erase-arg --test-func-insert-result --loop-invariant-code-motion --test-func-erase-result --int-range-optimizations --duplicate-function-elimination --int-range-optimizations --loop-invariant-subset-hoisting --test-func-insert-result --arith-emulate-unsupported-floats --arith-emulate-wide-int=\"widest-int-supported=32\" --control-flow-sink --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-expand-math --test-math-polynomial-approximation --canonicalize --control-flow-sink --topological-sort --test-math-polynomial-approximation=\"enable-avx2\" --test-func-set-type --test-function-pass --test-func-insert-arg --test-func-insert-arg --symbol-dce --canonicalize --math-extend-to-supported-types --canonicalize --test-expand-math --test-arith-emulate-wide-int --symbol-dce --test-function-pass --test-math-algebraic-simplification --test-func-insert-arg --test-math-to-vcix --sccp --test-math-to-vcix | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-expand-math --symbol-dce --loop-invariant-code-motion --loop-invariant-subset-hoisting --duplicate-function-elimination --composite-fixed-point-pass --mem2reg --loop-invariant-subset-hoisting --control-flow-sink --mem2reg --test-math-polynomial-approximation --topological-sort --math-extend-to-supported-types --test-math-to-vcix --math-uplift-to-fma --math-extend-to-supported-types --sroa --test-math-to-vcix --test-math-polynomial-approximation --test-func-set-type --cse --test-math-polynomial-approximation=\"enable-avx2\" --sroa --control-flow-sink --inline --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --test-function-pass --remove-dead-values --symbol-dce --sroa --canonicalize --sccp --tosa-optional-decompositions --test-tensor-transform-patterns=\"use-foreach\" --loop-invariant-code-motion --cse --tosa-reduce-transposes --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-math-polynomial-approximation --arith-unsigned-when-equivalent --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-expansion\" --control-flow-sink --canonicalize=\"test-convergence\" --test-tensor-transform-patterns | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-specialize-generic-ops --inline --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --test-linalg-decompose-ops --test-linalg-data-layout-propagation --test-tensor-copy-insertion --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --linalg-generalize-named-ops --test-linalg-drop-unit-dims --test-tensor-copy-insertion --math-uplift-to-fma --linalg-fuse-elementwise-ops --test-math-algebraic-simplification --test-func-erase-result --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-arith-emulate-wide-int=\"widest-int-supported=8\" --resolve-shaped-type-result-dims --scf-for-loop-range-folding --duplicate-function-elimination --expand-realloc=\"emit-deallocs\" --canonicalize=\"test-convergence\" --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --normalize-memrefs --expand-realloc=\"emit-deallocs\" --memref-emulate-wide-int=\"widest-int-supported=32\" --sccp --arith-expand=\"include-bf16\" --inline --math-uplift-to-fma | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-unsigned-when-equivalent --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --duplicate-function-elimination --topological-sort --sroa --test-func-insert-arg --canonicalize=\"test-convergence top-down=0\" --test-func-erase-arg --control-flow-sink --test-func-erase-result --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --composite-fixed-point-pass --symbol-dce --fold-tensor-subset-ops --test-tensor-transform-patterns=\"test-fold-consecutive-insert-extract-slice\" --tosa-layerwise-constant-fold --composite-fixed-point-pass --control-flow-sink --tosa-layerwise-constant-fold --test-func-set-type --duplicate-function-elimination --remove-dead-values | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-expand-math --test-func-erase-arg --memref-emulate-wide-int=\"widest-int-supported=32\" --test-scf-uplift-while-to-for --scf-for-loop-range-folding --test-scf-uplift-while-to-for --loop-invariant-subset-hoisting --arith-expand=\"include-bf16\" --test-scf-while-op-builder --int-range-optimizations --test-arith-emulate-wide-int=\"widest-int-supported=8\" --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-for-loop-canonicalization --math-extend-to-supported-types --fold-memref-alias-ops --memref-expand --test-memref-bound-check --test-scf-pipelining=\"no-epilogue-peeling\" --mem2reg=\"region-simplify\" --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-scf-uplift-while-to-for --scf-for-loop-canonicalization --test-scf-while-op-builder --test-scf-for-utils --sccp --scf-parallel-loop-tiling --loop-invariant-code-motion --symbol-dce --scf-for-loop-canonicalization --symbol-dce --composite-fixed-point-pass --scf-forall-to-parallel --symbol-dce --test-scf-pipelining --topological-sort --scf-parallel-loop-tiling --sccp --scf-forall-to-parallel --canonicalize=\"test-convergence\" --test-func-set-type --inline --scf-for-loop-specialization --cse --composite-fixed-point-pass --test-scf-while-op-builder --duplicate-function-elimination --test-math-polynomial-approximation --math-extend-to-supported-types --test-func-erase-result --test-scf-for-utils | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --affine-parallelize=\"max-nested=1\" --scf-for-to-while --test-func-set-type --affine-parallelize=\"max-nested=1\" --affine-expand-index-ops-as-affine --affine-pipeline-data-transfer --test-scf-pipelining=\"annotate\" --test-affine-data-copy=\"for-memref-region\" --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --test-func-insert-result --arith-unsigned-when-equivalent --test-func-insert-arg --control-flow-sink --cse --topological-sort --arith-expand --sccp --control-flow-sink --test-func-erase-result --test-func-insert-result --remove-dead-values --duplicate-function-elimination --symbol-dce --sroa --sccp --topological-sort --loop-invariant-code-motion --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --duplicate-function-elimination --test-func-set-type --inline --test-arith-emulate-wide-int --loop-invariant-code-motion --cse --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-arg --symbol-dce --test-func-insert-arg --control-flow-sink --test-func-set-type --sroa --test-func-insert-arg --composite-fixed-point-pass --test-function-pass --inline --canonicalize | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --cse --tosa-infer-shapes --loop-invariant-subset-hoisting --duplicate-function-elimination --canonicalize=\"test-convergence top-down=0\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sroa --arith-emulate-wide-int --fold-tensor-subset-ops --tosa-make-broadcastable --remove-dead-values --test-func-erase-arg --tosa-test-quant-utils --remove-dead-values --arith-expand --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-test-quant-utils --arith-expand=\"include-bf16\" --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --fold-tensor-subset-ops --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-math-polynomial-approximation --test-linalg-data-layout-propagation --arith-unsigned-when-equivalent --test-linalg-transform-patterns=\"test-decompose-winograd-ops\" --linalg-inline-scalar-operands --int-range-optimizations --canonicalize --inline --sroa --linalg-named-op-conversion --control-flow-sink --linalg-named-op-conversion --topological-sort --test-func-erase-result --test-math-algebraic-simplification --test-linalg-data-layout-propagation --linalg-inline-scalar-operands --test-func-insert-result --test-linalg-elementwise-fusion-patterns=\"control-fusion-by-expansion\" --test-tensor-copy-insertion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg=\"region-simplify\" --test-linalg-data-layout-propagation --expand-realloc=\"emit-deallocs\" --resolve-ranked-shaped-type-result-dims --linalg-fold-unit-extent-dims --linalg-named-op-conversion --arith-expand --topological-sort --loop-invariant-code-motion --arith-expand=\"include-bf16\" --resolve-shaped-type-result-dims --test-linalg-elementwise-fusion-patterns=\"collapse-dimensions-control=2,3\" --linalg-fuse-elementwise-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-arg --fold-memref-alias-ops --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --sccp --test-expand-math --loop-invariant-code-motion --resolve-shaped-type-result-dims --linalg-fold-unit-extent-dims --memref-expand --test-func-erase-result --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --test-math-algebraic-simplification --test-func-erase-arg --test-math-algebraic-simplification --composite-fixed-point-pass --sccp --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --symbol-dce --expand-strided-metadata --fold-memref-alias-ops --sroa --linalg-fold-unit-extent-dims --test-math-to-vcix --test-math-to-vcix --test-expand-math --test-func-set-type --normalize-memrefs --mem2reg=\"region-simplify\" --test-memref-dependence-check --math-extend-to-supported-types --expand-realloc=\"emit-deallocs\" --test-math-to-vcix --test-math-polynomial-approximation=\"enable-avx2\" --test-function-pass --topological-sort --loop-invariant-code-motion --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-collapsing\" --test-linalg-data-layout-propagation --linalg-specialize-generic-ops --linalg-generalize-named-ops --control-flow-sink --test-func-insert-arg --loop-invariant-subset-hoisting --test-linalg-elementwise-fusion-patterns=\"fuse-multiuse-producer\" --convert-elementwise-to-linalg --test-linalg-data-layout-propagation --duplicate-function-elimination --test-emulate-narrow-int=\"memref-load-bitwidth=32\" --test-func-insert-result --arith-int-range-narrowing --test-linalg-rank-reduce-contraction-ops --linalg-specialize-generic-ops --test-emulate-narrow-int=\"memref-load-bitwidth=8\" --arith-unsigned-when-equivalent --test-linalg-drop-unit-dims --loop-invariant-code-motion --arith-emulate-unsupported-floats --test-linalg-rank-reduce-contraction-ops --arith-unsigned-when-equivalent --test-linalg-drop-unit-dims | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --resolve-shaped-type-result-dims --expand-strided-metadata --sroa --test-func-erase-result --test-function-pass --expand-realloc --expand-realloc --test-func-erase-arg --symbol-dce --control-flow-sink --test-func-erase-result --expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --test-function-pass --duplicate-function-elimination --inline --loop-invariant-subset-hoisting --duplicate-function-elimination --test-func-insert-result --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --test-func-erase-arg --symbol-dce --composite-fixed-point-pass --mem2reg --symbol-dce --loop-invariant-code-motion --test-function-pass --canonicalize=\"test-convergence\" --test-func-set-type --test-func-insert-arg --duplicate-function-elimination --sccp --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --tosa-optional-decompositions --sroa --test-func-insert-arg --test-func-insert-arg --test-tensor-copy-insertion --tosa-test-quant-utils --sroa --topological-sort --test-function-pass --control-flow-sink --control-flow-sink --tosa-test-quant-utils --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --tosa-reduce-transposes --symbol-dce --test-func-set-type --test-func-erase-arg --control-flow-sink --tosa-infer-shapes --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-make-broadcastable --duplicate-function-elimination --loop-invariant-code-motion --test-func-set-type --duplicate-function-elimination --sccp --sccp --test-func-insert-arg --fold-tensor-subset-ops --topological-sort --topological-sort --int-range-optimizations | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --arith-unsigned-when-equivalent --test-linalg-drop-unit-dims | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-unsigned-when-equivalent --sroa --arith-expand=\"include-bf16\" --test-math-polynomial-approximation=\"enable-avx2\" --test-linalg-elementwise-fusion-patterns --test-linalg-rank-reduce-contraction-ops --test-func-set-type --sccp --topological-sort --linalg-specialize-generic-ops --arith-int-range-narrowing --test-linalg-drop-unit-dims --convert-elementwise-to-linalg --composite-fixed-point-pass --arith-expand=\"include-bf16\" --canonicalize=\"test-convergence top-down=0\" --test-function-pass --test-linalg-elementwise-fusion-patterns=\"fuse-generic-ops-control\" --arith-emulate-wide-int --arith-expand --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-func-erase-arg --symbol-dce --math-extend-to-supported-types --convert-elementwise-to-linalg --test-linalg-data-layout-propagation --test-tensor-transform-patterns=\"use-foreach\" --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --loop-invariant-subset-hoisting --topological-sort --arith-int-range-narrowing --test-func-set-type --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-func-set-type --test-math-algebraic-simplification --test-func-set-type --linalg-fuse-elementwise-ops --topological-sort --linalg-fold-unit-extent-dims | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --composite-fixed-point-pass --test-linalg-elementwise-fusion-patterns=\"collapse-dimensions-control=2,3\" --linalg-specialize-generic-ops --sroa --test-linalg-data-layout-propagation --test-math-polynomial-approximation=\"enable-avx2\" --loop-invariant-subset-hoisting --linalg-fuse-elementwise-ops --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --test-linalg-pad-fusion --linalg-fuse-elementwise-ops --test-func-erase-arg --test-func-insert-arg --test-linalg-drop-unit-dims --duplicate-function-elimination --linalg-specialize-generic-ops --linalg-fuse-elementwise-ops --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --test-func-set-type --loop-invariant-subset-hoisting --sccp --test-linalg-transform-patterns=\"test-vector-transfer-forwarding-patterns\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --test-func-erase-result --test-func-insert-arg --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --composite-fixed-point-pass --duplicate-function-elimination --symbol-dce --mem2reg --duplicate-function-elimination --test-func-erase-arg --test-func-set-type --test-func-insert-result --duplicate-function-elimination --control-flow-sink --remove-dead-values --control-flow-sink --test-func-insert-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.5feafe537768709b.mlir --loop-invariant-code-motion --control-flow-sink --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sroa --cse --test-func-erase-result --test-func-set-type --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-infer-shapes --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --inline --linalg-inline-scalar-operands --int-range-optimizations --linalg-fold-unit-extent-dims --canonicalize=\"test-convergence top-down=0\" --arith-int-range-narrowing --sccp --arith-emulate-wide-int --tosa-make-broadcastable --inline --test-emulate-narrow-int=\"memref-load-bitwidth=32\" --test-linalg-rank-reduce-contraction-ops --test-emulate-narrow-int=\"memref-load-bitwidth=32\" --sccp --tosa-validate --test-tensor-transform-patterns=\"test-fold-constant-extract-slice\" --test-func-set-type --test-math-algebraic-simplification --composite-fixed-point-pass --composite-fixed-point-pass --test-arith-emulate-wide-int=\"widest-int-supported=8\" --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --convert-elementwise-to-linalg --control-flow-sink --resolve-ranked-shaped-type-result-dims --test-memref-bound-check --test-linalg-greedy-fusion --test-arith-emulate-wide-int=\"widest-int-supported=8\" --duplicate-function-elimination --cse --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --memref-emulate-wide-int --test-expand-math --duplicate-function-elimination --test-math-to-vcix --test-math-polynomial-approximation --expand-strided-metadata --test-linalg-rank-reduce-contraction-ops --test-expand-math --topological-sort --sroa --arith-emulate-wide-int --sccp --normalize-memrefs --linalg-fuse-elementwise-ops --memref-expand --sroa --fold-memref-alias-ops --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --test-linalg-pad-fusion --math-uplift-to-fma --topological-sort --test-func-erase-result --linalg-generalize-named-ops --linalg-inline-scalar-operands --test-math-to-vcix --expand-realloc --topological-sort --test-linalg-greedy-fusion --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-pad-fusion --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --convert-elementwise-to-linalg --linalg-inline-scalar-operands --sccp --topological-sort --symbol-dce --test-math-polynomial-approximation --linalg-named-op-conversion --test-linalg-drop-unit-dims --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --test-func-insert-result --symbol-dce --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-emulate-narrow-int=\"arith-compute-bitwidth=8\" --resolve-shaped-type-result-dims --sccp --int-range-optimizations --resolve-shaped-type-result-dims --scf-for-loop-peeling --sroa --control-flow-sink --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-result --test-func-erase-arg --test-emulate-narrow-int=\"arith-compute-bitwidth=8\" --scf-parallel-loop-specialization --test-emulate-narrow-int=\"memref-load-bitwidth=8\" --cse --scf-for-loop-peeling=\"peel-front\" --test-arith-emulate-wide-int --duplicate-function-elimination --test-func-erase-arg --scf-parallel-loop-tiling=\"parallel-loop-tile-sizes=1,4 no-min-max-bounds=true\" --inline --test-func-erase-arg --symbol-dce --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --composite-fixed-point-pass --topological-sort --topological-sort --loop-invariant-subset-hoisting --test-scf-while-op-builder --sccp --scf-for-loop-specialization --composite-fixed-point-pass --scf-for-loop-specialization --test-scf-pipelining --symbol-dce --composite-fixed-point-pass --test-scf-pipelining=\"no-epilogue-peeling\" --scf-forall-to-parallel --cse --canonicalize=\"test-convergence\" --test-scf-uplift-while-to-for --inline --duplicate-function-elimination --scf-for-loop-specialization --arith-unsigned-when-equivalent --scf-parallel-loop-tiling --loop-invariant-subset-hoisting --cse --scf-parallel-loop-fusion --scf-forall-to-parallel --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --remove-dead-values --test-scf-for-utils --composite-fixed-point-pass --test-scf-for-utils --topological-sort --test-scf-while-op-builder --canonicalize=\"test-convergence top-down=0\" --test-function-pass --scf-parallel-loop-fusion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --composite-fixed-point-pass --test-function-pass --composite-fixed-point-pass --symbol-dce --duplicate-function-elimination --duplicate-function-elimination --loop-invariant-subset-hoisting --loop-invariant-subset-hoisting --loop-invariant-code-motion --remove-dead-values --test-func-erase-arg --cse --symbol-dce --test-func-erase-arg --mem2reg=\"region-simplify\" --composite-fixed-point-pass --mem2reg --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --composite-fixed-point-pass --topological-sort --loop-invariant-subset-hoisting --control-flow-sink --cse --test-func-set-type --symbol-dce --sroa --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648],\n[-0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648,    -0.370648]]]",
        "test_line": "[[[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823],\n[-0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823,    -0.370823]]]"
    }
}
