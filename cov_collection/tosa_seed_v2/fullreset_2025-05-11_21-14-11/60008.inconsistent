{
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v2/tosa.527fa804f995247d.mlir --canonicalize=\"test-convergence\" --inline --test-func-erase-arg --tosa-optional-decompositions --composite-fixed-point-pass --loop-invariant-subset-hoisting --inline --mem2reg=\"region-simplify\" --test-tensor-copy-insertion=\"must-infer-memory-space\" --sccp --loop-invariant-subset-hoisting --symbol-dce --symbol-dce --inline --symbol-dce --test-function-pass --canonicalize=\"test-convergence top-down=0\" --test-tensor-copy-insertion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-tensor-transform-patterns=\"use-foreach\" --scf-parallel-loop-specialization --test-tensor-copy-insertion --test-scf-while-op-builder --loop-invariant-subset-hoisting --scf-for-to-while | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-scf-while-op-builder --test-function-pass --test-math-to-vcix --math-uplift-to-fma --symbol-dce --tosa-optional-decompositions --test-scf-for-utils --test-scf-if-utils --test-scf-while-op-builder | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-specialize-generic-ops --linalg-specialize-generic-ops --fold-tensor-subset-ops --convert-elementwise-to-linalg --test-linalg-greedy-fusion --symbol-dce --linalg-generalize-named-ops --mem2reg --linalg-named-op-conversion --convert-elementwise-to-linalg --composite-fixed-point-pass --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --linalg-generalize-named-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sroa --inline --test-tensor-copy-insertion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-tensor-copy-insertion --cse --test-tensor-transform-patterns=\"test-rewrite-extract-slice-from-collapse-shape\" --cse --tosa-optional-decompositions --tosa-reduce-transposes --sroa --linalg-inline-scalar-operands --fold-tensor-subset-ops --test-func-insert-result --linalg-named-op-conversion --test-linalg-pad-fusion --inline --canonicalize=\"test-convergence\" --linalg-fuse-elementwise-ops --canonicalize --cse --linalg-specialize-generic-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-pad-fusion --loop-invariant-subset-hoisting --arith-unsigned-when-equivalent --resolve-ranked-shaped-type-result-dims --linalg-named-op-conversion --memref-expand | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-unsigned-when-equivalent --test-linalg-drop-unit-dims --test-arith-emulate-wide-int --arith-emulate-wide-int --arith-unsigned-when-equivalent --test-linalg-decompose-ops --canonicalize=\"test-convergence top-down=0\" --test-func-insert-arg --mem2reg --convert-elementwise-to-linalg --mem2reg=\"region-simplify\" --sroa --arith-int-range-narrowing --symbol-dce --linalg-fold-unit-extent-dims --inline --symbol-dce --arith-emulate-wide-int=\"widest-int-supported=32\" --cse --arith-unsigned-when-equivalent --test-func-insert-result --linalg-fold-unit-extent-dims --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-arg --remove-dead-values --resolve-shaped-type-result-dims --test-func-insert-arg --test-emulate-narrow-int=\"arith-compute-bitwidth=8\" --arith-int-range-narrowing --scf-for-loop-peeling=\"skip-partial\" --test-scf-while-op-builder --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-memref-dependence-check --scf-parallel-loop-tiling=\"parallel-loop-tile-sizes=1,4 no-min-max-bounds=true\" --mem2reg=\"region-simplify\" --loop-invariant-subset-hoisting --composite-fixed-point-pass --scf-forall-to-parallel --test-func-erase-result --memref-emulate-wide-int=\"widest-int-supported=32\" --arith-emulate-wide-int --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --scf-parallel-loop-fusion --scf-for-loop-specialization --test-scf-pipelining=\"annotate\" --composite-fixed-point-pass --test-scf-pipelining=\"annotate\" --sroa --fold-memref-alias-ops --canonicalize | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-parallel-loop-fusion --test-scf-pipelining=\"no-epilogue-peeling\" --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --expand-realloc=\"emit-deallocs\" --test-func-erase-result --scf-forall-to-for --canonicalize --scf-for-loop-range-folding --composite-fixed-point-pass --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --scf-forall-to-parallel --arith-emulate-wide-int --test-scf-uplift-while-to-for --scf-for-loop-canonicalization --resolve-shaped-type-result-dims --fold-memref-alias-ops --canonicalize=\"test-convergence\" --resolve-ranked-shaped-type-result-dims --scf-parallel-loop-specialization --test-function-pass --expand-strided-metadata --scf-forall-to-parallel --scf-parallel-loop-tiling=\"parallel-loop-tile-sizes=1,4 no-min-max-bounds=true\" --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --test-func-erase-arg --control-flow-sink --arith-int-range-narrowing --test-func-erase-result --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --remove-dead-values --canonicalize --mem2reg=\"region-simplify\" --loop-invariant-subset-hoisting --arith-emulate-wide-int=\"widest-int-supported=32\" --arith-unsigned-when-equivalent --loop-invariant-code-motion --symbol-dce --sccp --test-func-erase-arg --int-range-optimizations --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --inline --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --test-func-erase-result --test-func-erase-arg --inline --cse --mem2reg --inline --sccp --sroa --remove-dead-values --inline --cse --composite-fixed-point-pass --cse --loop-invariant-subset-hoisting --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --remove-dead-values --topological-sort --test-func-erase-arg --test-func-erase-result --control-flow-sink --test-func-erase-arg --sccp --test-function-pass --test-func-erase-arg --loop-invariant-code-motion --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953],\n[-2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953],\n[-2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953],\n[-2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953],\n[-2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953],\n[-2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953],\n[-2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953],\n[-2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953],\n[-2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953],\n[-2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953],\n[-2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953],\n[-2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953]]]",
        "test_line": "[[[-2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -876487648,    22048,    -876487488,    22048,    -876487488,    22048,    -876487392,    22048,    -2953,    -2953,    -2953,    -2953,    -876487200,    22048,    -876487104,    22048,    -876487104,    22048],\n[-2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -876486656,    22048,    -876486656,    22048,    -876486560,    22048,    -876486560,    22048,    -2953,    -2953,    -2953,    -2953,    -876485888,    22048,    -876485888,    22048,    -876485728,    22048],\n[-2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -876484384,    22048,    -876484256,    22048,    -876484256,    22048,    -875872576,    22048,    -2953,    -2953,    -2953,    -2953,    -875872448,    22048,    -875872352,    22048,    -875872352,    22048],\n[-2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -875871712,    22048,    -875871712,    22048,    -875871616,    22048,    -875871616,    22048,    -2953,    -2953,    -2953,    -2953,    -875871360,    22048,    -875871360,    22048,    -875871168,    22048],\n[-2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -875870912,    22048,    -875870816,    22048,    -875870816,    22048,    -875870624,    22048,    -2953,    -2953,    -2953,    -2953,    -875870528,    22048,    -875870336,    22048,    -875870336,    22048],\n[-2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -875876624,    22048,    -875876624,    22048,    -875876496,    22048,    -875876496,    22048,    -2953,    -2953,    -2953,    -2953,    -875876272,    22048,    -875876272,    22048,    -875876144,    22048],\n[-2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -875875952,    22048,    -875875312,    22048,    -875875312,    22048,    -875875120,    22048,    -2953,    -2953,    -2953,    -2953,    -875874992,    22048,    -875874864,    22048,    -875874864,    22048],\n[-2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -875873584,    22048,    -875873584,    22048,    -875873424,    22048,    -875873424,    22048,    -2953,    -2953,    -2953,    -2953,    -875873136,    22048,    -875873136,    22048,    -875873008,    22048],\n[-2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -875872688,    22048,    -875868400,    22048,    -875868400,    22048,    -875868304,    22048,    -2953,    -2953,    -2953,    -2953,    -875868144,    22048,    -875866704,    22048,    -875866704,    22048],\n[-2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -875866320,    22048,    -875866320,    22048,    -875866224,    22048,    -875866224,    22048,    -2953,    -2953,    -2953,    -2953,    -875865616,    22048,    -875865616,    22048,    -875864560,    22048],\n[-2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -875812512,    22048,    -875788000,    22048,    -875869696,    22048,    -875869568,    22048,    -2953,    -2953,    -2953,    -2953,    1152,    0,    48,    0,    -877374064,    22048],\n[-2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    -2953,    209,    0,    -876129744,    22048,    -876532784,    22048,    4,    22048,    -2953,    -2953,    -2953,    -2953,    1724189824,    32685,    5,    -1,    -876239640,    22048]]]"
    }
}
