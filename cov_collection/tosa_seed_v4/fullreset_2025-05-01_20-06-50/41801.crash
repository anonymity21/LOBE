{
    "llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) \nSignalHandler(int, siginfo_t*, void*) Signals.cpp:0:0\n__restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x14420)\nraise /build/glibc-e2p3jK/glibc-2.31/signal/../sysdeps/unix/sysv/linux/raise.c:51:1\nabort /build/glibc-e2p3jK/glibc-2.31/stdlib/abort.c:81:7\nget_sysdep_segment_value /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:509:8\n_nl_load_domain /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:970:34\n(/lib/x86_64-linux-gnu/libc.so.6+0x33fd6)\n(anonymous namespace)::TestMemRefStrideCalculation::runOnOperation() TestMemRefStrideCalculation.cpp:0:0\nmlir::detail::OpToOpPassAdaptor::run(mlir::Pass*, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int) \nmlir::detail::OpToOpPassAdaptor::runPipeline(mlir::OpPassManager&, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int, mlir::PassInstrumentor*, mlir::PassInstrumentation::PipelineParentInfo const*) \nmlir::PassManager::run(mlir::Operation*) \nperformActions(llvm::raw_ostream&, std::shared_ptr<llvm::SourceMgr> const&, mlir::MLIRContext*, mlir::MlirOptMainConfig const&) MlirOptMain.cpp:0:0\nprocessBuffer(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::MlirOptMainConfig const&, mlir::DialectRegistry&, llvm::ThreadPoolInterface*) MlirOptMain.cpp:0:0\nllvm::LogicalResult llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>::callback_fn<mlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&)::'lambda'(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>(long, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&) MlirOptMain.cpp:0:0\nmlir::splitAndProcessBuffer(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>, llvm::raw_ostream&, llvm::StringRef, llvm::StringRef) \nmlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, llvm::StringRef, mlir::DialectRegistry&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, mlir::DialectRegistry&) \nmain \n__libc_start_main /build/glibc-e2p3jK/glibc-2.31/csu/../csu/libc-start.c:342:3\n_start ": [
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.58ed17ffa7d63e6d.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.58ed17ffa7d63e6d.mlir"
    ],
    "llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) \nSignalHandler(int, siginfo_t*, void*) Signals.cpp:0:0\n__restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x14420)\nraise /build/glibc-e2p3jK/glibc-2.31/signal/../sysdeps/unix/sysv/linux/raise.c:51:1\nabort /build/glibc-e2p3jK/glibc-2.31/stdlib/abort.c:81:7\nget_sysdep_segment_value /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:509:8\n_nl_load_domain /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:970:34\n(/lib/x86_64-linux-gnu/libc.so.6+0x33fd6)\n(anonymous namespace)::aliasingFuncOpBBArgsAnalysis(mlir::func::FuncOp, mlir::bufferization::OneShotAnalysisState&, mlir::bufferization::func_ext::FuncAnalysisState&) OneShotModuleBufferize.cpp:0:0\nmlir::bufferization::analyzeModuleOp(mlir::ModuleOp, mlir::bufferization::OneShotAnalysisState&, mlir::bufferization::BufferizationStatistics*) \nmlir::bufferization::insertTensorCopies(mlir::Operation*, mlir::bufferization::OneShotBufferizationOptions const&, mlir::bufferization::BufferizationStatistics*) \nmlir::bufferization::runOneShotModuleBufferize(mlir::ModuleOp, mlir::bufferization::OneShotBufferizationOptions const&, mlir::bufferization::BufferizationStatistics*) \n(anonymous namespace)::OneShotBufferizePass::runOnOperation() Bufferize.cpp:0:0\nmlir::detail::OpToOpPassAdaptor::run(mlir::Pass*, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int) \nmlir::detail::OpToOpPassAdaptor::runPipeline(mlir::OpPassManager&, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int, mlir::PassInstrumentor*, mlir::PassInstrumentation::PipelineParentInfo const*) \nmlir::PassManager::run(mlir::Operation*) \nperformActions(llvm::raw_ostream&, std::shared_ptr<llvm::SourceMgr> const&, mlir::MLIRContext*, mlir::MlirOptMainConfig const&) MlirOptMain.cpp:0:0\nprocessBuffer(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::MlirOptMainConfig const&, mlir::DialectRegistry&, llvm::ThreadPoolInterface*) MlirOptMain.cpp:0:0\nllvm::LogicalResult llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>::callback_fn<mlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&)::'lambda'(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>(long, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&) MlirOptMain.cpp:0:0\nmlir::splitAndProcessBuffer(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>, llvm::raw_ostream&, llvm::StringRef, llvm::StringRef) \nmlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, llvm::StringRef, mlir::DialectRegistry&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, mlir::DialectRegistry&) \nmain \n__libc_start_main /build/glibc-e2p3jK/glibc-2.31/csu/../csu/libc-start.c:342:3\n_start ": [
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.603b3371efa24b31.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.603b3371efa24b31.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.9b375ff5a0bc7ce4.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.d470aee651f3f60b.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.f56e79176462b9de.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.c7f54a99b67d1ea1.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.9e860154cf036816.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.41fc9396ed9705cf.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.39a7c0a34f3b782e.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.582642d47ec8a617.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.574a42fb259968f6.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.75d714067472423c.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.469b32aef8d46f41.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.56a88ee9a400bd0d.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.c803376515984f3a.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.9bc7fa64ac726f6d.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.14e21b123a079fc0.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.e57c2663d7cab56f.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.9eb80ad192c21df1.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.1ce393c6c85d4f08.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.33b6ab4d6ee8bf81.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.cbc10d12b61734c4.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.c8e1286266d8adf2.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.cf97afd1ffd1f565.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.e6a47ec0da3eef04.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.7d2d3bfcd62ec386.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.36a8963a5ebae60c.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.3a48ce98553425c5.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.4c87fb49ba275e22.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.7630d85c2c773ba9.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.82be01b3366c61ef.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.3bdf7c6aa5ee6910.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.c48f0fe365e18581.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.bc1df226fad9fea2.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.3ac9b4fa5a36b5ab.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.66d029566d8918d2.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.2da211dff80ff965.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.75931aa83ce402d7.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.6ebc14937c8b098e.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.db1f00bceab1ecb5.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.b844c5c6fd2c6d52.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.32112c5eb7ff7d54.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.daaa14d3a28c6dde.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.92cc5650897abb35.mlir"
    ],
    "llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) \nSignalHandler(int, siginfo_t*, void*) Signals.cpp:0:0\n__restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x14420)\nraise /build/glibc-e2p3jK/glibc-2.31/signal/../sysdeps/unix/sysv/linux/raise.c:51:1\nabort /build/glibc-e2p3jK/glibc-2.31/stdlib/abort.c:81:7\nget_sysdep_segment_value /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:509:8\n_nl_load_domain /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:970:34\n(/lib/x86_64-linux-gnu/libc.so.6+0x33fd6)\n(anonymous namespace)::aliasingFuncOpBBArgsAnalysis(mlir::func::FuncOp, mlir::bufferization::OneShotAnalysisState&, mlir::bufferization::func_ext::FuncAnalysisState&) OneShotModuleBufferize.cpp:0:0\nmlir::bufferization::analyzeModuleOp(mlir::ModuleOp, mlir::bufferization::OneShotAnalysisState&, mlir::bufferization::BufferizationStatistics*) \nmlir::bufferization::insertTensorCopies(mlir::Operation*, mlir::bufferization::OneShotBufferizationOptions const&, mlir::bufferization::BufferizationStatistics*) \n(anonymous namespace)::TestTensorCopyInsertionPass::runOnOperation() TestTensorCopyInsertion.cpp:0:0\nmlir::detail::OpToOpPassAdaptor::run(mlir::Pass*, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int) \nmlir::detail::OpToOpPassAdaptor::runPipeline(mlir::OpPassManager&, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int, mlir::PassInstrumentor*, mlir::PassInstrumentation::PipelineParentInfo const*) \nmlir::PassManager::run(mlir::Operation*) \nperformActions(llvm::raw_ostream&, std::shared_ptr<llvm::SourceMgr> const&, mlir::MLIRContext*, mlir::MlirOptMainConfig const&) MlirOptMain.cpp:0:0\nprocessBuffer(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::MlirOptMainConfig const&, mlir::DialectRegistry&, llvm::ThreadPoolInterface*) MlirOptMain.cpp:0:0\nllvm::LogicalResult llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>::callback_fn<mlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&)::'lambda'(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>(long, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&) MlirOptMain.cpp:0:0\nmlir::splitAndProcessBuffer(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>, llvm::raw_ostream&, llvm::StringRef, llvm::StringRef) \nmlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, llvm::StringRef, mlir::DialectRegistry&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, mlir::DialectRegistry&) \nmain \n__libc_start_main /build/glibc-e2p3jK/glibc-2.31/csu/../csu/libc-start.c:342:3\n_start ": [
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.748e763010a9b388.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.748e763010a9b388.mlir"
    ]
}
{
    "llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) \nSignalHandler(int, siginfo_t*, void*) Signals.cpp:0:0\n__restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x14420)\nraise /build/glibc-e2p3jK/glibc-2.31/signal/../sysdeps/unix/sysv/linux/raise.c:51:1\nabort /build/glibc-e2p3jK/glibc-2.31/stdlib/abort.c:81:7\nget_sysdep_segment_value /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:509:8\n_nl_load_domain /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:970:34\n(/lib/x86_64-linux-gnu/libc.so.6+0x33fd6)\n(anonymous namespace)::TestMemRefStrideCalculation::runOnOperation() TestMemRefStrideCalculation.cpp:0:0\nmlir::detail::OpToOpPassAdaptor::run(mlir::Pass*, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int) \nmlir::detail::OpToOpPassAdaptor::runPipeline(mlir::OpPassManager&, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int, mlir::PassInstrumentor*, mlir::PassInstrumentation::PipelineParentInfo const*) \nmlir::PassManager::run(mlir::Operation*) \nperformActions(llvm::raw_ostream&, std::shared_ptr<llvm::SourceMgr> const&, mlir::MLIRContext*, mlir::MlirOptMainConfig const&) MlirOptMain.cpp:0:0\nprocessBuffer(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::MlirOptMainConfig const&, mlir::DialectRegistry&, llvm::ThreadPoolInterface*) MlirOptMain.cpp:0:0\nllvm::LogicalResult llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>::callback_fn<mlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&)::'lambda'(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>(long, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&) MlirOptMain.cpp:0:0\nmlir::splitAndProcessBuffer(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>, llvm::raw_ostream&, llvm::StringRef, llvm::StringRef) \nmlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, llvm::StringRef, mlir::DialectRegistry&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, mlir::DialectRegistry&) \nmain \n__libc_start_main /build/glibc-e2p3jK/glibc-2.31/csu/../csu/libc-start.c:342:3\n_start ": [
        "//workspace/mlir-inconsistent/crash_file/tosa.b73ed9377deb6577.mlir.fcabc6c5069a366a.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.b73ed9377deb6577.mlir.fcabc6c5069a366a.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.b73ed9377deb6577.mlir.0d8f8b554e5bf99f.mlir"
    ]
}
