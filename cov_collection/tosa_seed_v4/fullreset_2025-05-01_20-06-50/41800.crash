{
    "llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) \nSignalHandler(int, siginfo_t*, void*) Signals.cpp:0:0\n__restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x14420)\nraise /build/glibc-e2p3jK/glibc-2.31/signal/../sysdeps/unix/sysv/linux/raise.c:51:1\nabort /build/glibc-e2p3jK/glibc-2.31/stdlib/abort.c:81:7\nget_sysdep_segment_value /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:509:8\n_nl_load_domain /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:970:34\n(/lib/x86_64-linux-gnu/libc.so.6+0x33fd6)\n(anonymous namespace)::TestMemRefStrideCalculation::runOnOperation() TestMemRefStrideCalculation.cpp:0:0\nmlir::detail::OpToOpPassAdaptor::run(mlir::Pass*, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int) \nmlir::detail::OpToOpPassAdaptor::runPipeline(mlir::OpPassManager&, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int, mlir::PassInstrumentor*, mlir::PassInstrumentation::PipelineParentInfo const*) \nmlir::PassManager::run(mlir::Operation*) \nperformActions(llvm::raw_ostream&, std::shared_ptr<llvm::SourceMgr> const&, mlir::MLIRContext*, mlir::MlirOptMainConfig const&) MlirOptMain.cpp:0:0\nprocessBuffer(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::MlirOptMainConfig const&, mlir::DialectRegistry&, llvm::ThreadPoolInterface*) MlirOptMain.cpp:0:0\nllvm::LogicalResult llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>::callback_fn<mlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&)::'lambda'(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>(long, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&) MlirOptMain.cpp:0:0\nmlir::splitAndProcessBuffer(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>, llvm::raw_ostream&, llvm::StringRef, llvm::StringRef) \nmlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, llvm::StringRef, mlir::DialectRegistry&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, mlir::DialectRegistry&) \nmain \n__libc_start_main /build/glibc-e2p3jK/glibc-2.31/csu/../csu/libc-start.c:342:3\n_start ": [
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.b01ddf8b4d933461.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.b01ddf8b4d933461.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.1c1e85bec58598fd.mlir"
    ],
    "llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) \nSignalHandler(int, siginfo_t*, void*) Signals.cpp:0:0\n__restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x14420)\nraise /build/glibc-e2p3jK/glibc-2.31/signal/../sysdeps/unix/sysv/linux/raise.c:51:1\nabort /build/glibc-e2p3jK/glibc-2.31/stdlib/abort.c:81:7\nget_sysdep_segment_value /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:509:8\n_nl_load_domain /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:970:34\n(/lib/x86_64-linux-gnu/libc.so.6+0x33fd6)\n(anonymous namespace)::aliasingFuncOpBBArgsAnalysis(mlir::func::FuncOp, mlir::bufferization::OneShotAnalysisState&, mlir::bufferization::func_ext::FuncAnalysisState&) OneShotModuleBufferize.cpp:0:0\nmlir::bufferization::analyzeModuleOp(mlir::ModuleOp, mlir::bufferization::OneShotAnalysisState&, mlir::bufferization::BufferizationStatistics*) \nmlir::bufferization::insertTensorCopies(mlir::Operation*, mlir::bufferization::OneShotBufferizationOptions const&, mlir::bufferization::BufferizationStatistics*) \nmlir::bufferization::runOneShotModuleBufferize(mlir::ModuleOp, mlir::bufferization::OneShotBufferizationOptions const&, mlir::bufferization::BufferizationStatistics*) \n(anonymous namespace)::OneShotBufferizePass::runOnOperation() Bufferize.cpp:0:0\nmlir::detail::OpToOpPassAdaptor::run(mlir::Pass*, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int) \nmlir::detail::OpToOpPassAdaptor::runPipeline(mlir::OpPassManager&, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int, mlir::PassInstrumentor*, mlir::PassInstrumentation::PipelineParentInfo const*) \nmlir::PassManager::run(mlir::Operation*) \nperformActions(llvm::raw_ostream&, std::shared_ptr<llvm::SourceMgr> const&, mlir::MLIRContext*, mlir::MlirOptMainConfig const&) MlirOptMain.cpp:0:0\nprocessBuffer(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::MlirOptMainConfig const&, mlir::DialectRegistry&, llvm::ThreadPoolInterface*) MlirOptMain.cpp:0:0\nllvm::LogicalResult llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>::callback_fn<mlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&)::'lambda'(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>(long, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&) MlirOptMain.cpp:0:0\nmlir::splitAndProcessBuffer(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>, llvm::raw_ostream&, llvm::StringRef, llvm::StringRef) \nmlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, llvm::StringRef, mlir::DialectRegistry&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, mlir::DialectRegistry&) \nmain \n__libc_start_main /build/glibc-e2p3jK/glibc-2.31/csu/../csu/libc-start.c:342:3\n_start ": [
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.fa0ddbfd2d29f3cd.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.fa0ddbfd2d29f3cd.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.c4656825ca0649f2.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.4e5e4a73ff8c2f37.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.38b3142522e9b386.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.9cb89949357f46d7.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.cfff65d82f66bc64.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.a5aa269fbbbdcaae.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.0139fb4bddacd0c9.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.8fcc990eed00b166.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.30f5772746f1ab38.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.fc8c799114c0693b.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.429341895351aaad.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.b614ddef2c0c166a.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.e4f21c2f67e6f33e.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.2e625bcc55396244.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.86a09db1ddbe888b.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.bd3a84dd386900f0.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.343e94aad138a221.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.873a091f54147dda.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.3ef140566be2f982.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.c818e65cc4b13e19.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.ba6774c0e541cb32.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.0ea9e7fc8375b573.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.dcfeafc29d75a7f6.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.e3e1d2ea3cc98e4a.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.45264a6a94907ea1.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.2a50f87708a3422f.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.d25c394a8e8fbf61.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.783399dd3ddd31cd.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.fdc877eea71d22e0.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.84b9eadfb277b842.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.737f45c490bc46c3.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.f4af4d30336245d1.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.5517a6ea8a081f5a.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.2101a5b04471fc99.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.7ab580b3632aaa86.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.d4268326c380ca93.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.aae2eb54a76d03d1.mlir"
    ]
}
{
    "llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) \nSignalHandler(int, siginfo_t*, void*) Signals.cpp:0:0\n__restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x14420)\nraise /build/glibc-e2p3jK/glibc-2.31/signal/../sysdeps/unix/sysv/linux/raise.c:51:1\nabort /build/glibc-e2p3jK/glibc-2.31/stdlib/abort.c:81:7\nget_sysdep_segment_value /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:509:8\n_nl_load_domain /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:970:34\n(/lib/x86_64-linux-gnu/libc.so.6+0x33fd6)\n(anonymous namespace)::TestMemRefStrideCalculation::runOnOperation() TestMemRefStrideCalculation.cpp:0:0\nmlir::detail::OpToOpPassAdaptor::run(mlir::Pass*, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int) \nmlir::detail::OpToOpPassAdaptor::runPipeline(mlir::OpPassManager&, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int, mlir::PassInstrumentor*, mlir::PassInstrumentation::PipelineParentInfo const*) \nmlir::PassManager::run(mlir::Operation*) \nperformActions(llvm::raw_ostream&, std::shared_ptr<llvm::SourceMgr> const&, mlir::MLIRContext*, mlir::MlirOptMainConfig const&) MlirOptMain.cpp:0:0\nprocessBuffer(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::MlirOptMainConfig const&, mlir::DialectRegistry&, llvm::ThreadPoolInterface*) MlirOptMain.cpp:0:0\nllvm::LogicalResult llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>::callback_fn<mlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&)::'lambda'(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>(long, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&) MlirOptMain.cpp:0:0\nmlir::splitAndProcessBuffer(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>, llvm::raw_ostream&, llvm::StringRef, llvm::StringRef) \nmlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, llvm::StringRef, mlir::DialectRegistry&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, mlir::DialectRegistry&) \nmain \n__libc_start_main /build/glibc-e2p3jK/glibc-2.31/csu/../csu/libc-start.c:342:3\n_start ": [
        "//workspace/mlir-inconsistent/crash_file/tosa.5a89a914a2019644.mlir.587451492dcf896f.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.5a89a914a2019644.mlir.587451492dcf896f.mlir"
    ],
    "llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) \nSignalHandler(int, siginfo_t*, void*) Signals.cpp:0:0\n__restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x14420)\nraise /build/glibc-e2p3jK/glibc-2.31/signal/../sysdeps/unix/sysv/linux/raise.c:51:1\nabort /build/glibc-e2p3jK/glibc-2.31/stdlib/abort.c:81:7\nget_sysdep_segment_value /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:509:8\n_nl_load_domain /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:970:34\n(/lib/x86_64-linux-gnu/libc.so.6+0x33fd6)\n(anonymous namespace)::aliasingFuncOpBBArgsAnalysis(mlir::func::FuncOp, mlir::bufferization::OneShotAnalysisState&, mlir::bufferization::func_ext::FuncAnalysisState&) OneShotModuleBufferize.cpp:0:0\nmlir::bufferization::analyzeModuleOp(mlir::ModuleOp, mlir::bufferization::OneShotAnalysisState&, mlir::bufferization::BufferizationStatistics*) \nmlir::bufferization::insertTensorCopies(mlir::Operation*, mlir::bufferization::OneShotBufferizationOptions const&, mlir::bufferization::BufferizationStatistics*) \nmlir::bufferization::runOneShotModuleBufferize(mlir::ModuleOp, mlir::bufferization::OneShotBufferizationOptions const&, mlir::bufferization::BufferizationStatistics*) \n(anonymous namespace)::OneShotBufferizePass::runOnOperation() Bufferize.cpp:0:0\nmlir::detail::OpToOpPassAdaptor::run(mlir::Pass*, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int) \nmlir::detail::OpToOpPassAdaptor::runPipeline(mlir::OpPassManager&, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int, mlir::PassInstrumentor*, mlir::PassInstrumentation::PipelineParentInfo const*) \nmlir::PassManager::run(mlir::Operation*) \nperformActions(llvm::raw_ostream&, std::shared_ptr<llvm::SourceMgr> const&, mlir::MLIRContext*, mlir::MlirOptMainConfig const&) MlirOptMain.cpp:0:0\nprocessBuffer(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::MlirOptMainConfig const&, mlir::DialectRegistry&, llvm::ThreadPoolInterface*) MlirOptMain.cpp:0:0\nllvm::LogicalResult llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>::callback_fn<mlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&)::'lambda'(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>(long, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&) MlirOptMain.cpp:0:0\nmlir::splitAndProcessBuffer(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>, llvm::raw_ostream&, llvm::StringRef, llvm::StringRef) \nmlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, llvm::StringRef, mlir::DialectRegistry&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, mlir::DialectRegistry&) \nmain \n__libc_start_main /build/glibc-e2p3jK/glibc-2.31/csu/../csu/libc-start.c:342:3\n_start ": [
        "//workspace/mlir-inconsistent/crash_file/tosa.5a89a914a2019644.mlir.32e8403cf57902c9.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.5a89a914a2019644.mlir.32e8403cf57902c9.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.5a89a914a2019644.mlir.eed9eaf635e99874.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.5a89a914a2019644.mlir.56401c20a3c8f6b8.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.5a89a914a2019644.mlir.db3644efe018821f.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.5a89a914a2019644.mlir.759f7b7554eed67d.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.5a89a914a2019644.mlir.0f369e785fc8619d.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.5a89a914a2019644.mlir.786b26e9dd4d6c11.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.5a89a914a2019644.mlir.24d6b2354ee888f3.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.5a89a914a2019644.mlir.36d4be1d3884d5a3.mlir"
    ]
}
