{
    "llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) \nSignalHandler(int, siginfo_t*, void*) Signals.cpp:0:0\n__restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x14420)\nraise /build/glibc-e2p3jK/glibc-2.31/signal/../sysdeps/unix/sysv/linux/raise.c:51:1\nabort /build/glibc-e2p3jK/glibc-2.31/stdlib/abort.c:81:7\nget_sysdep_segment_value /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:509:8\n_nl_load_domain /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:970:34\n(/lib/x86_64-linux-gnu/libc.so.6+0x33fd6)\n(anonymous namespace)::TestMemRefStrideCalculation::runOnOperation() TestMemRefStrideCalculation.cpp:0:0\nmlir::detail::OpToOpPassAdaptor::run(mlir::Pass*, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int) \nmlir::detail::OpToOpPassAdaptor::runPipeline(mlir::OpPassManager&, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int, mlir::PassInstrumentor*, mlir::PassInstrumentation::PipelineParentInfo const*) \nmlir::PassManager::run(mlir::Operation*) \nperformActions(llvm::raw_ostream&, std::shared_ptr<llvm::SourceMgr> const&, mlir::MLIRContext*, mlir::MlirOptMainConfig const&) MlirOptMain.cpp:0:0\nprocessBuffer(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::MlirOptMainConfig const&, mlir::DialectRegistry&, llvm::ThreadPoolInterface*) MlirOptMain.cpp:0:0\nllvm::LogicalResult llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>::callback_fn<mlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&)::'lambda'(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>(long, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&) MlirOptMain.cpp:0:0\nmlir::splitAndProcessBuffer(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>, llvm::raw_ostream&, llvm::StringRef, llvm::StringRef) \nmlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, llvm::StringRef, mlir::DialectRegistry&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, mlir::DialectRegistry&) \nmain \n__libc_start_main /build/glibc-e2p3jK/glibc-2.31/csu/../csu/libc-start.c:342:3\n_start ": [
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.f166df9ddafe23b2.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.f166df9ddafe23b2.mlir"
    ],
    "llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) \nSignalHandler(int, siginfo_t*, void*) Signals.cpp:0:0\n__restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x14420)\nraise /build/glibc-e2p3jK/glibc-2.31/signal/../sysdeps/unix/sysv/linux/raise.c:51:1\nabort /build/glibc-e2p3jK/glibc-2.31/stdlib/abort.c:81:7\nget_sysdep_segment_value /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:509:8\n_nl_load_domain /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:970:34\n(/lib/x86_64-linux-gnu/libc.so.6+0x33fd6)\n(anonymous namespace)::aliasingFuncOpBBArgsAnalysis(mlir::func::FuncOp, mlir::bufferization::OneShotAnalysisState&, mlir::bufferization::func_ext::FuncAnalysisState&) OneShotModuleBufferize.cpp:0:0\nmlir::bufferization::analyzeModuleOp(mlir::ModuleOp, mlir::bufferization::OneShotAnalysisState&, mlir::bufferization::BufferizationStatistics*) \nmlir::bufferization::insertTensorCopies(mlir::Operation*, mlir::bufferization::OneShotBufferizationOptions const&, mlir::bufferization::BufferizationStatistics*) \nmlir::bufferization::runOneShotModuleBufferize(mlir::ModuleOp, mlir::bufferization::OneShotBufferizationOptions const&, mlir::bufferization::BufferizationStatistics*) \n(anonymous namespace)::OneShotBufferizePass::runOnOperation() Bufferize.cpp:0:0\nmlir::detail::OpToOpPassAdaptor::run(mlir::Pass*, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int) \nmlir::detail::OpToOpPassAdaptor::runPipeline(mlir::OpPassManager&, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int, mlir::PassInstrumentor*, mlir::PassInstrumentation::PipelineParentInfo const*) \nmlir::PassManager::run(mlir::Operation*) \nperformActions(llvm::raw_ostream&, std::shared_ptr<llvm::SourceMgr> const&, mlir::MLIRContext*, mlir::MlirOptMainConfig const&) MlirOptMain.cpp:0:0\nprocessBuffer(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::MlirOptMainConfig const&, mlir::DialectRegistry&, llvm::ThreadPoolInterface*) MlirOptMain.cpp:0:0\nllvm::LogicalResult llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>::callback_fn<mlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&)::'lambda'(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>(long, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&) MlirOptMain.cpp:0:0\nmlir::splitAndProcessBuffer(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>, llvm::raw_ostream&, llvm::StringRef, llvm::StringRef) \nmlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, llvm::StringRef, mlir::DialectRegistry&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, mlir::DialectRegistry&) \nmain \n__libc_start_main /build/glibc-e2p3jK/glibc-2.31/csu/../csu/libc-start.c:342:3\n_start ": [
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.35fe8c8d6d04a497.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.35fe8c8d6d04a497.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.5caa60e4b47c53b0.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.ccbea950e9034c93.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.56704680d2bd3d39.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.520b9b490a816179.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.66453451f5c7fdb7.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.f25f460c22820147.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.11ea716f3491e1b4.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.23519eec706d59ec.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.3e223275613d9f99.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.ef1d2d34389c6359.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.ea4aeceda779cd94.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.e4b164623ea26755.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.2ba2604baa614ff9.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.0e2d23d7ab061313.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.c793204f08c4ac4b.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.7ebc0eac04245a6b.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.46c2224f3b268505.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.572fdec57f38da34.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.427f31c25d66394e.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.f5e0705da42b6d79.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.0303905f1f384bac.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.af9d40f8c2655ea1.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.1f43fc4038036bf5.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.9dad57288874e531.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.6d93aafdbf62b890.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.32a9c4a27627127d.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.8eb30660cdea4142.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.aae6fd7f7904fbe9.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.64f5b400e655eb6c.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.ddccc7d214584d5d.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.341d8ff19ed92510.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.78f28478f6929762.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.933d25efd82bb9ef.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.13d5c1a436957808.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.af7b92eddd9b21f1.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.e9667ea0a37b33e4.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.004a166368f0bfb7.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.0ec0cb1463a61c72.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.81bf12883d19e09e.mlir.7797f39b33a40153.mlir"
    ]
}
{
    "llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) \nSignalHandler(int, siginfo_t*, void*) Signals.cpp:0:0\n__restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x14420)\nraise /build/glibc-e2p3jK/glibc-2.31/signal/../sysdeps/unix/sysv/linux/raise.c:51:1\nabort /build/glibc-e2p3jK/glibc-2.31/stdlib/abort.c:81:7\nget_sysdep_segment_value /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:509:8\n_nl_load_domain /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:970:34\n(/lib/x86_64-linux-gnu/libc.so.6+0x33fd6)\n(anonymous namespace)::TestMemRefStrideCalculation::runOnOperation() TestMemRefStrideCalculation.cpp:0:0\nmlir::detail::OpToOpPassAdaptor::run(mlir::Pass*, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int) \nmlir::detail::OpToOpPassAdaptor::runPipeline(mlir::OpPassManager&, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int, mlir::PassInstrumentor*, mlir::PassInstrumentation::PipelineParentInfo const*) \nmlir::PassManager::run(mlir::Operation*) \nperformActions(llvm::raw_ostream&, std::shared_ptr<llvm::SourceMgr> const&, mlir::MLIRContext*, mlir::MlirOptMainConfig const&) MlirOptMain.cpp:0:0\nprocessBuffer(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::MlirOptMainConfig const&, mlir::DialectRegistry&, llvm::ThreadPoolInterface*) MlirOptMain.cpp:0:0\nllvm::LogicalResult llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>::callback_fn<mlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&)::'lambda'(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>(long, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&) MlirOptMain.cpp:0:0\nmlir::splitAndProcessBuffer(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>, llvm::raw_ostream&, llvm::StringRef, llvm::StringRef) \nmlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, llvm::StringRef, mlir::DialectRegistry&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, mlir::DialectRegistry&) \nmain \n__libc_start_main /build/glibc-e2p3jK/glibc-2.31/csu/../csu/libc-start.c:342:3\n_start ": [
        "//workspace/mlir-inconsistent/crash_file/tosa.34056c581c0426f3.mlir.d7b91c6ef87607d3.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.34056c581c0426f3.mlir.d7b91c6ef87607d3.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.34056c581c0426f3.mlir.9476fa5282c1ff40.mlir"
    ]
}
