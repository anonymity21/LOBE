{
    "llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) \nSignalHandler(int, siginfo_t*, void*) Signals.cpp:0:0\n__restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x14420)\nraise /build/glibc-e2p3jK/glibc-2.31/signal/../sysdeps/unix/sysv/linux/raise.c:51:1\nabort /build/glibc-e2p3jK/glibc-2.31/stdlib/abort.c:81:7\nget_sysdep_segment_value /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:509:8\n_nl_load_domain /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:970:34\n(/lib/x86_64-linux-gnu/libc.so.6+0x33fd6)\n(anonymous namespace)::TestMemRefStrideCalculation::runOnOperation() TestMemRefStrideCalculation.cpp:0:0\nmlir::detail::OpToOpPassAdaptor::run(mlir::Pass*, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int) \nmlir::detail::OpToOpPassAdaptor::runPipeline(mlir::OpPassManager&, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int, mlir::PassInstrumentor*, mlir::PassInstrumentation::PipelineParentInfo const*) \nmlir::PassManager::run(mlir::Operation*) \nperformActions(llvm::raw_ostream&, std::shared_ptr<llvm::SourceMgr> const&, mlir::MLIRContext*, mlir::MlirOptMainConfig const&) MlirOptMain.cpp:0:0\nprocessBuffer(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::MlirOptMainConfig const&, mlir::DialectRegistry&, llvm::ThreadPoolInterface*) MlirOptMain.cpp:0:0\nllvm::LogicalResult llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>::callback_fn<mlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&)::'lambda'(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>(long, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&) MlirOptMain.cpp:0:0\nmlir::splitAndProcessBuffer(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>, llvm::raw_ostream&, llvm::StringRef, llvm::StringRef) \nmlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, llvm::StringRef, mlir::DialectRegistry&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, mlir::DialectRegistry&) \nmain \n__libc_start_main /build/glibc-e2p3jK/glibc-2.31/csu/../csu/libc-start.c:342:3\n_start ": [
        "//workspace/mlir-inconsistent/crash_file/tosa.29e5380ac5cc313c.mlir.5bf6f4f20b2870be.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.29e5380ac5cc313c.mlir.5bf6f4f20b2870be.mlir"
    ],
    "llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) \nSignalHandler(int, siginfo_t*, void*) Signals.cpp:0:0\n__restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x14420)\nraise /build/glibc-e2p3jK/glibc-2.31/signal/../sysdeps/unix/sysv/linux/raise.c:51:1\nabort /build/glibc-e2p3jK/glibc-2.31/stdlib/abort.c:81:7\nget_sysdep_segment_value /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:509:8\n_nl_load_domain /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:970:34\n(/lib/x86_64-linux-gnu/libc.so.6+0x33fd6)\nmlir::LLVM::LLVMFunctionType::clone(mlir::TypeRange, mlir::TypeRange) const \nmlir::detail::FunctionOpInterfaceInterfaceTraits::Model<mlir::LLVM::LLVMFuncOp>::cloneTypeWith(mlir::detail::FunctionOpInterfaceInterfaceTraits::Concept const*, mlir::Operation*, mlir::TypeRange, mlir::TypeRange) \n(anonymous namespace)::TestFuncEraseResult::runOnOperation() TestFunc.cpp:0:0\nmlir::detail::OpToOpPassAdaptor::run(mlir::Pass*, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int) \nmlir::detail::OpToOpPassAdaptor::runPipeline(mlir::OpPassManager&, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int, mlir::PassInstrumentor*, mlir::PassInstrumentation::PipelineParentInfo const*) \nmlir::PassManager::run(mlir::Operation*) \nperformActions(llvm::raw_ostream&, std::shared_ptr<llvm::SourceMgr> const&, mlir::MLIRContext*, mlir::MlirOptMainConfig const&) MlirOptMain.cpp:0:0\nprocessBuffer(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::MlirOptMainConfig const&, mlir::DialectRegistry&, llvm::ThreadPoolInterface*) MlirOptMain.cpp:0:0\nllvm::LogicalResult llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>::callback_fn<mlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&)::'lambda'(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>(long, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&) MlirOptMain.cpp:0:0\nmlir::splitAndProcessBuffer(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>, llvm::raw_ostream&, llvm::StringRef, llvm::StringRef) \nmlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, llvm::StringRef, mlir::DialectRegistry&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, mlir::DialectRegistry&) \nmain \n__libc_start_main /build/glibc-e2p3jK/glibc-2.31/csu/../csu/libc-start.c:342:3\n_start ": [
        "//workspace/mlir-inconsistent/crash_file/tosa.29e5380ac5cc313c.mlir.3badb9a8d4fc65af.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.29e5380ac5cc313c.mlir.3badb9a8d4fc65af.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.29e5380ac5cc313c.mlir.7c29d1165ad6e0e5.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.29e5380ac5cc313c.mlir.52bb8cd24a916499.mlir"
    ],
    "llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) \nSignalHandler(int, siginfo_t*, void*) Signals.cpp:0:0\n__restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x14420)\nraise /build/glibc-e2p3jK/glibc-2.31/signal/../sysdeps/unix/sysv/linux/raise.c:51:1\nabort /build/glibc-e2p3jK/glibc-2.31/stdlib/abort.c:81:7\nget_sysdep_segment_value /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:509:8\n_nl_load_domain /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:970:34\n(/lib/x86_64-linux-gnu/libc.so.6+0x33fd6)\nmlir::LLVM::LLVMFunctionType::clone(mlir::TypeRange, mlir::TypeRange) const \nmlir::detail::FunctionOpInterfaceInterfaceTraits::Model<mlir::LLVM::LLVMFuncOp>::cloneTypeWith(mlir::detail::FunctionOpInterfaceInterfaceTraits::Concept const*, mlir::Operation*, mlir::TypeRange, mlir::TypeRange) \n(anonymous namespace)::TestFuncEraseArg::runOnOperation() TestFunc.cpp:0:0\nmlir::detail::OpToOpPassAdaptor::run(mlir::Pass*, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int) \nmlir::detail::OpToOpPassAdaptor::runPipeline(mlir::OpPassManager&, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int, mlir::PassInstrumentor*, mlir::PassInstrumentation::PipelineParentInfo const*) \nmlir::PassManager::run(mlir::Operation*) \nperformActions(llvm::raw_ostream&, std::shared_ptr<llvm::SourceMgr> const&, mlir::MLIRContext*, mlir::MlirOptMainConfig const&) MlirOptMain.cpp:0:0\nprocessBuffer(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::MlirOptMainConfig const&, mlir::DialectRegistry&, llvm::ThreadPoolInterface*) MlirOptMain.cpp:0:0\nllvm::LogicalResult llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>::callback_fn<mlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&)::'lambda'(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>(long, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&) MlirOptMain.cpp:0:0\nmlir::splitAndProcessBuffer(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>, llvm::raw_ostream&, llvm::StringRef, llvm::StringRef) \nmlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, llvm::StringRef, mlir::DialectRegistry&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, mlir::DialectRegistry&) \nmain \n__libc_start_main /build/glibc-e2p3jK/glibc-2.31/csu/../csu/libc-start.c:342:3\n_start ": [
        "//workspace/mlir-inconsistent/crash_file/tosa.29e5380ac5cc313c.mlir.0cbf0a187249e213.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.29e5380ac5cc313c.mlir.0cbf0a187249e213.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.29e5380ac5cc313c.mlir.3e8c2c50b9fe0409.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.29e5380ac5cc313c.mlir.28eca7a0773c0832.mlir"
    ],
    "llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) \nSignalHandler(int, siginfo_t*, void*) Signals.cpp:0:0\n__restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x14420)\nraise /build/glibc-e2p3jK/glibc-2.31/signal/../sysdeps/unix/sysv/linux/raise.c:51:1\nabort /build/glibc-e2p3jK/glibc-2.31/stdlib/abort.c:81:7\nget_sysdep_segment_value /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:509:8\n_nl_load_domain /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:970:34\n(/lib/x86_64-linux-gnu/libc.so.6+0x33fd6)\n(anonymous namespace)::aliasingFuncOpBBArgsAnalysis(mlir::func::FuncOp, mlir::bufferization::OneShotAnalysisState&, mlir::bufferization::func_ext::FuncAnalysisState&) OneShotModuleBufferize.cpp:0:0\nmlir::bufferization::analyzeModuleOp(mlir::ModuleOp, mlir::bufferization::OneShotAnalysisState&, mlir::bufferization::BufferizationStatistics*) \nmlir::bufferization::insertTensorCopies(mlir::Operation*, mlir::bufferization::OneShotBufferizationOptions const&, mlir::bufferization::BufferizationStatistics*) \nmlir::bufferization::runOneShotModuleBufferize(mlir::ModuleOp, mlir::bufferization::OneShotBufferizationOptions const&, mlir::bufferization::BufferizationStatistics*) \n(anonymous namespace)::OneShotBufferizePass::runOnOperation() Bufferize.cpp:0:0\nmlir::detail::OpToOpPassAdaptor::run(mlir::Pass*, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int) \nmlir::detail::OpToOpPassAdaptor::runPipeline(mlir::OpPassManager&, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int, mlir::PassInstrumentor*, mlir::PassInstrumentation::PipelineParentInfo const*) \nmlir::PassManager::run(mlir::Operation*) \nperformActions(llvm::raw_ostream&, std::shared_ptr<llvm::SourceMgr> const&, mlir::MLIRContext*, mlir::MlirOptMainConfig const&) MlirOptMain.cpp:0:0\nprocessBuffer(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::MlirOptMainConfig const&, mlir::DialectRegistry&, llvm::ThreadPoolInterface*) MlirOptMain.cpp:0:0\nllvm::LogicalResult llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>::callback_fn<mlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&)::'lambda'(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>(long, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&) MlirOptMain.cpp:0:0\nmlir::splitAndProcessBuffer(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>, llvm::raw_ostream&, llvm::StringRef, llvm::StringRef) \nmlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, llvm::StringRef, mlir::DialectRegistry&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, mlir::DialectRegistry&) \nmain \n__libc_start_main /build/glibc-e2p3jK/glibc-2.31/csu/../csu/libc-start.c:342:3\n_start ": [
        "//workspace/mlir-inconsistent/crash_file/tosa.29e5380ac5cc313c.mlir.6b12ec5490fcef04.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.29e5380ac5cc313c.mlir.6b12ec5490fcef04.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.29e5380ac5cc313c.mlir.2aca62d1aacda0d9.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.29e5380ac5cc313c.mlir.8c9b05e86291e7f4.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.29e5380ac5cc313c.mlir.69e782d92de8fe69.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.29e5380ac5cc313c.mlir.9151c9bfe6300a5f.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.29e5380ac5cc313c.mlir.998bd30e9f3f53e2.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.29e5380ac5cc313c.mlir.0ebf5cab00e229b8.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.29e5380ac5cc313c.mlir.05a0ca475dd5e3ee.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.29e5380ac5cc313c.mlir.73d8e91ac46791af.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.29e5380ac5cc313c.mlir.d16cc76b795837cd.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.29e5380ac5cc313c.mlir.1b34aa24e9bb2536.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.29e5380ac5cc313c.mlir.5c70b1b59f07b393.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.29e5380ac5cc313c.mlir.922aec5073e0b297.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.29e5380ac5cc313c.mlir.a20a54302d73e982.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.29e5380ac5cc313c.mlir.07dd0deb84ba3685.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.29e5380ac5cc313c.mlir.1bc7a75f6db45be1.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.29e5380ac5cc313c.mlir.03af5b841c6577f4.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.29e5380ac5cc313c.mlir.e28d59ea27c38bfc.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.29e5380ac5cc313c.mlir.f8e4981a22bb589f.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.29e5380ac5cc313c.mlir.bd22f2b8a74a0887.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.29e5380ac5cc313c.mlir.6128e6bbbec88b65.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.29e5380ac5cc313c.mlir.b8927df3d53e1226.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.29e5380ac5cc313c.mlir.a23f59324d488885.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.29e5380ac5cc313c.mlir.74a4f7ea4cd243de.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.29e5380ac5cc313c.mlir.050c7c46ae092c73.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.29e5380ac5cc313c.mlir.0773694ea5d06f6d.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.29e5380ac5cc313c.mlir.e6680a6e674d4c55.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.29e5380ac5cc313c.mlir.0df68240986eb5db.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.29e5380ac5cc313c.mlir.709b5edf43a58d45.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.29e5380ac5cc313c.mlir.3f67bcbde1007864.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.29e5380ac5cc313c.mlir.9007c1b0f3c12a55.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.29e5380ac5cc313c.mlir.ac908a40cf03197b.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.29e5380ac5cc313c.mlir.d5cb7f6e411fe35a.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.29e5380ac5cc313c.mlir.033acac5e633da9f.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.29e5380ac5cc313c.mlir.bdcd9f59ea80ae08.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.29e5380ac5cc313c.mlir.ead629eb9668c6a8.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.29e5380ac5cc313c.mlir.a2a27e0730a12ba4.mlir"
    ]
}
{
    "llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) \nSignalHandler(int, siginfo_t*, void*) Signals.cpp:0:0\n__restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x14420)\nraise /build/glibc-e2p3jK/glibc-2.31/signal/../sysdeps/unix/sysv/linux/raise.c:51:1\nabort /build/glibc-e2p3jK/glibc-2.31/stdlib/abort.c:81:7\nget_sysdep_segment_value /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:509:8\n_nl_load_domain /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:970:34\n(/lib/x86_64-linux-gnu/libc.so.6+0x33fd6)\n(anonymous namespace)::TestMemRefStrideCalculation::runOnOperation() TestMemRefStrideCalculation.cpp:0:0\nmlir::detail::OpToOpPassAdaptor::run(mlir::Pass*, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int) \nmlir::detail::OpToOpPassAdaptor::runPipeline(mlir::OpPassManager&, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int, mlir::PassInstrumentor*, mlir::PassInstrumentation::PipelineParentInfo const*) \nmlir::PassManager::run(mlir::Operation*) \nperformActions(llvm::raw_ostream&, std::shared_ptr<llvm::SourceMgr> const&, mlir::MLIRContext*, mlir::MlirOptMainConfig const&) MlirOptMain.cpp:0:0\nprocessBuffer(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::MlirOptMainConfig const&, mlir::DialectRegistry&, llvm::ThreadPoolInterface*) MlirOptMain.cpp:0:0\nllvm::LogicalResult llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>::callback_fn<mlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&)::'lambda'(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>(long, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&) MlirOptMain.cpp:0:0\nmlir::splitAndProcessBuffer(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>, llvm::raw_ostream&, llvm::StringRef, llvm::StringRef) \nmlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, llvm::StringRef, mlir::DialectRegistry&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, mlir::DialectRegistry&) \nmain \n__libc_start_main /build/glibc-e2p3jK/glibc-2.31/csu/../csu/libc-start.c:342:3\n_start ": [
        "//workspace/mlir-inconsistent/crash_file/tosa.e3cc7622ff5c66ca.mlir.61fe2e5b2847a671.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.e3cc7622ff5c66ca.mlir.61fe2e5b2847a671.mlir"
    ],
    "llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) \nSignalHandler(int, siginfo_t*, void*) Signals.cpp:0:0\n__restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x14420)\nraise /build/glibc-e2p3jK/glibc-2.31/signal/../sysdeps/unix/sysv/linux/raise.c:51:1\nabort /build/glibc-e2p3jK/glibc-2.31/stdlib/abort.c:81:7\nget_sysdep_segment_value /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:509:8\n_nl_load_domain /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:970:34\n(/lib/x86_64-linux-gnu/libc.so.6+0x33fd6)\n(anonymous namespace)::aliasingFuncOpBBArgsAnalysis(mlir::func::FuncOp, mlir::bufferization::OneShotAnalysisState&, mlir::bufferization::func_ext::FuncAnalysisState&) OneShotModuleBufferize.cpp:0:0\nmlir::bufferization::analyzeModuleOp(mlir::ModuleOp, mlir::bufferization::OneShotAnalysisState&, mlir::bufferization::BufferizationStatistics*) \nmlir::bufferization::insertTensorCopies(mlir::Operation*, mlir::bufferization::OneShotBufferizationOptions const&, mlir::bufferization::BufferizationStatistics*) \nmlir::bufferization::runOneShotModuleBufferize(mlir::ModuleOp, mlir::bufferization::OneShotBufferizationOptions const&, mlir::bufferization::BufferizationStatistics*) \n(anonymous namespace)::OneShotBufferizePass::runOnOperation() Bufferize.cpp:0:0\nmlir::detail::OpToOpPassAdaptor::run(mlir::Pass*, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int) \nmlir::detail::OpToOpPassAdaptor::runPipeline(mlir::OpPassManager&, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int, mlir::PassInstrumentor*, mlir::PassInstrumentation::PipelineParentInfo const*) \nmlir::PassManager::run(mlir::Operation*) \nperformActions(llvm::raw_ostream&, std::shared_ptr<llvm::SourceMgr> const&, mlir::MLIRContext*, mlir::MlirOptMainConfig const&) MlirOptMain.cpp:0:0\nprocessBuffer(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::MlirOptMainConfig const&, mlir::DialectRegistry&, llvm::ThreadPoolInterface*) MlirOptMain.cpp:0:0\nllvm::LogicalResult llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>::callback_fn<mlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&)::'lambda'(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>(long, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&) MlirOptMain.cpp:0:0\nmlir::splitAndProcessBuffer(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>, llvm::raw_ostream&, llvm::StringRef, llvm::StringRef) \nmlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, llvm::StringRef, mlir::DialectRegistry&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, mlir::DialectRegistry&) \nmain \n__libc_start_main /build/glibc-e2p3jK/glibc-2.31/csu/../csu/libc-start.c:342:3\n_start ": [
        "//workspace/mlir-inconsistent/crash_file/tosa.e3cc7622ff5c66ca.mlir.78e9b2207d190641.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.e3cc7622ff5c66ca.mlir.78e9b2207d190641.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.e3cc7622ff5c66ca.mlir.d0e0d08ecb3eeb65.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.e3cc7622ff5c66ca.mlir.b2f9dd4e034c6983.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.e3cc7622ff5c66ca.mlir.2fbde0a48fc44595.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.e3cc7622ff5c66ca.mlir.acee89a1906ce8ca.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.e3cc7622ff5c66ca.mlir.cb52d4ec73dec56c.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.e3cc7622ff5c66ca.mlir.3d787d8667a583e9.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.e3cc7622ff5c66ca.mlir.6d9564e4ec7db1af.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.e3cc7622ff5c66ca.mlir.8f4db096c24d669e.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.e3cc7622ff5c66ca.mlir.6887d6c01b37d464.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.e3cc7622ff5c66ca.mlir.53ac99c01aa6d47b.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.e3cc7622ff5c66ca.mlir.466a5f8beb048139.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.e3cc7622ff5c66ca.mlir.3e2445b080fb4eca.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.e3cc7622ff5c66ca.mlir.efc886f53a0c5f66.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.e3cc7622ff5c66ca.mlir.80f0625f3ce84ceb.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.e3cc7622ff5c66ca.mlir.e843ae4b622dcf96.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.e3cc7622ff5c66ca.mlir.bf6c8f13b64fee3d.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.e3cc7622ff5c66ca.mlir.ee37bf611bfb55fa.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.e3cc7622ff5c66ca.mlir.5a381cba63c8a3b8.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.e3cc7622ff5c66ca.mlir.84e68793984d3f9d.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.e3cc7622ff5c66ca.mlir.f044f1a916973e23.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.e3cc7622ff5c66ca.mlir.5da23ebbe47cc429.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.e3cc7622ff5c66ca.mlir.58a14316906e7cb2.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.e3cc7622ff5c66ca.mlir.62a59ff7df87684c.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.e3cc7622ff5c66ca.mlir.0c6a28d6ca56871a.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.e3cc7622ff5c66ca.mlir.c3e0c91117d7fcbc.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.e3cc7622ff5c66ca.mlir.47f8157ce000fbcc.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.e3cc7622ff5c66ca.mlir.ed6f66932ded02a1.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.e3cc7622ff5c66ca.mlir.0732bea935b188e7.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.e3cc7622ff5c66ca.mlir.0dfa80094e075bcc.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.e3cc7622ff5c66ca.mlir.3875228347f1a007.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.e3cc7622ff5c66ca.mlir.f4f748d4f4ce0c24.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.e3cc7622ff5c66ca.mlir.d331b9a126c6e8a2.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.e3cc7622ff5c66ca.mlir.6afa91fb9a00506f.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.e3cc7622ff5c66ca.mlir.bbe278c9ceb69b3a.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.e3cc7622ff5c66ca.mlir.78c766005a837795.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.e3cc7622ff5c66ca.mlir.1c87d12eaa07b814.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.e3cc7622ff5c66ca.mlir.be198e3a4216a80f.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.e3cc7622ff5c66ca.mlir.20014b1dbed62db0.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.e3cc7622ff5c66ca.mlir.77c4bdb769e064d9.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.e3cc7622ff5c66ca.mlir.c07b6437f5d3c9c9.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.e3cc7622ff5c66ca.mlir.1c4591e7bef8b132.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.e3cc7622ff5c66ca.mlir.4215c24557b08e1c.mlir"
    ]
}
