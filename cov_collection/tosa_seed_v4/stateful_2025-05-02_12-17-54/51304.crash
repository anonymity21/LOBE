{
    "llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) \nSignalHandler(int, siginfo_t*, void*) Signals.cpp:0:0\n__restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x14420)\nraise /build/glibc-e2p3jK/glibc-2.31/signal/../sysdeps/unix/sysv/linux/raise.c:51:1\nabort /build/glibc-e2p3jK/glibc-2.31/stdlib/abort.c:81:7\nget_sysdep_segment_value /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:509:8\n_nl_load_domain /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:970:34\n(/lib/x86_64-linux-gnu/libc.so.6+0x33fd6)\n(anonymous namespace)::TestMemRefStrideCalculation::runOnOperation() TestMemRefStrideCalculation.cpp:0:0\nmlir::detail::OpToOpPassAdaptor::run(mlir::Pass*, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int) \nmlir::detail::OpToOpPassAdaptor::runPipeline(mlir::OpPassManager&, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int, mlir::PassInstrumentor*, mlir::PassInstrumentation::PipelineParentInfo const*) \nmlir::PassManager::run(mlir::Operation*) \nperformActions(llvm::raw_ostream&, std::shared_ptr<llvm::SourceMgr> const&, mlir::MLIRContext*, mlir::MlirOptMainConfig const&) MlirOptMain.cpp:0:0\nprocessBuffer(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::MlirOptMainConfig const&, mlir::DialectRegistry&, llvm::ThreadPoolInterface*) MlirOptMain.cpp:0:0\nllvm::LogicalResult llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>::callback_fn<mlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&)::'lambda'(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>(long, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&) MlirOptMain.cpp:0:0\nmlir::splitAndProcessBuffer(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>, llvm::raw_ostream&, llvm::StringRef, llvm::StringRef) \nmlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, llvm::StringRef, mlir::DialectRegistry&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, mlir::DialectRegistry&) \nmain \n__libc_start_main /build/glibc-e2p3jK/glibc-2.31/csu/../csu/libc-start.c:342:3\n_start ": [
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.80a7428df03480f6.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.80a7428df03480f6.mlir"
    ],
    "llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) \nSignalHandler(int, siginfo_t*, void*) Signals.cpp:0:0\n__restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x14420)\nraise /build/glibc-e2p3jK/glibc-2.31/signal/../sysdeps/unix/sysv/linux/raise.c:51:1\nabort /build/glibc-e2p3jK/glibc-2.31/stdlib/abort.c:81:7\nget_sysdep_segment_value /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:509:8\n_nl_load_domain /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:970:34\n(/lib/x86_64-linux-gnu/libc.so.6+0x33fd6)\n(anonymous namespace)::aliasingFuncOpBBArgsAnalysis(mlir::func::FuncOp, mlir::bufferization::OneShotAnalysisState&, mlir::bufferization::func_ext::FuncAnalysisState&) OneShotModuleBufferize.cpp:0:0\nmlir::bufferization::analyzeModuleOp(mlir::ModuleOp, mlir::bufferization::OneShotAnalysisState&, mlir::bufferization::BufferizationStatistics*) \nmlir::bufferization::insertTensorCopies(mlir::Operation*, mlir::bufferization::OneShotBufferizationOptions const&, mlir::bufferization::BufferizationStatistics*) \nmlir::bufferization::runOneShotModuleBufferize(mlir::ModuleOp, mlir::bufferization::OneShotBufferizationOptions const&, mlir::bufferization::BufferizationStatistics*) \n(anonymous namespace)::OneShotBufferizePass::runOnOperation() Bufferize.cpp:0:0\nmlir::detail::OpToOpPassAdaptor::run(mlir::Pass*, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int) \nmlir::detail::OpToOpPassAdaptor::runPipeline(mlir::OpPassManager&, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int, mlir::PassInstrumentor*, mlir::PassInstrumentation::PipelineParentInfo const*) \nmlir::PassManager::run(mlir::Operation*) \nperformActions(llvm::raw_ostream&, std::shared_ptr<llvm::SourceMgr> const&, mlir::MLIRContext*, mlir::MlirOptMainConfig const&) MlirOptMain.cpp:0:0\nprocessBuffer(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::MlirOptMainConfig const&, mlir::DialectRegistry&, llvm::ThreadPoolInterface*) MlirOptMain.cpp:0:0\nllvm::LogicalResult llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>::callback_fn<mlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&)::'lambda'(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>(long, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&) MlirOptMain.cpp:0:0\nmlir::splitAndProcessBuffer(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>, llvm::raw_ostream&, llvm::StringRef, llvm::StringRef) \nmlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, llvm::StringRef, mlir::DialectRegistry&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, mlir::DialectRegistry&) \nmain \n__libc_start_main /build/glibc-e2p3jK/glibc-2.31/csu/../csu/libc-start.c:342:3\n_start ": [
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.5b5b0837e80a19e9.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.5b5b0837e80a19e9.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.a6151a4a04602704.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.8f962607b5988259.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.c207fb75e85d0360.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.8931f8802fd4a59a.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.bf0ca8f3268269b6.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.39281d2237345594.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.ed12099ba5b4f73d.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.63879a9af190a083.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.d4f63b6ffd1e44b1.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.ce78e8d8cb684069.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.51dc2c4092b68b3e.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.cf1e9f217a2ef1c3.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.9ff4425f9d4a323f.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.2b9dc82f83ab8878.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.9a346f11889d876c.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.313ab9fad623c616.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.32c2c68e6de51830.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.e13019aae7fba3de.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.9378ca7efb6e9f19.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.61db0d3759deddee.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.ac55b43036778d26.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.651d7974def913a5.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.0a1f21e92f0ef955.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.e0001d09e30190e1.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.7d1c332f54ce9f57.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.aed275c06ff27b36.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.24f091c14eba5006.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.f4a6d41419a02db1.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.875cc1e53a58bbe9.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.cd8f1939da54cfdf.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.bd317d97b778cb2f.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.3c5e75e4bc907826.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.4caa91b2c331ffe9.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.3e1874540f4ba73d.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.00afb6a4e5d85b95.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.8a1c96a8c095abf8.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.8805d27a7e931b6f.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.5a3eabceaed1f7cf.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.a4388e89bc40bdbf.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.97e2cb174d880a35.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8d3f1bf88968fa28.mlir.4a600ea6d7fe3f99.mlir"
    ]
}
{
    "llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) \nSignalHandler(int, siginfo_t*, void*) Signals.cpp:0:0\n__restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x14420)\nraise /build/glibc-e2p3jK/glibc-2.31/signal/../sysdeps/unix/sysv/linux/raise.c:51:1\nabort /build/glibc-e2p3jK/glibc-2.31/stdlib/abort.c:81:7\nget_sysdep_segment_value /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:509:8\n_nl_load_domain /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:970:34\n(/lib/x86_64-linux-gnu/libc.so.6+0x33fd6)\n(anonymous namespace)::TestMemRefStrideCalculation::runOnOperation() TestMemRefStrideCalculation.cpp:0:0\nmlir::detail::OpToOpPassAdaptor::run(mlir::Pass*, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int) \nmlir::detail::OpToOpPassAdaptor::runPipeline(mlir::OpPassManager&, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int, mlir::PassInstrumentor*, mlir::PassInstrumentation::PipelineParentInfo const*) \nmlir::PassManager::run(mlir::Operation*) \nperformActions(llvm::raw_ostream&, std::shared_ptr<llvm::SourceMgr> const&, mlir::MLIRContext*, mlir::MlirOptMainConfig const&) MlirOptMain.cpp:0:0\nprocessBuffer(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::MlirOptMainConfig const&, mlir::DialectRegistry&, llvm::ThreadPoolInterface*) MlirOptMain.cpp:0:0\nllvm::LogicalResult llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>::callback_fn<mlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&)::'lambda'(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>(long, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&) MlirOptMain.cpp:0:0\nmlir::splitAndProcessBuffer(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>, llvm::raw_ostream&, llvm::StringRef, llvm::StringRef) \nmlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, llvm::StringRef, mlir::DialectRegistry&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, mlir::DialectRegistry&) \nmain \n__libc_start_main /build/glibc-e2p3jK/glibc-2.31/csu/../csu/libc-start.c:342:3\n_start ": [
        "//workspace/mlir-inconsistent/crash_file/tosa.162224d5d34e96a8.mlir.2f079b205b65e0a5.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.162224d5d34e96a8.mlir.2f079b205b65e0a5.mlir"
    ]
}
