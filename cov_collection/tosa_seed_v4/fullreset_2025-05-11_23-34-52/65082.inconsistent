{
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v4/tosa.68d6ba1b263c2915.mlir --inline --tosa-test-quant-utils --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-optional-decompositions --fold-tensor-subset-ops --remove-dead-values --mem2reg=\"region-simplify\" --cse --test-function-pass --test-func-erase-result --sccp --tosa-test-quant-utils --control-flow-sink --test-func-erase-arg --symbol-dce --cse --tosa-reduce-transposes --test-function-pass --composite-fixed-point-pass --inline --mem2reg=\"region-simplify\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --test-func-insert-result --tosa-infer-shapes --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --topological-sort --cse --tosa-infer-shapes --inline --loop-invariant-subset-hoisting --tosa-infer-shapes --loop-invariant-code-motion --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-tensor-copy-insertion --mem2reg=\"region-simplify\" --symbol-dce --fold-tensor-subset-ops --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-func-insert-result --test-func-erase-arg --test-func-insert-arg --cse --cse --cse --test-func-erase-arg --sroa --arith-emulate-unsupported-floats --test-tensor-transform-patterns=\"test-drop-redundant-insert-slice-rank-expansion\" --mem2reg=\"region-simplify\" --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --arith-emulate-wide-int=\"widest-int-supported=32\" --test-func-erase-result --int-range-optimizations --composite-fixed-point-pass --test-func-erase-arg --sroa --test-emulate-narrow-int=\"memref-load-bitwidth=32\" --symbol-dce --test-func-set-type --tosa-reduce-transposes --inline --loop-invariant-code-motion --composite-fixed-point-pass --tosa-infer-shapes --test-func-erase-result --arith-emulate-unsupported-floats --test-func-erase-arg --int-range-optimizations --arith-emulate-wide-int=\"widest-int-supported=32\" --arith-int-range-narrowing --test-func-insert-result --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --remove-dead-values --mem2reg --cse --test-tensor-copy-insertion=\"must-infer-memory-space\" --test-emulate-narrow-int=\"memref-load-bitwidth=32\" --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -test-math-polynomial-approximation | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --affine-expand-index-ops --cse --test-loop-fusion=\"test-loop-fusion-transformation\" --cse --test-loop-fusion=\"test-loop-fusion-dependence-check\" --remove-dead-values --affine-parallelize=\"parallel-reductions=1\" --composite-fixed-point-pass --test-constant-fold --test-function-pass --affine-loop-coalescing --composite-fixed-point-pass --test-affine-access-analysis --cse --resolve-shaped-type-result-dims --math-extend-to-supported-types --affine-loop-normalize --canonicalize=\"test-convergence top-down=0\" --test-decompose-affine-ops --test-func-erase-arg --normalize-memrefs --resolve-ranked-shaped-type-result-dims --test-loop-fusion=\"test-loop-fusion-dependence-check\" --affine-super-vectorize=\"virtual-vector-size=128 test-fastest-varying=0 vectorize-reductions=true\" --affine-super-vectorizer-test=\"vectorize-affine-loop-nest\" --inline --canonicalize=\"test-convergence top-down=0\" --loop-invariant-subset-hoisting --test-expand-math --affine-expand-index-ops --sccp --affine-loop-tile=\"tile-size=32\" --symbol-dce --test-func-insert-result --affine-expand-index-ops-as-affine --resolve-ranked-shaped-type-result-dims --canonicalize=\"test-convergence\" --remove-dead-values --affine-parallelize=\"max-nested=1\" --test-loop-fusion=\"test-loop-fusion-transformation\" --composite-fixed-point-pass --test-constant-fold --test-expand-math --affine-expand-index-ops-as-affine --resolve-shaped-type-result-dims --memref-expand --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-forall-to-for --expand-realloc --memref-emulate-wide-int=\"widest-int-supported=32\" --sroa --memref-emulate-wide-int=\"widest-int-supported=32\" --test-scf-if-utils --loop-invariant-subset-hoisting --test-arith-emulate-wide-int --test-scf-for-utils --scf-for-to-while --fold-memref-alias-ops --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --memref-expand --normalize-memrefs --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-result --test-memref-dependence-check --normalize-memrefs --canonicalize=\"test-convergence top-down=0\" --loop-invariant-code-motion --sccp --resolve-shaped-type-result-dims --composite-fixed-point-pass --memref-emulate-wide-int=\"widest-int-supported=32\" --inline --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --cse --memref-emulate-wide-int --mem2reg --sroa --composite-fixed-point-pass --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --composite-fixed-point-pass --inline --control-flow-sink --canonicalize | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[25,    25,    25,    25,    25,    25,    25,    25,    25,    25,    25,    25,    25]]]",
        "test_line": "[[[1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v4/tosa.68d6ba1b263c2915.mlir --tosa-test-quant-utils --inline --test-func-set-type --control-flow-sink --duplicate-function-elimination --tosa-test-quant-utils --test-func-insert-result --loop-invariant-subset-hoisting --test-func-set-type --fold-tensor-subset-ops --test-tensor-transform-patterns=\"test-rewrite-extract-slice-from-collapse-shape\" --cse --canonicalize --tosa-optional-decompositions --tosa-infer-shapes --test-func-erase-result --symbol-dce --cse --tosa-make-broadcastable --test-func-insert-result --topological-sort --composite-fixed-point-pass --topological-sort --test-function-pass --sroa --remove-dead-values --tosa-infer-shapes | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-math-polynomial-approximation=\"enable-avx2\" --mem2reg=\"region-simplify\" --test-func-insert-arg --test-linalg-transform-patterns --test-math-to-vcix --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --test-linalg-pad-fusion --test-func-insert-result --arith-unsigned-when-equivalent --inline --sroa --test-math-polynomial-approximation --test-math-to-vcix --duplicate-function-elimination --test-linalg-elementwise-fusion-patterns --test-func-insert-result --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --fold-tensor-subset-ops --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --arith-expand=\"include-bf16\" --tosa-reduce-transposes --linalg-specialize-generic-ops --composite-fixed-point-pass --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-collapsing\" --loop-invariant-subset-hoisting --tosa-test-quant-utils --test-math-to-vcix --test-arith-emulate-wide-int=\"widest-int-supported=8\" --duplicate-function-elimination --topological-sort --mem2reg=\"region-simplify\" --test-linalg-elementwise-fusion-patterns --test-linalg-transform-patterns=\"test-swap-extract-slice-with-fill-pattern\" --composite-fixed-point-pass --tosa-validate --test-linalg-data-layout-propagation --convert-elementwise-to-linalg --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-arith-emulate-wide-int --inline --arith-emulate-wide-int --linalg-inline-scalar-operands --canonicalize=\"test-convergence\" --test-math-polynomial-approximation=\"enable-avx2\" --test-tensor-transform-patterns=\"use-foreach\" --topological-sort --topological-sort --loop-invariant-subset-hoisting --control-flow-sink --test-linalg-greedy-fusion --test-math-polynomial-approximation --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --linalg-inline-scalar-operands --math-extend-to-supported-types --test-linalg-greedy-fusion --test-linalg-pad-fusion --test-linalg-transform-patterns=\"test-patterns\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-parallel-loop-specialization --test-func-set-type --resolve-ranked-shaped-type-result-dims --scf-for-loop-range-folding | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --test-math-to-vcix --topological-sort --inline --test-func-insert-result --test-math-to-vcix --test-math-algebraic-simplification --canonicalize=\"test-convergence\" --test-function-pass --loop-invariant-code-motion --math-uplift-to-fma --test-func-erase-result --test-function-pass --test-func-insert-arg --test-func-set-type --test-math-polynomial-approximation --mem2reg=\"region-simplify\" --sccp --test-vector-to-vector-lowering --remove-dead-values --remove-dead-values --test-vector-chained-reduction-folding-patterns --math-extend-to-supported-types --canonicalize=\"test-convergence\" --test-func-set-type --arith-expand=\"include-bf16\" --inline --composite-fixed-point-pass --test-vector-contraction-prepare-for-mmt-lowering --test-math-to-vcix --arith-expand=\"include-bf16\" --duplicate-function-elimination --arith-expand --math-uplift-to-fma --duplicate-function-elimination --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-result --test-math-to-vcix --topological-sort --test-func-set-type --test-expand-math --control-flow-sink --test-func-insert-result --int-range-optimizations --loop-invariant-subset-hoisting --test-scalar-vector-transfer-lowering --arith-emulate-wide-int --test-vector-contraction-prepare-for-mmt-lowering --topological-sort --test-create-vector-broadcast --test-vector-extract-strided-slice-lowering --arith-emulate-unsupported-floats --test-math-polynomial-approximation=\"enable-avx2\" --test-scalar-vector-transfer-lowering=\"allow-multiple-uses\" --math-uplift-to-fma --test-func-erase-arg --test-vector-to-vector-lowering --sccp --test-vector-transferop-opt --test-vector-to-vector-lowering --test-vector-to-vector-lowering=\"unroll\" --loop-invariant-code-motion --canonicalize --test-vector-chained-reduction-folding-patterns --symbol-dce -lower-vector-multi-reduction --test-vector-transferop-opt --test-create-vector-broadcast --symbol-dce --loop-invariant-subset-hoisting --sroa --test-vector-unrolling-patterns=\"unroll-based-on-type unroll-order=0,3,1,2\" --test-math-to-vcix --test-func-erase-arg --control-flow-sink --mem2reg --mem2reg --arith-int-range-narrowing --topological-sort --cse --test-vector-unrolling-patterns=\"unroll-based-on-type unroll-order=2,0,1\" --test-create-vector-broadcast | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-vector-extract-strided-slice-lowering -lower-vector-multi-reduction=\"lowering-strategy=inner-parallel\" --composite-fixed-point-pass --sccp --test-vector-linearize --mem2reg --remove-dead-values -lower-vector-multi-reduction --loop-invariant-subset-hoisting --sccp --canonicalize --test-func-erase-result --loop-invariant-subset-hoisting --symbol-dce --test-vector-chained-reduction-folding-patterns --test-create-vector-broadcast --test-expand-math --mem2reg=\"region-simplify\" -lower-vector-multi-reduction --test-math-algebraic-simplification --test-math-algebraic-simplification --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-vector-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --affine-expand-index-ops --loop-invariant-code-motion --test-function-pass --topological-sort --affine-expand-index-ops-as-affine --test-function-pass --scf-for-loop-specialization -lower-vector-multi-reduction=\"lowering-strategy=inner-parallel\" --test-memref-dependence-check --expand-strided-metadata --math-uplift-to-fma --scf-forall-to-parallel --test-scf-uplift-while-to-for --test-math-algebraic-simplification --test-affine-loop-unswitch --loop-invariant-subset-hoisting --normalize-memrefs --test-func-erase-result --test-math-algebraic-simplification --test-func-erase-result --test-loop-fusion=\"test-loop-fusion-transformation\" --test-create-vector-broadcast --scf-parallel-loop-specialization --normalize-memrefs | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-vector-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-expand-math --test-constant-fold --inline --test-func-insert-arg --test-expand-math --test-func-erase-arg --affine-loop-normalize --affine-expand-index-ops-as-affine --test-math-to-vcix --canonicalize=\"test-convergence\" --affine-simplify-structures --sroa --affine-expand-index-ops-as-affine --affine-super-vectorize=\"virtual-vector-size=32,256 test-fastest-varying=1,0\" --test-func-insert-arg --affine-data-copy-generate=\"generate-dma fast-mem-space=2 skip-non-unit-stride-loops\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-affine-walk --affine-pipeline-data-transfer --test-affine-access-analysis --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-unsigned-when-equivalent --arith-int-range-narrowing --duplicate-function-elimination --test-func-erase-result --sroa --arith-emulate-wide-int --test-func-insert-arg --test-func-erase-result --test-func-set-type --arith-emulate-wide-int=\"widest-int-supported=32\" --arith-int-range-narrowing --loop-invariant-subset-hoisting --arith-int-range-narrowing=\"int-bitwidths-supported=32\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --sroa --canonicalize=\"test-convergence top-down=0\" --cse --composite-fixed-point-pass --test-function-pass --canonicalize=\"test-convergence\" --symbol-dce --mem2reg --test-func-erase-result --control-flow-sink --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1]]]",
        "test_line": "[[[3.09435e-41,    573.001,    573.001,    4.56277e-41,    3.09435e-41,    3.09435e-41,    573.04,    4.56277e-41,    3.09435e-41,    3.09435e-41,    3.09435e-41,    573.066,    4.56277e-41]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v4/tosa.68d6ba1b263c2915.mlir --test-func-erase-result --test-func-erase-result --tosa-make-broadcastable | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-rank-reduce-contraction-ops --loop-invariant-subset-hoisting --linalg-generalize-named-ops --tosa-optional-decompositions --tosa-optional-decompositions --test-func-erase-arg --test-arith-emulate-wide-int --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-linalg-drop-unit-dims --sccp --control-flow-sink --composite-fixed-point-pass --arith-emulate-wide-int --test-func-set-type --test-linalg-elementwise-fusion-patterns=\"collapse-dimensions-control=2,3\" --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-greedy-fusion --test-func-set-type --loop-invariant-code-motion --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-fuse-elementwise-ops --expand-strided-metadata --linalg-inline-scalar-operands --test-func-erase-result --test-linalg-rank-reduce-contraction-ops --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --math-extend-to-supported-types --test-linalg-pad-fusion --fold-memref-alias-ops --control-flow-sink --test-linalg-greedy-fusion --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --inline --linalg-specialize-generic-ops --test-memref-bound-check --test-func-set-type --test-linalg-drop-unit-dims --expand-strided-metadata --test-func-insert-result --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-math-algebraic-simplification --arith-emulate-unsupported-floats --test-func-erase-arg --scf-parallel-loop-tiling=\"parallel-loop-tile-sizes=1,4 no-min-max-bounds=true\" --canonicalize --test-scf-uplift-while-to-for --scf-for-loop-range-folding --resolve-shaped-type-result-dims --scf-for-loop-canonicalization --test-scf-if-utils --sccp --test-memref-bound-check --canonicalize=\"test-convergence top-down=0\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --memref-expand --normalize-memrefs --test-memref-bound-check --symbol-dce --topological-sort --memref-emulate-wide-int --sroa --fold-memref-alias-ops --scf-parallel-loop-specialization --test-scf-while-op-builder --scf-forall-to-parallel --test-scf-for-utils --sccp --test-memref-bound-check --scf-parallel-loop-tiling=\"parallel-loop-tile-sizes=1,4 no-min-max-bounds=true\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -test-math-polynomial-approximation | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --int-range-optimizations --math-uplift-to-fma --arith-expand=\"include-bf16\" --inline --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --math-extend-to-supported-types --duplicate-function-elimination --symbol-dce --arith-unsigned-when-equivalent --test-math-to-vcix --mem2reg=\"region-simplify\" --test-math-polynomial-approximation=\"enable-avx2\" --arith-expand=\"include-bf16\" --arith-emulate-wide-int --test-math-to-vcix --loop-invariant-subset-hoisting --test-math-to-vcix --test-function-pass --arith-expand --test-function-pass --arith-emulate-unsupported-floats | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --remove-dead-values --sccp --cse --topological-sort --test-math-algebraic-simplification --sccp --loop-invariant-code-motion --test-function-pass --math-uplift-to-fma --cse --canonicalize --test-func-set-type --remove-dead-values --inline --test-func-insert-result --symbol-dce --test-func-erase-arg --test-math-algebraic-simplification --canonicalize=\"test-convergence\" --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-result --test-func-insert-arg --loop-invariant-subset-hoisting --topological-sort --test-func-insert-result --test-func-set-type --loop-invariant-code-motion --duplicate-function-elimination --canonicalize=\"test-convergence top-down=0\" --test-func-insert-arg --canonicalize=\"test-convergence top-down=0\" --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701],\n[-0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701],\n[-0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701],\n[-0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701],\n[-0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701],\n[-0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701],\n[-0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701],\n[-0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701],\n[-0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701],\n[-0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701],\n[-0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701],\n[-0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701],\n[-0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701],\n[-0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701],\n[-0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701],\n[-0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701],\n[-0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701],\n[-0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701],\n[-0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701],\n[-0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701],\n[-0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701],\n[-0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701],\n[-0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701],\n[-0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701],\n[-0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.842701]]]",
        "test_line": "[[[-0.842701,    -0.842701,    -0.842701,    -0.842701,    1.4013e-45,    5.60519e-45,    1.85027e+08,    3.07571e-41,    1.66668e+08,    3.07571e-41,    4.62428e-44,    0,    1.87565e+08],\n[-0.842701,    -0.842701,    -0.842701,    -0.842701,    0,    4.48416e-44,    0,    1.84429e+08,    3.07571e-41,    3.82554e-42,    2.85164e-42,    1.79366e-43,    0],\n[-0.842701,    -0.842701,    -0.842701,    -0.842701,    0,    0,    0,    2.05644e+23,    1.18213e+27,    1.6929e+22,    6.86085e+22,    1.73733e-41,    1.68296e-42],\n[-0.842701,    -0.842701,    -0.842701,    -0.842701,    4.58112e-41,    1.89509e+08,    3.07571e-41,    1.87485e+08,    3.07571e-41,    6.72623e-44,    0,    3.60134e-43,    0],\n[-0.842701,    -0.842701,    -0.842701,    -0.842701,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[-0.842701,    -0.842701,    -0.842701,    -0.842701,    3.07571e-41,    0,    2.8026e-45,    0,    0,    1.4013e-45,    1.4013e-45,    0,    0],\n[-0.842701,    -0.842701,    -0.842701,    -0.842701,    1.77689e+08,    3.07571e-41,    6.64039e+07,    3.07571e-41,    1.73891e+08,    3.07571e-41,    6.72623e-44,    0,    1.35926e-43],\n[-0.842701,    -0.842701,    -0.842701,    -0.842701,    3.07571e-41,    1.32245e-38,    1.34082e-38,    1.35919e-38,    1.37755e-38,    1.98368e-38,    2.00204e-38,    2.02041e-38,    2.03878e-38],\n[-0.842701,    -0.842701,    -0.842701,    -0.842701,    1.82608e+08,    3.07571e-41,    1.83027e+08,    3.07571e-41,    4.25995e-43,    0,    8.96831e-44,    0,    1.85172e+08],\n[-0.842701,    -0.842701,    -0.842701,    -0.842701,    0,    5.77232e+06,    3.07571e-41,    1.47697e-38,    0,    -nan,    1.4013e-44,    0,    0],\n[-0.842701,    -0.842701,    -0.842701,    -0.842701,    1.64569e+08,    3.07571e-41,    0,    0,    5.77232e+06,    3.07571e-41,    1.36526e-38,    0,    -nan],\n[-0.842701,    -0.842701,    -0.842701,    -0.842701,    0,    1.80927e+08,    3.07571e-41,    -8.67282e+30,    4.58112e-41,    3.64338e-44,    0,    2.4803e-43,    0],\n[-0.842701,    -0.842701,    -0.842701,    -0.842701,    0,    0,    2.03188e-43,    0,    1.80352e+08,    3.07571e-41,    -8.67237e+30,    4.58112e-41,    1.96182e-44],\n[-0.842701,    -0.842701,    -0.842701,    -0.842701,    3.07571e-41,    -8.67237e+30,    4.58112e-41,    4.48416e-44,    0,    1.13505e-43,    0,    1.75373e+08,    3.07571e-41],\n[-0.842701,    -0.842701,    -0.842701,    -0.842701,    1.54501e+08,    3.07571e-41,    6.64039e+07,    3.07571e-41,    1.73891e+08,    3.07571e-41,    0,    0,    0],\n[-0.842701,    -0.842701,    -0.842701,    -0.842701,    0,    1.75816e+08,    3.07571e-41,    1.75801e+08,    3.07571e-41,    6.64039e+07,    3.07571e-41,    1.73891e+08,    3.07571e-41],\n[-0.842701,    -0.842701,    -0.842701,    -0.842701,    1.83219e+08,    3.07571e-41,    1.83215e+08,    3.07571e-41,    -0.327607,    -0.463514,    -0.364721,    -0.523019,    0.448369],\n[-0.842701,    -0.842701,    -0.842701,    -0.842701,    -0.131809,    0.0370646,    0.0258147,    0.0572443,    0.0739796,    2,    -0.00330093,    0.00351962,    -2.06069],\n[-0.842701,    -0.842701,    -0.842701,    -0.842701,    -1.71048e-05,    0.0821909,    1,    3.75,    2.158e-43,    0,    2.2701e-43,    0,    2.38221e-43],\n[-0.842701,    -0.842701,    -0.842701,    -0.842701,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[-0.842701,    -0.842701,    -0.842701,    -0.842701,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[-0.842701,    -0.842701,    -0.842701,    -0.842701,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[-0.842701,    -0.842701,    -0.842701,    -0.842701,    4.48416e-44,    0,    1.83215e+08,    3.07571e-41,    1.73891e+08,    3.07571e-41,    1.59748e-43,    0,    2.25609e-43],\n[-0.842701,    -0.842701,    -0.842701,    -0.842701,    4.58112e-41,    4.48416e-44,    0,    1.80768e-43,    0,    1.82617e+08,    3.07571e-41,    1.85174e+08,    3.07571e-41],\n[-0.842701,    -0.842701,    -0.842701,    -0.842701,    1.88595e+08,    3.07571e-41,    1.66238e+08,    3.07571e-41,    9.80909e-45,    -nan,    1.83303e+08,    3.07571e-41,    2.8026e-45]]]"
    }
}
