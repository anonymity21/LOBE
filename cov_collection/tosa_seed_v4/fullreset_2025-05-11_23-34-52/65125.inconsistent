{
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v4/tosa.5a89a914a2019644.mlir --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --int-range-optimizations --int-range-optimizations --test-arith-emulate-wide-int=\"widest-int-supported=8\" --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-math-polynomial-approximation=\"enable-avx2\" --memref-expand --memref-expand --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --composite-fixed-point-pass --inline --test-func-insert-result --test-func-erase-arg --test-memref-dependence-check --normalize-memrefs --fold-memref-alias-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize=\"test-convergence\" --test-memref-dependence-check --topological-sort --memref-expand --topological-sort --loop-invariant-subset-hoisting --test-function-pass --mem2reg=\"region-simplify\" --resolve-ranked-shaped-type-result-dims --symbol-dce --cse --sroa --topological-sort --sccp --cse --test-memref-dependence-check --canonicalize=\"test-convergence\" --test-func-insert-result --test-func-insert-result --remove-dead-values --test-func-set-type --canonicalize=\"test-convergence top-down=0\" --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --symbol-dce --duplicate-function-elimination --loop-invariant-code-motion --test-func-erase-result --cse --duplicate-function-elimination --test-function-pass --loop-invariant-code-motion --composite-fixed-point-pass --symbol-dce --symbol-dce --test-func-erase-arg --symbol-dce --test-func-erase-arg --symbol-dce --test-func-erase-arg --canonicalize --mem2reg=\"region-simplify\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938]]]",
        "test_line": "[[[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v4/tosa.5a89a914a2019644.mlir -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg --test-func-set-type --tosa-infer-shapes | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --math-uplift-to-fma --arith-emulate-unsupported-floats --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --arith-unsigned-when-equivalent --duplicate-function-elimination --arith-emulate-wide-int --math-uplift-to-fma --math-extend-to-supported-types --arith-emulate-wide-int=\"widest-int-supported=32\" --test-expand-math --mem2reg=\"region-simplify\" --duplicate-function-elimination --sccp --loop-invariant-subset-hoisting --arith-unsigned-when-equivalent --test-tensor-copy-insertion --test-func-set-type --test-linalg-decompose-ops --linalg-named-op-conversion --test-math-polynomial-approximation --test-func-insert-result --tosa-validate | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --test-math-to-vcix --tosa-make-broadcastable --test-linalg-rank-reduce-contraction-ops --composite-fixed-point-pass --tosa-infer-shapes | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-fold-unit-extent-dims --linalg-specialize-generic-ops --convert-elementwise-to-linalg --canonicalize=\"test-convergence top-down=0\" --test-func-erase-arg --test-linalg-pad-fusion --cse --int-range-optimizations --symbol-dce --test-linalg-greedy-fusion --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-collapsing\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-inline-scalar-operands --resolve-shaped-type-result-dims --arith-expand=\"include-bf16\" --memref-expand --int-range-optimizations --test-func-insert-result --linalg-generalize-named-ops --arith-unsigned-when-equivalent --linalg-fold-unit-extent-dims --normalize-memrefs --test-func-erase-result --sroa --normalize-memrefs --test-linalg-pad-fusion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --expand-realloc=\"emit-deallocs\" --cse --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --test-func-erase-result --sccp --test-func-erase-result --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sroa --mem2reg=\"region-simplify\" --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-func-erase-arg --symbol-dce --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --mem2reg --loop-invariant-code-motion --symbol-dce --test-function-pass --loop-invariant-code-motion --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938]]]",
        "test_line": "[[[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v4/tosa.5a89a914a2019644.mlir --tosa-make-broadcastable --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-result --mem2reg --arith-expand=\"include-bf16\" --mem2reg=\"region-simplify\" --sroa --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-tensor-copy-insertion --tosa-reduce-transposes --test-func-insert-arg --tosa-reduce-transposes --test-func-insert-result --arith-emulate-unsupported-floats --arith-expand=\"include-bf16\" --test-func-erase-result --test-func-insert-result --arith-unsigned-when-equivalent --arith-unsigned-when-equivalent --tosa-infer-shapes --test-tensor-transform-patterns --fold-tensor-subset-ops --control-flow-sink --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-unsupported-floats --arith-emulate-wide-int --scf-for-loop-specialization | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --fold-tensor-subset-ops --tosa-reduce-transposes --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-math-algebraic-simplification | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-arg --sccp --memref-expand --math-extend-to-supported-types --test-math-to-vcix --inline --test-expand-math --loop-invariant-subset-hoisting --test-func-erase-arg --test-function-pass --math-extend-to-supported-types --test-func-insert-result --test-func-set-type --duplicate-function-elimination --sccp --fold-memref-alias-ops --math-uplift-to-fma --expand-strided-metadata --math-extend-to-supported-types --cse --loop-invariant-subset-hoisting --resolve-shaped-type-result-dims --remove-dead-values --duplicate-function-elimination --control-flow-sink --test-func-insert-arg --test-func-erase-arg --symbol-dce --loop-invariant-code-motion --test-func-insert-arg --canonicalize=\"test-convergence\" --resolve-ranked-shaped-type-result-dims | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --resolve-shaped-type-result-dims --control-flow-sink --test-func-insert-result --loop-invariant-code-motion --test-math-algebraic-simplification --expand-strided-metadata --composite-fixed-point-pass --composite-fixed-point-pass --test-func-insert-result --cse --duplicate-function-elimination --test-func-set-type --sccp --test-math-polynomial-approximation --expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --test-func-insert-result --inline --normalize-memrefs --loop-invariant-code-motion --test-func-insert-arg --loop-invariant-subset-hoisting --cse --topological-sort --memref-emulate-wide-int=\"widest-int-supported=32\" --topological-sort --memref-emulate-wide-int --mem2reg=\"region-simplify\" --test-memref-dependence-check --topological-sort --sroa --fold-memref-alias-ops --composite-fixed-point-pass --memref-emulate-wide-int=\"widest-int-supported=32\" --loop-invariant-subset-hoisting --mem2reg --test-func-insert-arg --expand-strided-metadata --sccp --composite-fixed-point-pass --fold-memref-alias-ops --inline --test-function-pass --composite-fixed-point-pass --loop-invariant-code-motion --fold-memref-alias-ops --expand-strided-metadata --cse --test-func-insert-arg --duplicate-function-elimination --memref-emulate-wide-int=\"widest-int-supported=32\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --symbol-dce --test-func-erase-result --control-flow-sink --test-func-set-type --test-func-erase-arg --loop-invariant-subset-hoisting --control-flow-sink --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938]]]",
        "test_line": "[[[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v4/tosa.5a89a914a2019644.mlir -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-layerwise-constant-fold --inline --tosa-optional-decompositions --test-func-insert-result --test-func-erase-arg --mem2reg=\"region-simplify\" --test-function-pass --loop-invariant-subset-hoisting --inline --cse --test-func-insert-result --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --test-func-insert-arg --tosa-reduce-transposes | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --test-func-erase-result --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-math-to-vcix --sccp --linalg-fuse-elementwise-ops --test-function-pass --test-linalg-data-layout-propagation --tosa-reduce-transposes --test-linalg-data-layout-propagation --test-func-erase-arg --sccp --test-math-to-vcix --scf-for-loop-canonicalization --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-expansion\" --test-func-insert-result --test-func-set-type --test-func-insert-result --tosa-reduce-transposes --test-scf-while-op-builder --cse --linalg-specialize-generic-ops --test-math-polynomial-approximation --scf-for-loop-specialization --scf-for-loop-canonicalization --test-expand-math --test-scf-pipelining=\"annotate\" --scf-for-to-while --tosa-infer-shapes --scf-for-loop-specialization --test-func-set-type --test-function-pass --math-extend-to-supported-types --tosa-make-broadcastable --test-linalg-rank-reduce-contraction-ops --test-func-erase-result --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-collapsing\" --scf-for-loop-specialization --scf-for-loop-specialization --canonicalize --test-math-algebraic-simplification --test-scf-for-utils --test-linalg-transform-patterns=\"test-vector-transfer-forwarding-patterns\" --test-scf-uplift-while-to-for --tosa-make-broadcastable --test-tensor-transform-patterns=\"use-foreach\" --linalg-inline-scalar-operands | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-named-op-conversion --scf-forall-to-for --scf-for-loop-range-folding --arith-int-range-narrowing --fold-tensor-subset-ops --test-linalg-drop-unit-dims --scf-forall-to-for --arith-emulate-wide-int --test-linalg-rank-reduce-contraction-ops --scf-forall-to-for --scf-parallel-loop-fusion --test-func-erase-result --control-flow-sink --scf-parallel-loop-fusion --scf-parallel-loop-fusion --scf-for-loop-specialization --scf-for-loop-canonicalization --fold-tensor-subset-ops --scf-for-to-while --control-flow-sink --control-flow-sink --test-linalg-transform-patterns=\"test-erase-unused-operands-and-results\" --scf-parallel-loop-specialization --test-linalg-elementwise-fusion-patterns=\"collapse-dimensions-control=2,3\" --scf-parallel-loop-fusion --linalg-named-op-conversion --test-scf-if-utils --test-scf-while-op-builder --symbol-dce --arith-int-range-narrowing=\"int-bitwidths-supported=32\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --linalg-generalize-named-ops --memref-expand --test-linalg-drop-unit-dims --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --test-linalg-transform-patterns --loop-invariant-subset-hoisting --test-linalg-elementwise-fusion-patterns=\"collapse-dimensions-control=2,3\" --test-func-insert-arg --test-linalg-elementwise-fusion-patterns=\"control-fusion-by-expansion\" --expand-realloc=\"emit-deallocs\" --topological-sort --duplicate-function-elimination --resolve-ranked-shaped-type-result-dims --arith-unsigned-when-equivalent --test-linalg-drop-unit-dims --sroa --test-func-erase-arg --linalg-specialize-generic-ops --mem2reg=\"region-simplify\" --resolve-ranked-shaped-type-result-dims --normalize-memrefs --sroa --linalg-named-op-conversion --fold-memref-alias-ops --linalg-named-op-conversion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize --scf-parallel-loop-fusion --expand-realloc --scf-parallel-loop-fusion --int-range-optimizations --normalize-memrefs --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --expand-strided-metadata --test-memref-dependence-check --inline --normalize-memrefs --test-func-insert-arg --resolve-ranked-shaped-type-result-dims --expand-realloc=\"emit-deallocs\" --topological-sort --test-function-pass --resolve-ranked-shaped-type-result-dims --duplicate-function-elimination --topological-sort --test-function-pass --topological-sort --test-function-pass --fold-memref-alias-ops --remove-dead-values --resolve-shaped-type-result-dims --expand-strided-metadata --test-memref-dependence-check --sroa --canonicalize --loop-invariant-code-motion --loop-invariant-code-motion --test-func-erase-result --remove-dead-values --test-func-set-type --control-flow-sink --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg=\"region-simplify\" --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --test-func-set-type --test-func-insert-result --symbol-dce --sroa --cse --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938]]]",
        "test_line": "[[[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v4/tosa.5a89a914a2019644.mlir -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-parallel-loop-fusion --scf-for-loop-range-folding --test-linalg-greedy-fusion --tosa-infer-shapes --linalg-inline-scalar-operands | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --duplicate-function-elimination --test-expand-math --test-linalg-greedy-fusion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-math-algebraic-simplification --test-expand-math --test-func-erase-result --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --duplicate-function-elimination --tosa-test-quant-utils --loop-invariant-subset-hoisting --inline --loop-invariant-subset-hoisting --tosa-make-broadcastable --tosa-reduce-transposes --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-collapsing-control\" --composite-fixed-point-pass --linalg-named-op-conversion --control-flow-sink --test-linalg-decompose-ops --test-func-erase-arg --test-expand-math --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --test-expand-math --duplicate-function-elimination --linalg-named-op-conversion --composite-fixed-point-pass --test-function-pass --linalg-fuse-elementwise-ops --topological-sort --symbol-dce --fold-tensor-subset-ops --test-math-algebraic-simplification --test-math-algebraic-simplification --test-function-pass --tosa-optional-decompositions --test-function-pass --tosa-optional-decompositions --tosa-optional-decompositions --test-linalg-greedy-fusion --loop-invariant-code-motion --composite-fixed-point-pass --test-func-insert-arg --mem2reg=\"region-simplify\" --tosa-make-broadcastable --test-math-polynomial-approximation=\"enable-avx2\" --loop-invariant-code-motion --symbol-dce --tosa-make-broadcastable --sroa --cse --mem2reg=\"region-simplify\" --loop-invariant-subset-hoisting --test-func-insert-result --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-drop-unit-dims --tosa-optional-decompositions --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-collapsing\" --math-uplift-to-fma --duplicate-function-elimination --test-math-polynomial-approximation=\"enable-avx2\" --tosa-layerwise-constant-fold --test-func-insert-arg --test-math-algebraic-simplification --test-math-polynomial-approximation --tosa-infer-shapes --linalg-named-op-conversion --symbol-dce --test-func-set-type --test-function-pass --loop-invariant-subset-hoisting --linalg-named-op-conversion --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --test-func-erase-arg --test-linalg-rank-reduce-contraction-ops --tosa-reduce-transposes --math-uplift-to-fma | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-fuse-elementwise-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sroa --test-func-erase-arg --canonicalize=\"test-convergence\" --test-linalg-drop-unit-dims --test-func-erase-result --int-range-optimizations --control-flow-sink --convert-elementwise-to-linalg --linalg-named-op-conversion --linalg-inline-scalar-operands --arith-unsigned-when-equivalent | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-forall-to-parallel --arith-expand --scf-for-to-while --sroa --test-scf-for-utils=\"test-replace-with-new-yields\" --test-scf-while-op-builder --topological-sort --scf-for-to-while | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse --test-function-pass --scf-parallel-loop-fusion --loop-invariant-code-motion --test-scf-if-utils --topological-sort --canonicalize --composite-fixed-point-pass --canonicalize=\"test-convergence top-down=0\" --test-scf-uplift-while-to-for --control-flow-sink --test-scf-if-utils | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --canonicalize=\"test-convergence\" --control-flow-sink --mem2reg=\"region-simplify\" --control-flow-sink --remove-dead-values --cse --inline --test-func-erase-arg --mem2reg=\"region-simplify\" --composite-fixed-point-pass --test-func-erase-result --duplicate-function-elimination --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938]]]",
        "test_line": "[[[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v4/tosa.5a89a914a2019644.mlir --test-function-pass --test-func-insert-arg --loop-invariant-code-motion --test-func-insert-result --test-func-insert-result --tosa-test-quant-utils --test-function-pass --test-func-erase-arg --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --fold-tensor-subset-ops --test-func-erase-arg --control-flow-sink --sroa --tosa-make-broadcastable --tosa-layerwise-constant-fold --test-func-erase-result --mem2reg --cse --tosa-make-broadcastable --tosa-reduce-transposes --test-tensor-copy-insertion --topological-sort --tosa-infer-shapes --tosa-optional-decompositions | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --duplicate-function-elimination --loop-invariant-subset-hoisting --test-func-set-type --test-function-pass --control-flow-sink --cse --test-func-set-type --loop-invariant-code-motion --test-tensor-copy-insertion --sroa --test-tensor-transform-patterns=\"use-foreach\" --duplicate-function-elimination --test-func-insert-result --test-func-erase-result --fold-tensor-subset-ops --test-func-insert-result --composite-fixed-point-pass --test-func-erase-result --tosa-optional-decompositions --test-func-insert-arg --test-func-erase-arg --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-test-quant-utils --tosa-make-broadcastable --test-function-pass --cse --sccp --sccp --duplicate-function-elimination --tosa-optional-decompositions --test-func-erase-result --control-flow-sink --cse --tosa-optional-decompositions --sroa --test-func-erase-result --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --tosa-optional-decompositions | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-arg --test-function-pass --test-function-pass --test-func-erase-arg --tosa-optional-decompositions --fold-tensor-subset-ops --sroa --tosa-test-quant-utils --test-func-erase-arg --arith-emulate-unsupported-floats --arith-expand --mem2reg=\"region-simplify\" --test-emulate-narrow-int=\"memref-load-bitwidth=8\" --mem2reg=\"region-simplify\" --test-func-insert-arg --topological-sort --test-func-set-type --control-flow-sink --mem2reg --test-func-insert-result --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --test-arith-emulate-wide-int --inline --test-function-pass --remove-dead-values --sroa --composite-fixed-point-pass --loop-invariant-code-motion --arith-unsigned-when-equivalent --arith-unsigned-when-equivalent --test-func-erase-arg --canonicalize=\"test-convergence\" --tosa-optional-decompositions | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --test-func-insert-arg --fold-memref-alias-ops --expand-realloc=\"emit-deallocs\" --linalg-specialize-generic-ops --loop-invariant-subset-hoisting --math-extend-to-supported-types --test-math-polynomial-approximation=\"enable-avx2\" --test-memref-bound-check --inline --math-uplift-to-fma --test-linalg-pad-fusion --cse --memref-emulate-wide-int=\"widest-int-supported=32\" --inline --memref-emulate-wide-int=\"widest-int-supported=32\" --symbol-dce --resolve-shaped-type-result-dims --test-memref-dependence-check --linalg-fuse-elementwise-ops --test-linalg-data-layout-propagation --memref-expand --canonicalize --test-linalg-data-layout-propagation --linalg-specialize-generic-ops --resolve-ranked-shaped-type-result-dims --linalg-named-op-conversion --linalg-inline-scalar-operands --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-named-op-conversion --test-linalg-pad-fusion --math-extend-to-supported-types --linalg-inline-scalar-operands --linalg-generalize-named-ops --test-linalg-elementwise-fusion-patterns=\"fuse-generic-ops-control\" --linalg-specialize-generic-ops --linalg-inline-scalar-operands --expand-realloc --expand-strided-metadata --resolve-shaped-type-result-dims --composite-fixed-point-pass --math-extend-to-supported-types --linalg-named-op-conversion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --int-range-optimizations --test-func-insert-arg --test-function-pass --arith-expand=\"include-bf16\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --canonicalize=\"test-convergence\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-result --canonicalize=\"test-convergence top-down=0\" --sroa --test-func-set-type --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938]]]",
        "test_line": "[[[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v4/tosa.5a89a914a2019644.mlir -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -test-math-polynomial-approximation | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --test-math-polynomial-approximation=\"enable-avx2\" --arith-emulate-wide-int --test-function-pass --topological-sort --topological-sort --arith-emulate-unsupported-floats --loop-invariant-code-motion --arith-unsigned-when-equivalent --test-func-insert-result --test-linalg-drop-unit-dims --tosa-optional-decompositions --test-math-to-vcix --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --convert-elementwise-to-linalg --test-linalg-decompose-ops --test-expand-math --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-arith-emulate-wide-int=\"widest-int-supported=8\" --composite-fixed-point-pass --tosa-test-quant-utils --test-linalg-data-layout-propagation --loop-invariant-code-motion --fold-tensor-subset-ops --test-math-to-vcix --test-func-set-type --duplicate-function-elimination --sroa --tosa-make-broadcastable --arith-emulate-wide-int=\"widest-int-supported=32\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-inline-scalar-operands --test-linalg-rank-reduce-contraction-ops --expand-strided-metadata --math-uplift-to-fma --test-math-to-vcix --test-memref-dependence-check --inline --linalg-inline-scalar-operands --test-linalg-drop-unit-dims --test-func-erase-arg --control-flow-sink --topological-sort --expand-realloc=\"emit-deallocs\" --topological-sort --test-func-set-type --linalg-named-op-conversion --linalg-named-op-conversion --resolve-shaped-type-result-dims --test-func-set-type --inline --test-math-polynomial-approximation --mem2reg=\"region-simplify\" --symbol-dce --test-linalg-drop-unit-dims --test-linalg-greedy-fusion --expand-realloc=\"emit-deallocs\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --loop-invariant-code-motion --test-math-to-vcix --mem2reg=\"region-simplify\" --remove-dead-values --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --test-function-pass --loop-invariant-code-motion --loop-invariant-code-motion --symbol-dce --composite-fixed-point-pass --duplicate-function-elimination --test-math-to-vcix --control-flow-sink --test-expand-math --symbol-dce --sroa --test-func-insert-result --cse --test-math-to-vcix --mem2reg --remove-dead-values --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-result --test-func-erase-arg --inline --test-func-insert-arg --test-math-to-vcix --math-uplift-to-fma --cse --test-func-set-type --test-math-algebraic-simplification --math-extend-to-supported-types --test-func-erase-arg --canonicalize=\"test-convergence\" --test-func-insert-arg --sccp --test-function-pass --canonicalize=\"test-convergence top-down=0\" --test-math-algebraic-simplification --test-function-pass --remove-dead-values --remove-dead-values --symbol-dce --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sroa --test-func-erase-arg --canonicalize=\"test-convergence\" --loop-invariant-subset-hoisting --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938]]]",
        "test_line": "[[[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v4/tosa.5a89a914a2019644.mlir -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-data-layout-propagation --test-expand-math --test-linalg-transform-patterns=\"test-vector-transfer-forwarding-patterns\" --linalg-named-op-conversion --test-linalg-greedy-fusion --topological-sort --convert-elementwise-to-linalg --composite-fixed-point-pass --test-func-insert-arg --duplicate-function-elimination --int-range-optimizations --test-func-erase-result --sroa --math-extend-to-supported-types --linalg-inline-scalar-operands --test-arith-emulate-wide-int --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-func-erase-arg --test-linalg-greedy-fusion --test-linalg-transform-patterns=\"test-erase-unnecessary-inputs\" --topological-sort --convert-elementwise-to-linalg --test-func-erase-result --arith-expand=\"include-bf16\" --test-linalg-pad-fusion --arith-expand=\"include-bf16\" --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-collapsing-control\" --duplicate-function-elimination --tosa-validate --tosa-optional-decompositions --test-arith-emulate-wide-int --topological-sort --composite-fixed-point-pass --cse --loop-invariant-code-motion --tosa-make-broadcastable --test-func-insert-arg --test-func-insert-arg --test-math-polynomial-approximation --test-linalg-pad-fusion --test-linalg-rank-reduce-contraction-ops --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --symbol-dce --test-func-set-type --linalg-inline-scalar-operands --composite-fixed-point-pass --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-func-erase-result --linalg-fold-unit-extent-dims --arith-unsigned-when-equivalent --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --test-func-insert-arg --test-function-pass --test-linalg-drop-unit-dims | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --linalg-inline-scalar-operands --test-expand-math --mem2reg --duplicate-function-elimination --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-linalg-pad-fusion --test-func-insert-result --loop-invariant-subset-hoisting --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --math-extend-to-supported-types --test-linalg-elementwise-fusion-patterns=\"collapse-dimensions-control=2,3\" --duplicate-function-elimination --test-func-insert-result --test-func-insert-arg --arith-unsigned-when-equivalent --linalg-generalize-named-ops --math-extend-to-supported-types --duplicate-function-elimination --loop-invariant-subset-hoisting --test-linalg-greedy-fusion --sroa --test-linalg-transform-patterns=\"test-swap-extract-slice-with-fill-pattern\" --test-linalg-data-layout-propagation --math-uplift-to-fma --test-func-insert-arg --test-math-to-vcix --test-func-set-type --test-emulate-narrow-int=\"arith-compute-bitwidth=8\" --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --arith-emulate-unsupported-floats --test-expand-math --sroa --test-linalg-greedy-fusion --test-linalg-decompose-ops --test-emulate-narrow-int=\"memref-load-bitwidth=8\" --test-linalg-transform-patterns=\"test-swap-subtensor-padtensor\" --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-func-insert-arg --arith-unsigned-when-equivalent --test-linalg-data-layout-propagation --test-linalg-elementwise-fusion-patterns=\"fuse-generic-ops-control\" --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --test-linalg-rank-reduce-contraction-ops --test-math-algebraic-simplification --control-flow-sink --loop-invariant-subset-hoisting --test-func-set-type --linalg-inline-scalar-operands --mem2reg=\"region-simplify\" --control-flow-sink --test-linalg-pad-fusion --test-expand-math --composite-fixed-point-pass --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-fold-unit-extent-dims --test-linalg-greedy-fusion --cse --loop-invariant-subset-hoisting --canonicalize=\"test-convergence\" --test-func-erase-arg --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --control-flow-sink --inline --loop-invariant-code-motion --normalize-memrefs --resolve-shaped-type-result-dims --inline --loop-invariant-code-motion --composite-fixed-point-pass --sroa --test-func-erase-arg --convert-elementwise-to-linalg --cse --linalg-named-op-conversion --test-func-insert-result --test-linalg-greedy-fusion --linalg-generalize-named-ops --test-func-insert-result --symbol-dce --test-math-to-vcix --expand-realloc --test-func-insert-result --inline --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --normalize-memrefs --test-func-set-type --test-arith-emulate-wide-int --sccp --loop-invariant-subset-hoisting --duplicate-function-elimination --composite-fixed-point-pass --test-memref-dependence-check --test-expand-math --cse --test-function-pass --loop-invariant-code-motion --mem2reg=\"region-simplify\" --linalg-generalize-named-ops --test-linalg-rank-reduce-contraction-ops --test-linalg-rank-reduce-contraction-ops --test-math-to-vcix --normalize-memrefs --arith-emulate-unsupported-floats --canonicalize=\"test-convergence top-down=0\" --test-linalg-greedy-fusion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --test-math-to-vcix --test-scf-uplift-while-to-for --arith-emulate-unsupported-floats --test-func-erase-arg --scf-parallel-loop-fusion --resolve-ranked-shaped-type-result-dims --scf-parallel-loop-specialization --scf-parallel-loop-tiling=\"parallel-loop-tile-sizes=1,4 no-min-max-bounds=true\" --test-func-erase-result --test-math-algebraic-simplification --scf-forall-to-for --test-scf-for-utils --test-arith-emulate-wide-int=\"widest-int-supported=8\" --arith-int-range-narrowing --test-scf-uplift-while-to-for | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --test-func-insert-arg --canonicalize --test-math-polynomial-approximation=\"enable-avx2\" --mem2reg --scf-for-to-while --test-expand-math --math-uplift-to-fma --symbol-dce --test-expand-math --test-scf-pipelining --scf-forall-to-for --inline --cse --sroa --sccp --test-func-insert-result --math-uplift-to-fma --arith-expand --test-func-insert-arg --scf-for-loop-range-folding --math-uplift-to-fma --arith-expand=\"include-bf16\" --scf-for-loop-specialization --topological-sort --canonicalize=\"test-convergence\" --test-scf-for-utils --math-extend-to-supported-types --test-math-polynomial-approximation --topological-sort --test-math-polynomial-approximation --test-scf-if-utils --sroa --arith-int-range-narrowing=\"int-bitwidths-supported=32\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --math-extend-to-supported-types --sroa --canonicalize=\"test-convergence\" --mem2reg=\"region-simplify\" --sccp --loop-invariant-subset-hoisting --test-func-erase-arg --sroa --duplicate-function-elimination --mem2reg=\"region-simplify\" --test-func-insert-result --duplicate-function-elimination --sroa --test-math-algebraic-simplification --test-math-polynomial-approximation=\"enable-avx2\" --symbol-dce --symbol-dce --control-flow-sink --test-math-polynomial-approximation --cse --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sroa --composite-fixed-point-pass --topological-sort --duplicate-function-elimination --mem2reg=\"region-simplify\" --test-func-erase-arg --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --loop-invariant-subset-hoisting --remove-dead-values --symbol-dce --topological-sort --test-func-set-type --composite-fixed-point-pass --test-func-insert-result --test-func-insert-arg --test-func-insert-result --inline --test-func-erase-arg --canonicalize=\"test-convergence\" --test-func-erase-arg --control-flow-sink --control-flow-sink --test-func-erase-result --canonicalize=\"test-convergence\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938]]]",
        "test_line": "[[[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v4/tosa.5a89a914a2019644.mlir --tosa-optional-decompositions | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --tosa-make-broadcastable --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --tosa-infer-shapes --control-flow-sink --arith-unsigned-when-equivalent --test-func-set-type --test-func-erase-arg --tosa-infer-shapes --test-func-insert-result --tosa-reduce-transposes --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --arith-unsigned-when-equivalent --loop-invariant-subset-hoisting --test-func-erase-arg --loop-invariant-code-motion --fold-tensor-subset-ops --test-func-set-type --test-func-erase-arg --test-tensor-copy-insertion=\"must-infer-memory-space\" --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-data-layout-propagation | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-expand --test-math-algebraic-simplification --test-math-polynomial-approximation=\"enable-avx2\" --test-linalg-greedy-fusion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-arg --sccp --arith-expand=\"include-bf16\" --fold-tensor-subset-ops --linalg-named-op-conversion --topological-sort --linalg-fold-unit-extent-dims --arith-expand=\"include-bf16\" --symbol-dce --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --arith-emulate-wide-int=\"widest-int-supported=32\" --cse --arith-int-range-narrowing --fold-tensor-subset-ops --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-expansion\" --arith-emulate-wide-int --test-linalg-data-layout-propagation --linalg-inline-scalar-operands --duplicate-function-elimination --linalg-generalize-named-ops --math-uplift-to-fma --test-linalg-decompose-ops --convert-elementwise-to-linalg --test-linalg-transform-patterns=\"test-swap-extract-slice-with-fill-pattern\" --test-func-insert-arg --math-uplift-to-fma --composite-fixed-point-pass --test-func-erase-arg --test-linalg-drop-unit-dims --convert-elementwise-to-linalg --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --test-func-insert-arg --resolve-ranked-shaped-type-result-dims --loop-invariant-code-motion --affine-loop-normalize --affine-loop-normalize --symbol-dce --affine-expand-index-ops --linalg-inline-scalar-operands | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-unsupported-floats --arith-expand=\"include-bf16\" --test-func-set-type --sroa --sroa --composite-fixed-point-pass --test-func-erase-arg --test-func-insert-arg --test-func-erase-result --scf-for-loop-peeling --test-func-insert-arg --remove-dead-values --test-func-insert-result --test-expand-math --scf-for-loop-peeling=\"peel-front\" --loop-invariant-subset-hoisting --duplicate-function-elimination --test-scf-pipelining --symbol-dce --scf-parallel-loop-fusion --sroa --scf-for-loop-specialization --test-scf-uplift-while-to-for --resolve-ranked-shaped-type-result-dims --math-extend-to-supported-types --test-func-insert-result --topological-sort --scf-for-loop-canonicalization --test-func-set-type --cse --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-memref-dependence-check --test-func-erase-result --sroa --arith-unsigned-when-equivalent --test-func-insert-arg --normalize-memrefs --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-scf-if-utils --composite-fixed-point-pass --test-math-polynomial-approximation=\"enable-avx2\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse --test-func-insert-arg --scf-parallel-loop-fusion --inline --test-math-algebraic-simplification --test-memref-dependence-check --resolve-ranked-shaped-type-result-dims --scf-forall-to-parallel | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-scf-pipelining=\"annotate\" --scf-for-loop-specialization --scf-for-loop-canonicalization --scf-for-loop-canonicalization --test-scf-uplift-while-to-for --scf-forall-to-parallel --memref-expand --scf-for-loop-canonicalization --loop-invariant-code-motion --test-func-insert-result --remove-dead-values --symbol-dce --canonicalize=\"test-convergence\" --sroa --topological-sort --scf-for-loop-range-folding --test-scf-for-utils=\"test-replace-with-new-yields\" --loop-invariant-code-motion --test-func-erase-arg --memref-expand | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --arith-unsigned-when-equivalent | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --int-range-optimizations --arith-emulate-wide-int --inline --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --test-func-erase-result --sccp --inline --mem2reg=\"region-simplify\" --canonicalize=\"test-convergence\" --cse --remove-dead-values --test-func-insert-arg --loop-invariant-code-motion --sroa --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --canonicalize=\"test-convergence\" --sroa --test-func-insert-result --loop-invariant-code-motion --control-flow-sink --inline --canonicalize=\"test-convergence top-down=0\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938]]]",
        "test_line": "[[[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v4/tosa.5a89a914a2019644.mlir -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --loop-invariant-code-motion --cse --tosa-infer-shapes --tosa-make-broadcastable --tosa-make-broadcastable --sccp --control-flow-sink --tosa-layerwise-constant-fold --composite-fixed-point-pass --duplicate-function-elimination --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --inline --tosa-reduce-transposes | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --sroa --test-func-set-type --symbol-dce --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --cse --loop-invariant-code-motion --test-func-erase-arg --composite-fixed-point-pass --test-func-insert-result --test-function-pass --sroa --duplicate-function-elimination --test-func-insert-result --tosa-infer-shapes --test-func-insert-result --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --scf-parallel-loop-specialization | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-scf-uplift-while-to-for --arith-int-range-narrowing --linalg-specialize-generic-ops --control-flow-sink --mem2reg=\"region-simplify\" --composite-fixed-point-pass --test-function-pass --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-memref-bound-check --test-memref-dependence-check --scf-forall-to-for --sroa --scf-for-loop-specialization --scf-for-loop-specialization --test-func-erase-result --scf-parallel-loop-fusion --scf-for-loop-range-folding --scf-parallel-loop-specialization --sroa --composite-fixed-point-pass --test-scf-if-utils --duplicate-function-elimination --test-func-set-type --test-scf-uplift-while-to-for --test-func-insert-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-for-loop-canonicalization --loop-invariant-code-motion --canonicalize --remove-dead-values --topological-sort --test-func-insert-result --test-memref-bound-check --mem2reg=\"region-simplify\" --test-scf-while-op-builder --scf-for-loop-peeling=\"skip-partial\" --remove-dead-values --expand-realloc --symbol-dce --scf-for-loop-peeling=\"peel-front\" --duplicate-function-elimination --test-function-pass --duplicate-function-elimination --test-func-insert-result --inline --control-flow-sink --cse --test-func-erase-arg --memref-expand --resolve-ranked-shaped-type-result-dims --sccp --normalize-memrefs --scf-forall-to-parallel | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-unsupported-floats --test-func-set-type --resolve-ranked-shaped-type-result-dims --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --test-function-pass --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[7]]]",
        "test_line": "[[[49]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v4/tosa.5a89a914a2019644.mlir --tosa-reduce-transposes --tosa-test-quant-utils --duplicate-function-elimination --inline --cse --loop-invariant-code-motion --tosa-optional-decompositions --tosa-reduce-transposes --control-flow-sink --tosa-optional-decompositions --tosa-test-quant-utils --composite-fixed-point-pass --tosa-make-broadcastable --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --tosa-make-broadcastable --fold-tensor-subset-ops --loop-invariant-code-motion --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize=\"test-convergence\" --composite-fixed-point-pass --control-flow-sink --test-function-pass --scf-for-loop-specialization --test-func-insert-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-for-loop-peeling --int-range-optimizations --scf-forall-to-for --symbol-dce --arith-emulate-wide-int=\"widest-int-supported=32\" --arith-emulate-wide-int --cse --scf-for-to-while --loop-invariant-subset-hoisting --test-linalg-rank-reduce-contraction-ops --scf-parallel-loop-fusion --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --linalg-generalize-named-ops --linalg-specialize-generic-ops --topological-sort --loop-invariant-subset-hoisting --test-math-to-vcix --linalg-generalize-named-ops --test-tensor-transform-patterns --test-linalg-pad-fusion --linalg-fuse-elementwise-ops --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --scf-for-loop-canonicalization --tosa-make-broadcastable --test-scf-uplift-while-to-for --scf-for-to-while | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-greedy-fusion --sccp --tosa-make-broadcastable --math-uplift-to-fma --topological-sort --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --convert-elementwise-to-linalg --math-uplift-to-fma --loop-invariant-subset-hoisting --linalg-named-op-conversion --duplicate-function-elimination --loop-invariant-subset-hoisting --arith-unsigned-when-equivalent --math-uplift-to-fma --arith-expand --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg=\"region-simplify\" --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --test-linalg-elementwise-fusion-patterns --control-flow-sink --test-linalg-pad-fusion --cse --topological-sort --test-linalg-greedy-fusion --test-math-algebraic-simplification --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --topological-sort --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-transform-patterns=\"test-decompose-winograd-ops\" --test-math-to-vcix --composite-fixed-point-pass --test-math-algebraic-simplification --test-linalg-elementwise-fusion-patterns=\"control-fusion-by-expansion\" --linalg-fuse-elementwise-ops --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --inline --cse --test-func-insert-result --loop-invariant-subset-hoisting --test-function-pass --expand-strided-metadata --inline --arith-emulate-wide-int=\"widest-int-supported=32\" --sccp --expand-strided-metadata --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --linalg-inline-scalar-operands --test-arith-emulate-wide-int=\"widest-int-supported=8\" --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-arith-emulate-wide-int=\"widest-int-supported=8\" --mem2reg=\"region-simplify\" --arith-emulate-wide-int --test-func-erase-result --linalg-generalize-named-ops --inline --arith-expand=\"include-bf16\" --test-math-polynomial-approximation --arith-unsigned-when-equivalent --linalg-named-op-conversion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --arith-emulate-wide-int --test-func-erase-arg --math-extend-to-supported-types --test-linalg-data-layout-propagation --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-wide-int=\"widest-int-supported=32\" --scf-parallel-loop-tiling=\"parallel-loop-tile-sizes=1,4 no-min-max-bounds=true\" --scf-for-loop-specialization --mem2reg --scf-for-loop-canonicalization --mem2reg=\"region-simplify\" --arith-unsigned-when-equivalent --scf-parallel-loop-fusion --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --cse --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --test-func-insert-result --sroa --cse --topological-sort --test-func-insert-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938]]]",
        "test_line": "[[[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v4/tosa.5a89a914a2019644.mlir --tosa-test-quant-utils | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --test-linalg-rank-reduce-contraction-ops --test-func-insert-result --linalg-generalize-named-ops --mem2reg --loop-invariant-subset-hoisting --tosa-reduce-transposes | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-make-broadcastable --sccp --linalg-generalize-named-ops --mem2reg --sroa --convert-elementwise-to-linalg --test-expand-math --fold-tensor-subset-ops --test-func-insert-result --linalg-generalize-named-ops --test-math-polynomial-approximation --test-func-erase-arg --test-linalg-rank-reduce-contraction-ops --test-expand-math --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-math-polynomial-approximation --loop-invariant-subset-hoisting --linalg-inline-scalar-operands --test-linalg-greedy-fusion --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-expansion\" --test-math-to-vcix --int-range-optimizations --symbol-dce --test-math-to-vcix --math-uplift-to-fma --arith-expand=\"include-bf16\" --test-math-to-vcix --arith-expand=\"include-bf16\" --mem2reg=\"region-simplify\" --symbol-dce --test-func-insert-result --test-linalg-drop-unit-dims --topological-sort --test-tensor-transform-patterns=\"test-fold-constant-extract-slice\" --test-emulate-narrow-int --fold-tensor-subset-ops --arith-emulate-wide-int --linalg-generalize-named-ops --test-func-erase-arg --test-func-erase-arg --arith-emulate-wide-int=\"widest-int-supported=32\" --test-linalg-rank-reduce-contraction-ops --loop-invariant-code-motion --test-linalg-pad-fusion --arith-emulate-wide-int --linalg-specialize-generic-ops --arith-emulate-wide-int | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-math-polynomial-approximation --topological-sort --test-func-insert-arg --arith-expand=\"include-bf16\" --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --sccp --test-math-to-vcix --math-extend-to-supported-types --arith-unsigned-when-equivalent --duplicate-function-elimination --int-range-optimizations --test-func-insert-result --duplicate-function-elimination --sroa --control-flow-sink --loop-invariant-subset-hoisting --composite-fixed-point-pass --test-func-set-type --mem2reg=\"region-simplify\" --composite-fixed-point-pass --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --math-extend-to-supported-types --math-uplift-to-fma --control-flow-sink --int-range-optimizations --math-extend-to-supported-types --loop-invariant-code-motion --loop-invariant-subset-hoisting --sccp --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg --inline --math-extend-to-supported-types --symbol-dce --sroa --mem2reg=\"region-simplify\" --mem2reg=\"region-simplify\" --control-flow-sink --mem2reg=\"region-simplify\" --test-math-algebraic-simplification | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-result --control-flow-sink --symbol-dce --test-func-insert-result --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --composite-fixed-point-pass --test-func-insert-arg --sroa --composite-fixed-point-pass --test-func-erase-arg --test-func-insert-result --test-func-erase-arg --test-func-erase-result --symbol-dce --remove-dead-values --test-func-insert-arg --canonicalize=\"test-convergence top-down=0\" --canonicalize=\"test-convergence\" --test-func-erase-result --loop-invariant-subset-hoisting --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938]]]",
        "test_line": "[[[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v4/tosa.5a89a914a2019644.mlir --tosa-make-broadcastable --test-function-pass --fold-tensor-subset-ops --control-flow-sink --test-function-pass --tosa-optional-decompositions --duplicate-function-elimination --tosa-reduce-transposes --sccp --test-func-insert-arg --sccp --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --loop-invariant-subset-hoisting --symbol-dce --tosa-make-broadcastable --canonicalize=\"test-convergence\" --control-flow-sink --tosa-make-broadcastable --tosa-test-quant-utils --tosa-reduce-transposes | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-infer-shapes --linalg-fuse-elementwise-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-drop-unit-dims --test-linalg-pad-fusion --test-linalg-pad-fusion --memref-emulate-wide-int --test-math-polynomial-approximation --resolve-ranked-shaped-type-result-dims --duplicate-function-elimination --math-extend-to-supported-types --test-linalg-transform-patterns=\"test-erase-unused-operands-and-results\" --arith-emulate-wide-int --resolve-ranked-shaped-type-result-dims --test-memref-bound-check --test-func-erase-arg --resolve-ranked-shaped-type-result-dims --expand-realloc=\"emit-deallocs\" --canonicalize --test-math-polynomial-approximation=\"enable-avx2\" --arith-unsigned-when-equivalent --arith-unsigned-when-equivalent --control-flow-sink --composite-fixed-point-pass --sccp --expand-realloc=\"emit-deallocs\" --loop-invariant-subset-hoisting --math-extend-to-supported-types --arith-unsigned-when-equivalent --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --expand-strided-metadata --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --math-extend-to-supported-types --resolve-ranked-shaped-type-result-dims --duplicate-function-elimination --test-scf-pipelining=\"no-epilogue-peeling\" --scf-for-loop-canonicalization --scf-parallel-loop-specialization --test-scf-while-op-builder --test-memref-dependence-check --loop-invariant-subset-hoisting --math-uplift-to-fma --topological-sort --test-func-erase-result --memref-emulate-wide-int=\"widest-int-supported=32\" --canonicalize=\"test-convergence top-down=0\" --arith-int-range-narrowing | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize --scf-forall-to-for --test-func-erase-arg --composite-fixed-point-pass --test-math-algebraic-simplification --test-math-polynomial-approximation --test-scf-for-utils | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-arith-emulate-wide-int=\"widest-int-supported=8\" --scf-for-loop-range-folding --topological-sort --loop-invariant-code-motion --arith-emulate-wide-int=\"widest-int-supported=32\" --cse --composite-fixed-point-pass --arith-expand --test-func-insert-arg --arith-expand=\"include-bf16\" --test-function-pass --scf-for-loop-peeling --test-function-pass --scf-parallel-loop-specialization --remove-dead-values --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg=\"region-simplify\" --test-scf-for-utils --scf-for-loop-specialization --cse --test-scf-pipelining=\"no-epilogue-peeling\" --scf-parallel-loop-fusion --test-func-insert-result --scf-parallel-loop-fusion --cse --sroa --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --arith-unsigned-when-equivalent --control-flow-sink --mem2reg --loop-invariant-subset-hoisting --remove-dead-values --duplicate-function-elimination --test-func-insert-arg --inline --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --int-range-optimizations --sccp --arith-expand=\"include-bf16\" --sroa --test-func-erase-result --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --symbol-dce --loop-invariant-subset-hoisting --symbol-dce --arith-emulate-wide-int | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-arg --test-func-set-type --sroa --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938]]]",
        "test_line": "[[[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v4/tosa.5a89a914a2019644.mlir --tosa-test-quant-utils --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-test-quant-utils --test-tensor-copy-insertion=\"must-infer-memory-space\" --test-function-pass --duplicate-function-elimination --test-func-set-type --test-func-set-type --control-flow-sink --cse --test-func-erase-result --tosa-reduce-transposes --tosa-infer-shapes --mem2reg --loop-invariant-code-motion --sccp --tosa-optional-decompositions --test-func-insert-result --loop-invariant-code-motion --sccp --mem2reg --canonicalize=\"test-convergence top-down=0\" --loop-invariant-subset-hoisting --canonicalize=\"test-convergence top-down=0\" --test-func-insert-result --inline --symbol-dce --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --inline --canonicalize=\"test-convergence\" --inline --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --test-func-insert-arg --composite-fixed-point-pass --canonicalize --tosa-infer-shapes --test-func-set-type --duplicate-function-elimination --duplicate-function-elimination --tosa-optional-decompositions --mem2reg --sroa --mem2reg --tosa-make-broadcastable --tosa-reduce-transposes --symbol-dce --test-func-erase-arg --sroa --test-func-insert-result --cse --tosa-infer-shapes --tosa-test-quant-utils --tosa-infer-shapes --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-unsigned-when-equivalent --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-fuse-elementwise-ops --linalg-generalize-named-ops --test-func-set-type --convert-elementwise-to-linalg --test-func-insert-result --test-linalg-rank-reduce-contraction-ops --test-linalg-greedy-fusion --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --linalg-specialize-generic-ops --math-uplift-to-fma --test-linalg-rank-reduce-contraction-ops --linalg-fold-unit-extent-dims --topological-sort --test-expand-math --test-func-erase-result --linalg-inline-scalar-operands --test-math-polynomial-approximation=\"enable-avx2\" --fold-tensor-subset-ops --linalg-fold-unit-extent-dims --test-expand-math --test-func-insert-result --math-uplift-to-fma --test-func-erase-arg --test-function-pass --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-memref-dependence-check --linalg-inline-scalar-operands --test-linalg-greedy-fusion --duplicate-function-elimination --expand-realloc --test-linalg-data-layout-propagation --test-linalg-pad-fusion --composite-fixed-point-pass --expand-strided-metadata --resolve-ranked-shaped-type-result-dims --linalg-fuse-elementwise-ops --sccp --test-memref-bound-check --fold-memref-alias-ops --duplicate-function-elimination --resolve-shaped-type-result-dims --test-func-insert-arg --topological-sort --test-expand-math --memref-expand --math-uplift-to-fma --duplicate-function-elimination --symbol-dce --test-linalg-pad-fusion --fold-memref-alias-ops --expand-realloc=\"emit-deallocs\" --test-math-algebraic-simplification --test-func-erase-result --memref-expand --resolve-shaped-type-result-dims --test-expand-math --test-func-set-type --resolve-shaped-type-result-dims --canonicalize=\"test-convergence top-down=0\" --sroa --convert-elementwise-to-linalg --linalg-generalize-named-ops --linalg-generalize-named-ops --math-extend-to-supported-types --cse --linalg-named-op-conversion --memref-expand --loop-invariant-subset-hoisting --linalg-generalize-named-ops --resolve-shaped-type-result-dims --test-linalg-drop-unit-dims | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-arg --math-extend-to-supported-types --math-uplift-to-fma --duplicate-function-elimination --test-function-pass --mem2reg --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-expansion\" --test-math-algebraic-simplification --test-expand-math --test-linalg-rank-reduce-contraction-ops --test-func-erase-result --composite-fixed-point-pass --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --topological-sort --test-expand-math --test-func-insert-arg --test-math-polynomial-approximation | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --test-func-set-type --sroa --control-flow-sink --mem2reg --canonicalize --symbol-dce --duplicate-function-elimination --test-func-erase-arg --composite-fixed-point-pass --control-flow-sink --test-func-erase-result --test-func-insert-arg --sroa --inline --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938]]]",
        "test_line": "[[[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v4/tosa.5a89a914a2019644.mlir --tosa-make-broadcastable --composite-fixed-point-pass --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --test-linalg-data-layout-propagation --linalg-generalize-named-ops --duplicate-function-elimination --linalg-generalize-named-ops --linalg-named-op-conversion --sccp --tosa-layerwise-constant-fold --test-func-erase-result --test-math-polynomial-approximation --composite-fixed-point-pass --topological-sort --test-linalg-drop-unit-dims --linalg-fuse-elementwise-ops --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --test-linalg-greedy-fusion --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --symbol-dce --composite-fixed-point-pass --control-flow-sink --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --test-func-erase-arg --canonicalize=\"test-convergence top-down=0\" --test-func-erase-arg --inline --arith-unsigned-when-equivalent --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --test-func-insert-arg --canonicalize --sccp --test-function-pass --loop-invariant-subset-hoisting --duplicate-function-elimination --inline --remove-dead-values --loop-invariant-subset-hoisting --composite-fixed-point-pass --test-func-insert-arg --test-func-set-type --loop-invariant-code-motion --canonicalize=\"test-convergence\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938]]]",
        "test_line": "[[[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v4/tosa.5a89a914a2019644.mlir --tosa-test-quant-utils --loop-invariant-subset-hoisting --control-flow-sink --test-func-erase-result --fold-tensor-subset-ops --test-func-erase-result --duplicate-function-elimination --inline --symbol-dce --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --control-flow-sink --loop-invariant-subset-hoisting --tosa-reduce-transposes --test-func-erase-result --test-func-erase-result --inline --test-func-insert-arg --fold-tensor-subset-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --symbol-dce --inline --tosa-make-broadcastable --tosa-test-quant-utils --topological-sort --inline --tosa-make-broadcastable --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sroa --test-linalg-drop-unit-dims --math-extend-to-supported-types --sccp --linalg-fold-unit-extent-dims --test-scf-for-utils=\"test-replace-with-new-yields\" --topological-sort --test-func-insert-result --mem2reg=\"region-simplify\" --test-expand-math --topological-sort --test-math-polynomial-approximation --test-math-to-vcix --linalg-inline-scalar-operands --composite-fixed-point-pass --scf-parallel-loop-tiling | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-for-loop-canonicalization --test-scf-if-utils | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --test-linalg-transform-patterns=\"test-erase-unnecessary-inputs\" --int-range-optimizations --loop-invariant-code-motion --arith-emulate-unsupported-floats --test-func-erase-result --symbol-dce --test-arith-emulate-wide-int=\"widest-int-supported=8\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --fold-memref-alias-ops --linalg-named-op-conversion --fold-memref-alias-ops --loop-invariant-subset-hoisting --canonicalize --linalg-specialize-generic-ops --resolve-ranked-shaped-type-result-dims --test-func-erase-result --duplicate-function-elimination --test-linalg-elementwise-fusion-patterns=\"fuse-generic-ops-control\" --test-linalg-elementwise-fusion-patterns=\"fuse-generic-ops-control\" --test-linalg-rank-reduce-contraction-ops --sroa --linalg-generalize-named-ops --canonicalize=\"test-convergence\" --topological-sort --test-memref-bound-check --test-func-insert-result --canonicalize=\"test-convergence\" --test-linalg-drop-unit-dims --test-linalg-elementwise-fusion-patterns=\"collapse-dimensions-control=2,3\" --mem2reg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --test-function-pass --test-func-erase-result --loop-invariant-code-motion --arith-int-range-narrowing --arith-expand=\"include-bf16\" --test-arith-emulate-wide-int --symbol-dce --normalize-memrefs | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --symbol-dce --remove-dead-values --topological-sort --topological-sort --int-range-optimizations --sroa --test-func-set-type --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-arg --sccp --test-func-erase-arg --control-flow-sink --mem2reg=\"region-simplify\" --sccp --test-func-set-type --test-func-erase-result --loop-invariant-subset-hoisting --inline --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-result --mem2reg --remove-dead-values --symbol-dce --symbol-dce --composite-fixed-point-pass --loop-invariant-code-motion --cse --duplicate-function-elimination --test-func-insert-arg --cse --sroa --mem2reg --loop-invariant-subset-hoisting --composite-fixed-point-pass --sccp --test-func-insert-arg --remove-dead-values --test-func-set-type --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938]]]",
        "test_line": "[[[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v4/tosa.5a89a914a2019644.mlir --loop-invariant-code-motion --tosa-optional-decompositions --tosa-reduce-transposes --loop-invariant-subset-hoisting --tosa-make-broadcastable | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-result --loop-invariant-subset-hoisting --mem2reg --cse --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --sroa --test-func-erase-result --test-tensor-transform-patterns=\"use-foreach\" --symbol-dce --topological-sort --test-function-pass --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --convert-elementwise-to-linalg --scf-for-loop-range-folding --composite-fixed-point-pass --inline --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --linalg-named-op-conversion --linalg-inline-scalar-operands --test-scf-for-utils --tosa-infer-shapes --inline --mem2reg=\"region-simplify\" --scf-parallel-loop-tiling --test-math-algebraic-simplification --tosa-reduce-transposes --linalg-generalize-named-ops --linalg-named-op-conversion --test-scf-while-op-builder --symbol-dce --tosa-infer-shapes --test-linalg-data-layout-propagation --test-func-erase-result --cse --test-math-polynomial-approximation=\"enable-avx2\" --tosa-layerwise-constant-fold --scf-for-loop-peeling --tosa-layerwise-constant-fold --tosa-reduce-transposes --scf-parallel-loop-tiling=\"parallel-loop-tile-sizes=1,4 no-min-max-bounds=true\" --linalg-fuse-elementwise-ops --test-func-insert-result --loop-invariant-code-motion --tosa-test-quant-utils --control-flow-sink --tosa-reduce-transposes --scf-parallel-loop-specialization --tosa-make-broadcastable --test-linalg-pad-fusion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --duplicate-function-elimination --canonicalize=\"test-convergence top-down=0\" --loop-invariant-code-motion --linalg-specialize-generic-ops --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --test-func-insert-arg --linalg-fuse-elementwise-ops --loop-invariant-code-motion --sccp --control-flow-sink --loop-invariant-subset-hoisting --arith-emulate-wide-int=\"widest-int-supported=32\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --normalize-memrefs --test-linalg-decompose-ops=\"remove-dead-args-and-results\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --fold-memref-alias-ops --scf-for-loop-canonicalization --scf-parallel-loop-specialization --int-range-optimizations --loop-invariant-subset-hoisting --inline --scf-for-loop-specialization --memref-emulate-wide-int=\"widest-int-supported=32\" --mem2reg --test-scf-while-op-builder --test-memref-bound-check --sroa --normalize-memrefs | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --expand-realloc=\"emit-deallocs\" --test-memref-dependence-check --fold-memref-alias-ops --test-arith-emulate-wide-int=\"widest-int-supported=8\" --duplicate-function-elimination --canonicalize=\"test-convergence\" --test-memref-dependence-check --expand-strided-metadata --arith-int-range-narrowing --loop-invariant-subset-hoisting --expand-realloc=\"emit-deallocs\" --test-memref-bound-check --resolve-ranked-shaped-type-result-dims --normalize-memrefs --duplicate-function-elimination --duplicate-function-elimination --duplicate-function-elimination --test-func-erase-arg --arith-int-range-narrowing --sroa --mem2reg=\"region-simplify\" --test-func-erase-arg --test-func-set-type --canonicalize=\"test-convergence\" --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --memref-expand --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --composite-fixed-point-pass --control-flow-sink --loop-invariant-code-motion --topological-sort --test-func-set-type --control-flow-sink --loop-invariant-code-motion --test-func-insert-arg --symbol-dce --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --mem2reg=\"region-simplify\" --remove-dead-values --remove-dead-values --mem2reg=\"region-simplify\" --test-func-erase-arg --sccp --test-func-erase-result --test-func-erase-result --sroa --sroa --composite-fixed-point-pass --test-function-pass --mem2reg=\"region-simplify\" --symbol-dce --loop-invariant-subset-hoisting --test-func-set-type --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938]]]",
        "test_line": "[[[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v4/tosa.5a89a914a2019644.mlir --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-result --arith-expand --test-func-insert-result --sroa --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --scf-for-to-while --topological-sort --test-arith-emulate-wide-int=\"widest-int-supported=8\" --convert-elementwise-to-linalg --control-flow-sink --test-func-erase-arg --canonicalize --test-func-set-type --linalg-fuse-elementwise-ops --test-math-to-vcix --scf-for-loop-specialization --test-linalg-transform-patterns=\"test-bubble-up-extract-slice-op-pattern\" --linalg-generalize-named-ops --canonicalize=\"test-convergence\" --arith-unsigned-when-equivalent --test-func-insert-result --test-linalg-drop-unit-dims --scf-forall-to-parallel | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --cse --test-func-erase-result --sroa --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-tensor-transform-patterns --mem2reg=\"region-simplify\" --test-func-insert-result --sroa --test-math-to-vcix --arith-int-range-narrowing --math-extend-to-supported-types --test-func-erase-arg --linalg-specialize-generic-ops --arith-expand --sccp --duplicate-function-elimination --fold-tensor-subset-ops --test-func-insert-arg --topological-sort --convert-elementwise-to-linalg --test-math-polynomial-approximation=\"enable-avx2\" --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --linalg-generalize-named-ops --arith-emulate-wide-int=\"widest-int-supported=32\" --composite-fixed-point-pass --sroa --test-expand-math --test-linalg-data-layout-propagation --linalg-named-op-conversion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --fold-memref-alias-ops --inline --sroa --test-func-insert-result --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --test-func-erase-result --test-func-insert-arg --sroa --symbol-dce --test-memref-dependence-check --fold-memref-alias-ops --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg=\"region-simplify\" --resolve-ranked-shaped-type-result-dims --sccp --test-memref-bound-check | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --test-func-erase-result --canonicalize --loop-invariant-subset-hoisting --test-func-erase-result --sccp --composite-fixed-point-pass --duplicate-function-elimination --cse --topological-sort --canonicalize --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938]]]",
        "test_line": "[[[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v4/tosa.5a89a914a2019644.mlir --test-func-insert-result --tosa-test-quant-utils --mem2reg=\"region-simplify\" --composite-fixed-point-pass --tosa-make-broadcastable --tosa-test-quant-utils --test-func-erase-arg --test-tensor-transform-patterns=\"test-rewrite-extract-slice-from-collapse-shape\" --canonicalize --control-flow-sink --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --test-func-erase-result --inline --loop-invariant-subset-hoisting --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --control-flow-sink --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --control-flow-sink --test-function-pass --sroa --loop-invariant-code-motion --control-flow-sink --control-flow-sink --fold-tensor-subset-ops --mem2reg=\"region-simplify\" --cse --test-func-erase-arg --mem2reg=\"region-simplify\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-result --fold-tensor-subset-ops --tosa-infer-shapes --test-scf-pipelining --loop-invariant-code-motion --scf-for-loop-peeling --topological-sort --test-function-pass --tosa-infer-shapes --test-arith-emulate-wide-int --int-range-optimizations --test-func-erase-result --test-func-set-type --test-scf-if-utils --test-arith-emulate-wide-int --cse --canonicalize --arith-unsigned-when-equivalent --scf-parallel-loop-tiling --tosa-reduce-transposes --test-scf-uplift-while-to-for --inline --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --canonicalize=\"test-convergence\" --scf-for-to-while --tosa-infer-shapes --tosa-infer-shapes | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-scf-pipelining=\"annotate\" --int-range-optimizations --remove-dead-values --scf-parallel-loop-specialization --test-emulate-narrow-int=\"memref-load-bitwidth=8\" --topological-sort --test-arith-emulate-wide-int --tosa-optional-decompositions --symbol-dce --test-func-erase-arg --control-flow-sink --tosa-optional-decompositions --scf-forall-to-parallel | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --test-math-algebraic-simplification --test-linalg-rank-reduce-contraction-ops --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --inline --test-math-polynomial-approximation=\"enable-avx2\" --test-linalg-rank-reduce-contraction-ops --math-extend-to-supported-types --test-func-insert-result --fold-memref-alias-ops --test-func-insert-arg --test-memref-bound-check --linalg-inline-scalar-operands --memref-expand --test-func-insert-arg --memref-expand --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --test-memref-dependence-check --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --mem2reg=\"region-simplify\" --test-func-insert-arg --resolve-shaped-type-result-dims --memref-emulate-wide-int=\"widest-int-supported=32\" --linalg-named-op-conversion --convert-elementwise-to-linalg --resolve-shaped-type-result-dims --test-linalg-data-layout-propagation --normalize-memrefs --mem2reg --linalg-fold-unit-extent-dims --memref-expand --test-function-pass --test-func-insert-arg --test-linalg-pad-fusion --test-linalg-pad-fusion --convert-elementwise-to-linalg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --resolve-ranked-shaped-type-result-dims --test-memref-dependence-check --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --canonicalize --math-uplift-to-fma --remove-dead-values --arith-emulate-wide-int=\"widest-int-supported=32\" --normalize-memrefs --test-func-insert-arg --control-flow-sink --arith-int-range-narrowing --arith-int-range-narrowing --composite-fixed-point-pass --test-func-insert-result --test-memref-bound-check --loop-invariant-code-motion --control-flow-sink --inline --control-flow-sink --duplicate-function-elimination --test-math-algebraic-simplification --loop-invariant-subset-hoisting --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-arg --sroa --cse --expand-strided-metadata --inline --topological-sort --symbol-dce --test-math-algebraic-simplification --test-math-algebraic-simplification --canonicalize --topological-sort --test-memref-dependence-check --expand-strided-metadata --inline --test-function-pass --test-math-algebraic-simplification --loop-invariant-subset-hoisting --symbol-dce --test-memref-bound-check --inline --test-func-erase-arg --composite-fixed-point-pass --remove-dead-values | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-result --control-flow-sink --memref-expand --mem2reg --test-function-pass --test-memref-bound-check --sroa --normalize-memrefs --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --sroa --test-func-insert-result --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938]]]",
        "test_line": "[[[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v4/tosa.5a89a914a2019644.mlir --tosa-layerwise-constant-fold --test-tensor-copy-insertion=\"must-infer-memory-space\" --symbol-dce --inline --test-function-pass --test-func-insert-result --tosa-infer-shapes --test-func-insert-arg --cse --sroa --tosa-make-broadcastable | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-result --test-func-insert-result --duplicate-function-elimination --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-for-loop-range-folding --loop-invariant-code-motion --test-scf-while-op-builder | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --test-math-polynomial-approximation --scf-forall-to-for --test-linalg-pad-fusion --test-linalg-rank-reduce-contraction-ops --int-range-optimizations --topological-sort --linalg-named-op-conversion --test-math-to-vcix --test-scf-if-utils --linalg-generalize-named-ops --canonicalize --test-math-algebraic-simplification --test-math-to-vcix --scf-forall-to-parallel --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --linalg-generalize-named-ops --loop-invariant-code-motion --arith-int-range-narrowing --test-scf-for-utils=\"test-replace-with-new-yields\" --test-scf-if-utils | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --test-func-insert-result --tosa-reduce-transposes --scf-for-loop-peeling=\"peel-front\" --test-func-erase-result --test-function-pass --test-scf-if-utils | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-unsupported-floats --test-func-insert-arg --scf-forall-to-parallel --convert-elementwise-to-linalg --canonicalize=\"test-convergence\" --composite-fixed-point-pass --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --linalg-fold-unit-extent-dims --scf-for-loop-peeling=\"peel-front\" --cse --arith-unsigned-when-equivalent --int-range-optimizations --canonicalize --topological-sort --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --test-linalg-data-layout-propagation --test-function-pass --test-linalg-greedy-fusion --arith-emulate-unsupported-floats --symbol-dce --test-linalg-rank-reduce-contraction-ops --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --cse --linalg-inline-scalar-operands --symbol-dce --test-tensor-copy-insertion --test-func-erase-arg --linalg-generalize-named-ops --linalg-inline-scalar-operands --linalg-fuse-elementwise-ops --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --test-func-insert-result --test-func-erase-arg --fold-tensor-subset-ops --linalg-generalize-named-ops --test-func-insert-result --linalg-named-op-conversion --mem2reg=\"region-simplify\" --canonicalize=\"test-convergence\" --sccp --arith-int-range-narrowing | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-arg --arith-expand=\"include-bf16\" --expand-realloc=\"emit-deallocs\" --scf-parallel-loop-fusion --test-arith-emulate-wide-int=\"widest-int-supported=8\" --scf-forall-to-parallel --test-func-insert-result --arith-emulate-wide-int=\"widest-int-supported=32\" --remove-dead-values --remove-dead-values | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --memref-emulate-wide-int=\"widest-int-supported=32\" --sroa --composite-fixed-point-pass --expand-realloc --test-scf-uplift-while-to-for | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --canonicalize=\"test-convergence\" --symbol-dce --sccp --test-func-erase-arg --symbol-dce --loop-invariant-code-motion --test-func-erase-result --symbol-dce --test-func-set-type --remove-dead-values --test-function-pass --test-func-set-type --composite-fixed-point-pass --cse --symbol-dce --remove-dead-values --composite-fixed-point-pass --remove-dead-values | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938],\n[0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938,    0.547938]]]",
        "test_line": "[[[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367],\n[0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367,    0.548367]]]"
    }
}
