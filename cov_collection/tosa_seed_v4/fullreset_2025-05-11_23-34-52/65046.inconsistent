{
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v4/tosa.29e5380ac5cc313c.mlir --mem2reg --loop-invariant-code-motion --test-tensor-transform-patterns=\"use-foreach\" --symbol-dce --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse --fold-tensor-subset-ops --inline --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-for-loop-canonicalization --sccp --mem2reg=\"region-simplify\" --test-scf-while-op-builder --sccp --scf-forall-to-parallel --tosa-reduce-transposes --canonicalize=\"test-convergence top-down=0\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --cse --test-func-insert-result --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --canonicalize=\"test-convergence\" --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-collapsing\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --affine-expand-index-ops --memref-expand --test-constant-fold --test-func-insert-result --test-func-erase-arg --test-func-set-type --test-func-erase-arg --affine-loop-fusion=\"mode=producer\" --affine-loop-coalescing --test-decompose-affine-ops --normalize-memrefs --normalize-memrefs --control-flow-sink --math-extend-to-supported-types --affine-expand-index-ops --composite-fixed-point-pass --test-math-algebraic-simplification --test-math-polynomial-approximation=\"enable-avx2\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --test-func-insert-result --cse --duplicate-function-elimination --test-func-erase-arg --canonicalize --sccp --sccp --mem2reg=\"region-simplify\" --topological-sort --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse --mem2reg=\"region-simplify\" --topological-sort --test-func-insert-arg --control-flow-sink --inline --loop-invariant-code-motion --test-func-erase-result --duplicate-function-elimination --remove-dead-values --loop-invariant-code-motion --canonicalize=\"test-convergence\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262],\n[-262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262],\n[-262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262],\n[-262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262],\n[-262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262],\n[-262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262],\n[-262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262],\n[-262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262],\n[-262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262],\n[-262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262],\n[-262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262],\n[-262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262],\n[-262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262],\n[-262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262],\n[-262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262],\n[-262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262],\n[-262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262],\n[-262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262],\n[-262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262],\n[-262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262],\n[-262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262],\n[-262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262],\n[-262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262],\n[-262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262],\n[-262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262],\n[-262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262],\n[-262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262],\n[-262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262,    -262]]]",
        "test_line": "[[[0,    0,    -nan,    -nan,    0,    0,    0,    0,    0,    0,    0,    0,    -nan,    -nan,    0,    0,    0,    0,    0,    0,    0],\n[0,    -nan,    -nan,    0,    0,    0,    0,    0,    0,    0,    0,    -nan,    -nan,    0,    0,    0,    0,    0,    0,    0,    0],\n[-nan,    -nan,    0,    0,    0,    0,    0,    0,    0,    0,    -nan,    -nan,    0,    0,    0,    0,    0,    0,    0,    0,    -nan],\n[-nan,    0,    0,    0,    0,    0,    0,    0,    0,    -nan,    -nan,    0,    0,    0,    0,    0,    0,    0,    0,    -nan,    -nan],\n[0,    0,    0,    0,    0,    0,    0,    0,    -nan,    -nan,    0,    0,    0,    0,    0,    0,    0,    0,    -nan,    -nan,    0],\n[0,    0,    0,    0,    0,    0,    0,    -nan,    -nan,    0,    0,    0,    0,    0,    0,    0,    0,    -nan,    -nan,    0,    0],\n[0,    0,    0,    0,    0,    0,    -nan,    -nan,    0,    0,    0,    0,    0,    0,    0,    0,    -nan,    -nan,    0,    0,    0],\n[0,    0,    0,    0,    0,    -nan,    -nan,    0,    0,    0,    0,    0,    0,    0,    0,    -nan,    -nan,    0,    0,    0,    0],\n[0,    0,    0,    0,    -nan,    -nan,    0,    0,    0,    0,    0,    0,    0,    0,    -nan,    -nan,    0,    0,    0,    0,    0],\n[0,    0,    0,    -nan,    -nan,    0,    0,    0,    0,    0,    0,    0,    0,    -nan,    -nan,    0,    0,    0,    0,    0,    0],\n[0,    0,    -nan,    -nan,    0,    0,    0,    0,    0,    0,    0,    0,    -nan,    -nan,    0,    0,    0,    0,    0,    0,    0],\n[0,    -nan,    -nan,    0,    0,    0,    0,    0,    0,    0,    0,    -nan,    -nan,    0,    0,    0,    0,    0,    0,    0,    0],\n[-nan,    -nan,    0,    0,    0,    0,    0,    0,    0,    0,    -nan,    -nan,    0,    0,    0,    0,    0,    0,    0,    0,    -nan],\n[-nan,    0,    0,    0,    0,    0,    0,    0,    0,    -nan,    -nan,    0,    0,    0,    0,    0,    0,    0,    0,    -nan,    -nan],\n[0,    0,    0,    0,    0,    0,    0,    0,    -nan,    -nan,    0,    0,    0,    0,    0,    0,    0,    0,    -nan,    -nan,    0],\n[0,    0,    0,    0,    0,    0,    0,    -nan,    -nan,    0,    0,    0,    0,    0,    0,    0,    0,    -nan,    -nan,    0,    0],\n[0,    0,    0,    0,    0,    0,    -nan,    -nan,    0,    0,    0,    0,    0,    0,    0,    0,    -nan,    -nan,    0,    0,    0],\n[0,    0,    0,    0,    0,    -nan,    -nan,    0,    0,    0,    0,    0,    0,    0,    0,    -nan,    -nan,    0,    0,    0,    0],\n[0,    0,    0,    0,    -nan,    -nan,    0,    0,    0,    0,    0,    0,    0,    0,    -nan,    -nan,    0,    0,    0,    0,    0],\n[0,    0,    0,    -nan,    -nan,    0,    0,    0,    0,    0,    0,    0,    0,    -nan,    -nan,    0,    0,    0,    0,    0,    0],\n[0,    0,    -nan,    -nan,    0,    0,    0,    0,    0,    0,    0,    0,    -nan,    -nan,    0,    0,    0,    0,    0,    0,    0],\n[0,    -nan,    -nan,    0,    0,    0,    0,    0,    0,    0,    0,    -nan,    -nan,    0,    0,    0,    0,    0,    0,    0,    0],\n[-nan,    -nan,    0,    0,    0,    0,    0,    0,    0,    0,    -nan,    -nan,    0,    0,    0,    0,    0,    0,    0,    0,    -nan],\n[-nan,    0,    0,    0,    0,    0,    0,    0,    0,    -nan,    -nan,    0,    0,    0,    0,    0,    0,    0,    0,    -nan,    -nan],\n[0,    0,    0,    0,    0,    0,    0,    0,    -nan,    -nan,    0,    0,    0,    0,    0,    0,    0,    0,    -nan,    -nan,    0],\n[0,    0,    0,    0,    0,    0,    0,    -nan,    -nan,    0,    0,    0,    0,    0,    0,    0,    0,    -nan,    -nan,    0,    0],\n[0,    0,    0,    0,    0,    0,    -nan,    -nan,    0,    0,    0,    0,    0,    0,    0,    0,    -nan,    -nan,    0,    0,    0],\n[0,    0,    0,    0,    0,    -nan,    -nan,    0,    0,    0,    0,    0,    0,    0,    0,    -nan,    -nan,    2.8026e-45,    0,    80181.6,    3.06492e-41]]]"
    }
}
