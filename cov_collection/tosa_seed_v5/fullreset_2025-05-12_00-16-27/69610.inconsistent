{
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v5/tosa.4ac9573ef1c70cd3.mlir -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-tensor-copy-insertion=\"must-infer-memory-space\" --test-function-pass --test-emulate-narrow-int --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --fold-tensor-subset-ops --tosa-make-broadcastable --test-emulate-narrow-int=\"memref-load-bitwidth=32\" --mem2reg --tosa-optional-decompositions --test-func-erase-arg --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-layerwise-constant-fold --cse --sroa --cse --duplicate-function-elimination --arith-int-range-narrowing --int-range-optimizations --inline --mem2reg=\"region-simplify\" --arith-expand --arith-expand=\"include-bf16\" --test-func-insert-result --arith-expand --tosa-validate --mem2reg --test-func-erase-arg --arith-emulate-wide-int=\"widest-int-supported=32\" --loop-invariant-subset-hoisting --tosa-test-quant-utils --tosa-optional-decompositions --test-func-set-type --test-arith-emulate-wide-int=\"widest-int-supported=8\" --symbol-dce --arith-expand --arith-unsigned-when-equivalent --loop-invariant-subset-hoisting --test-function-pass --test-func-erase-arg --int-range-optimizations --tosa-test-quant-utils --fold-tensor-subset-ops --mem2reg=\"region-simplify\" --tosa-optional-decompositions --test-emulate-narrow-int --test-func-insert-arg --loop-invariant-code-motion --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --composite-fixed-point-pass --duplicate-function-elimination --math-extend-to-supported-types --arith-unsigned-when-equivalent --test-math-algebraic-simplification --arith-emulate-wide-int=\"widest-int-supported=32\" --test-expand-math --canonicalize=\"test-convergence top-down=0\" --linalg-inline-scalar-operands --test-linalg-transform-patterns=\"test-bubble-up-extract-slice-op-pattern\" --test-linalg-data-layout-propagation --linalg-named-op-conversion --duplicate-function-elimination --test-math-algebraic-simplification --linalg-inline-scalar-operands --test-math-polynomial-approximation --int-range-optimizations | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-result --control-flow-sink --test-func-set-type --test-func-set-type --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg --composite-fixed-point-pass --test-linalg-decompose-ops --test-func-set-type --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-linalg-drop-unit-dims --test-function-pass --linalg-fuse-elementwise-ops --symbol-dce --control-flow-sink --convert-elementwise-to-linalg --linalg-inline-scalar-operands --mem2reg=\"region-simplify\" --arith-int-range-narrowing --test-arith-emulate-wide-int --inline --arith-unsigned-when-equivalent --composite-fixed-point-pass --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --mem2reg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-transform-patterns=\"test-erase-unnecessary-inputs\" --sroa --test-function-pass --test-linalg-greedy-fusion --test-linalg-data-layout-propagation --linalg-generalize-named-ops --canonicalize --sccp --symbol-dce --sccp --linalg-fold-unit-extent-dims --test-linalg-drop-unit-dims --mem2reg=\"region-simplify\" --test-func-insert-arg --test-function-pass --loop-invariant-code-motion --topological-sort --inline --test-linalg-decompose-ops=\"remove-dead-args-and-results\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-drop-unit-dims --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-for-loop-specialization --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --cse --loop-invariant-code-motion --test-func-insert-result --test-func-insert-arg --test-func-insert-result --test-func-set-type --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg --control-flow-sink --sccp --loop-invariant-code-motion --inline --sroa --canonicalize --test-func-erase-arg --inline --symbol-dce --test-func-set-type --test-function-pass --test-func-insert-result --test-function-pass --symbol-dce --loop-invariant-subset-hoisting --topological-sort --test-func-erase-result --test-func-erase-result --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975]]]",
        "test_line": "[[[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v5/tosa.4ac9573ef1c70cd3.mlir -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --fold-tensor-subset-ops --symbol-dce --scf-forall-to-for --topological-sort --scf-forall-to-parallel --sccp --test-scf-while-op-builder --tosa-infer-shapes --test-tensor-transform-patterns=\"use-foreach\" --tosa-test-quant-utils --remove-dead-values | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-inline-scalar-operands --control-flow-sink --arith-expand=\"include-bf16\" --linalg-fold-unit-extent-dims --test-math-polynomial-approximation --fold-tensor-subset-ops --linalg-specialize-generic-ops --linalg-inline-scalar-operands --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --test-linalg-data-layout-propagation --test-function-pass --test-linalg-drop-unit-dims --math-uplift-to-fma --fold-tensor-subset-ops --test-linalg-data-layout-propagation --linalg-generalize-named-ops --test-linalg-elementwise-fusion-patterns=\"collapse-dimensions-control=2,3\" --test-linalg-rank-reduce-contraction-ops --test-func-insert-arg --test-math-algebraic-simplification --mem2reg --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --topological-sort --int-range-optimizations --test-linalg-rank-reduce-contraction-ops --arith-expand=\"include-bf16\" --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-transform-patterns=\"test-erase-unused-operands-and-results\" --resolve-shaped-type-result-dims --linalg-fuse-elementwise-ops --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-inline-scalar-operands --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg=\"region-simplify\" --test-linalg-drop-unit-dims --control-flow-sink --test-func-set-type --test-linalg-elementwise-fusion-patterns=\"fuse-multiuse-producer\" --loop-invariant-subset-hoisting --test-linalg-greedy-fusion --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-for-loop-canonicalization --arith-expand=\"include-bf16\" --test-func-insert-result --scf-forall-to-for --control-flow-sink --control-flow-sink --remove-dead-values --arith-int-range-narrowing --remove-dead-values --scf-for-loop-range-folding | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-arg --arith-emulate-unsupported-floats --mem2reg --sccp --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --test-func-insert-arg --remove-dead-values --control-flow-sink --inline --remove-dead-values --test-func-set-type --sccp --loop-invariant-code-motion --loop-invariant-subset-hoisting --test-function-pass --inline --control-flow-sink --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --loop-invariant-subset-hoisting --control-flow-sink --loop-invariant-code-motion --loop-invariant-code-motion --test-function-pass --loop-invariant-code-motion --cse --duplicate-function-elimination --remove-dead-values --test-func-erase-result --mem2reg=\"region-simplify\" --loop-invariant-code-motion --duplicate-function-elimination --inline --canonicalize=\"test-convergence top-down=0\" --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975]]]",
        "test_line": "[[[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v5/tosa.4ac9573ef1c70cd3.mlir --test-func-erase-result --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --test-function-pass --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --canonicalize=\"test-convergence top-down=0\" --topological-sort --sccp --sroa --test-func-erase-result --test-func-set-type --test-function-pass --test-func-insert-arg --test-func-insert-result --tosa-test-quant-utils --remove-dead-values --mem2reg --mem2reg=\"region-simplify\" --topological-sort --tosa-reduce-transposes --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sroa --tosa-test-quant-utils --composite-fixed-point-pass --tosa-optional-decompositions --test-emulate-narrow-int=\"arith-compute-bitwidth=8\" --composite-fixed-point-pass --canonicalize=\"test-convergence top-down=0\" --duplicate-function-elimination --sroa --test-tensor-copy-insertion=\"must-infer-memory-space\" --test-func-insert-result --test-tensor-transform-patterns=\"test-fold-consecutive-insert-extract-slice\" --loop-invariant-code-motion --symbol-dce --arith-emulate-wide-int=\"widest-int-supported=32\" --test-func-set-type --arith-unsigned-when-equivalent --sccp --test-func-erase-result --loop-invariant-subset-hoisting --arith-unsigned-when-equivalent --inline --control-flow-sink --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-pad-fusion --test-func-insert-result --cse --test-function-pass --topological-sort --test-func-set-type --cse --test-math-polynomial-approximation --math-extend-to-supported-types --linalg-generalize-named-ops --duplicate-function-elimination --sroa --loop-invariant-code-motion --test-linalg-rank-reduce-contraction-ops --test-arith-emulate-wide-int=\"widest-int-supported=8\" --linalg-generalize-named-ops --loop-invariant-subset-hoisting --symbol-dce --test-func-erase-arg --test-func-insert-result --test-math-to-vcix --cse --test-math-polynomial-approximation | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg --sroa --canonicalize=\"test-convergence\" --test-linalg-transform-patterns=\"test-swap-extract-slice-with-fill-pattern\" --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-expansion\" --test-linalg-rank-reduce-contraction-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-data-layout-propagation --linalg-specialize-generic-ops --test-linalg-greedy-fusion --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --test-linalg-pad-fusion --test-linalg-decompose-ops --linalg-specialize-generic-ops --test-linalg-drop-unit-dims --convert-elementwise-to-linalg --test-func-erase-result --symbol-dce --loop-invariant-code-motion --linalg-generalize-named-ops --linalg-fuse-elementwise-ops --test-linalg-greedy-fusion --test-function-pass --test-linalg-rank-reduce-contraction-ops --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-result --expand-strided-metadata --test-memref-dependence-check | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-transform-patterns=\"test-patterns\" --test-linalg-decompose-ops --sccp --loop-invariant-subset-hoisting --test-linalg-drop-unit-dims --convert-elementwise-to-linalg --test-function-pass --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --test-linalg-transform-patterns=\"test-swap-subtensor-padtensor\" --test-func-insert-result --mem2reg --linalg-inline-scalar-operands --linalg-named-op-conversion --sroa --test-linalg-elementwise-fusion-patterns=\"fuse-generic-ops-control\" --sroa --test-linalg-drop-unit-dims --test-func-erase-arg --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --test-linalg-decompose-ops --test-linalg-transform-patterns=\"test-winograd-conv2d\" --loop-invariant-subset-hoisting --test-linalg-greedy-fusion --convert-elementwise-to-linalg --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-expansion\" --topological-sort --sroa --convert-elementwise-to-linalg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --symbol-dce --int-range-optimizations --test-func-set-type --test-func-insert-arg --test-function-pass --mem2reg=\"region-simplify\" --test-function-pass --test-arith-emulate-wide-int --arith-expand --control-flow-sink --arith-emulate-unsupported-floats --test-arith-emulate-wide-int=\"widest-int-supported=8\" --arith-unsigned-when-equivalent --remove-dead-values --memref-expand --duplicate-function-elimination --test-memref-dependence-check --mem2reg=\"region-simplify\" --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-func-insert-result --arith-unsigned-when-equivalent --cse --arith-emulate-wide-int=\"widest-int-supported=32\" --control-flow-sink --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-arg --loop-invariant-code-motion --remove-dead-values --topological-sort --test-func-set-type --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --test-func-set-type --control-flow-sink --cse --control-flow-sink --test-func-erase-arg --sccp --test-func-insert-arg --test-func-erase-result --remove-dead-values --canonicalize=\"test-convergence top-down=0\" --inline --mem2reg=\"region-simplify\" --test-func-erase-result --symbol-dce --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975]]]",
        "test_line": "[[[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v5/tosa.4ac9573ef1c70cd3.mlir -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --arith-emulate-wide-int=\"widest-int-supported=32\" --test-func-erase-result --tosa-test-quant-utils --arith-emulate-unsupported-floats --remove-dead-values --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --loop-invariant-code-motion --tosa-test-quant-utils --test-arith-emulate-wide-int --test-emulate-narrow-int=\"memref-load-bitwidth=8\" --mem2reg --inline --canonicalize=\"test-convergence\" --sccp --canonicalize --test-func-erase-arg --loop-invariant-code-motion --test-tensor-copy-insertion --test-func-set-type --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --sroa --int-range-optimizations --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-drop-unit-dims --test-linalg-transform-patterns=\"test-bubble-up-extract-slice-op-pattern\" --test-function-pass --test-tensor-copy-insertion --test-math-polynomial-approximation=\"enable-avx2\" --linalg-fuse-elementwise-ops --test-arith-emulate-wide-int --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --test-linalg-pad-fusion --mem2reg --test-function-pass --test-linalg-decompose-ops --arith-unsigned-when-equivalent --test-func-insert-arg --sroa --inline --control-flow-sink --int-range-optimizations --linalg-specialize-generic-ops --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-func-set-type --test-math-algebraic-simplification --test-func-insert-result --linalg-named-op-conversion --test-func-erase-result --sroa --test-linalg-data-layout-propagation --loop-invariant-subset-hoisting --test-linalg-drop-unit-dims --test-linalg-pad-fusion --test-math-algebraic-simplification --test-linalg-transform-patterns=\"test-swap-subtensor-padtensor\" --linalg-inline-scalar-operands --arith-expand=\"include-bf16\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --resolve-shaped-type-result-dims --expand-strided-metadata --expand-strided-metadata --test-func-insert-result --test-func-insert-result --sroa --duplicate-function-elimination --canonicalize=\"test-convergence top-down=0\" --linalg-specialize-generic-ops --linalg-named-op-conversion --mem2reg=\"region-simplify\" --memref-expand --mem2reg=\"region-simplify\" --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-collapsing\" --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --memref-expand --inline --arith-int-range-narrowing --test-linalg-data-layout-propagation --test-linalg-transform-patterns=\"test-patterns\" --arith-expand --control-flow-sink --topological-sort --canonicalize=\"test-convergence top-down=0\" --memref-emulate-wide-int --resolve-ranked-shaped-type-result-dims --resolve-shaped-type-result-dims --linalg-fold-unit-extent-dims --linalg-generalize-named-ops --test-memref-bound-check --symbol-dce --cse --loop-invariant-code-motion --control-flow-sink --test-linalg-pad-fusion --control-flow-sink --canonicalize=\"test-convergence\" --memref-expand --test-func-insert-result --normalize-memrefs --test-linalg-drop-unit-dims --test-func-erase-arg --expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-vector-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-vector-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-arg --test-linalg-transform-patterns=\"test-patterns\" --test-arith-emulate-wide-int --test-func-insert-arg --test-func-erase-arg --test-linalg-data-layout-propagation --duplicate-function-elimination --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-collapsing\" --linalg-inline-scalar-operands --arith-expand=\"include-bf16\" --test-linalg-data-layout-propagation --int-range-optimizations | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-inline-scalar-operands --test-func-set-type --cse --test-linalg-elementwise-fusion-patterns --linalg-specialize-generic-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --sroa --remove-dead-values | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --mem2reg --sroa --composite-fixed-point-pass --sccp --symbol-dce --test-function-pass --loop-invariant-code-motion --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975]]]",
        "test_line": "[[[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v5/tosa.4ac9573ef1c70cd3.mlir --test-func-erase-result --test-tensor-copy-insertion=\"must-infer-memory-space\" --symbol-dce --composite-fixed-point-pass --mem2reg --tosa-test-quant-utils --test-func-insert-arg --test-tensor-transform-patterns --remove-dead-values --remove-dead-values --inline --test-tensor-copy-insertion=\"must-infer-memory-space\" --tosa-layerwise-constant-fold --sccp --test-function-pass --remove-dead-values --tosa-layerwise-constant-fold --loop-invariant-code-motion --duplicate-function-elimination --tosa-reduce-transposes --cse --loop-invariant-code-motion --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-drop-unit-dims --test-math-polynomial-approximation | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-fuse-elementwise-ops --control-flow-sink --test-linalg-data-layout-propagation --mem2reg --arith-emulate-wide-int=\"widest-int-supported=32\" --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --loop-invariant-code-motion --linalg-specialize-generic-ops --test-function-pass --test-linalg-greedy-fusion --test-linalg-transform-patterns=\"test-erase-unnecessary-inputs\" --test-func-insert-result --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-linalg-greedy-fusion --test-linalg-pad-fusion --linalg-generalize-named-ops --test-linalg-pad-fusion --test-func-set-type --arith-int-range-narrowing --linalg-fuse-elementwise-ops --test-tensor-transform-patterns | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-expand=\"include-bf16\" --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --int-range-optimizations --topological-sort --arith-emulate-wide-int=\"widest-int-supported=32\" --arith-emulate-unsupported-floats | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --control-flow-sink --remove-dead-values --test-func-insert-result --test-function-pass --sroa --topological-sort --sccp --composite-fixed-point-pass --loop-invariant-subset-hoisting --test-func-insert-arg --mem2reg --inline --test-func-erase-result --duplicate-function-elimination --sccp --sroa --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975]]]",
        "test_line": "[[[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v5/tosa.4ac9573ef1c70cd3.mlir --tosa-reduce-transposes --composite-fixed-point-pass --tosa-infer-shapes --test-func-set-type --loop-invariant-code-motion --canonicalize=\"test-convergence top-down=0\" --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --control-flow-sink --test-tensor-transform-patterns=\"test-fold-consecutive-insert-extract-slice\" --linalg-fold-unit-extent-dims --duplicate-function-elimination --inline --test-function-pass --test-math-polynomial-approximation=\"enable-avx2\" --loop-invariant-subset-hoisting --test-linalg-transform-patterns=\"test-winograd-conv2d\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --test-linalg-rank-reduce-contraction-ops --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --test-arith-emulate-wide-int=\"widest-int-supported=8\" --arith-unsigned-when-equivalent --test-linalg-drop-unit-dims --topological-sort --int-range-optimizations --test-linalg-drop-unit-dims --composite-fixed-point-pass --control-flow-sink --fold-tensor-subset-ops --test-linalg-pad-fusion --sccp --test-func-insert-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --memref-emulate-wide-int=\"widest-int-supported=32\" --linalg-fuse-elementwise-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-elementwise-fusion-patterns=\"collapse-dimensions-control=2,3\" --test-linalg-transform-patterns=\"test-erase-unnecessary-inputs\" --test-linalg-pad-fusion --linalg-fold-unit-extent-dims --test-linalg-greedy-fusion --test-linalg-data-layout-propagation --test-func-insert-result --sroa --topological-sort --control-flow-sink --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --test-linalg-pad-fusion --mem2reg --convert-elementwise-to-linalg --test-linalg-rank-reduce-contraction-ops --loop-invariant-code-motion --test-linalg-rank-reduce-contraction-ops --linalg-generalize-named-ops --test-linalg-transform-patterns=\"test-decompose-winograd-ops\" --test-linalg-greedy-fusion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-parallel-loop-specialization --arith-emulate-wide-int --scf-for-loop-range-folding --int-range-optimizations --scf-for-loop-range-folding --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-wide-int --sccp --arith-emulate-wide-int=\"widest-int-supported=32\" --test-arith-emulate-wide-int=\"widest-int-supported=8\" --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-arg --composite-fixed-point-pass --control-flow-sink --canonicalize --test-func-set-type --test-func-insert-result --arith-emulate-wide-int=\"widest-int-supported=32\" --inline --canonicalize=\"test-convergence top-down=0\" --test-arith-emulate-wide-int=\"widest-int-supported=8\" --cse --topological-sort --composite-fixed-point-pass --arith-int-range-narrowing --int-range-optimizations --test-func-erase-result --canonicalize --test-func-erase-result --canonicalize=\"test-convergence\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --symbol-dce --symbol-dce --topological-sort --symbol-dce --test-function-pass --test-func-insert-result --canonicalize | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975]]]",
        "test_line": "[[[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v5/tosa.4ac9573ef1c70cd3.mlir --test-function-pass --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --arith-unsigned-when-equivalent --test-arith-emulate-wide-int --tosa-test-quant-utils --test-arith-emulate-wide-int=\"widest-int-supported=8\" --tosa-optional-decompositions --test-tensor-copy-insertion=\"must-infer-memory-space\" --topological-sort --fold-tensor-subset-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-inline-scalar-operands --test-linalg-pad-fusion --test-func-erase-result --int-range-optimizations --arith-unsigned-when-equivalent --linalg-generalize-named-ops --canonicalize --int-range-optimizations --test-func-insert-result --test-function-pass --test-linalg-greedy-fusion --test-math-polynomial-approximation=\"enable-avx2\" --fold-tensor-subset-ops --int-range-optimizations --arith-expand --linalg-generalize-named-ops --test-tensor-transform-patterns=\"test-fold-constant-extract-slice\" --canonicalize=\"test-convergence top-down=0\" --math-extend-to-supported-types --cse --sroa --test-expand-math --test-tensor-transform-patterns=\"test-fold-consecutive-insert-extract-slice\" --cse --int-range-optimizations --duplicate-function-elimination --convert-elementwise-to-linalg --test-linalg-transform-patterns=\"test-swap-subtensor-padtensor\" --loop-invariant-code-motion --cse --linalg-inline-scalar-operands --test-linalg-pad-fusion --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-arg --test-linalg-pad-fusion --linalg-fuse-elementwise-ops --test-func-insert-result --test-linalg-drop-unit-dims --inline --test-func-erase-arg --test-linalg-pad-fusion --test-linalg-transform-patterns=\"test-swap-subtensor-padtensor\" --test-linalg-transform-patterns=\"test-erase-unnecessary-inputs\" --canonicalize --linalg-generalize-named-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-decompose-ops --linalg-inline-scalar-operands --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-expansion\" --arith-expand=\"include-bf16\" --sccp --control-flow-sink --test-linalg-transform-patterns=\"test-patterns\" --test-arith-emulate-wide-int=\"widest-int-supported=8\" --int-range-optimizations --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --remove-dead-values --arith-emulate-wide-int --control-flow-sink --scf-for-loop-canonicalization --cse --test-arith-emulate-wide-int --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-arith-emulate-wide-int=\"widest-int-supported=8\" --scf-parallel-loop-specialization --composite-fixed-point-pass --scf-for-loop-peeling --test-scf-for-utils --symbol-dce --test-scf-while-op-builder --topological-sort --test-scf-while-op-builder --scf-for-to-while --composite-fixed-point-pass --arith-unsigned-when-equivalent --arith-int-range-narrowing --test-scf-if-utils --composite-fixed-point-pass --symbol-dce --test-func-erase-result --canonicalize=\"test-convergence\" --test-scf-for-utils --mem2reg --test-func-erase-result --test-function-pass --arith-unsigned-when-equivalent --scf-for-loop-specialization --test-function-pass --topological-sort --test-func-erase-result --cse --loop-invariant-subset-hoisting --test-func-insert-arg --test-function-pass --scf-forall-to-parallel --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --loop-invariant-code-motion --topological-sort --test-func-insert-arg --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-arg --composite-fixed-point-pass --canonicalize | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --test-func-erase-result --composite-fixed-point-pass --cse --cse --control-flow-sink --sroa --topological-sort --symbol-dce --test-func-erase-result --test-function-pass --cse --test-func-erase-result --test-func-insert-result --symbol-dce --loop-invariant-code-motion --cse --duplicate-function-elimination --duplicate-function-elimination --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975]]]",
        "test_line": "[[[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v5/tosa.4ac9573ef1c70cd3.mlir --tosa-reduce-transposes --symbol-dce --canonicalize=\"test-convergence top-down=0\" --tosa-optional-decompositions --loop-invariant-subset-hoisting --test-tensor-transform-patterns=\"test-reassociative-reshape-folding\" --tosa-make-broadcastable --tosa-validate --test-func-set-type --loop-invariant-code-motion --test-func-insert-result --control-flow-sink --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --mem2reg=\"region-simplify\" --remove-dead-values --loop-invariant-subset-hoisting --arith-unsigned-when-equivalent --tosa-validate --tosa-test-quant-utils --test-tensor-transform-patterns --arith-expand=\"include-bf16\" --test-tensor-copy-insertion --tosa-infer-shapes --arith-unsigned-when-equivalent --control-flow-sink --composite-fixed-point-pass --tosa-test-quant-utils --composite-fixed-point-pass --control-flow-sink --tosa-reduce-transposes --tosa-test-quant-utils --duplicate-function-elimination --arith-int-range-narrowing --sroa --tosa-optional-decompositions --int-range-optimizations | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-data-layout-propagation --test-math-polynomial-approximation=\"enable-avx2\" --linalg-generalize-named-ops --topological-sort --test-linalg-transform-patterns=\"test-erase-unused-operands-and-results\" --linalg-generalize-named-ops --test-func-erase-arg --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --int-range-optimizations --control-flow-sink --math-extend-to-supported-types --test-func-insert-result --math-uplift-to-fma --arith-expand=\"include-bf16\" --test-func-erase-result --test-arith-emulate-wide-int --test-func-insert-arg --math-uplift-to-fma --arith-emulate-wide-int=\"widest-int-supported=32\" --test-func-insert-arg --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --inline --composite-fixed-point-pass --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --arith-int-range-narrowing --canonicalize --test-math-to-vcix --linalg-inline-scalar-operands --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --topological-sort --linalg-generalize-named-ops --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-expansion\" --linalg-generalize-named-ops --test-linalg-pad-fusion --cse --test-func-insert-arg --test-linalg-rank-reduce-contraction-ops --test-func-insert-arg --int-range-optimizations --control-flow-sink --test-tensor-copy-insertion --test-func-insert-arg --canonicalize --linalg-fuse-elementwise-ops --cse --int-range-optimizations --canonicalize --test-linalg-rank-reduce-contraction-ops --test-linalg-pad-fusion --loop-invariant-code-motion --arith-emulate-unsupported-floats --linalg-specialize-generic-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-result --composite-fixed-point-pass --topological-sort --test-linalg-decompose-ops --inline --test-linalg-transform-patterns --linalg-fold-unit-extent-dims --test-linalg-pad-fusion --loop-invariant-code-motion --linalg-fuse-elementwise-ops --linalg-fuse-elementwise-ops --test-func-insert-arg --canonicalize=\"test-convergence\" --test-linalg-data-layout-propagation --control-flow-sink --loop-invariant-subset-hoisting --test-func-set-type --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --test-func-set-type --symbol-dce --loop-invariant-code-motion --cse --canonicalize=\"test-convergence\" --loop-invariant-subset-hoisting --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --memref-expand --test-func-insert-arg --control-flow-sink --test-func-insert-arg --test-linalg-decompose-ops --control-flow-sink --inline --duplicate-function-elimination --duplicate-function-elimination --memref-emulate-wide-int --test-memref-dependence-check --linalg-fold-unit-extent-dims --composite-fixed-point-pass --expand-strided-metadata --symbol-dce --topological-sort --test-linalg-data-layout-propagation --loop-invariant-subset-hoisting --linalg-fold-unit-extent-dims --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --test-func-set-type --memref-expand --test-linalg-pad-fusion --linalg-generalize-named-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --arith-unsigned-when-equivalent --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --topological-sort --composite-fixed-point-pass --remove-dead-values --test-func-erase-arg --loop-invariant-subset-hoisting --test-function-pass --loop-invariant-code-motion --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --cse --test-function-pass --test-func-erase-result --loop-invariant-subset-hoisting --loop-invariant-subset-hoisting --symbol-dce --mem2reg --test-func-erase-arg --cse --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975]]]",
        "test_line": "[[[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v5/tosa.4ac9573ef1c70cd3.mlir -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --loop-invariant-subset-hoisting --composite-fixed-point-pass --remove-dead-values --loop-invariant-code-motion --composite-fixed-point-pass --test-func-erase-result --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-make-broadcastable --test-tensor-copy-insertion=\"must-infer-memory-space\" --test-func-insert-result --tosa-infer-shapes --inline --test-arith-emulate-wide-int=\"widest-int-supported=8\" --topological-sort --int-range-optimizations --sroa --cse --tosa-test-quant-utils --tosa-infer-shapes --mem2reg=\"region-simplify\" --cse --test-func-set-type --cse --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --control-flow-sink --mem2reg=\"region-simplify\" --test-func-erase-result --tosa-validate --tosa-layerwise-constant-fold --remove-dead-values --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --arith-emulate-unsupported-floats --composite-fixed-point-pass --test-func-erase-arg --remove-dead-values --int-range-optimizations --composite-fixed-point-pass --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-math-algebraic-simplification --test-function-pass --test-func-set-type --canonicalize --linalg-generalize-named-ops --loop-invariant-code-motion --loop-invariant-code-motion --arith-emulate-wide-int --test-math-polynomial-approximation=\"enable-avx2\" --canonicalize=\"test-convergence top-down=0\" --fold-tensor-subset-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --normalize-memrefs --inline --test-func-insert-result --topological-sort --canonicalize --test-func-erase-result --int-range-optimizations --test-memref-dependence-check | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-data-layout-propagation --convert-elementwise-to-linalg --test-func-set-type --sccp --test-linalg-pad-fusion --test-func-erase-arg --test-linalg-elementwise-fusion-patterns=\"fuse-generic-ops-control\" --duplicate-function-elimination --test-linalg-drop-unit-dims --linalg-fuse-elementwise-ops --test-linalg-elementwise-fusion-patterns=\"collapse-dimensions-control=2,3\" --test-linalg-data-layout-propagation --loop-invariant-subset-hoisting --sroa --test-linalg-data-layout-propagation --test-linalg-greedy-fusion --linalg-inline-scalar-operands --test-linalg-transform-patterns --test-linalg-greedy-fusion --test-linalg-data-layout-propagation --linalg-fuse-elementwise-ops --test-func-set-type --canonicalize --test-func-erase-arg --linalg-inline-scalar-operands --linalg-generalize-named-ops --duplicate-function-elimination --loop-invariant-code-motion --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --test-linalg-elementwise-fusion-patterns=\"fuse-generic-ops-control\" --test-linalg-rank-reduce-contraction-ops --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --memref-emulate-wide-int --fold-memref-alias-ops --resolve-ranked-shaped-type-result-dims --cse --mem2reg --loop-invariant-code-motion --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --test-arith-emulate-wide-int --symbol-dce --mem2reg --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --cse --test-func-insert-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975]]]",
        "test_line": "[[[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v5/tosa.4ac9573ef1c70cd3.mlir --sccp --test-func-set-type --composite-fixed-point-pass --loop-invariant-subset-hoisting --fold-tensor-subset-ops --inline --composite-fixed-point-pass --test-func-erase-result --mem2reg --mem2reg --composite-fixed-point-pass --tosa-infer-shapes --tosa-test-quant-utils --inline --tosa-make-broadcastable --sccp --topological-sort --tosa-validate --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --tosa-test-quant-utils --tosa-validate | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --fold-tensor-subset-ops --test-emulate-narrow-int=\"memref-load-bitwidth=8\" --arith-emulate-wide-int=\"widest-int-supported=32\" --arith-emulate-wide-int --test-func-set-type --test-emulate-narrow-int=\"memref-load-bitwidth=32\" --tosa-infer-shapes --symbol-dce --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --tosa-make-broadcastable --inline --tosa-optional-decompositions --topological-sort --tosa-validate --control-flow-sink --arith-unsigned-when-equivalent --tosa-make-broadcastable --test-func-insert-arg --duplicate-function-elimination --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-greedy-fusion --duplicate-function-elimination --test-linalg-pad-fusion --test-func-set-type --test-expand-math --sccp --control-flow-sink --test-linalg-decompose-ops --arith-emulate-unsupported-floats --test-math-to-vcix --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --test-arith-emulate-wide-int --topological-sort --linalg-inline-scalar-operands --arith-expand=\"include-bf16\" --control-flow-sink --math-uplift-to-fma --arith-emulate-unsupported-floats --test-linalg-greedy-fusion --loop-invariant-subset-hoisting --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --int-range-optimizations --loop-invariant-code-motion --test-math-to-vcix --arith-expand --inline --test-math-polynomial-approximation --control-flow-sink --test-linalg-greedy-fusion --linalg-named-op-conversion --topological-sort --topological-sort --sccp --test-function-pass --sroa --cse --inline --test-linalg-rank-reduce-contraction-ops --arith-emulate-unsupported-floats --linalg-inline-scalar-operands --test-math-polynomial-approximation --symbol-dce --test-func-erase-arg --test-func-insert-arg --test-func-erase-result --test-linalg-data-layout-propagation --test-linalg-pad-fusion --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --fold-tensor-subset-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --control-flow-sink --expand-strided-metadata --convert-elementwise-to-linalg --test-func-insert-result --loop-invariant-code-motion --expand-strided-metadata --test-func-insert-result --convert-elementwise-to-linalg --test-func-insert-arg --expand-strided-metadata --test-linalg-decompose-ops --composite-fixed-point-pass --inline --test-linalg-greedy-fusion --linalg-inline-scalar-operands --composite-fixed-point-pass --test-linalg-decompose-ops --resolve-shaped-type-result-dims --expand-realloc=\"emit-deallocs\" --inline --test-linalg-transform-patterns=\"test-swap-extract-slice-with-fill-pattern\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --memref-expand --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-func-insert-arg --test-memref-dependence-check --resolve-ranked-shaped-type-result-dims --expand-realloc --duplicate-function-elimination --arith-unsigned-when-equivalent --test-function-pass --topological-sort --test-memref-dependence-check --mem2reg --duplicate-function-elimination --test-memref-dependence-check --cse --expand-strided-metadata --normalize-memrefs --test-memref-dependence-check --expand-strided-metadata --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --arith-expand=\"include-bf16\" --remove-dead-values --arith-expand=\"include-bf16\" --cse --memref-emulate-wide-int=\"widest-int-supported=32\" --mem2reg --cse --canonicalize --test-func-set-type --control-flow-sink --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --test-func-insert-arg --remove-dead-values --control-flow-sink --test-func-insert-arg --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --loop-invariant-code-motion --symbol-dce --composite-fixed-point-pass --test-func-erase-result --canonicalize --topological-sort --duplicate-function-elimination --duplicate-function-elimination --test-func-set-type --inline --mem2reg --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975]]]",
        "test_line": "[[[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v5/tosa.4ac9573ef1c70cd3.mlir -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --int-range-optimizations --arith-int-range-narrowing --arith-int-range-narrowing --test-func-erase-result --composite-fixed-point-pass --tosa-infer-shapes --tosa-make-broadcastable --test-func-erase-arg --test-func-insert-result --sccp --test-func-set-type --int-range-optimizations --int-range-optimizations --arith-emulate-wide-int --arith-int-range-narrowing --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-named-op-conversion --control-flow-sink --canonicalize=\"test-convergence\" --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --test-func-erase-result --test-math-algebraic-simplification --test-func-insert-result --test-func-erase-result --test-arith-emulate-wide-int --symbol-dce --mem2reg=\"region-simplify\" --fold-tensor-subset-ops --inline --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --composite-fixed-point-pass --test-linalg-data-layout-propagation --test-linalg-elementwise-fusion-patterns --test-linalg-data-layout-propagation --arith-unsigned-when-equivalent --test-math-to-vcix --int-range-optimizations --linalg-fold-unit-extent-dims --test-linalg-decompose-ops --int-range-optimizations --loop-invariant-subset-hoisting --test-linalg-pad-fusion --symbol-dce --linalg-specialize-generic-ops --linalg-specialize-generic-ops --composite-fixed-point-pass --linalg-specialize-generic-ops --linalg-specialize-generic-ops --arith-expand --arith-emulate-wide-int --sroa --test-math-polynomial-approximation=\"enable-avx2\" --linalg-generalize-named-ops --convert-elementwise-to-linalg --math-uplift-to-fma --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-elementwise-fusion-patterns=\"collapse-dimensions-control=2,3\" --test-func-set-type --test-linalg-rank-reduce-contraction-ops --test-func-erase-arg --linalg-inline-scalar-operands --test-func-set-type --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --loop-invariant-subset-hoisting --test-linalg-pad-fusion --test-func-insert-arg --symbol-dce --linalg-named-op-conversion --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-collapsing-control\" --fold-memref-alias-ops --test-func-erase-arg --convert-elementwise-to-linalg --test-linalg-pad-fusion --test-func-insert-arg --composite-fixed-point-pass --inline --duplicate-function-elimination --memref-expand --expand-strided-metadata --test-func-erase-arg --expand-strided-metadata --resolve-shaped-type-result-dims --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-arg --duplicate-function-elimination --inline --affine-expand-index-ops-as-affine --cse --symbol-dce --canonicalize=\"test-convergence\" --affine-loop-invariant-code-motion --test-func-erase-arg --loop-invariant-subset-hoisting --control-flow-sink --test-loop-permutation --cse --sccp --canonicalize --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --normalize-memrefs --arith-expand --arith-unsigned-when-equivalent --composite-fixed-point-pass --normalize-memrefs --arith-expand --symbol-dce --sroa --test-arith-emulate-wide-int=\"widest-int-supported=8\" --control-flow-sink --test-func-erase-result --test-func-set-type --sroa --topological-sort --test-function-pass --memref-emulate-wide-int=\"widest-int-supported=32\" --int-range-optimizations --test-memref-bound-check --arith-expand=\"include-bf16\" --test-func-erase-arg --test-function-pass --canonicalize=\"test-convergence\" --memref-emulate-wide-int --arith-unsigned-when-equivalent --remove-dead-values --memref-expand --test-func-set-type --arith-unsigned-when-equivalent | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --remove-dead-values --cse --sroa --symbol-dce --test-function-pass --test-func-erase-arg --duplicate-function-elimination --int-range-optimizations --test-func-set-type --loop-invariant-code-motion --test-func-set-type --test-function-pass --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-arith-emulate-wide-int=\"widest-int-supported=8\" --composite-fixed-point-pass --control-flow-sink --duplicate-function-elimination --control-flow-sink --cse --test-func-set-type --mem2reg=\"region-simplify\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --test-function-pass --mem2reg --loop-invariant-code-motion --sroa --test-func-erase-result --inline --loop-invariant-code-motion --composite-fixed-point-pass --test-func-erase-result --control-flow-sink --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975]]]",
        "test_line": "[[[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v5/tosa.4ac9573ef1c70cd3.mlir --test-tensor-copy-insertion --test-func-insert-result --topological-sort --inline --test-func-erase-arg --mem2reg --sccp --test-tensor-copy-insertion --test-function-pass --tosa-make-broadcastable --test-func-insert-result --tosa-optional-decompositions --test-func-insert-arg --tosa-reduce-transposes --fold-tensor-subset-ops --inline --cse --cse --inline --test-func-set-type --canonicalize --test-function-pass --canonicalize=\"test-convergence\" --test-func-erase-result --fold-tensor-subset-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-unsigned-when-equivalent --tosa-test-quant-utils --sroa --loop-invariant-subset-hoisting --test-func-erase-result --fold-tensor-subset-ops --mem2reg=\"region-simplify\" --symbol-dce --symbol-dce --mem2reg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-math-polynomial-approximation=\"enable-avx2\" --arith-expand --linalg-specialize-generic-ops --test-func-set-type --linalg-specialize-generic-ops --linalg-generalize-named-ops --duplicate-function-elimination --linalg-generalize-named-ops --loop-invariant-subset-hoisting --linalg-named-op-conversion --cse --loop-invariant-code-motion --test-linalg-pad-fusion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-named-op-conversion --linalg-specialize-generic-ops --test-linalg-data-layout-propagation --test-linalg-greedy-fusion --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --fold-memref-alias-ops --symbol-dce --resolve-ranked-shaped-type-result-dims --scf-for-loop-canonicalization --arith-emulate-wide-int --test-scf-while-op-builder --sccp --test-func-insert-arg --scf-parallel-loop-fusion --test-memref-bound-check --memref-expand --resolve-shaped-type-result-dims --scf-for-loop-peeling --test-scf-pipelining=\"annotate\" --duplicate-function-elimination --scf-for-loop-range-folding --test-func-erase-result --expand-realloc=\"emit-deallocs\" --test-scf-for-utils=\"test-replace-with-new-yields\" --sroa --loop-invariant-code-motion --scf-for-to-while --sccp --symbol-dce --duplicate-function-elimination --resolve-shaped-type-result-dims --duplicate-function-elimination --test-func-insert-result --scf-for-loop-range-folding --control-flow-sink --test-scf-if-utils --scf-for-to-while --memref-emulate-wide-int=\"widest-int-supported=32\" --test-arith-emulate-wide-int=\"widest-int-supported=8\" --arith-emulate-unsupported-floats --scf-parallel-loop-specialization --memref-emulate-wide-int --test-memref-bound-check --sccp --mem2reg --test-scf-if-utils --test-func-erase-arg --cse --memref-expand --test-func-erase-arg --cse --resolve-ranked-shaped-type-result-dims --test-function-pass --arith-expand --test-scf-uplift-while-to-for --cse --test-func-set-type --resolve-shaped-type-result-dims --test-memref-bound-check --scf-for-loop-canonicalization | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --loop-invariant-code-motion --mem2reg --topological-sort --loop-invariant-code-motion --sccp --duplicate-function-elimination --cse --topological-sort --test-func-insert-arg --duplicate-function-elimination --loop-invariant-code-motion --loop-invariant-subset-hoisting --test-func-set-type --test-func-erase-result --sccp --inline --mem2reg --test-func-insert-arg --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975]]]",
        "test_line": "[[[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v5/tosa.4ac9573ef1c70cd3.mlir -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-reduce-transposes --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-pad-fusion --composite-fixed-point-pass --control-flow-sink --test-linalg-transform-patterns=\"test-vector-transfer-forwarding-patterns\" --inline --duplicate-function-elimination --test-func-erase-arg --test-tensor-transform-patterns --convert-elementwise-to-linalg --linalg-generalize-named-ops --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --symbol-dce --symbol-dce --topological-sort --test-math-polynomial-approximation --test-func-erase-result --duplicate-function-elimination --test-function-pass --test-expand-math --test-func-erase-result --test-tensor-transform-patterns --inline --test-math-to-vcix --sroa --composite-fixed-point-pass --test-linalg-drop-unit-dims | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-named-op-conversion --test-tensor-copy-insertion --test-linalg-rank-reduce-contraction-ops --test-func-insert-arg --test-linalg-rank-reduce-contraction-ops --sroa --test-func-erase-result --linalg-specialize-generic-ops --test-tensor-transform-patterns --loop-invariant-code-motion --test-linalg-greedy-fusion --test-linalg-decompose-ops --topological-sort --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --linalg-fold-unit-extent-dims --linalg-specialize-generic-ops --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --linalg-fold-unit-extent-dims --test-func-erase-arg --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --inline --loop-invariant-subset-hoisting --loop-invariant-subset-hoisting --convert-elementwise-to-linalg --arith-emulate-wide-int=\"widest-int-supported=32\" --test-func-erase-arg --test-func-erase-result --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --arith-expand --loop-invariant-code-motion --linalg-generalize-named-ops --mem2reg --cse --linalg-fuse-elementwise-ops --test-linalg-elementwise-fusion-patterns=\"collapse-dimensions-control=2,3\" --fold-tensor-subset-ops --cse --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --arith-expand=\"include-bf16\" --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-func-insert-arg --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse --topological-sort --memref-expand --test-linalg-drop-unit-dims --test-memref-dependence-check --resolve-ranked-shaped-type-result-dims --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-collapsing-control\" --test-linalg-data-layout-propagation --expand-realloc=\"emit-deallocs\" --cse --test-linalg-decompose-ops --mem2reg --loop-invariant-subset-hoisting --linalg-named-op-conversion --topological-sort --test-linalg-pad-fusion --linalg-specialize-generic-ops --memref-expand --resolve-ranked-shaped-type-result-dims | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --expand-realloc --test-scf-pipelining --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-scf-if-utils --test-scf-if-utils --test-func-erase-result --mem2reg=\"region-simplify\" --arith-emulate-wide-int=\"widest-int-supported=32\" --remove-dead-values --test-scf-uplift-while-to-for | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-arith-emulate-wide-int=\"widest-int-supported=8\" --scf-for-loop-specialization --test-func-insert-result --control-flow-sink --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --scf-for-loop-specialization --scf-forall-to-parallel --scf-forall-to-parallel --test-function-pass --test-arith-emulate-wide-int --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --scf-parallel-loop-tiling=\"parallel-loop-tile-sizes=1,4 no-min-max-bounds=true\" --test-func-insert-result --loop-invariant-code-motion --arith-emulate-wide-int --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-result --test-func-set-type --loop-invariant-code-motion --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975]]]",
        "test_line": "[[[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v5/tosa.4ac9573ef1c70cd3.mlir --test-function-pass --canonicalize=\"test-convergence top-down=0\" --test-func-erase-arg --canonicalize=\"test-convergence\" --test-func-set-type --inline --fold-tensor-subset-ops --composite-fixed-point-pass --symbol-dce --test-tensor-copy-insertion=\"must-infer-memory-space\" --test-func-erase-arg --test-func-erase-result --tosa-layerwise-constant-fold | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-reduce-transposes --cse --tosa-layerwise-constant-fold --tosa-infer-shapes --cse --cse --control-flow-sink --loop-invariant-code-motion --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-function-pass --tosa-reduce-transposes | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-math-to-vcix --test-math-polynomial-approximation=\"enable-avx2\" --test-linalg-pad-fusion --test-linalg-elementwise-fusion-patterns=\"fuse-generic-ops-control\" --linalg-generalize-named-ops --test-math-to-vcix --linalg-specialize-generic-ops --test-tensor-transform-patterns --test-linalg-data-layout-propagation --test-linalg-elementwise-fusion-patterns=\"fuse-multiuse-producer\" --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-collapsing\" --math-extend-to-supported-types --arith-emulate-wide-int --test-func-set-type --topological-sort --arith-expand --test-linalg-transform-patterns=\"test-vector-transfer-forwarding-patterns\" --test-math-polynomial-approximation=\"enable-avx2\" --test-math-algebraic-simplification --sroa --cse --linalg-named-op-conversion --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-collapsing-control\" --test-linalg-data-layout-propagation --linalg-inline-scalar-operands --test-linalg-pad-fusion --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-expand-math --test-func-insert-result --linalg-fuse-elementwise-ops --sccp --arith-emulate-wide-int | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-forall-to-for --resolve-ranked-shaped-type-result-dims --scf-for-loop-canonicalization --test-func-insert-arg --test-memref-dependence-check --memref-expand --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --scf-forall-to-for --arith-int-range-narrowing --test-emulate-narrow-int=\"memref-load-bitwidth=32\" --arith-expand=\"include-bf16\" --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --inline --test-scf-while-op-builder --test-arith-emulate-wide-int --scf-forall-to-for --composite-fixed-point-pass --scf-parallel-loop-fusion --remove-dead-values --test-emulate-narrow-int --scf-forall-to-for --loop-invariant-code-motion --sroa --scf-for-loop-canonicalization --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --scf-parallel-loop-tiling=\"parallel-loop-tile-sizes=1,4 no-min-max-bounds=true\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-unsupported-floats --remove-dead-values --test-function-pass --sccp --composite-fixed-point-pass --topological-sort --remove-dead-values --topological-sort --composite-fixed-point-pass --inline --sccp --test-func-insert-arg --test-func-insert-arg --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --control-flow-sink --test-function-pass --normalize-memrefs --inline --cse --cse --memref-expand --remove-dead-values --expand-realloc=\"emit-deallocs\" --control-flow-sink --loop-invariant-code-motion --int-range-optimizations | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-int-range-narrowing | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --test-function-pass --test-function-pass --sccp --remove-dead-values --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --test-func-erase-arg --cse --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975]]]",
        "test_line": "[[[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v5/tosa.4ac9573ef1c70cd3.mlir -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --scf-for-to-while | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --fold-tensor-subset-ops --inline --tosa-make-broadcastable --arith-unsigned-when-equivalent --duplicate-function-elimination --topological-sort --int-range-optimizations --test-tensor-transform-patterns=\"test-fold-consecutive-insert-extract-slice\" --test-arith-emulate-wide-int --test-function-pass --topological-sort --test-function-pass --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --arith-emulate-wide-int --loop-invariant-code-motion --tosa-reduce-transposes --remove-dead-values --tosa-layerwise-constant-fold --tosa-infer-shapes --tosa-test-quant-utils --tosa-layerwise-constant-fold --test-tensor-copy-insertion --tosa-reduce-transposes --test-func-erase-result --tosa-make-broadcastable --arith-unsigned-when-equivalent --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --test-math-polynomial-approximation --test-func-erase-result --cse --math-uplift-to-fma --linalg-named-op-conversion --topological-sort --test-func-erase-arg --int-range-optimizations --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --test-func-insert-result --int-range-optimizations --topological-sort --test-linalg-drop-unit-dims --test-linalg-decompose-ops --canonicalize=\"test-convergence top-down=0\" --fold-tensor-subset-ops --fold-tensor-subset-ops --linalg-inline-scalar-operands --test-tensor-copy-insertion --topological-sort --cse --loop-invariant-code-motion --test-function-pass --loop-invariant-subset-hoisting --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-unsigned-when-equivalent --test-linalg-greedy-fusion --test-tensor-copy-insertion=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-expand=\"include-bf16\" --sroa --fold-tensor-subset-ops --test-func-erase-arg --inline --test-func-insert-result --test-linalg-transform-patterns=\"test-swap-subtensor-padtensor\" --test-tensor-transform-patterns=\"test-fold-constant-extract-slice\" --loop-invariant-code-motion --test-linalg-transform-patterns=\"test-patterns\" --test-linalg-elementwise-fusion-patterns=\"fuse-generic-ops-control\" --arith-emulate-wide-int=\"widest-int-supported=32\" --int-range-optimizations --topological-sort --test-func-set-type --test-func-set-type --test-tensor-transform-patterns=\"test-fold-constant-extract-slice\" --topological-sort --test-arith-emulate-wide-int --sccp --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --loop-invariant-code-motion --convert-elementwise-to-linalg --sccp --linalg-named-op-conversion --symbol-dce --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-expansion\" --topological-sort --canonicalize=\"test-convergence\" --test-linalg-pad-fusion --fold-tensor-subset-ops --fold-tensor-subset-ops --loop-invariant-subset-hoisting --topological-sort --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --test-function-pass --loop-invariant-subset-hoisting --test-func-insert-result --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-func-insert-result --arith-unsigned-when-equivalent --test-linalg-decompose-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --linalg-generalize-named-ops --test-linalg-elementwise-fusion-patterns=\"fuse-multiuse-producer\" --sccp --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --memref-expand --memref-expand --expand-realloc=\"emit-deallocs\" --canonicalize=\"test-convergence top-down=0\" --loop-invariant-subset-hoisting --resolve-shaped-type-result-dims --resolve-ranked-shaped-type-result-dims --resolve-ranked-shaped-type-result-dims --control-flow-sink --linalg-specialize-generic-ops --linalg-named-op-conversion --test-function-pass --test-linalg-transform-patterns=\"test-swap-subtensor-padtensor\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-inline-scalar-operands --convert-elementwise-to-linalg --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --loop-invariant-code-motion --test-function-pass --loop-invariant-code-motion --symbol-dce --sroa --duplicate-function-elimination --inline --cse --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse --inline --duplicate-function-elimination --test-func-erase-arg --test-func-erase-arg --duplicate-function-elimination --loop-invariant-code-motion --test-func-insert-arg --sroa --remove-dead-values --test-func-insert-arg --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975]]]",
        "test_line": "[[[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v5/tosa.4ac9573ef1c70cd3.mlir -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --remove-dead-values --tosa-test-quant-utils --inline --tosa-make-broadcastable --loop-invariant-code-motion --test-tensor-transform-patterns=\"test-drop-redundant-insert-slice-rank-expansion\" --duplicate-function-elimination --duplicate-function-elimination --test-tensor-copy-insertion --symbol-dce --int-range-optimizations --test-tensor-transform-patterns=\"test-reassociative-reshape-folding\" --int-range-optimizations --tosa-reduce-transposes --loop-invariant-code-motion --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --canonicalize --linalg-inline-scalar-operands --int-range-optimizations --test-math-polynomial-approximation=\"enable-avx2\" --topological-sort --mem2reg=\"region-simplify\" --convert-elementwise-to-linalg --arith-emulate-wide-int=\"widest-int-supported=32\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-rank-reduce-contraction-ops --test-linalg-drop-unit-dims --test-func-erase-arg --fold-tensor-subset-ops --test-func-insert-result --arith-emulate-wide-int=\"widest-int-supported=32\" --duplicate-function-elimination --loop-invariant-code-motion --test-func-erase-result --test-arith-emulate-wide-int=\"widest-int-supported=8\" --linalg-named-op-conversion --composite-fixed-point-pass --arith-expand=\"include-bf16\" --sroa --mem2reg=\"region-simplify\" --test-func-insert-result --test-linalg-data-layout-propagation --arith-emulate-wide-int --test-linalg-rank-reduce-contraction-ops --cse --test-func-insert-result --test-func-erase-arg --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --mem2reg --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --fold-tensor-subset-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --memref-expand --test-func-insert-arg --test-linalg-transform-patterns=\"test-swap-subtensor-padtensor\" --canonicalize=\"test-convergence\" --canonicalize=\"test-convergence\" --canonicalize --loop-invariant-subset-hoisting --test-func-erase-arg --linalg-generalize-named-ops --test-linalg-decompose-ops --test-func-erase-result --composite-fixed-point-pass --test-linalg-pad-fusion --test-memref-bound-check --topological-sort --test-func-erase-arg --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-decompose-ops --test-linalg-data-layout-propagation --test-func-set-type --memref-emulate-wide-int --expand-strided-metadata --linalg-fuse-elementwise-ops --test-func-erase-arg --linalg-generalize-named-ops --normalize-memrefs --test-func-erase-arg --mem2reg --linalg-fold-unit-extent-dims --symbol-dce --test-func-insert-arg --test-func-insert-result --linalg-fold-unit-extent-dims --control-flow-sink --fold-memref-alias-ops --convert-elementwise-to-linalg --test-memref-bound-check --test-func-erase-arg --test-linalg-drop-unit-dims --cse --sroa --memref-emulate-wide-int=\"widest-int-supported=32\" --test-linalg-pad-fusion --cse --symbol-dce --test-linalg-greedy-fusion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --int-range-optimizations --cse --arith-unsigned-when-equivalent --topological-sort --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --remove-dead-values --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --sroa --topological-sort --loop-invariant-subset-hoisting --symbol-dce --test-function-pass --test-func-insert-arg --remove-dead-values --inline --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --topological-sort --topological-sort --loop-invariant-subset-hoisting --test-func-insert-result --sroa --test-func-set-type --test-func-erase-result --inline --sccp --sccp --test-func-set-type --control-flow-sink --test-func-insert-result --loop-invariant-subset-hoisting --topological-sort --topological-sort --loop-invariant-code-motion --canonicalize=\"test-convergence top-down=0\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975]]]",
        "test_line": "[[[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v5/tosa.4ac9573ef1c70cd3.mlir --tosa-layerwise-constant-fold --mem2reg --composite-fixed-point-pass --sccp --mem2reg --test-func-insert-result --loop-invariant-code-motion --test-func-erase-arg --tosa-make-broadcastable --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --inline --remove-dead-values --test-func-insert-arg --inline --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --duplicate-function-elimination --sroa --sccp --symbol-dce --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --arith-int-range-narrowing --test-tensor-copy-insertion=\"must-infer-memory-space\" --tosa-make-broadcastable --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-emulate-narrow-int=\"arith-compute-bitwidth=8\" --test-tensor-transform-patterns=\"test-reassociative-reshape-folding\" --test-function-pass --arith-int-range-narrowing --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-emulate-narrow-int --loop-invariant-code-motion --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --composite-fixed-point-pass --tosa-reduce-transposes --tosa-optional-decompositions --sroa --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --test-func-erase-result --tosa-infer-shapes --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-emulate-narrow-int --tosa-validate | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-math-polynomial-approximation=\"enable-avx2\" --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --loop-invariant-code-motion --fold-tensor-subset-ops --canonicalize --fold-tensor-subset-ops --test-linalg-rank-reduce-contraction-ops --int-range-optimizations --test-func-erase-result --test-tensor-copy-insertion=\"must-infer-memory-space\" --test-math-to-vcix --mem2reg=\"region-simplify\" --sroa --test-func-set-type --test-linalg-pad-fusion --test-linalg-pad-fusion --test-tensor-copy-insertion=\"must-infer-memory-space\" --test-func-set-type --test-linalg-pad-fusion --linalg-generalize-named-ops --loop-invariant-code-motion --linalg-named-op-conversion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --composite-fixed-point-pass --control-flow-sink --inline --symbol-dce --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --canonicalize=\"test-convergence top-down=0\" --loop-invariant-code-motion --test-func-erase-arg --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-elementwise-fusion-patterns --topological-sort --test-linalg-transform-patterns --expand-realloc --control-flow-sink --loop-invariant-subset-hoisting --test-func-erase-result --test-function-pass --inline --test-linalg-data-layout-propagation --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --symbol-dce --topological-sort --composite-fixed-point-pass --test-function-pass --test-linalg-pad-fusion --cse --convert-elementwise-to-linalg --linalg-fuse-elementwise-ops --test-func-insert-arg --test-func-insert-arg --test-func-insert-result --mem2reg --resolve-shaped-type-result-dims --expand-realloc=\"emit-deallocs\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --memref-expand --inline --normalize-memrefs --convert-elementwise-to-linalg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --expand-strided-metadata --test-scf-pipelining=\"no-epilogue-peeling\" --duplicate-function-elimination --test-scf-uplift-while-to-for --scf-parallel-loop-tiling --test-scf-pipelining=\"annotate\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-for-loop-canonicalization --test-func-erase-result --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --scf-parallel-loop-fusion --mem2reg=\"region-simplify\" --test-scf-uplift-while-to-for --test-scf-pipelining=\"no-epilogue-peeling\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sroa --inline --test-func-insert-arg --mem2reg --arith-int-range-narrowing --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-arg --topological-sort --duplicate-function-elimination --control-flow-sink --loop-invariant-code-motion --sroa --test-func-insert-result --composite-fixed-point-pass --test-function-pass --mem2reg=\"region-simplify\" --topological-sort --mem2reg=\"region-simplify\" --remove-dead-values | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975]]]",
        "test_line": "[[[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v5/tosa.4ac9573ef1c70cd3.mlir -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --test-func-insert-result --tosa-make-broadcastable --topological-sort --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg=\"region-simplify\" --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-emulate-narrow-int=\"memref-load-bitwidth=8\" --mem2reg=\"region-simplify\" --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --canonicalize --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --topological-sort --test-func-set-type --arith-emulate-wide-int=\"widest-int-supported=32\" --tosa-make-broadcastable --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-arg --duplicate-function-elimination --composite-fixed-point-pass --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --test-expand-math --loop-invariant-subset-hoisting --loop-invariant-code-motion --test-math-polynomial-approximation | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-arg --test-tensor-copy-insertion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-expansion\" --control-flow-sink --linalg-named-op-conversion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse --sccp --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --loop-invariant-subset-hoisting --test-function-pass --cse --arith-emulate-wide-int=\"widest-int-supported=32\" --topological-sort --loop-invariant-code-motion --duplicate-function-elimination --sroa --arith-unsigned-when-equivalent --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --cse --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg=\"region-simplify\" --test-func-insert-result --test-func-set-type --inline --symbol-dce --canonicalize=\"test-convergence\" --test-func-erase-result --test-func-insert-result --topological-sort --test-function-pass --duplicate-function-elimination --sccp --test-func-insert-arg --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975]]]",
        "test_line": "[[[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972]]]"
    }
}
