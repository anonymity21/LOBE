{
    "llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) \nSignalHandler(int, siginfo_t*, void*) Signals.cpp:0:0\n__restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x14420)\nraise /build/glibc-e2p3jK/glibc-2.31/signal/../sysdeps/unix/sysv/linux/raise.c:51:1\nabort /build/glibc-e2p3jK/glibc-2.31/stdlib/abort.c:81:7\nget_sysdep_segment_value /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:509:8\n_nl_load_domain /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:970:34\n(/lib/x86_64-linux-gnu/libc.so.6+0x33fd6)\n(anonymous namespace)::TestMemRefStrideCalculation::runOnOperation() TestMemRefStrideCalculation.cpp:0:0\nmlir::detail::OpToOpPassAdaptor::run(mlir::Pass*, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int) \nmlir::detail::OpToOpPassAdaptor::runPipeline(mlir::OpPassManager&, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int, mlir::PassInstrumentor*, mlir::PassInstrumentation::PipelineParentInfo const*) \nmlir::PassManager::run(mlir::Operation*) \nperformActions(llvm::raw_ostream&, std::shared_ptr<llvm::SourceMgr> const&, mlir::MLIRContext*, mlir::MlirOptMainConfig const&) MlirOptMain.cpp:0:0\nprocessBuffer(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::MlirOptMainConfig const&, mlir::DialectRegistry&, llvm::ThreadPoolInterface*) MlirOptMain.cpp:0:0\nllvm::LogicalResult llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>::callback_fn<mlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&)::'lambda'(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>(long, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&) MlirOptMain.cpp:0:0\nmlir::splitAndProcessBuffer(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>, llvm::raw_ostream&, llvm::StringRef, llvm::StringRef) \nmlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, llvm::StringRef, mlir::DialectRegistry&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, mlir::DialectRegistry&) \nmain \n__libc_start_main /build/glibc-e2p3jK/glibc-2.31/csu/../csu/libc-start.c:342:3\n_start ": [
        "//workspace/mlir-inconsistent/crash_file/tosa.096e220ac00af868.mlir.49bc66f7ee1e7876.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.096e220ac00af868.mlir.49bc66f7ee1e7876.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.096e220ac00af868.mlir.722bf64e177cf1c2.mlir"
    ],
    "llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) \nSignalHandler(int, siginfo_t*, void*) Signals.cpp:0:0\n__restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x14420)\nraise /build/glibc-e2p3jK/glibc-2.31/signal/../sysdeps/unix/sysv/linux/raise.c:51:1\nabort /build/glibc-e2p3jK/glibc-2.31/stdlib/abort.c:81:7\nget_sysdep_segment_value /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:509:8\n_nl_load_domain /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:970:34\n(/lib/x86_64-linux-gnu/libc.so.6+0x33fd6)\n(anonymous namespace)::aliasingFuncOpBBArgsAnalysis(mlir::func::FuncOp, mlir::bufferization::OneShotAnalysisState&, mlir::bufferization::func_ext::FuncAnalysisState&) OneShotModuleBufferize.cpp:0:0\nmlir::bufferization::analyzeModuleOp(mlir::ModuleOp, mlir::bufferization::OneShotAnalysisState&, mlir::bufferization::BufferizationStatistics*) \nmlir::bufferization::insertTensorCopies(mlir::Operation*, mlir::bufferization::OneShotBufferizationOptions const&, mlir::bufferization::BufferizationStatistics*) \nmlir::bufferization::runOneShotModuleBufferize(mlir::ModuleOp, mlir::bufferization::OneShotBufferizationOptions const&, mlir::bufferization::BufferizationStatistics*) \n(anonymous namespace)::OneShotBufferizePass::runOnOperation() Bufferize.cpp:0:0\nmlir::detail::OpToOpPassAdaptor::run(mlir::Pass*, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int) \nmlir::detail::OpToOpPassAdaptor::runPipeline(mlir::OpPassManager&, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int, mlir::PassInstrumentor*, mlir::PassInstrumentation::PipelineParentInfo const*) \nmlir::PassManager::run(mlir::Operation*) \nperformActions(llvm::raw_ostream&, std::shared_ptr<llvm::SourceMgr> const&, mlir::MLIRContext*, mlir::MlirOptMainConfig const&) MlirOptMain.cpp:0:0\nprocessBuffer(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::MlirOptMainConfig const&, mlir::DialectRegistry&, llvm::ThreadPoolInterface*) MlirOptMain.cpp:0:0\nllvm::LogicalResult llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>::callback_fn<mlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&)::'lambda'(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>(long, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&) MlirOptMain.cpp:0:0\nmlir::splitAndProcessBuffer(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>, llvm::raw_ostream&, llvm::StringRef, llvm::StringRef) \nmlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, llvm::StringRef, mlir::DialectRegistry&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, mlir::DialectRegistry&) \nmain \n__libc_start_main /build/glibc-e2p3jK/glibc-2.31/csu/../csu/libc-start.c:342:3\n_start ": [
        "//workspace/mlir-inconsistent/crash_file/tosa.096e220ac00af868.mlir.4420ace512afce2a.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.096e220ac00af868.mlir.4420ace512afce2a.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.096e220ac00af868.mlir.0e8401e901da7029.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.096e220ac00af868.mlir.2d2c7b2e14a4acb7.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.096e220ac00af868.mlir.0ad5dc0351f8afb6.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.096e220ac00af868.mlir.4ef8542bd4286080.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.096e220ac00af868.mlir.bc719f8f95f13d95.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.096e220ac00af868.mlir.001b489281a73c63.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.096e220ac00af868.mlir.49d64900a30a3206.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.096e220ac00af868.mlir.3eef198dc4637d4e.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.096e220ac00af868.mlir.96ad1438fc639bbb.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.096e220ac00af868.mlir.189a508a11b9c719.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.096e220ac00af868.mlir.4f58cd9030631127.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.096e220ac00af868.mlir.06bbe0cb985d878f.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.096e220ac00af868.mlir.d3984df9096e9032.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.096e220ac00af868.mlir.76dbd162f094ac1c.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.096e220ac00af868.mlir.04e77f24d120a77d.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.096e220ac00af868.mlir.95a4a99de49795e6.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.096e220ac00af868.mlir.726f5e4111350462.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.096e220ac00af868.mlir.621403d0fb367944.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.096e220ac00af868.mlir.6678f72fcc80aac2.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.096e220ac00af868.mlir.36e46c69de42347e.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.096e220ac00af868.mlir.dbd64422e7161774.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.096e220ac00af868.mlir.9f10faf030fcb602.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.096e220ac00af868.mlir.9ea3abf6944c5410.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.096e220ac00af868.mlir.d97aef43a56c5730.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.096e220ac00af868.mlir.4cc0c90de9c9ec3d.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.096e220ac00af868.mlir.a2ccb128d535d2cd.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.096e220ac00af868.mlir.04b4125ebdb3a5cc.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.096e220ac00af868.mlir.62bcadd3955dc47d.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.096e220ac00af868.mlir.136bfe5a573532db.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.096e220ac00af868.mlir.a3d0297ea2b8926a.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.096e220ac00af868.mlir.12fee13dac224f0a.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.096e220ac00af868.mlir.82784d5923d2a62c.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.096e220ac00af868.mlir.181e08046de3ff43.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.096e220ac00af868.mlir.da6eba470e30ce00.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.096e220ac00af868.mlir.33a518c765009624.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.096e220ac00af868.mlir.8ea35ad812a41dd0.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.096e220ac00af868.mlir.03ad59fff0f3c33d.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.096e220ac00af868.mlir.147604129198e163.mlir"
    ]
}
{
    "llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) \nSignalHandler(int, siginfo_t*, void*) Signals.cpp:0:0\n__restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x14420)\nraise /build/glibc-e2p3jK/glibc-2.31/signal/../sysdeps/unix/sysv/linux/raise.c:51:1\nabort /build/glibc-e2p3jK/glibc-2.31/stdlib/abort.c:81:7\nget_sysdep_segment_value /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:509:8\n_nl_load_domain /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:970:34\n(/lib/x86_64-linux-gnu/libc.so.6+0x33fd6)\n(anonymous namespace)::TestMemRefStrideCalculation::runOnOperation() TestMemRefStrideCalculation.cpp:0:0\nmlir::detail::OpToOpPassAdaptor::run(mlir::Pass*, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int) \nmlir::detail::OpToOpPassAdaptor::runPipeline(mlir::OpPassManager&, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int, mlir::PassInstrumentor*, mlir::PassInstrumentation::PipelineParentInfo const*) \nmlir::PassManager::run(mlir::Operation*) \nperformActions(llvm::raw_ostream&, std::shared_ptr<llvm::SourceMgr> const&, mlir::MLIRContext*, mlir::MlirOptMainConfig const&) MlirOptMain.cpp:0:0\nprocessBuffer(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::MlirOptMainConfig const&, mlir::DialectRegistry&, llvm::ThreadPoolInterface*) MlirOptMain.cpp:0:0\nllvm::LogicalResult llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>::callback_fn<mlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&)::'lambda'(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>(long, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&) MlirOptMain.cpp:0:0\nmlir::splitAndProcessBuffer(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>, llvm::raw_ostream&, llvm::StringRef, llvm::StringRef) \nmlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, llvm::StringRef, mlir::DialectRegistry&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, mlir::DialectRegistry&) \nmain \n__libc_start_main /build/glibc-e2p3jK/glibc-2.31/csu/../csu/libc-start.c:342:3\n_start ": [
        "//workspace/mlir-inconsistent/crash_file/tosa.5492eab8e00512b2.mlir.70dfb1f1086711e5.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.5492eab8e00512b2.mlir.70dfb1f1086711e5.mlir"
    ]
}
