{
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v5/tosa.9833748ca3ba88c7.mlir --inline --topological-sort --canonicalize=\"test-convergence\" --tosa-infer-shapes --inline --test-func-erase-arg --tosa-test-quant-utils --test-func-insert-result --sccp --mem2reg=\"region-simplify\" --test-func-insert-arg --tosa-infer-shapes --tosa-optional-decompositions --test-func-set-type --sccp --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --loop-invariant-code-motion --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-math-to-vcix --control-flow-sink --sccp --test-expand-math --math-uplift-to-fma --tosa-layerwise-constant-fold --loop-invariant-subset-hoisting --loop-invariant-code-motion --composite-fixed-point-pass --tosa-optional-decompositions --composite-fixed-point-pass --linalg-generalize-named-ops --canonicalize=\"test-convergence\" --control-flow-sink --test-func-insert-arg --test-linalg-data-layout-propagation --test-linalg-drop-unit-dims --test-math-to-vcix --linalg-generalize-named-ops --duplicate-function-elimination --linalg-specialize-generic-ops --tosa-test-quant-utils --tosa-reduce-transposes --test-math-algebraic-simplification --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --tosa-layerwise-constant-fold --test-func-erase-result --linalg-inline-scalar-operands --fold-tensor-subset-ops --mem2reg --convert-elementwise-to-linalg --linalg-inline-scalar-operands --loop-invariant-code-motion --test-func-set-type --test-function-pass --composite-fixed-point-pass --test-math-algebraic-simplification | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --test-func-erase-result --mem2reg --test-func-erase-arg --sroa --convert-elementwise-to-linalg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sroa --mem2reg=\"region-simplify\" --duplicate-function-elimination --composite-fixed-point-pass --arith-expand=\"include-bf16\" --linalg-specialize-generic-ops --test-func-insert-result --composite-fixed-point-pass --test-linalg-greedy-fusion --test-func-set-type --arith-int-range-narrowing --composite-fixed-point-pass --test-linalg-decompose-ops --test-linalg-transform-patterns=\"test-decompose-winograd-ops\" --test-func-erase-result --arith-unsigned-when-equivalent --arith-emulate-unsupported-floats --fold-tensor-subset-ops --topological-sort --canonicalize --test-arith-emulate-wide-int=\"widest-int-supported=8\" --mem2reg --test-func-erase-result --test-tensor-transform-patterns=\"test-fold-constant-extract-slice\" --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-emulate-narrow-int --test-linalg-drop-unit-dims --linalg-specialize-generic-ops --sccp --test-arith-emulate-wide-int=\"widest-int-supported=8\" --linalg-generalize-named-ops --linalg-generalize-named-ops --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --expand-realloc=\"emit-deallocs\" --scf-for-loop-canonicalization --topological-sort --test-func-insert-arg --cse --sroa --test-func-erase-arg --test-func-insert-result --scf-forall-to-for | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-arg --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --resolve-ranked-shaped-type-result-dims --cse --memref-expand --inline --sroa --scf-for-loop-specialization --duplicate-function-elimination --loop-invariant-code-motion --test-memref-dependence-check --duplicate-function-elimination --scf-parallel-loop-tiling=\"parallel-loop-tile-sizes=1,4 no-min-max-bounds=true\" --test-scf-if-utils --topological-sort --inline --test-scf-uplift-while-to-for --test-scf-for-utils --scf-parallel-loop-fusion --control-flow-sink --expand-strided-metadata --normalize-memrefs --scf-parallel-loop-tiling=\"parallel-loop-tile-sizes=1,4 no-min-max-bounds=true\" --remove-dead-values --remove-dead-values --resolve-shaped-type-result-dims --mem2reg --test-func-insert-result --expand-strided-metadata --memref-expand --symbol-dce --test-scf-for-utils --resolve-ranked-shaped-type-result-dims --normalize-memrefs --symbol-dce --test-func-erase-result --resolve-shaped-type-result-dims --scf-forall-to-for --test-func-erase-arg --scf-for-loop-canonicalization --test-func-erase-result --loop-invariant-code-motion --loop-invariant-code-motion --scf-parallel-loop-tiling --scf-forall-to-for --memref-expand | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --remove-dead-values --control-flow-sink --composite-fixed-point-pass --remove-dead-values --loop-invariant-subset-hoisting --test-func-set-type --test-func-erase-arg --sroa --test-function-pass --inline --test-func-insert-arg --test-func-erase-result --duplicate-function-elimination --sccp --control-flow-sink --test-func-erase-result --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-arg --mem2reg --test-func-insert-result --mem2reg=\"region-simplify\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21]]]",
        "test_line": "[[[-21,    -21,    -21,    -21,    -840521466,    21954],\n[-21,    -21,    -21,    -21,    0,    0],\n[-21,    -21,    -21,    -21,    0,    0],\n[-21,    -21,    -21,    -21,    -841778600,    21954],\n[-21,    -21,    -21,    -21,    -842962928,    21954],\n[-21,    -21,    -21,    -21,    0,    0],\n[-21,    -21,    -21,    -21,    -841763536,    21954],\n[-21,    -21,    -21,    -21,    -839851576,    21954],\n[-21,    -21,    -21,    -21,    32,    0],\n[-21,    -21,    -21,    -21,    0,    0],\n[-21,    -21,    -21,    -21,    0,    0],\n[-21,    -21,    -21,    -21,    -839850240,    21954],\n[-21,    -21,    -21,    -21,    3,    21954],\n[-21,    -21,    -21,    -21,    -839849469,    21954],\n[-21,    -21,    -21,    -21,    0,    0],\n[-21,    -21,    -21,    -21,    0,    0],\n[-21,    -21,    -21,    -21,    -841778480,    21954],\n[-21,    -21,    -21,    -21,    -842962928,    21954],\n[-21,    -21,    -21,    -21,    0,    0],\n[-21,    -21,    -21,    -21,    -841763224,    21954],\n[-21,    -21,    -21,    -21,    -840476816,    21954],\n[-21,    -21,    -21,    -21,    24,    0],\n[-21,    -21,    -21,    -21,    0,    0],\n[-21,    -21,    -21,    -21,    0,    0],\n[-21,    -21,    -21,    -21,    -835587584,    21954],\n[-21,    -21,    -21,    -21,    0,    21954],\n[-21,    -21,    -21,    -21,    -835588090,    21954],\n[-21,    -21,    -21,    -21,    0,    0],\n[-21,    -21,    -21,    -21,    0,    0],\n[-21,    -21,    -21,    -21,    -841778256,    21954],\n[-21,    -21,    -21,    -21,    -842962928,    21954],\n[-21,    -21,    -21,    -21,    0,    0]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v5/tosa.9833748ca3ba88c7.mlir --test-function-pass --tosa-make-broadcastable | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-decompose-ops --canonicalize=\"test-convergence\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-tensor-transform-patterns --test-linalg-data-layout-propagation --test-function-pass --control-flow-sink --tosa-optional-decompositions --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --cse --test-func-insert-result --test-function-pass --canonicalize=\"test-convergence\" --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-collapsing\" --test-linalg-drop-unit-dims --test-linalg-transform-patterns --tosa-test-quant-utils --linalg-fuse-elementwise-ops --test-func-erase-arg --test-func-erase-result --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-collapsing-control\" --test-linalg-transform-patterns=\"test-erase-unused-operands-and-results\" --canonicalize --test-linalg-decompose-ops --convert-elementwise-to-linalg --linalg-generalize-named-ops --test-func-insert-arg --mem2reg --test-function-pass --canonicalize --test-linalg-transform-patterns=\"test-patterns\" --mem2reg=\"region-simplify\" --test-tensor-copy-insertion --test-func-erase-arg --test-func-erase-result --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-generalize-named-ops --canonicalize=\"test-convergence\" --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --canonicalize=\"test-convergence\" --memref-expand --sccp --test-function-pass --resolve-shaped-type-result-dims --control-flow-sink --test-func-insert-arg --test-linalg-greedy-fusion --expand-strided-metadata --test-linalg-greedy-fusion --resolve-ranked-shaped-type-result-dims --loop-invariant-code-motion --test-func-insert-result --fold-memref-alias-ops --test-func-set-type --test-linalg-greedy-fusion --test-linalg-data-layout-propagation --loop-invariant-code-motion --test-linalg-drop-unit-dims --inline --expand-realloc --test-linalg-pad-fusion --memref-emulate-wide-int=\"widest-int-supported=32\" --linalg-specialize-generic-ops --memref-emulate-wide-int --expand-realloc=\"emit-deallocs\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-for-loop-peeling=\"skip-partial\" --test-func-insert-result --loop-invariant-code-motion --duplicate-function-elimination --scf-for-loop-range-folding --scf-for-loop-peeling=\"peel-front\" --test-scf-uplift-while-to-for --test-scf-for-utils --mem2reg --test-function-pass --sroa --test-scf-pipelining=\"no-epilogue-peeling\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-result --remove-dead-values --int-range-optimizations --test-func-insert-result --test-func-insert-arg --test-func-erase-result --composite-fixed-point-pass --cse --arith-unsigned-when-equivalent --int-range-optimizations | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21]]]",
        "test_line": "[[[-21,    -21,    -21,    -21,    -21,    -21],\n[20,    -21,    -21,    -21,    -21,    -21],\n[20,    -21,    -21,    -21,    -21,    -21],\n[20,    -21,    -21,    -21,    -21,    -21],\n[20,    -21,    -21,    -21,    -21,    -21],\n[20,    -21,    -21,    -21,    -21,    -21],\n[20,    -21,    -21,    -21,    -21,    -21],\n[20,    -21,    -21,    -21,    -21,    -21],\n[20,    -21,    -21,    -21,    -21,    -21],\n[20,    -21,    -21,    -21,    -21,    -21],\n[20,    -21,    -21,    -21,    -21,    -21],\n[20,    -21,    -21,    -21,    -21,    -21],\n[20,    -21,    -21,    -21,    -21,    -21],\n[20,    -21,    -21,    -21,    -21,    -21],\n[20,    -21,    -21,    -21,    -21,    -21],\n[20,    -21,    -21,    -21,    -21,    -21],\n[20,    -21,    -21,    -21,    -21,    -21],\n[20,    -21,    -21,    -21,    -21,    -21],\n[20,    -21,    -21,    -21,    -21,    -21],\n[20,    -21,    -21,    -21,    -21,    -21],\n[20,    -21,    -21,    -21,    -21,    -21],\n[20,    -21,    -21,    -21,    -21,    -21],\n[20,    -21,    -21,    -21,    -21,    -21],\n[20,    -21,    -21,    -21,    -21,    -21],\n[20,    -21,    -21,    -21,    -21,    -21],\n[20,    -21,    -21,    -21,    -21,    -21],\n[20,    -21,    -21,    -21,    -21,    -21],\n[20,    -21,    -21,    -21,    -21,    -21],\n[20,    -21,    -21,    -21,    -21,    -21],\n[20,    -21,    -21,    -21,    -21,    -21],\n[20,    -21,    -21,    -21,    -21,    -21],\n[20,    -21,    -21,    -21,    -21,    -21]]]"
    }
}
