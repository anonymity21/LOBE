{
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v5/tosa.4ac9573ef1c70cd3.mlir --test-tensor-copy-insertion --loop-invariant-code-motion --sroa --topological-sort --test-func-insert-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --duplicate-function-elimination --test-tensor-copy-insertion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize --test-func-insert-result --topological-sort --canonicalize --test-func-set-type --topological-sort --tosa-layerwise-constant-fold --symbol-dce --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --test-func-erase-result --inline --composite-fixed-point-pass --test-function-pass --tosa-make-broadcastable | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-generalize-named-ops --arith-int-range-narrowing --canonicalize=\"test-convergence top-down=0\" --fold-tensor-subset-ops --test-linalg-rank-reduce-contraction-ops --test-linalg-rank-reduce-contraction-ops --test-math-polynomial-approximation --math-extend-to-supported-types --test-tensor-transform-patterns=\"test-fold-constant-extract-slice\" --test-func-erase-result --test-func-erase-result --test-tensor-transform-patterns=\"test-fold-consecutive-insert-extract-slice\" --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --linalg-generalize-named-ops --math-extend-to-supported-types --math-extend-to-supported-types --test-expand-math --linalg-named-op-conversion --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --convert-elementwise-to-linalg --cse --test-expand-math --fold-tensor-subset-ops --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --linalg-fuse-elementwise-ops --test-expand-math --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --linalg-specialize-generic-ops --fold-tensor-subset-ops --test-function-pass --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --sroa --math-uplift-to-fma --composite-fixed-point-pass --math-extend-to-supported-types --linalg-generalize-named-ops --tosa-reduce-transposes --composite-fixed-point-pass --tosa-test-quant-utils --test-func-insert-result --symbol-dce --symbol-dce --arith-int-range-narrowing --test-arith-emulate-wide-int --test-linalg-transform-patterns=\"test-erase-unnecessary-inputs\" --control-flow-sink --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --tosa-optional-decompositions --test-func-insert-result --topological-sort --sroa --test-math-to-vcix --arith-expand=\"include-bf16\" --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --resolve-shaped-type-result-dims --test-emulate-narrow-int=\"arith-compute-bitwidth=8\" --scf-for-loop-peeling=\"skip-partial\" --scf-for-loop-specialization --duplicate-function-elimination --canonicalize --scf-for-loop-range-folding --scf-for-to-while --resolve-shaped-type-result-dims --sccp --test-arith-emulate-wide-int --composite-fixed-point-pass --fold-memref-alias-ops --arith-emulate-wide-int --arith-unsigned-when-equivalent --test-arith-emulate-wide-int --scf-for-loop-range-folding --arith-unsigned-when-equivalent --sroa --arith-emulate-wide-int=\"widest-int-supported=32\" --mem2reg=\"region-simplify\" --test-func-insert-arg --canonicalize=\"test-convergence top-down=0\" --scf-for-to-while --arith-emulate-wide-int=\"widest-int-supported=32\" --test-scf-while-op-builder --math-uplift-to-fma --scf-parallel-loop-specialization --test-func-insert-result --loop-invariant-code-motion --topological-sort --resolve-ranked-shaped-type-result-dims --resolve-ranked-shaped-type-result-dims --scf-for-to-while --arith-emulate-unsupported-floats --scf-for-loop-specialization --test-arith-emulate-wide-int=\"widest-int-supported=8\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --resolve-ranked-shaped-type-result-dims --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-math-to-vcix --duplicate-function-elimination --cse --test-func-erase-arg --test-func-insert-result --test-arith-emulate-wide-int --test-memref-bound-check | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --inline --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --arith-emulate-unsupported-floats --arith-unsigned-when-equivalent --resolve-ranked-shaped-type-result-dims --int-range-optimizations --test-function-pass --memref-expand --loop-invariant-subset-hoisting --sccp --arith-emulate-wide-int=\"widest-int-supported=32\" --test-function-pass --expand-strided-metadata --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sroa --test-func-erase-result --test-function-pass --test-func-insert-arg --canonicalize=\"test-convergence top-down=0\" --test-func-insert-arg --loop-invariant-code-motion --symbol-dce --loop-invariant-subset-hoisting --sccp --inline --sccp --mem2reg=\"region-simplify\" --canonicalize | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-arg --mem2reg --test-func-set-type --control-flow-sink --remove-dead-values --symbol-dce --test-func-erase-arg --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975]]]",
        "test_line": "[[[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v5/tosa.4ac9573ef1c70cd3.mlir --tosa-optional-decompositions --duplicate-function-elimination --tosa-infer-shapes --test-function-pass --test-tensor-transform-patterns=\"test-reassociative-reshape-folding\" --tosa-infer-shapes --topological-sort --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --test-func-insert-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --duplicate-function-elimination --inline --duplicate-function-elimination --test-tensor-copy-insertion --arith-expand=\"include-bf16\" --test-func-set-type --tosa-make-broadcastable --fold-tensor-subset-ops --tosa-test-quant-utils --test-func-erase-result --tosa-optional-decompositions --test-func-erase-arg --loop-invariant-subset-hoisting --test-func-insert-result --int-range-optimizations --test-emulate-narrow-int=\"arith-compute-bitwidth=8\" --remove-dead-values --duplicate-function-elimination --arith-emulate-wide-int --arith-emulate-wide-int --tosa-infer-shapes --tosa-test-quant-utils --tosa-test-quant-utils --test-emulate-narrow-int=\"memref-load-bitwidth=32\" --test-func-insert-result --test-tensor-copy-insertion --fold-tensor-subset-ops --test-func-insert-result --tosa-make-broadcastable --remove-dead-values --loop-invariant-code-motion --test-arith-emulate-wide-int --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-data-layout-propagation --inline --sccp --cse --linalg-specialize-generic-ops --convert-elementwise-to-linalg --test-linalg-data-layout-propagation --linalg-specialize-generic-ops --duplicate-function-elimination --linalg-specialize-generic-ops --linalg-specialize-generic-ops --test-expand-math --test-function-pass --loop-invariant-code-motion --test-math-to-vcix --linalg-generalize-named-ops --test-math-polynomial-approximation=\"enable-avx2\" --inline --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-arg --test-scf-pipelining=\"no-epilogue-peeling\" --scf-for-loop-specialization --scf-for-loop-range-folding --test-function-pass --loop-invariant-subset-hoisting --scf-for-loop-range-folding --scf-parallel-loop-specialization --test-scf-if-utils --resolve-ranked-shaped-type-result-dims --scf-for-loop-peeling=\"skip-partial\" --sroa --test-func-insert-arg --scf-for-loop-canonicalization --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --int-range-optimizations --control-flow-sink --loop-invariant-subset-hoisting --int-range-optimizations --test-memref-bound-check --test-func-insert-result --test-arith-emulate-wide-int=\"widest-int-supported=8\" --cse --test-arith-emulate-wide-int --control-flow-sink --cse --expand-strided-metadata --int-range-optimizations --symbol-dce --control-flow-sink --control-flow-sink --canonicalize=\"test-convergence\" --mem2reg=\"region-simplify\" --duplicate-function-elimination --expand-realloc --inline --memref-emulate-wide-int=\"widest-int-supported=32\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --test-func-erase-result --test-func-erase-result --cse --inline --resolve-ranked-shaped-type-result-dims --resolve-ranked-shaped-type-result-dims | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse --test-func-set-type --loop-invariant-code-motion --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975]]]",
        "test_line": "[[[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v5/tosa.4ac9573ef1c70cd3.mlir --sccp --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --test-func-erase-arg --remove-dead-values --loop-invariant-subset-hoisting --sccp --control-flow-sink --loop-invariant-subset-hoisting --loop-invariant-subset-hoisting --tosa-test-quant-utils --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize --tosa-layerwise-constant-fold --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-result --fold-tensor-subset-ops --sroa --mem2reg=\"region-simplify\" --control-flow-sink --mem2reg --test-tensor-copy-insertion --test-function-pass --tosa-test-quant-utils --composite-fixed-point-pass --loop-invariant-subset-hoisting --test-func-erase-result --control-flow-sink --topological-sort --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --tosa-optional-decompositions --loop-invariant-subset-hoisting --tosa-infer-shapes --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --loop-invariant-subset-hoisting --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-result --sroa --sccp --linalg-inline-scalar-operands --arith-emulate-unsupported-floats --test-linalg-rank-reduce-contraction-ops --test-linalg-decompose-ops --arith-expand --arith-emulate-wide-int=\"widest-int-supported=32\" --symbol-dce --loop-invariant-subset-hoisting --tosa-reduce-transposes --mem2reg=\"region-simplify\" --arith-emulate-wide-int=\"widest-int-supported=32\" --test-math-polynomial-approximation=\"enable-avx2\" --test-math-polynomial-approximation=\"enable-avx2\" --linalg-inline-scalar-operands --test-func-insert-result --test-func-insert-result --test-func-insert-arg --symbol-dce --canonicalize=\"test-convergence\" --linalg-fold-unit-extent-dims --math-uplift-to-fma --arith-emulate-wide-int=\"widest-int-supported=32\" --test-func-insert-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-rank-reduce-contraction-ops --test-expand-math --resolve-shaped-type-result-dims --expand-strided-metadata --sroa --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-wide-int --inline --linalg-named-op-conversion --test-linalg-drop-unit-dims --resolve-ranked-shaped-type-result-dims --memref-expand | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-unsupported-floats --sccp --sccp --test-func-insert-result --composite-fixed-point-pass --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --inline --composite-fixed-point-pass --cse --sroa --sccp --duplicate-function-elimination --loop-invariant-subset-hoisting --test-func-erase-result --sroa --test-func-insert-arg --topological-sort --cse --cse --symbol-dce --sroa --topological-sort --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975]]]",
        "test_line": "[[[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v5/tosa.4ac9573ef1c70cd3.mlir -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --fold-tensor-subset-ops --composite-fixed-point-pass --canonicalize --scf-forall-to-for --tosa-test-quant-utils --scf-for-loop-range-folding --scf-forall-to-for --tosa-make-broadcastable --symbol-dce --tosa-reduce-transposes --scf-forall-to-for --symbol-dce --test-tensor-copy-insertion=\"must-infer-memory-space\" --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --scf-for-to-while --test-scf-pipelining=\"no-epilogue-peeling\" --scf-parallel-loop-fusion --test-scf-pipelining=\"annotate\" --scf-for-loop-specialization --duplicate-function-elimination --test-scf-while-op-builder --test-scf-if-utils --loop-invariant-code-motion --scf-for-loop-canonicalization --inline --tosa-layerwise-constant-fold | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize=\"test-convergence top-down=0\" --tosa-test-quant-utils --inline --test-func-insert-result --control-flow-sink --test-func-insert-arg --test-tensor-transform-patterns=\"test-drop-redundant-insert-slice-rank-expansion\" --tosa-test-quant-utils --tosa-infer-shapes --composite-fixed-point-pass --composite-fixed-point-pass --tosa-optional-decompositions --tosa-reduce-transposes --cse --tosa-layerwise-constant-fold --control-flow-sink --duplicate-function-elimination --tosa-optional-decompositions --remove-dead-values --tosa-optional-decompositions --test-function-pass --tosa-reduce-transposes --test-func-set-type --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --loop-invariant-subset-hoisting --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-arg --topological-sort --resolve-ranked-shaped-type-result-dims --test-linalg-decompose-ops --canonicalize=\"test-convergence\" --memref-emulate-wide-int=\"widest-int-supported=32\" --test-func-set-type --test-linalg-data-layout-propagation --canonicalize | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --sccp --test-linalg-data-layout-propagation --math-extend-to-supported-types --convert-elementwise-to-linalg --cse --linalg-fold-unit-extent-dims --sroa --test-linalg-elementwise-fusion-patterns=\"collapse-dimensions-control=2,3\" --test-linalg-drop-unit-dims --test-func-erase-arg --canonicalize --sccp --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-collapsing-control\" --test-func-set-type --test-linalg-rank-reduce-contraction-ops --test-math-algebraic-simplification --linalg-fuse-elementwise-ops --duplicate-function-elimination --test-math-algebraic-simplification --test-math-to-vcix --test-linalg-pad-fusion --loop-invariant-subset-hoisting --test-func-set-type --test-math-to-vcix --linalg-generalize-named-ops --linalg-inline-scalar-operands --math-extend-to-supported-types --test-func-insert-arg --test-func-erase-arg --linalg-inline-scalar-operands --test-linalg-drop-unit-dims | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-result --expand-realloc --normalize-memrefs --test-func-insert-arg --sccp --memref-emulate-wide-int --arith-expand=\"include-bf16\" --canonicalize=\"test-convergence\" --test-func-erase-result --test-func-insert-result --test-expand-math --memref-expand --test-memref-bound-check --math-uplift-to-fma --memref-emulate-wide-int=\"widest-int-supported=32\" --test-func-insert-arg --test-math-polynomial-approximation=\"enable-avx2\" --mem2reg=\"region-simplify\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --test-func-insert-result --canonicalize --math-extend-to-supported-types --mem2reg=\"region-simplify\" --test-math-to-vcix --canonicalize=\"test-convergence top-down=0\" --test-func-insert-arg --expand-realloc --sccp --inline --sccp --sccp --math-extend-to-supported-types --resolve-shaped-type-result-dims --resolve-shaped-type-result-dims --cse --test-func-erase-result --test-memref-bound-check --test-expand-math --mem2reg --symbol-dce --resolve-ranked-shaped-type-result-dims --resolve-ranked-shaped-type-result-dims | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --test-func-insert-result --test-function-pass --test-memref-bound-check --symbol-dce --test-func-insert-result --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --remove-dead-values --remove-dead-values --topological-sort --test-func-erase-result --remove-dead-values --fold-memref-alias-ops --loop-invariant-subset-hoisting --loop-invariant-subset-hoisting --remove-dead-values --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --remove-dead-values --loop-invariant-subset-hoisting --test-func-erase-result --loop-invariant-code-motion --duplicate-function-elimination --arith-int-range-narrowing --test-func-insert-arg --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --arith-expand=\"include-bf16\" --remove-dead-values --test-function-pass --test-func-insert-result --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --test-func-erase-result --test-func-erase-result --loop-invariant-subset-hoisting --sroa --canonicalize --topological-sort --loop-invariant-subset-hoisting --sccp --sroa --loop-invariant-code-motion --canonicalize --test-function-pass --mem2reg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975]]]",
        "test_line": "[[[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v5/tosa.4ac9573ef1c70cd3.mlir --topological-sort --tosa-reduce-transposes --fold-tensor-subset-ops --canonicalize=\"test-convergence top-down=0\" --test-func-erase-arg --tosa-test-quant-utils --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --loop-invariant-subset-hoisting --test-func-set-type --tosa-test-quant-utils --composite-fixed-point-pass --test-func-set-type --test-tensor-transform-patterns=\"test-reassociative-reshape-folding\" --cse --duplicate-function-elimination --test-func-erase-arg --tosa-infer-shapes --tosa-make-broadcastable --mem2reg --test-func-insert-arg --loop-invariant-code-motion --tosa-optional-decompositions --fold-tensor-subset-ops --tosa-test-quant-utils --loop-invariant-subset-hoisting --fold-tensor-subset-ops --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize --symbol-dce --arith-expand=\"include-bf16\" --int-range-optimizations | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-math-polynomial-approximation | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-math-algebraic-simplification --linalg-inline-scalar-operands --duplicate-function-elimination --loop-invariant-code-motion --test-math-to-vcix --test-linalg-rank-reduce-contraction-ops --test-linalg-drop-unit-dims --math-uplift-to-fma --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-data-layout-propagation --linalg-named-op-conversion --linalg-generalize-named-ops --normalize-memrefs --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --resolve-shaped-type-result-dims --linalg-fuse-elementwise-ops --inline --fold-memref-alias-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-for-loop-canonicalization --expand-strided-metadata --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --scf-for-loop-range-folding --test-scf-while-op-builder --test-scf-while-op-builder --scf-for-loop-specialization --memref-expand --arith-expand=\"include-bf16\" --test-arith-emulate-wide-int --arith-int-range-narrowing --scf-parallel-loop-tiling --scf-for-loop-canonicalization --composite-fixed-point-pass --scf-parallel-loop-fusion --scf-forall-to-for --resolve-shaped-type-result-dims --expand-strided-metadata --test-scf-uplift-while-to-for --memref-emulate-wide-int --test-func-erase-result --resolve-shaped-type-result-dims | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-arg --test-func-erase-result --int-range-optimizations --arith-unsigned-when-equivalent --test-scf-if-utils --test-scf-uplift-while-to-for --scf-parallel-loop-tiling --scf-for-loop-canonicalization --scf-for-to-while --test-scf-for-utils=\"test-replace-with-new-yields\" --arith-expand=\"include-bf16\" --scf-for-to-while --test-scf-pipelining=\"no-epilogue-peeling\" --test-scf-uplift-while-to-for --test-emulate-narrow-int=\"memref-load-bitwidth=32\" --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-func-set-type --arith-unsigned-when-equivalent --cse --test-arith-emulate-wide-int --test-func-insert-result --loop-invariant-subset-hoisting --inline --control-flow-sink --loop-invariant-subset-hoisting --int-range-optimizations --arith-emulate-wide-int=\"widest-int-supported=32\" --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --sccp --test-func-erase-arg --test-function-pass --cse --mem2reg=\"region-simplify\" --test-func-insert-arg --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --remove-dead-values --symbol-dce --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975]]]",
        "test_line": "[[[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v5/tosa.4ac9573ef1c70cd3.mlir --topological-sort --duplicate-function-elimination --tosa-reduce-transposes --test-func-insert-result --test-func-erase-arg --canonicalize --test-func-insert-result --test-function-pass --composite-fixed-point-pass --topological-sort --test-function-pass --test-func-insert-result --tosa-reduce-transposes | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --math-uplift-to-fma --test-func-set-type --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --arith-expand --test-linalg-elementwise-fusion-patterns=\"control-fusion-by-expansion\" --test-arith-emulate-wide-int=\"widest-int-supported=8\" --tosa-reduce-transposes --test-math-to-vcix --test-linalg-transform-patterns=\"test-decompose-winograd-ops\" --test-math-polynomial-approximation=\"enable-avx2\" --math-extend-to-supported-types --canonicalize=\"test-convergence top-down=0\" --linalg-fuse-elementwise-ops --loop-invariant-code-motion --test-linalg-drop-unit-dims --math-extend-to-supported-types --test-linalg-pad-fusion --test-tensor-transform-patterns=\"test-fold-consecutive-insert-extract-slice\" --sccp --duplicate-function-elimination --test-expand-math --test-linalg-pad-fusion --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --test-linalg-drop-unit-dims --symbol-dce --test-tensor-copy-insertion --sccp --arith-emulate-unsupported-floats --duplicate-function-elimination --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --tosa-optional-decompositions --math-uplift-to-fma --test-linalg-drop-unit-dims --test-tensor-transform-patterns --test-math-algebraic-simplification --test-linalg-greedy-fusion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --loop-invariant-code-motion --linalg-fold-unit-extent-dims --fold-tensor-subset-ops --test-linalg-transform-patterns --test-linalg-greedy-fusion --symbol-dce --test-linalg-rank-reduce-contraction-ops --duplicate-function-elimination --test-linalg-drop-unit-dims --sccp --test-function-pass --mem2reg --test-math-algebraic-simplification --test-linalg-decompose-ops --test-tensor-copy-insertion --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --expand-strided-metadata --sroa --linalg-inline-scalar-operands --sccp --test-memref-dependence-check --control-flow-sink --expand-realloc=\"emit-deallocs\" --sroa --arith-emulate-wide-int --math-extend-to-supported-types --mem2reg --linalg-named-op-conversion --linalg-specialize-generic-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse --resolve-ranked-shaped-type-result-dims --sccp --test-func-erase-arg --sroa --sroa --memref-emulate-wide-int --scf-for-loop-canonicalization --test-expand-math | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --mem2reg=\"region-simplify\" --test-func-erase-result --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --remove-dead-values --test-math-algebraic-simplification --math-extend-to-supported-types --test-func-insert-result --test-func-set-type --arith-expand --arith-unsigned-when-equivalent --int-range-optimizations --test-func-erase-arg --test-func-erase-result --test-math-to-vcix --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --arith-expand=\"include-bf16\" --test-function-pass --math-extend-to-supported-types --test-func-erase-arg --sroa --test-math-to-vcix --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-unsigned-when-equivalent --sroa --control-flow-sink --sroa --test-func-set-type --test-func-erase-result --loop-invariant-subset-hoisting --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975]]]",
        "test_line": "[[[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v5/tosa.4ac9573ef1c70cd3.mlir --test-tensor-transform-patterns=\"use-foreach\" --test-func-set-type --mem2reg --symbol-dce --test-func-insert-result --test-tensor-copy-insertion --sccp --sroa --control-flow-sink --test-func-insert-result --sccp --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --test-function-pass --tosa-reduce-transposes --tosa-infer-shapes --test-func-insert-result --inline --sccp --control-flow-sink --test-func-set-type --tosa-layerwise-constant-fold | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --inline --test-linalg-transform-patterns=\"test-swap-extract-slice-with-fill-pattern\" --arith-expand=\"include-bf16\" --loop-invariant-subset-hoisting --test-math-polynomial-approximation --composite-fixed-point-pass --tosa-infer-shapes --test-arith-emulate-wide-int --inline --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-test-quant-utils --canonicalize --test-func-insert-arg --test-func-insert-arg --tosa-optional-decompositions --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-drop-unit-dims --int-range-optimizations --linalg-generalize-named-ops --arith-expand --symbol-dce --inline --test-function-pass --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --resolve-shaped-type-result-dims --test-linalg-drop-unit-dims --memref-expand --convert-elementwise-to-linalg --duplicate-function-elimination --expand-strided-metadata --test-func-erase-result --test-linalg-pad-fusion --test-linalg-elementwise-fusion-patterns=\"fuse-generic-ops-control\" --sroa --linalg-named-op-conversion --test-linalg-pad-fusion --composite-fixed-point-pass --test-linalg-data-layout-propagation --test-func-insert-result --test-linalg-elementwise-fusion-patterns --test-linalg-transform-patterns=\"test-winograd-conv2d\" --linalg-generalize-named-ops --resolve-shaped-type-result-dims --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --test-func-insert-result --test-func-erase-arg --test-linalg-rank-reduce-contraction-ops --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-fuse-elementwise-ops --test-func-set-type --test-func-insert-result --test-linalg-rank-reduce-contraction-ops --test-linalg-transform-patterns=\"test-winograd-conv2d\" --control-flow-sink --control-flow-sink --test-linalg-greedy-fusion --composite-fixed-point-pass --linalg-generalize-named-ops --duplicate-function-elimination --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --remove-dead-values --loop-invariant-code-motion --test-func-set-type --test-func-insert-arg --resolve-ranked-shaped-type-result-dims --memref-expand --test-func-erase-result --memref-expand --duplicate-function-elimination --symbol-dce --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --duplicate-function-elimination --topological-sort --test-func-erase-arg --mem2reg --sroa --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975]]]",
        "test_line": "[[[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v5/tosa.4ac9573ef1c70cd3.mlir --test-func-erase-result --tosa-make-broadcastable --fold-tensor-subset-ops --tosa-make-broadcastable --tosa-test-quant-utils --remove-dead-values --fold-tensor-subset-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --int-range-optimizations --test-math-polynomial-approximation --linalg-fold-unit-extent-dims --linalg-inline-scalar-operands --test-arith-emulate-wide-int | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --math-extend-to-supported-types --test-tensor-copy-insertion --inline --test-func-erase-arg --test-math-algebraic-simplification --fold-tensor-subset-ops --test-linalg-elementwise-fusion-patterns --int-range-optimizations --test-linalg-greedy-fusion --test-linalg-transform-patterns=\"test-decompose-winograd-ops\" --sccp --test-func-erase-arg --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --linalg-generalize-named-ops --test-expand-math --test-linalg-data-layout-propagation --arith-expand=\"include-bf16\" --math-uplift-to-fma --test-arith-emulate-wide-int --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --test-func-erase-result --duplicate-function-elimination --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --test-linalg-greedy-fusion --test-expand-math --test-math-to-vcix --arith-unsigned-when-equivalent --topological-sort --arith-emulate-wide-int=\"widest-int-supported=32\" --arith-emulate-wide-int=\"widest-int-supported=32\" --arith-unsigned-when-equivalent --linalg-fuse-elementwise-ops --linalg-generalize-named-ops --arith-int-range-narrowing --canonicalize --test-arith-emulate-wide-int | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse --linalg-inline-scalar-operands --symbol-dce --linalg-fuse-elementwise-ops --sccp --test-linalg-elementwise-fusion-patterns=\"control-fusion-by-expansion\" --resolve-ranked-shaped-type-result-dims --test-func-insert-result --linalg-generalize-named-ops --composite-fixed-point-pass --control-flow-sink --convert-elementwise-to-linalg --composite-fixed-point-pass --test-linalg-pad-fusion --normalize-memrefs --fold-memref-alias-ops --test-func-insert-arg --resolve-shaped-type-result-dims --test-func-insert-arg --expand-realloc=\"emit-deallocs\" --linalg-fuse-elementwise-ops --test-func-erase-result --test-func-set-type --loop-invariant-code-motion --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --test-func-insert-arg --linalg-inline-scalar-operands | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --loop-invariant-code-motion --control-flow-sink --arith-emulate-unsupported-floats | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --loop-invariant-code-motion --topological-sort --control-flow-sink --test-func-erase-result --loop-invariant-subset-hoisting --sroa --loop-invariant-code-motion --sroa --test-func-erase-result --remove-dead-values --sccp --sccp --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --loop-invariant-subset-hoisting --sroa --remove-dead-values --mem2reg=\"region-simplify\" --mem2reg --test-func-erase-arg --inline --control-flow-sink --composite-fixed-point-pass --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975]]]",
        "test_line": "[[[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v5/tosa.4ac9573ef1c70cd3.mlir --inline --loop-invariant-subset-hoisting --remove-dead-values --tosa-test-quant-utils --fold-tensor-subset-ops --test-func-erase-result --test-function-pass --loop-invariant-subset-hoisting --remove-dead-values --test-func-erase-arg --inline --control-flow-sink --duplicate-function-elimination --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-decompose-ops --arith-unsigned-when-equivalent --test-func-insert-arg --test-math-polynomial-approximation=\"enable-avx2\" --tosa-layerwise-constant-fold --arith-emulate-unsupported-floats --linalg-specialize-generic-ops --tosa-test-quant-utils --sccp --test-math-polynomial-approximation=\"enable-avx2\" --test-linalg-drop-unit-dims --test-math-algebraic-simplification | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --fold-tensor-subset-ops --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --sccp --test-linalg-decompose-ops --topological-sort --duplicate-function-elimination --test-expand-math --test-func-insert-arg --test-arith-emulate-wide-int --linalg-inline-scalar-operands --test-arith-emulate-wide-int | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-memref-bound-check --linalg-fuse-elementwise-ops --test-linalg-elementwise-fusion-patterns=\"collapse-dimensions-control=2,3\" --test-func-insert-result --resolve-shaped-type-result-dims --test-linalg-data-layout-propagation --linalg-generalize-named-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg --test-linalg-greedy-fusion --composite-fixed-point-pass --canonicalize=\"test-convergence\" --test-function-pass --test-linalg-drop-unit-dims --linalg-fuse-elementwise-ops --sccp --convert-elementwise-to-linalg --test-linalg-decompose-ops --loop-invariant-subset-hoisting --test-linalg-greedy-fusion --test-func-set-type --test-linalg-greedy-fusion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --resolve-ranked-shaped-type-result-dims --test-func-insert-arg --test-func-set-type --remove-dead-values --cse --test-function-pass --test-func-insert-result --memref-emulate-wide-int=\"widest-int-supported=32\" --test-function-pass --expand-strided-metadata --test-memref-dependence-check --inline --expand-strided-metadata --sccp --test-function-pass --normalize-memrefs --mem2reg=\"region-simplify\" --test-func-erase-result --test-func-erase-arg --loop-invariant-code-motion --mem2reg=\"region-simplify\" --expand-realloc=\"emit-deallocs\" --test-memref-dependence-check | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --duplicate-function-elimination --loop-invariant-code-motion --test-function-pass --test-func-set-type --canonicalize --test-function-pass --canonicalize --test-func-set-type --loop-invariant-subset-hoisting --topological-sort --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975]]]",
        "test_line": "[[[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v5/tosa.4ac9573ef1c70cd3.mlir --mem2reg=\"region-simplify\" --test-func-erase-result --canonicalize=\"test-convergence\" --inline --inline --test-tensor-copy-insertion --tosa-infer-shapes --loop-invariant-subset-hoisting --tosa-make-broadcastable | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --test-function-pass --memref-emulate-wide-int=\"widest-int-supported=32\" --loop-invariant-code-motion --test-memref-bound-check --test-func-erase-result --composite-fixed-point-pass --resolve-shaped-type-result-dims --linalg-generalize-named-ops --test-linalg-rank-reduce-contraction-ops --test-func-set-type --test-func-erase-arg --memref-expand --test-math-polynomial-approximation | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --normalize-memrefs --expand-realloc=\"emit-deallocs\" --convert-elementwise-to-linalg --memref-expand --test-math-polynomial-approximation=\"enable-avx2\" --resolve-shaped-type-result-dims --expand-strided-metadata --memref-emulate-wide-int=\"widest-int-supported=32\" --duplicate-function-elimination --fold-memref-alias-ops --sroa --symbol-dce --linalg-generalize-named-ops --test-linalg-decompose-ops --linalg-named-op-conversion --test-linalg-greedy-fusion --canonicalize=\"test-convergence top-down=0\" --topological-sort --resolve-ranked-shaped-type-result-dims --loop-invariant-subset-hoisting --test-func-erase-arg --linalg-inline-scalar-operands | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-parallel-loop-specialization --loop-invariant-subset-hoisting --inline --test-emulate-narrow-int --sroa --scf-for-loop-range-folding --arith-emulate-wide-int=\"widest-int-supported=32\" --test-func-erase-arg --test-expand-math --loop-invariant-code-motion --inline --topological-sort --test-scf-if-utils | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-unsupported-floats --loop-invariant-subset-hoisting --test-function-pass --sccp --loop-invariant-code-motion --symbol-dce --int-range-optimizations --sroa --symbol-dce --mem2reg=\"region-simplify\" --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --arith-int-range-narrowing --mem2reg --test-func-set-type --test-func-erase-result --composite-fixed-point-pass --control-flow-sink --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --remove-dead-values --remove-dead-values --test-func-insert-result --symbol-dce --test-func-erase-arg --test-func-erase-result --test-func-insert-arg --mem2reg --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975]]]",
        "test_line": "[[[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v5/tosa.4ac9573ef1c70cd3.mlir --test-func-insert-result --composite-fixed-point-pass --test-function-pass --mem2reg --test-func-erase-arg --tosa-optional-decompositions --test-func-erase-arg --remove-dead-values --tosa-infer-shapes --symbol-dce --test-func-erase-result --inline --topological-sort --test-func-erase-arg --test-func-erase-result --tosa-test-quant-utils --inline --test-tensor-copy-insertion --tosa-validate --test-func-set-type --topological-sort --tosa-make-broadcastable | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --test-func-insert-result --duplicate-function-elimination --int-range-optimizations --arith-unsigned-when-equivalent --tosa-optional-decompositions --composite-fixed-point-pass --test-func-erase-result --test-function-pass --test-tensor-copy-insertion --test-func-erase-result --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-func-erase-arg --int-range-optimizations --tosa-reduce-transposes --test-func-erase-result --inline --symbol-dce --sccp --test-func-erase-arg --fold-tensor-subset-ops --sccp --sccp --test-func-insert-arg --tosa-optional-decompositions --sccp --remove-dead-values --test-func-erase-arg --int-range-optimizations --arith-int-range-narrowing --test-arith-emulate-wide-int=\"widest-int-supported=8\" --remove-dead-values --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --math-uplift-to-fma --symbol-dce --test-memref-dependence-check --memref-expand --composite-fixed-point-pass --test-func-set-type --test-expand-math --linalg-specialize-generic-ops --math-uplift-to-fma --test-linalg-rank-reduce-contraction-ops --expand-strided-metadata --arith-emulate-wide-int --resolve-ranked-shaped-type-result-dims --expand-strided-metadata --test-math-polynomial-approximation=\"enable-avx2\" --linalg-fold-unit-extent-dims --test-func-insert-result --memref-emulate-wide-int --duplicate-function-elimination --linalg-specialize-generic-ops --math-uplift-to-fma --math-uplift-to-fma --duplicate-function-elimination --linalg-fold-unit-extent-dims --test-linalg-drop-unit-dims --int-range-optimizations --arith-unsigned-when-equivalent --test-linalg-pad-fusion --test-linalg-data-layout-propagation --test-linalg-pad-fusion --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --math-uplift-to-fma --expand-realloc=\"emit-deallocs\" --math-extend-to-supported-types --test-memref-bound-check --test-linalg-rank-reduce-contraction-ops --arith-unsigned-when-equivalent --test-math-to-vcix --convert-elementwise-to-linalg --test-memref-bound-check --math-uplift-to-fma --expand-realloc=\"emit-deallocs\" --duplicate-function-elimination --linalg-specialize-generic-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-math-algebraic-simplification --test-linalg-pad-fusion --composite-fixed-point-pass --cse --expand-strided-metadata --linalg-named-op-conversion --expand-strided-metadata --resolve-shaped-type-result-dims --test-linalg-data-layout-propagation --topological-sort --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-expansion\" --linalg-fold-unit-extent-dims --convert-elementwise-to-linalg --test-linalg-decompose-ops --linalg-fuse-elementwise-ops --test-math-to-vcix --linalg-named-op-conversion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-specialize-generic-ops --linalg-fold-unit-extent-dims --test-func-insert-arg --linalg-inline-scalar-operands --convert-elementwise-to-linalg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize --expand-strided-metadata --loop-invariant-code-motion --expand-strided-metadata --canonicalize --expand-realloc --duplicate-function-elimination --math-extend-to-supported-types --sccp --loop-invariant-code-motion --remove-dead-values --memref-emulate-wide-int=\"widest-int-supported=32\" --arith-int-range-narrowing --int-range-optimizations --math-uplift-to-fma --test-func-insert-result --test-func-erase-result --test-math-to-vcix --arith-unsigned-when-equivalent --expand-realloc=\"emit-deallocs\" --control-flow-sink --duplicate-function-elimination --symbol-dce --int-range-optimizations --math-extend-to-supported-types --topological-sort --arith-unsigned-when-equivalent --test-func-insert-arg --memref-emulate-wide-int=\"widest-int-supported=32\" --mem2reg=\"region-simplify\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-result --topological-sort --sccp --loop-invariant-code-motion --test-func-insert-arg --test-function-pass --sroa --sccp --inline --test-func-set-type --sccp --test-func-insert-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975]]]",
        "test_line": "[[[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v5/tosa.4ac9573ef1c70cd3.mlir --canonicalize=\"test-convergence top-down=0\" --symbol-dce --test-func-set-type --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-inline-scalar-operands --linalg-inline-scalar-operands --tosa-optional-decompositions --loop-invariant-subset-hoisting --fold-tensor-subset-ops --sccp --tosa-optional-decompositions --symbol-dce --test-math-polynomial-approximation --test-tensor-transform-patterns=\"test-reassociative-reshape-folding\" --linalg-inline-scalar-operands --test-math-to-vcix --test-linalg-pad-fusion --convert-elementwise-to-linalg --test-func-insert-arg --math-uplift-to-fma --composite-fixed-point-pass --loop-invariant-subset-hoisting --test-math-to-vcix --linalg-generalize-named-ops --tosa-layerwise-constant-fold | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-generalize-named-ops --loop-invariant-subset-hoisting --linalg-inline-scalar-operands --fold-tensor-subset-ops --topological-sort --test-tensor-transform-patterns=\"test-drop-redundant-insert-slice-rank-expansion\" --math-extend-to-supported-types --test-tensor-transform-patterns=\"test-reassociative-reshape-folding\" --test-math-polynomial-approximation --test-func-erase-arg --test-linalg-decompose-ops --test-expand-math --test-func-insert-arg --canonicalize --linalg-specialize-generic-ops --loop-invariant-subset-hoisting --canonicalize=\"test-convergence top-down=0\" --test-linalg-data-layout-propagation --test-tensor-copy-insertion --math-extend-to-supported-types --sroa --test-linalg-data-layout-propagation --math-uplift-to-fma --test-func-set-type --linalg-fuse-elementwise-ops --test-linalg-rank-reduce-contraction-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --test-func-erase-arg --test-func-erase-result --test-func-erase-result --test-math-polynomial-approximation --resolve-ranked-shaped-type-result-dims --test-linalg-greedy-fusion --test-expand-math --test-linalg-pad-fusion --test-arith-emulate-wide-int | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --resolve-shaped-type-result-dims --expand-strided-metadata --arith-expand=\"include-bf16\" --memref-expand --symbol-dce --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --duplicate-function-elimination --arith-emulate-wide-int --sroa --test-arith-emulate-wide-int --test-function-pass --test-function-pass --composite-fixed-point-pass --test-func-set-type --mem2reg=\"region-simplify\" --test-func-set-type --canonicalize=\"test-convergence top-down=0\" --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize=\"test-convergence\" --test-func-erase-arg --remove-dead-values --topological-sort --remove-dead-values --loop-invariant-code-motion --test-func-erase-arg --arith-emulate-wide-int=\"widest-int-supported=32\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize=\"test-convergence top-down=0\" --test-func-erase-arg --topological-sort --sccp --test-func-insert-result --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize=\"test-convergence top-down=0\" --test-func-erase-result --sroa --test-function-pass --loop-invariant-subset-hoisting --symbol-dce --test-func-erase-result --test-func-set-type --loop-invariant-subset-hoisting --mem2reg=\"region-simplify\" --loop-invariant-code-motion --loop-invariant-code-motion --test-func-erase-result --test-func-erase-arg --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975]]]",
        "test_line": "[[[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v5/tosa.4ac9573ef1c70cd3.mlir --loop-invariant-code-motion --test-func-insert-result --test-tensor-copy-insertion=\"must-infer-memory-space\" --tosa-test-quant-utils --fold-tensor-subset-ops --canonicalize=\"test-convergence\" --tosa-layerwise-constant-fold --duplicate-function-elimination --tosa-test-quant-utils --test-func-set-type --test-tensor-copy-insertion --sroa --test-func-erase-result --test-tensor-copy-insertion --tosa-make-broadcastable --sroa --control-flow-sink --mem2reg --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --tosa-optional-decompositions --tosa-test-quant-utils --test-func-insert-result --tosa-make-broadcastable --control-flow-sink --test-func-erase-arg --mem2reg=\"region-simplify\" --symbol-dce --loop-invariant-code-motion --mem2reg --control-flow-sink --inline --test-func-insert-arg --composite-fixed-point-pass --topological-sort --test-func-erase-result --composite-fixed-point-pass --tosa-layerwise-constant-fold --sroa --tosa-reduce-transposes --test-function-pass --duplicate-function-elimination --loop-invariant-code-motion --composite-fixed-point-pass --topological-sort --test-tensor-transform-patterns=\"use-foreach\" --test-func-set-type --tosa-test-quant-utils | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-arg --mem2reg --fold-tensor-subset-ops --test-function-pass --test-function-pass --test-tensor-transform-patterns --test-function-pass --canonicalize=\"test-convergence\" --fold-tensor-subset-ops --mem2reg=\"region-simplify\" --test-func-insert-result --sroa --tosa-optional-decompositions --tosa-make-broadcastable --topological-sort --test-func-insert-arg --loop-invariant-subset-hoisting --test-func-erase-arg --test-function-pass --test-func-set-type --test-func-insert-result --tosa-optional-decompositions --tosa-layerwise-constant-fold --loop-invariant-subset-hoisting --inline --control-flow-sink --tosa-layerwise-constant-fold | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-result --composite-fixed-point-pass --arith-int-range-narrowing --test-linalg-drop-unit-dims --test-linalg-decompose-ops --composite-fixed-point-pass --linalg-fold-unit-extent-dims --test-func-erase-result --convert-elementwise-to-linalg --test-math-to-vcix --test-func-insert-arg --math-uplift-to-fma --canonicalize=\"test-convergence\" --topological-sort --loop-invariant-code-motion --test-math-to-vcix --test-linalg-elementwise-fusion-patterns=\"control-fusion-by-expansion\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --normalize-memrefs --math-extend-to-supported-types --linalg-specialize-generic-ops --loop-invariant-subset-hoisting --linalg-named-op-conversion --math-uplift-to-fma --test-linalg-decompose-ops --linalg-inline-scalar-operands --fold-memref-alias-ops --duplicate-function-elimination --resolve-shaped-type-result-dims --test-linalg-greedy-fusion --test-linalg-decompose-ops --loop-invariant-code-motion --test-linalg-data-layout-propagation --inline --test-math-polynomial-approximation --test-linalg-elementwise-fusion-patterns=\"fuse-multiuse-producer\" --convert-elementwise-to-linalg --test-linalg-pad-fusion --math-extend-to-supported-types --test-linalg-greedy-fusion --linalg-specialize-generic-ops --topological-sort --memref-emulate-wide-int --test-math-polynomial-approximation --mem2reg --expand-realloc=\"emit-deallocs\" --test-memref-dependence-check --cse --math-uplift-to-fma --duplicate-function-elimination --test-memref-dependence-check --test-func-insert-arg --test-linalg-drop-unit-dims | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-math-algebraic-simplification --expand-strided-metadata --test-math-algebraic-simplification --normalize-memrefs --resolve-shaped-type-result-dims --resolve-ranked-shaped-type-result-dims --test-func-erase-arg --test-math-algebraic-simplification | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-generalize-named-ops --linalg-specialize-generic-ops --linalg-generalize-named-ops --math-uplift-to-fma --topological-sort --linalg-specialize-generic-ops --linalg-fuse-elementwise-ops --test-linalg-rank-reduce-contraction-ops --test-math-algebraic-simplification --test-func-insert-arg --test-func-set-type --mem2reg=\"region-simplify\" --sccp --test-math-algebraic-simplification --topological-sort --linalg-generalize-named-ops --linalg-inline-scalar-operands --linalg-named-op-conversion --math-uplift-to-fma --test-func-insert-result --test-func-erase-result --test-func-set-type --test-math-polynomial-approximation --mem2reg=\"region-simplify\" --test-linalg-drop-unit-dims --test-linalg-rank-reduce-contraction-ops --loop-invariant-subset-hoisting --convert-elementwise-to-linalg --mem2reg=\"region-simplify\" --duplicate-function-elimination --test-func-erase-result --test-linalg-greedy-fusion --linalg-generalize-named-ops --linalg-fuse-elementwise-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-unsigned-when-equivalent --control-flow-sink --test-function-pass --expand-strided-metadata --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-result --test-func-erase-arg --expand-strided-metadata --control-flow-sink --canonicalize=\"test-convergence top-down=0\" --test-func-erase-arg --test-func-insert-arg --test-func-insert-arg --test-func-insert-arg --duplicate-function-elimination --resolve-shaped-type-result-dims --memref-expand | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-result --sroa --cse --test-memref-dependence-check --sroa --loop-invariant-code-motion --canonicalize --test-memref-dependence-check --expand-realloc --symbol-dce --cse --memref-emulate-wide-int --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --mem2reg --mem2reg=\"region-simplify\" --loop-invariant-subset-hoisting --test-func-insert-arg --cse --canonicalize=\"test-convergence\" --test-func-set-type --control-flow-sink --test-func-erase-arg --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975]]]",
        "test_line": "[[[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v5/tosa.4ac9573ef1c70cd3.mlir --tosa-test-quant-utils --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --test-function-pass --loop-invariant-subset-hoisting --test-func-insert-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-result --math-extend-to-supported-types --test-math-polynomial-approximation=\"enable-avx2\" --test-func-erase-arg --arith-unsigned-when-equivalent --test-math-algebraic-simplification --arith-emulate-unsupported-floats --fold-tensor-subset-ops --linalg-generalize-named-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --test-func-erase-result --loop-invariant-subset-hoisting --test-function-pass --inline --test-func-set-type --control-flow-sink --test-func-set-type --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --test-func-set-type --loop-invariant-subset-hoisting --topological-sort --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975]]]",
        "test_line": "[[[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v5/tosa.4ac9573ef1c70cd3.mlir --test-function-pass --remove-dead-values --symbol-dce --composite-fixed-point-pass --loop-invariant-code-motion --sroa --symbol-dce --fold-tensor-subset-ops --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --tosa-make-broadcastable --test-func-insert-result --test-func-insert-result --test-tensor-copy-insertion=\"must-infer-memory-space\" --fold-tensor-subset-ops --sccp --tosa-test-quant-utils --tosa-infer-shapes --composite-fixed-point-pass --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-infer-shapes --test-math-algebraic-simplification --test-func-insert-result --cse --int-range-optimizations --test-math-polynomial-approximation --linalg-named-op-conversion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-elementwise-fusion-patterns=\"fuse-generic-ops-control\" --sccp --fold-memref-alias-ops --resolve-shaped-type-result-dims --test-func-insert-result --test-linalg-data-layout-propagation --memref-emulate-wide-int=\"widest-int-supported=32\" --test-func-set-type --expand-strided-metadata --test-func-erase-result --memref-expand --symbol-dce --inline --resolve-ranked-shaped-type-result-dims --test-memref-dependence-check --linalg-inline-scalar-operands --composite-fixed-point-pass --symbol-dce --linalg-generalize-named-ops --test-func-insert-arg --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --test-linalg-pad-fusion --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --test-func-insert-result --duplicate-function-elimination --mem2reg=\"region-simplify\" --test-linalg-transform-patterns=\"test-erase-unused-operands-and-results\" --test-linalg-greedy-fusion --linalg-inline-scalar-operands | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-result --loop-invariant-code-motion --resolve-ranked-shaped-type-result-dims --expand-strided-metadata --test-function-pass --loop-invariant-code-motion --sroa --resolve-shaped-type-result-dims --cse --loop-invariant-subset-hoisting --test-func-erase-result --expand-realloc --inline --control-flow-sink --resolve-ranked-shaped-type-result-dims --loop-invariant-subset-hoisting --fold-memref-alias-ops --composite-fixed-point-pass --test-memref-dependence-check --cse --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-result --test-func-insert-arg --test-func-set-type --remove-dead-values --remove-dead-values --remove-dead-values --symbol-dce --inline --test-func-erase-arg --duplicate-function-elimination --sccp --mem2reg=\"region-simplify\" --test-function-pass --mem2reg=\"region-simplify\" --test-func-insert-result --remove-dead-values --symbol-dce --symbol-dce --remove-dead-values | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975]]]",
        "test_line": "[[[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v5/tosa.4ac9573ef1c70cd3.mlir --tosa-infer-shapes --canonicalize=\"test-convergence top-down=0\" --sccp --test-func-set-type --loop-invariant-code-motion --test-func-set-type --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --tosa-reduce-transposes --tosa-make-broadcastable --remove-dead-values --topological-sort --test-func-erase-result --tosa-reduce-transposes --loop-invariant-code-motion --tosa-make-broadcastable --symbol-dce --inline --topological-sort --tosa-infer-shapes --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --loop-invariant-code-motion --sccp --tosa-infer-shapes --tosa-validate --test-math-polynomial-approximation=\"enable-avx2\" --arith-expand --tosa-test-quant-utils --arith-unsigned-when-equivalent --test-func-erase-result --tosa-test-quant-utils | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-make-broadcastable --math-uplift-to-fma --test-linalg-decompose-ops --symbol-dce --tosa-reduce-transposes --linalg-fuse-elementwise-ops --sroa --test-function-pass --canonicalize=\"test-convergence\" --test-func-insert-arg --linalg-inline-scalar-operands --test-func-insert-result --composite-fixed-point-pass --test-linalg-pad-fusion --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-collapsing-control\" --linalg-inline-scalar-operands --math-uplift-to-fma --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --test-function-pass --math-extend-to-supported-types --canonicalize | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-memref-bound-check --linalg-named-op-conversion --canonicalize --test-func-erase-result --loop-invariant-code-motion --test-linalg-drop-unit-dims --test-func-erase-result --arith-emulate-unsupported-floats --test-linalg-drop-unit-dims --linalg-named-op-conversion --int-range-optimizations --test-linalg-data-layout-propagation --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --test-func-erase-arg --resolve-ranked-shaped-type-result-dims --duplicate-function-elimination --resolve-shaped-type-result-dims --sroa --control-flow-sink --memref-expand --test-scf-while-op-builder --scf-forall-to-for --test-func-erase-result --normalize-memrefs --normalize-memrefs --control-flow-sink --expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --fold-memref-alias-ops --test-func-erase-result --expand-realloc --arith-int-range-narrowing --normalize-memrefs --arith-expand --memref-emulate-wide-int | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-result --composite-fixed-point-pass --cse --mem2reg --test-function-pass --test-func-erase-arg --duplicate-function-elimination --composite-fixed-point-pass --topological-sort --cse --test-func-erase-result --test-func-insert-arg --test-func-insert-arg --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975]]]",
        "test_line": "[[[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v5/tosa.4ac9573ef1c70cd3.mlir --control-flow-sink --inline --duplicate-function-elimination --tosa-test-quant-utils --loop-invariant-code-motion --tosa-reduce-transposes --mem2reg=\"region-simplify\" --topological-sort --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-test-quant-utils --arith-emulate-wide-int=\"widest-int-supported=32\" --math-uplift-to-fma --arith-emulate-unsupported-floats --test-function-pass --test-math-algebraic-simplification --test-func-set-type --test-linalg-pad-fusion --topological-sort --tosa-infer-shapes --test-linalg-data-layout-propagation --test-linalg-data-layout-propagation --test-linalg-greedy-fusion --test-linalg-pad-fusion --test-math-polynomial-approximation --test-expand-math --math-extend-to-supported-types --test-linalg-transform-patterns=\"test-erase-unused-operands-and-results\" --test-linalg-pad-fusion --composite-fixed-point-pass --test-func-set-type --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --tosa-infer-shapes --topological-sort --sroa --test-func-erase-result --loop-invariant-subset-hoisting --sroa --tosa-optional-decompositions --topological-sort --composite-fixed-point-pass --arith-expand=\"include-bf16\" --arith-emulate-unsupported-floats --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-greedy-fusion --test-func-erase-arg --topological-sort --test-func-insert-result --duplicate-function-elimination --test-linalg-rank-reduce-contraction-ops --test-linalg-drop-unit-dims --sccp --linalg-generalize-named-ops --mem2reg=\"region-simplify\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg=\"region-simplify\" --sroa --expand-realloc --resolve-shaped-type-result-dims --test-linalg-pad-fusion --linalg-specialize-generic-ops --expand-strided-metadata --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --test-function-pass --control-flow-sink --test-func-insert-arg --test-func-erase-result --sccp --test-func-erase-arg --control-flow-sink --loop-invariant-subset-hoisting --mem2reg=\"region-simplify\" --cse --sroa --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975]]]",
        "test_line": "[[[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v5/tosa.4ac9573ef1c70cd3.mlir --composite-fixed-point-pass --tosa-test-quant-utils --remove-dead-values --topological-sort --test-tensor-copy-insertion=\"must-infer-memory-space\" --remove-dead-values --mem2reg --test-func-insert-result --tosa-make-broadcastable --loop-invariant-subset-hoisting --tosa-infer-shapes --mem2reg=\"region-simplify\" --test-tensor-transform-patterns=\"test-drop-redundant-insert-slice-rank-expansion\" --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --symbol-dce --test-arith-emulate-wide-int --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-forall-to-for --test-scf-if-utils --scf-for-loop-specialization --scf-for-loop-range-folding --scf-parallel-loop-tiling=\"parallel-loop-tile-sizes=1,4 no-min-max-bounds=true\" --inline --arith-unsigned-when-equivalent --arith-unsigned-when-equivalent --fold-memref-alias-ops --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-scf-uplift-while-to-for --duplicate-function-elimination --composite-fixed-point-pass --control-flow-sink --test-func-erase-arg --duplicate-function-elimination --arith-emulate-wide-int --resolve-shaped-type-result-dims --scf-for-loop-canonicalization --test-scf-while-op-builder --scf-parallel-loop-fusion --topological-sort --composite-fixed-point-pass --test-func-set-type --test-func-insert-result --test-scf-if-utils --scf-for-loop-peeling=\"peel-front\" --arith-emulate-wide-int=\"widest-int-supported=32\" --duplicate-function-elimination --control-flow-sink --sccp --loop-invariant-subset-hoisting --test-func-insert-result --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --scf-forall-to-parallel --cse --test-func-insert-arg --memref-expand --scf-parallel-loop-tiling=\"parallel-loop-tile-sizes=1,4 no-min-max-bounds=true\" --test-func-insert-result --test-memref-bound-check --normalize-memrefs --sccp --scf-for-loop-range-folding --scf-for-to-while --arith-emulate-wide-int --arith-emulate-wide-int | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-result --arith-emulate-wide-int --symbol-dce --arith-unsigned-when-equivalent --remove-dead-values --composite-fixed-point-pass --symbol-dce --arith-emulate-wide-int --test-func-erase-result --test-func-erase-arg --sccp --loop-invariant-code-motion --test-func-erase-result --mem2reg=\"region-simplify\" --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --remove-dead-values --topological-sort --canonicalize --test-func-set-type --loop-invariant-subset-hoisting --loop-invariant-subset-hoisting --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[-21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21],\n[-21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21,    -21]]]",
        "test_line": "[[[-21,    -21,    -21,    -21,    0,    0,    0,    0,    0,    0,    0,    0],\n[-21,    -21,    -21,    -21,    2,    22055,    161,    0,    -566272912,    32558,    -943653936,    22055],\n[-21,    -21,    -21,    -21,    0,    4,    -941136864,    22055,    -945438464,    22055,    97,    0],\n[-21,    -21,    -21,    -21,    -34,    -1,    65,    0,    -943712448,    22055,    -944070352,    22055],\n[-21,    -21,    -21,    -21,    -944070320,    22055,    -943653808,    22055,    256,    0,    96,    0],\n[-21,    -21,    -21,    -21,    -945965584,    22055,    0,    0,    0,    0,    0,    0],\n[-21,    -21,    -21,    -21,    0,    0,    0,    0,    2,    22055,    1409,    0],\n[-21,    -21,    -21,    -21,    -942378080,    22055,    -942378080,    22055,    1065353216,    1065353216,    1065353216,    1065353216],\n[-21,    -21,    -21,    -21,    1065353216,    1065353216,    1065353216,    1065353216,    1065353216,    1065353216,    1065353216,    1065353216],\n[-21,    -21,    -21,    -21,    1065353216,    1065353216,    1065353216,    1065353216,    1065353216,    1065353216,    1065353216,    1065353216],\n[-21,    -21,    -21,    -21,    1065353216,    1065353216,    1065353216,    1065353216,    1065353216,    1065353216,    1065353216,    1065353216],\n[-21,    -21,    -21,    -21,    1065353216,    1065353216,    1065353216,    1065353216,    1065353216,    1065353216,    1065353216,    1065353216],\n[-21,    -21,    -21,    -21,    272,    0,    32,    0,    0,    0,    -944678384,    22055],\n[-21,    -21,    -21,    -21,    -943735936,    22055,    -942899808,    22055,    0,    0,    0,    0],\n[-21,    -21,    -21,    -21,    -941162442,    22055,    -1,    -1,    -941162376,    22055,    -1,    -1],\n[-21,    -21,    -21,    -21,    106,    125,    753,    0,    -944054832,    22055,    -943663408,    22055],\n[-21,    -21,    -21,    -21,    -943980424,    22055,    -1,    -1,    121,    240,    -1,    -1],\n[-21,    -21,    -21,    -21,    136,    249,    -1,    -1,    123,    259,    -1,    -1],\n[-21,    -21,    -21,    -21,    211,    190,    577,    0,    -941229728,    22055,    -942814704,    22055],\n[-21,    -21,    -21,    -21,    -942473096,    22055,    -1,    -1,    121,    68,    -1,    -1],\n[-21,    -21,    -21,    -21,    121,    30,    -1,    -1,    123,    70,    -1,    -1],\n[-21,    -21,    -21,    -21,    213,    232,    433,    0,    -941228000,    22055,    -941163120,    22055],\n[-21,    -21,    -21,    -21,    119,    131072,    -1,    -1,    121,    33554434,    -1,    -1],\n[-21,    -21,    -21,    -21,    125,    0,    -1,    -1,    16777342,    0,    -1,    -1],\n[-21,    -21,    -21,    -21,    33554432,    0,    145,    0,    -941956464,    22055,    -566273056,    32558],\n[-21,    -21,    -21,    -21,    119,    0,    -1,    -1,    121,    1,    -1,    -1],\n[-21,    -21,    -21,    -21,    33554557,    16908288,    -1,    -1,    126,    0,    -1,    -1],\n[-21,    -21,    -21,    -21,    288,    0,    144,    0,    -942866381,    22055,    -1,    -1],\n[-21,    -21,    -21,    -21,    -942866313,    22055,    -1,    -1,    -942866311,    22055,    -1,    -1]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v5/tosa.4ac9573ef1c70cd3.mlir --remove-dead-values --test-tensor-transform-patterns=\"test-fold-consecutive-insert-extract-slice\" --test-function-pass --tosa-infer-shapes --inline --symbol-dce --control-flow-sink --tosa-test-quant-utils --symbol-dce --tosa-infer-shapes --duplicate-function-elimination --test-tensor-transform-patterns=\"test-fold-consecutive-insert-extract-slice\" --composite-fixed-point-pass --test-func-insert-arg --tosa-reduce-transposes --loop-invariant-subset-hoisting --composite-fixed-point-pass --loop-invariant-code-motion --tosa-validate --test-tensor-copy-insertion=\"must-infer-memory-space\" --tosa-layerwise-constant-fold --test-func-set-type --sroa --test-func-erase-result --test-func-insert-result --tosa-reduce-transposes --tosa-reduce-transposes --tosa-layerwise-constant-fold --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --arith-int-range-narrowing --arith-emulate-wide-int=\"widest-int-supported=32\" --test-math-polynomial-approximation --test-func-erase-result --canonicalize --loop-invariant-subset-hoisting --test-func-insert-result --loop-invariant-subset-hoisting --test-linalg-decompose-ops --duplicate-function-elimination --fold-tensor-subset-ops --linalg-inline-scalar-operands --convert-elementwise-to-linalg --tosa-infer-shapes --cse --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --composite-fixed-point-pass --test-linalg-drop-unit-dims --test-linalg-pad-fusion --sroa --linalg-specialize-generic-ops --inline --arith-expand --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --test-linalg-rank-reduce-contraction-ops --fold-tensor-subset-ops --sccp --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-expand-math --tosa-make-broadcastable --composite-fixed-point-pass --canonicalize=\"test-convergence\" --loop-invariant-code-motion --linalg-named-op-conversion --test-linalg-data-layout-propagation --test-arith-emulate-wide-int --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --test-scf-for-utils --resolve-ranked-shaped-type-result-dims --scf-for-loop-peeling --test-scf-while-op-builder --resolve-shaped-type-result-dims --expand-realloc --test-func-erase-arg --test-memref-bound-check --scf-for-loop-peeling=\"peel-front\" --scf-parallel-loop-specialization | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-arg --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-func-insert-arg --expand-realloc=\"emit-deallocs\" --sroa --normalize-memrefs --inline --test-memref-bound-check --sroa --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-memref-bound-check --fold-memref-alias-ops --memref-expand --topological-sort --sroa --test-arith-emulate-wide-int --arith-unsigned-when-equivalent | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --fold-memref-alias-ops --control-flow-sink --expand-realloc --test-memref-bound-check --remove-dead-values --test-func-insert-result --test-func-set-type --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-result --symbol-dce --mem2reg --loop-invariant-subset-hoisting --test-func-erase-result --sroa --test-func-insert-result --loop-invariant-code-motion --loop-invariant-subset-hoisting --loop-invariant-code-motion --remove-dead-values --test-func-insert-arg --test-func-insert-arg --sccp --test-func-insert-arg --loop-invariant-subset-hoisting --composite-fixed-point-pass --loop-invariant-code-motion --test-func-set-type --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --sroa --test-func-erase-arg --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975]]]",
        "test_line": "[[[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v5/tosa.4ac9573ef1c70cd3.mlir -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --int-range-optimizations --scf-for-loop-range-folding --test-expand-math --test-scf-while-op-builder --linalg-named-op-conversion --test-tensor-copy-insertion=\"must-infer-memory-space\" --convert-elementwise-to-linalg --linalg-inline-scalar-operands --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-generalize-named-ops --test-tensor-copy-insertion=\"must-infer-memory-space\" --test-math-polynomial-approximation --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-collapsing-control\" --symbol-dce --tosa-test-quant-utils --test-math-polynomial-approximation=\"enable-avx2\" --linalg-generalize-named-ops --test-func-insert-arg --test-linalg-transform-patterns=\"test-decompose-winograd-ops\" --control-flow-sink --test-function-pass --math-uplift-to-fma --test-linalg-transform-patterns=\"test-swap-subtensor-padtensor\" --test-func-erase-result --topological-sort --test-math-algebraic-simplification --fold-tensor-subset-ops --test-function-pass --tosa-optional-decompositions --linalg-fold-unit-extent-dims --linalg-inline-scalar-operands | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-scf-while-op-builder --topological-sort --scf-for-loop-range-folding --loop-invariant-subset-hoisting --mem2reg=\"region-simplify\" --scf-for-to-while --arith-int-range-narrowing --canonicalize --test-func-erase-arg --loop-invariant-code-motion --test-func-insert-result --scf-forall-to-parallel --scf-for-loop-specialization --cse --scf-parallel-loop-tiling --arith-unsigned-when-equivalent --test-func-insert-result --test-arith-emulate-wide-int --inline --test-scf-for-utils=\"test-replace-with-new-yields\" --canonicalize --topological-sort --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse --test-function-pass --normalize-memrefs --scf-for-loop-canonicalization --test-func-set-type --test-func-insert-arg --expand-strided-metadata --scf-parallel-loop-fusion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-scf-while-op-builder --scf-for-loop-range-folding --test-func-insert-arg --inline --inline --control-flow-sink --scf-parallel-loop-tiling=\"parallel-loop-tile-sizes=1,4 no-min-max-bounds=true\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-arg --control-flow-sink --test-func-erase-arg --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-func-insert-arg --test-func-set-type --arith-unsigned-when-equivalent --loop-invariant-code-motion --topological-sort --test-func-erase-result --loop-invariant-subset-hoisting --duplicate-function-elimination --remove-dead-values --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-function-pass --loop-invariant-code-motion --arith-emulate-wide-int=\"widest-int-supported=32\" --remove-dead-values --arith-emulate-unsupported-floats --canonicalize=\"test-convergence top-down=0\" --cse --remove-dead-values --control-flow-sink --canonicalize=\"test-convergence\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg --composite-fixed-point-pass --canonicalize=\"test-convergence\" --sroa --topological-sort --test-function-pass --test-func-insert-result --cse --cse --inline --canonicalize --sccp --loop-invariant-code-motion --sccp --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975]]]",
        "test_line": "[[[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v5/tosa.4ac9573ef1c70cd3.mlir --remove-dead-values | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-transform-patterns=\"test-decompose-winograd-ops\" --test-tensor-copy-insertion --fold-tensor-subset-ops --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-linalg-pad-fusion --arith-unsigned-when-equivalent --arith-emulate-wide-int=\"widest-int-supported=32\" --sroa --linalg-inline-scalar-operands --canonicalize --test-func-erase-arg --tosa-layerwise-constant-fold --test-linalg-greedy-fusion --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --mem2reg --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --topological-sort --arith-int-range-narrowing | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --test-arith-emulate-wide-int --test-linalg-transform-patterns=\"test-patterns\" --linalg-inline-scalar-operands --linalg-generalize-named-ops --test-linalg-drop-unit-dims --loop-invariant-code-motion --test-func-erase-result --test-math-polynomial-approximation --cse --linalg-generalize-named-ops --math-extend-to-supported-types --canonicalize --loop-invariant-code-motion --linalg-inline-scalar-operands --test-linalg-greedy-fusion --test-linalg-transform-patterns=\"test-swap-extract-slice-with-fill-pattern\" --linalg-inline-scalar-operands --canonicalize=\"test-convergence top-down=0\" --test-func-insert-arg --control-flow-sink --test-func-erase-result --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-collapsing-control\" --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --arith-expand=\"include-bf16\" --test-math-algebraic-simplification --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --linalg-generalize-named-ops --loop-invariant-code-motion --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-drop-unit-dims --test-linalg-drop-unit-dims --composite-fixed-point-pass --inline --duplicate-function-elimination --arith-emulate-wide-int=\"widest-int-supported=32\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-arg --topological-sort --cse --arith-expand --arith-unsigned-when-equivalent --fold-memref-alias-ops --fold-memref-alias-ops --test-memref-bound-check --loop-invariant-subset-hoisting --sroa --arith-emulate-wide-int --arith-expand=\"include-bf16\" --memref-emulate-wide-int | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --resolve-shaped-type-result-dims --composite-fixed-point-pass --inline --memref-emulate-wide-int --topological-sort --expand-strided-metadata --symbol-dce --canonicalize=\"test-convergence top-down=0\" --topological-sort --test-func-insert-result --memref-expand --resolve-shaped-type-result-dims --topological-sort --sccp --test-func-erase-arg --loop-invariant-code-motion --test-func-erase-arg --memref-expand --sccp --canonicalize=\"test-convergence top-down=0\" --test-func-insert-arg --resolve-shaped-type-result-dims --mem2reg --test-memref-bound-check --sroa --resolve-shaped-type-result-dims --test-func-set-type --test-memref-dependence-check --loop-invariant-subset-hoisting --test-func-set-type --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-arg --test-func-insert-arg --inline --test-func-insert-result --control-flow-sink --remove-dead-values --composite-fixed-point-pass --test-func-insert-arg --symbol-dce --duplicate-function-elimination --duplicate-function-elimination --topological-sort --cse --sccp --composite-fixed-point-pass --test-func-insert-arg --test-function-pass --sroa --duplicate-function-elimination --canonicalize=\"test-convergence\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975]]]",
        "test_line": "[[[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v5/tosa.4ac9573ef1c70cd3.mlir --composite-fixed-point-pass --mem2reg=\"region-simplify\" --test-func-insert-result --tosa-reduce-transposes --tosa-infer-shapes --test-tensor-copy-insertion=\"must-infer-memory-space\" --loop-invariant-subset-hoisting --tosa-reduce-transposes --remove-dead-values --composite-fixed-point-pass --mem2reg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --math-uplift-to-fma --linalg-generalize-named-ops --tosa-test-quant-utils --fold-tensor-subset-ops --test-linalg-greedy-fusion --fold-tensor-subset-ops --test-math-algebraic-simplification --topological-sort --composite-fixed-point-pass --test-func-erase-arg --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-specialize-generic-ops --symbol-dce --duplicate-function-elimination --linalg-fold-unit-extent-dims --test-func-set-type --sccp --tosa-test-quant-utils --loop-invariant-code-motion --test-linalg-elementwise-fusion-patterns=\"collapse-dimensions-control=2,3\" --linalg-generalize-named-ops --loop-invariant-code-motion --test-math-polynomial-approximation --duplicate-function-elimination --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-result --test-scf-while-op-builder --arith-unsigned-when-equivalent --memref-emulate-wide-int=\"widest-int-supported=32\" --test-scf-pipelining=\"no-epilogue-peeling\" --arith-emulate-wide-int=\"widest-int-supported=32\" --test-func-erase-arg --test-func-insert-arg --scf-for-loop-canonicalization --test-scf-while-op-builder | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-scf-while-op-builder --memref-expand --scf-for-loop-specialization --test-expand-math --test-func-erase-result --test-math-to-vcix --canonicalize --resolve-shaped-type-result-dims --scf-for-to-while --test-math-to-vcix --resolve-ranked-shaped-type-result-dims --test-function-pass --duplicate-function-elimination --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --scf-for-loop-specialization --scf-for-loop-range-folding --test-func-set-type --test-function-pass --arith-emulate-wide-int=\"widest-int-supported=32\" --test-func-insert-result --test-memref-dependence-check | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-for-to-while --scf-for-loop-peeling --test-function-pass --test-function-pass --control-flow-sink --memref-emulate-wide-int --test-memref-dependence-check --test-func-erase-result --test-func-insert-arg --mem2reg=\"region-simplify\" --test-scf-while-op-builder --sccp --test-func-erase-arg --scf-for-loop-range-folding --symbol-dce --test-expand-math --test-func-erase-result --test-func-set-type --scf-forall-to-for --resolve-shaped-type-result-dims --test-expand-math --memref-expand | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --expand-realloc --resolve-shaped-type-result-dims --test-memref-dependence-check --test-memref-bound-check --loop-invariant-code-motion --resolve-shaped-type-result-dims --test-memref-dependence-check --resolve-shaped-type-result-dims --symbol-dce --duplicate-function-elimination --composite-fixed-point-pass --expand-strided-metadata --expand-strided-metadata --int-range-optimizations --resolve-ranked-shaped-type-result-dims --test-memref-dependence-check --test-func-insert-result --inline --inline --test-func-set-type --expand-strided-metadata --test-arith-emulate-wide-int | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --expand-strided-metadata --resolve-shaped-type-result-dims --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --control-flow-sink --resolve-shaped-type-result-dims --sroa --loop-invariant-subset-hoisting --fold-memref-alias-ops --duplicate-function-elimination --test-func-erase-arg --arith-emulate-wide-int --test-func-insert-result --topological-sort --test-memref-dependence-check --mem2reg=\"region-simplify\" --mem2reg=\"region-simplify\" --test-arith-emulate-wide-int=\"widest-int-supported=8\" --loop-invariant-subset-hoisting --test-memref-bound-check --test-memref-dependence-check --composite-fixed-point-pass --test-func-erase-result --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-arith-emulate-wide-int | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --loop-invariant-subset-hoisting --remove-dead-values --loop-invariant-subset-hoisting --loop-invariant-subset-hoisting --test-func-insert-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975]]]",
        "test_line": "[[[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v5/tosa.4ac9573ef1c70cd3.mlir --composite-fixed-point-pass --topological-sort --tosa-reduce-transposes --fold-tensor-subset-ops --loop-invariant-code-motion --sccp --tosa-optional-decompositions --topological-sort --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --sroa --test-func-erase-arg --composite-fixed-point-pass --loop-invariant-code-motion --tosa-optional-decompositions --test-function-pass --test-tensor-transform-patterns=\"use-foreach\" --test-func-insert-arg --duplicate-function-elimination --duplicate-function-elimination --tosa-test-quant-utils | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --test-math-polynomial-approximation --topological-sort --control-flow-sink --sccp --linalg-generalize-named-ops --math-uplift-to-fma --test-linalg-transform-patterns=\"test-decompose-winograd-ops\" --tosa-layerwise-constant-fold --linalg-fold-unit-extent-dims --sccp --linalg-generalize-named-ops --test-expand-math --test-math-polynomial-approximation --test-linalg-greedy-fusion --test-linalg-pad-fusion --test-func-erase-result --test-func-insert-arg --cse --test-linalg-pad-fusion --symbol-dce --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-fold-unit-extent-dims --math-extend-to-supported-types --mem2reg=\"region-simplify\" --topological-sort --test-func-insert-result --test-func-set-type --test-func-insert-arg --test-math-algebraic-simplification --test-func-erase-arg --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-decompose-ops --linalg-generalize-named-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --linalg-named-op-conversion --test-linalg-data-layout-propagation --test-linalg-drop-unit-dims --sccp --cse --test-linalg-greedy-fusion --loop-invariant-subset-hoisting --inline --linalg-specialize-generic-ops --linalg-specialize-generic-ops --mem2reg=\"region-simplify\" --convert-elementwise-to-linalg --linalg-specialize-generic-ops --test-func-insert-result --linalg-fuse-elementwise-ops --test-func-set-type --linalg-fuse-elementwise-ops --linalg-specialize-generic-ops --composite-fixed-point-pass --test-linalg-data-layout-propagation --canonicalize=\"test-convergence top-down=0\" --sccp --mem2reg=\"region-simplify\" --test-func-insert-arg --test-func-set-type --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-memref-dependence-check --test-func-erase-arg --remove-dead-values --int-range-optimizations --canonicalize=\"test-convergence\" --canonicalize=\"test-convergence\" --arith-emulate-wide-int --test-func-erase-arg --remove-dead-values --normalize-memrefs --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --test-func-set-type --canonicalize --test-func-set-type --sroa --sroa --test-func-set-type --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize=\"test-convergence top-down=0\" --test-func-insert-result --test-func-erase-result --symbol-dce --test-func-erase-result --mem2reg=\"region-simplify\" --canonicalize=\"test-convergence top-down=0\" --composite-fixed-point-pass --inline --inline --topological-sort --symbol-dce --duplicate-function-elimination --sroa --test-func-insert-result --cse --duplicate-function-elimination --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975]]]",
        "test_line": "[[[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v5/tosa.4ac9573ef1c70cd3.mlir --test-func-set-type --test-func-insert-result --tosa-infer-shapes --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --tosa-optional-decompositions --test-func-insert-result --sroa --test-tensor-copy-insertion --tosa-optional-decompositions --canonicalize=\"test-convergence top-down=0\" --test-func-erase-arg --tosa-validate --tosa-infer-shapes --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --tosa-infer-shapes --test-linalg-pad-fusion --math-extend-to-supported-types --tosa-test-quant-utils --test-func-insert-result --test-func-erase-result --test-math-to-vcix | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --math-uplift-to-fma --test-func-insert-result --test-func-erase-result --test-func-insert-arg --test-linalg-transform-patterns=\"test-patterns\" --cse --linalg-specialize-generic-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-math-polynomial-approximation --test-tensor-transform-patterns=\"test-reassociative-reshape-folding\" --loop-invariant-code-motion --duplicate-function-elimination --math-uplift-to-fma --control-flow-sink --test-math-to-vcix | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize=\"test-convergence top-down=0\" --convert-elementwise-to-linalg --tosa-make-broadcastable --linalg-generalize-named-ops --duplicate-function-elimination --int-range-optimizations --convert-elementwise-to-linalg --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-pad-fusion --linalg-named-op-conversion --linalg-fuse-elementwise-ops --tosa-reduce-transposes --composite-fixed-point-pass --tosa-infer-shapes --sccp --mem2reg --fold-tensor-subset-ops --test-linalg-pad-fusion --mem2reg=\"region-simplify\" --sccp --tosa-optional-decompositions --tosa-reduce-transposes --composite-fixed-point-pass --tosa-layerwise-constant-fold --mem2reg=\"region-simplify\" --test-linalg-elementwise-fusion-patterns=\"fuse-generic-ops-control\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-specialize-generic-ops --normalize-memrefs --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-emulate-narrow-int --sccp --composite-fixed-point-pass --linalg-specialize-generic-ops --test-func-insert-result --loop-invariant-subset-hoisting --linalg-generalize-named-ops --test-func-insert-result --linalg-generalize-named-ops --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-expansion\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --normalize-memrefs --composite-fixed-point-pass --symbol-dce --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --sroa --topological-sort --scf-parallel-loop-specialization --scf-parallel-loop-tiling=\"parallel-loop-tile-sizes=1,4 no-min-max-bounds=true\" --sroa --arith-emulate-wide-int=\"widest-int-supported=32\" --arith-emulate-wide-int --arith-unsigned-when-equivalent --arith-int-range-narrowing --test-memref-dependence-check --control-flow-sink --duplicate-function-elimination --scf-for-loop-canonicalization --test-function-pass --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize=\"test-convergence\" --inline --arith-emulate-wide-int --arith-unsigned-when-equivalent --test-func-set-type --resolve-ranked-shaped-type-result-dims --remove-dead-values --memref-expand | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg=\"region-simplify\" --arith-emulate-unsupported-floats --expand-realloc --arith-expand --test-memref-bound-check --symbol-dce --test-func-insert-result --test-func-erase-result --expand-realloc=\"emit-deallocs\" --arith-expand=\"include-bf16\" --fold-memref-alias-ops --test-func-set-type --test-func-erase-result --sroa --arith-unsigned-when-equivalent --inline --int-range-optimizations --expand-strided-metadata --test-func-insert-result --arith-emulate-wide-int=\"widest-int-supported=32\" --resolve-shaped-type-result-dims --resolve-shaped-type-result-dims --cse --mem2reg=\"region-simplify\" --mem2reg=\"region-simplify\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --test-function-pass --composite-fixed-point-pass --topological-sort --sccp --test-memref-bound-check --memref-emulate-wide-int=\"widest-int-supported=32\" --expand-realloc --remove-dead-values --canonicalize=\"test-convergence top-down=0\" --duplicate-function-elimination --canonicalize=\"test-convergence top-down=0\" --cse --resolve-shaped-type-result-dims --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-result --inline --loop-invariant-code-motion --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975]]]",
        "test_line": "[[[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v5/tosa.4ac9573ef1c70cd3.mlir --topological-sort --test-function-pass --loop-invariant-subset-hoisting --topological-sort --test-func-erase-arg --loop-invariant-code-motion --test-func-insert-result --test-tensor-copy-insertion --test-function-pass --tosa-make-broadcastable --sccp --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --duplicate-function-elimination --mem2reg=\"region-simplify\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-arg --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --tosa-optional-decompositions --loop-invariant-code-motion --control-flow-sink --test-linalg-pad-fusion --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --tosa-optional-decompositions --test-linalg-rank-reduce-contraction-ops --math-extend-to-supported-types --arith-expand=\"include-bf16\" --test-linalg-drop-unit-dims --convert-elementwise-to-linalg --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --fold-tensor-subset-ops --tosa-test-quant-utils --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --test-func-insert-arg --linalg-specialize-generic-ops --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-collapsing-control\" --test-linalg-transform-patterns=\"test-swap-extract-slice-with-fill-pattern\" --convert-elementwise-to-linalg --linalg-inline-scalar-operands --linalg-inline-scalar-operands --test-math-to-vcix --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-math-algebraic-simplification --test-function-pass --arith-emulate-wide-int --tosa-test-quant-utils --test-tensor-transform-patterns=\"use-foreach\" --test-math-polynomial-approximation --test-expand-math --linalg-generalize-named-ops --duplicate-function-elimination --linalg-specialize-generic-ops --linalg-inline-scalar-operands --math-extend-to-supported-types --loop-invariant-code-motion --inline --test-func-erase-arg --topological-sort --test-function-pass --topological-sort --linalg-named-op-conversion --test-expand-math --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-collapsing-control\" --loop-invariant-code-motion --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-arith-emulate-wide-int=\"widest-int-supported=8\" --sccp --scf-for-loop-specialization --scf-for-to-while --scf-for-loop-canonicalization --scf-forall-to-for --canonicalize=\"test-convergence\" --scf-for-loop-peeling --cse --test-func-erase-result --fold-memref-alias-ops --test-func-insert-arg --test-func-insert-result --arith-unsigned-when-equivalent --test-scf-pipelining=\"no-epilogue-peeling\" --arith-expand --scf-forall-to-for --test-func-insert-result --test-func-insert-arg --sccp --scf-for-loop-specialization --test-memref-bound-check --test-func-set-type --remove-dead-values | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --expand-realloc | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-result --topological-sort --test-func-erase-arg --canonicalize=\"test-convergence top-down=0\" --cse --remove-dead-values --sccp --test-function-pass --cse --test-func-erase-arg --composite-fixed-point-pass --test-func-set-type --symbol-dce --duplicate-function-elimination --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --test-func-insert-arg --composite-fixed-point-pass --test-func-insert-arg --mem2reg=\"region-simplify\" --cse --test-func-erase-arg --inline --topological-sort --loop-invariant-code-motion --test-func-insert-arg --test-func-set-type --duplicate-function-elimination --canonicalize=\"test-convergence top-down=0\" --control-flow-sink --test-func-erase-arg --inline --canonicalize=\"test-convergence top-down=0\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975]]]",
        "test_line": "[[[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v5/tosa.4ac9573ef1c70cd3.mlir --topological-sort --duplicate-function-elimination --test-tensor-copy-insertion=\"must-infer-memory-space\" --symbol-dce --cse --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --inline --test-function-pass --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sroa --arith-emulate-wide-int --linalg-named-op-conversion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-expansion\" --test-linalg-data-layout-propagation --topological-sort --topological-sort --math-uplift-to-fma --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --test-tensor-transform-patterns=\"test-fold-consecutive-insert-extract-slice\" --test-func-insert-result --topological-sort --linalg-generalize-named-ops --test-math-polynomial-approximation=\"enable-avx2\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse --linalg-inline-scalar-operands --test-func-erase-arg --test-func-erase-arg --resolve-shaped-type-result-dims --topological-sort --sccp --memref-expand --fold-memref-alias-ops --test-linalg-pad-fusion --fold-memref-alias-ops --normalize-memrefs --test-memref-dependence-check --resolve-shaped-type-result-dims --test-func-set-type --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --test-linalg-drop-unit-dims --linalg-fuse-elementwise-ops --cse --test-func-insert-result --test-linalg-data-layout-propagation --control-flow-sink --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --loop-invariant-code-motion --cse --canonicalize=\"test-convergence top-down=0\" --linalg-fuse-elementwise-ops --linalg-fuse-elementwise-ops --linalg-specialize-generic-ops --composite-fixed-point-pass --test-func-insert-arg --linalg-inline-scalar-operands --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --fold-memref-alias-ops --loop-invariant-code-motion --duplicate-function-elimination --mem2reg --test-func-insert-result --arith-emulate-wide-int=\"widest-int-supported=32\" --arith-unsigned-when-equivalent --duplicate-function-elimination --arith-expand --duplicate-function-elimination --arith-expand --test-memref-dependence-check --fold-memref-alias-ops --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --test-func-insert-result --test-memref-bound-check --normalize-memrefs --test-func-set-type --test-function-pass --normalize-memrefs --topological-sort --loop-invariant-subset-hoisting --cse --topological-sort --sroa --test-memref-bound-check | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --sccp --loop-invariant-code-motion --test-func-insert-result --test-func-insert-arg --test-func-insert-arg --test-func-insert-result --test-func-insert-result --loop-invariant-subset-hoisting --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975]]]",
        "test_line": "[[[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v5/tosa.4ac9573ef1c70cd3.mlir --topological-sort --test-tensor-copy-insertion --inline --sroa --test-func-insert-arg --test-func-erase-result --test-func-insert-arg --inline --sroa --fold-tensor-subset-ops --loop-invariant-code-motion --tosa-make-broadcastable --inline --tosa-optional-decompositions --loop-invariant-code-motion --remove-dead-values | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-arg --test-linalg-elementwise-fusion-patterns=\"collapse-dimensions-control=2,3\" --cse --sroa --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --arith-expand --loop-invariant-code-motion --test-function-pass --math-uplift-to-fma --linalg-inline-scalar-operands --test-math-to-vcix --convert-elementwise-to-linalg --control-flow-sink --loop-invariant-code-motion --inline --linalg-inline-scalar-operands --loop-invariant-subset-hoisting --cse --test-linalg-drop-unit-dims --loop-invariant-code-motion --tosa-optional-decompositions --convert-elementwise-to-linalg --control-flow-sink --test-math-polynomial-approximation=\"enable-avx2\" --test-tensor-copy-insertion --test-function-pass --inline --test-math-to-vcix --test-func-insert-result --arith-int-range-narrowing --arith-expand=\"include-bf16\" --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-result --loop-invariant-code-motion --test-linalg-pad-fusion --memref-expand --resolve-ranked-shaped-type-result-dims --memref-emulate-wide-int=\"widest-int-supported=32\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --test-func-erase-arg --test-memref-bound-check --scf-for-loop-specialization --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-memref-dependence-check --test-scf-for-utils=\"test-replace-with-new-yields\" --resolve-ranked-shaped-type-result-dims --memref-emulate-wide-int --memref-emulate-wide-int=\"widest-int-supported=32\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-scf-while-op-builder --test-func-set-type --test-scf-if-utils --inline --test-scf-pipelining --loop-invariant-subset-hoisting --scf-parallel-loop-tiling=\"parallel-loop-tile-sizes=1,4 no-min-max-bounds=true\" --test-scf-if-utils --cse --test-scf-pipelining=\"annotate\" --mem2reg=\"region-simplify\" --loop-invariant-code-motion --mem2reg=\"region-simplify\" --topological-sort --test-scf-uplift-while-to-for --symbol-dce --test-function-pass --inline --remove-dead-values --scf-for-to-while --scf-parallel-loop-fusion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-scf-while-op-builder --test-func-insert-result --loop-invariant-subset-hoisting --symbol-dce --test-func-insert-result --remove-dead-values --inline --composite-fixed-point-pass --scf-for-loop-specialization --scf-parallel-loop-tiling --scf-for-loop-canonicalization --scf-for-loop-specialization --test-func-set-type --scf-forall-to-for --remove-dead-values --test-func-erase-result --control-flow-sink --scf-forall-to-for --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sroa --cse --loop-invariant-subset-hoisting --sroa --sroa --arith-unsigned-when-equivalent --test-func-erase-result --control-flow-sink --composite-fixed-point-pass --cse --composite-fixed-point-pass --test-func-set-type --arith-expand=\"include-bf16\" --arith-expand=\"include-bf16\" --mem2reg --control-flow-sink --topological-sort --canonicalize=\"test-convergence top-down=0\" --arith-emulate-unsupported-floats | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975]]]",
        "test_line": "[[[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v5/tosa.4ac9573ef1c70cd3.mlir --tosa-layerwise-constant-fold --test-func-erase-arg --tosa-optional-decompositions --sroa --test-func-set-type --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-make-broadcastable --arith-emulate-unsupported-floats --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --test-func-erase-arg --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --canonicalize | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --math-extend-to-supported-types --fold-tensor-subset-ops --math-uplift-to-fma --loop-invariant-subset-hoisting --test-func-erase-arg --loop-invariant-subset-hoisting --arith-emulate-wide-int --test-func-insert-result --linalg-generalize-named-ops --test-linalg-decompose-ops --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --topological-sort --composite-fixed-point-pass --test-linalg-elementwise-fusion-patterns=\"control-fusion-by-expansion\" --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --canonicalize=\"test-convergence top-down=0\" --test-linalg-decompose-ops --test-linalg-data-layout-propagation --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-expansion\" --test-math-polynomial-approximation=\"enable-avx2\" --convert-elementwise-to-linalg --symbol-dce --linalg-named-op-conversion --linalg-generalize-named-ops --inline --test-expand-math --composite-fixed-point-pass --test-func-erase-arg --linalg-generalize-named-ops --test-linalg-decompose-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-arg --linalg-inline-scalar-operands --linalg-generalize-named-ops --control-flow-sink --loop-invariant-subset-hoisting --test-linalg-pad-fusion --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --test-math-to-vcix --test-linalg-rank-reduce-contraction-ops --test-linalg-greedy-fusion --test-emulate-narrow-int=\"memref-load-bitwidth=8\" --arith-emulate-unsupported-floats --int-range-optimizations --test-tensor-transform-patterns=\"test-fold-constant-extract-slice\" --math-uplift-to-fma --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-expansion\" --linalg-inline-scalar-operands --symbol-dce --int-range-optimizations --linalg-specialize-generic-ops --test-linalg-greedy-fusion --linalg-generalize-named-ops --test-func-insert-arg --sccp --test-linalg-pad-fusion --test-linalg-pad-fusion --mem2reg --mem2reg --test-func-insert-arg --control-flow-sink --sccp --fold-tensor-subset-ops --linalg-fuse-elementwise-ops --loop-invariant-code-motion --test-func-erase-result --test-linalg-data-layout-propagation --control-flow-sink --arith-unsigned-when-equivalent --test-func-set-type --test-linalg-greedy-fusion --mem2reg=\"region-simplify\" --arith-int-range-narrowing --mem2reg --math-uplift-to-fma --linalg-specialize-generic-ops --test-linalg-greedy-fusion --test-func-insert-arg --arith-unsigned-when-equivalent --fold-tensor-subset-ops --math-extend-to-supported-types --math-uplift-to-fma | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-arg --test-func-set-type --topological-sort --test-linalg-rank-reduce-contraction-ops --linalg-specialize-generic-ops --test-linalg-transform-patterns=\"test-swap-extract-slice-with-fill-pattern\" --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-collapsing\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-unsigned-when-equivalent --arith-unsigned-when-equivalent --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --inline --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-func-erase-arg --cse --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --symbol-dce --test-func-insert-arg --symbol-dce --mem2reg=\"region-simplify\" --test-function-pass --inline --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975],\n[0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975,    0.973975]]]",
        "test_line": "[[[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972],\n[0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972,    0.973972]]]"
    }
}
