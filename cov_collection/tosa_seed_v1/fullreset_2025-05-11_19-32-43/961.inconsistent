{
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v1/tosa.2e0c5cd95feab2bc.mlir -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sroa --sccp --canonicalize | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-expand=\"include-bf16\" --canonicalize=\"test-convergence top-down=0\" --test-func-insert-arg --cse --tosa-test-quant-utils --duplicate-function-elimination --loop-invariant-code-motion --composite-fixed-point-pass --sccp --tosa-optional-decompositions --loop-invariant-code-motion --tosa-reduce-transposes --test-func-insert-arg --symbol-dce --cse --tosa-reduce-transposes --tosa-layerwise-constant-fold --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --sroa --test-func-insert-arg --composite-fixed-point-pass --composite-fixed-point-pass --sccp --tosa-make-broadcastable --test-emulate-narrow-int=\"memref-load-bitwidth=8\" --test-emulate-narrow-int --topological-sort --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --composite-fixed-point-pass --mem2reg --sccp --cse --symbol-dce --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --test-func-insert-result --linalg-inline-scalar-operands --arith-emulate-unsupported-floats --test-func-set-type --math-uplift-to-fma --int-range-optimizations --test-func-insert-arg --math-extend-to-supported-types --test-func-insert-arg --arith-expand --loop-invariant-subset-hoisting --arith-emulate-unsupported-floats --test-math-to-vcix --loop-invariant-subset-hoisting --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --arith-unsigned-when-equivalent --cse --topological-sort --test-linalg-elementwise-fusion-patterns --symbol-dce --test-linalg-greedy-fusion --int-range-optimizations --symbol-dce --test-math-polynomial-approximation --test-math-algebraic-simplification | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-result --loop-invariant-code-motion --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-func-set-type --test-loop-fusion=\"test-loop-fusion-transformation\" --int-range-optimizations | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-forall-to-for --sccp --symbol-dce --scf-parallel-loop-fusion --arith-emulate-wide-int --test-function-pass --inline --scf-parallel-loop-tiling=\"parallel-loop-tile-sizes=1,4 no-min-max-bounds=true\" --test-func-erase-arg --test-scf-uplift-while-to-for | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-wide-int --arith-int-range-narrowing --arith-int-range-narrowing --test-arith-emulate-wide-int=\"widest-int-supported=8\" --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --mem2reg=\"region-simplify\" --sccp --test-func-erase-result --sccp --arith-expand=\"include-bf16\" --test-func-insert-arg --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sroa --sccp --test-func-erase-arg --test-func-insert-arg --duplicate-function-elimination --symbol-dce --test-func-erase-result --topological-sort --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --remove-dead-values --inline --mem2reg --topological-sort --test-func-erase-arg --test-func-set-type --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[1,    1],\n[1,    1],\n[1,    1],\n[1,    1],\n[1,    1],\n[1,    1],\n[1,    1],\n[1,    1],\n[1,    1],\n[1,    1],\n[1,    1],\n[1,    1],\n[1,    1],\n[1,    1],\n[1,    1],\n[1,    1],\n[1,    1],\n[1,    1],\n[1,    1],\n[1,    1],\n[1,    1],\n[1,    1],\n[1,    1],\n[1,    1],\n[1,    1],\n[1,    1],\n[1,    1],\n[1,    1],\n[1,    1]]]",
        "test_line": "[[[-0.9957,    -0.9957],\n[-0.9957,    -0.9957],\n[-0.9957,    -0.9957],\n[-0.9957,    -0.9957],\n[-0.9957,    -0.9957],\n[-0.9957,    -0.9957],\n[-0.9957,    -0.9957],\n[-0.9957,    -0.9957],\n[-0.9957,    -0.9957],\n[-0.9957,    -0.9957],\n[-0.9957,    -0.9957],\n[-0.9957,    -0.9957],\n[-0.9957,    -0.9957],\n[-0.9957,    -0.9957],\n[-0.9957,    -0.9957],\n[-0.9957,    -0.9957],\n[-0.9957,    -0.9957],\n[-0.9957,    -0.9957],\n[-0.9957,    -0.9957],\n[-0.9957,    -0.9957],\n[-0.9957,    -0.9957],\n[-0.9957,    -0.9957],\n[-0.9957,    -0.9957],\n[-0.9957,    -0.9957],\n[-0.9957,    -0.9957],\n[-0.9957,    -0.9957],\n[-0.9957,    -0.9957],\n[-0.9957,    -0.9957],\n[-0.9957,    -0.9957]]]"
    }
}
