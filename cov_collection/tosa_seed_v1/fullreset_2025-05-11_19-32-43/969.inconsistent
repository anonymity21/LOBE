{
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v1/tosa.6e1c79e8d8810b55.mlir --sccp --canonicalize --tosa-test-quant-utils --tosa-test-quant-utils | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --composite-fixed-point-pass --test-scf-while-op-builder --tosa-reduce-transposes --scf-for-loop-specialization --loop-invariant-code-motion --remove-dead-values --sroa --test-function-pass --scf-for-to-while --mem2reg --scf-for-loop-canonicalization --test-scf-pipelining=\"annotate\" --test-scf-uplift-while-to-for --test-function-pass --sccp --sccp --scf-parallel-loop-specialization --loop-invariant-subset-hoisting --scf-for-loop-peeling --scf-parallel-loop-tiling=\"parallel-loop-tile-sizes=1,4 no-min-max-bounds=true\" --scf-for-to-while --sccp --scf-for-loop-range-folding --test-func-insert-result --remove-dead-values --tosa-layerwise-constant-fold --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --loop-invariant-code-motion --test-func-erase-arg --control-flow-sink --test-scf-for-utils=\"test-replace-with-new-yields\" --test-func-erase-arg --test-func-erase-arg --loop-invariant-code-motion --duplicate-function-elimination --test-func-insert-result --scf-for-to-while --tosa-reduce-transposes --scf-for-loop-range-folding --loop-invariant-code-motion --canonicalize=\"test-convergence\" --test-scf-pipelining | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --remove-dead-values --tosa-test-quant-utils --sroa --test-func-set-type --cse --canonicalize --test-func-set-type --test-func-erase-arg --tosa-reduce-transposes --loop-invariant-code-motion --duplicate-function-elimination --tosa-make-broadcastable --tosa-infer-shapes | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --arith-int-range-narrowing --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --tosa-reduce-transposes --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --linalg-inline-scalar-operands --inline --arith-emulate-unsupported-floats --arith-unsigned-when-equivalent --test-linalg-decompose-ops --arith-int-range-narrowing --linalg-named-op-conversion --test-linalg-data-layout-propagation --test-linalg-greedy-fusion --test-linalg-elementwise-fusion-patterns=\"collapse-dimensions-control=2,3\" --test-linalg-pad-fusion --loop-invariant-subset-hoisting --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-func-erase-arg --loop-invariant-subset-hoisting --sroa --sccp --test-func-erase-arg --mem2reg --linalg-generalize-named-ops --test-linalg-drop-unit-dims --arith-emulate-wide-int=\"widest-int-supported=32\" --cse --loop-invariant-subset-hoisting --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-arg --linalg-fold-unit-extent-dims | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --resolve-shaped-type-result-dims --test-memref-dependence-check --cse --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-arg --test-func-insert-arg --scf-for-loop-specialization --scf-parallel-loop-tiling=\"parallel-loop-tile-sizes=1,4 no-min-max-bounds=true\" --arith-emulate-wide-int --cse --symbol-dce --symbol-dce --scf-parallel-loop-fusion --arith-expand=\"include-bf16\" --composite-fixed-point-pass --test-func-set-type --scf-for-to-while --loop-invariant-code-motion --test-arith-emulate-wide-int --inline --duplicate-function-elimination --test-func-erase-arg --composite-fixed-point-pass --cse --test-func-set-type --scf-for-loop-canonicalization --test-scf-for-utils=\"test-replace-with-new-yields\" --duplicate-function-elimination --test-arith-emulate-wide-int=\"widest-int-supported=8\" --scf-parallel-loop-tiling=\"parallel-loop-tile-sizes=1,4 no-min-max-bounds=true\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize=\"test-convergence top-down=0\" --sroa --arith-emulate-wide-int --sroa --sccp --test-function-pass --sccp --mem2reg=\"region-simplify\" --test-function-pass --inline --loop-invariant-subset-hoisting --arith-unsigned-when-equivalent --loop-invariant-subset-hoisting --test-func-insert-result --test-func-insert-arg --test-func-erase-result --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --remove-dead-values --inline --test-func-insert-arg --topological-sort --mem2reg=\"region-simplify\" --test-func-insert-arg --mem2reg --loop-invariant-code-motion --topological-sort --test-function-pass --test-func-erase-result --duplicate-function-elimination --test-function-pass --composite-fixed-point-pass --composite-fixed-point-pass --test-func-insert-result --duplicate-function-elimination --test-function-pass --canonicalize=\"test-convergence top-down=0\" --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-result --sroa --loop-invariant-subset-hoisting --symbol-dce --sccp --test-func-insert-arg --sroa --topological-sort --remove-dead-values --canonicalize=\"test-convergence\" --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0]]]",
        "test_line": "[[[0,    0,    0,    0,    -1032311968,    21908,    65,    0,    -1032278576],\n[0,    0,    0,    0,    0,    32,    0,    -1032278544,    21908],\n[0,    0,    0,    0,    737,    0,    -1032240096,    21908,    -1032904416],\n[0,    0,    0,    0,    21908,    0,    0,    689,    0],\n[0,    0,    0,    0,    -42,    -1,    2,    0,    -4096],\n[0,    0,    0,    0,    0,    64,    0,    -1033365696,    21908],\n[0,    0,    0,    0,    2,    0,    10,    0,    18],\n[0,    0,    0,    0,    0,    -1033365552,    21908,    -701002784,    32666],\n[0,    0,    0,    0,    10,    0,    -4096,    -1,    -4096],\n[0,    0,    0,    0,    21908,    -701002784,    32666,    -26,    -1],\n[0,    0,    0,    0,    -4096,    -1,    -4096,    -1,    433],\n[0,    0,    0,    0,    32666,    -26,    -1,    6,    0],\n[0,    0,    0,    0,    -4096,    -1,    369,    0,    -1033365552],\n[0,    0,    0,    0,    -1,    14,    0,    18,    0],\n[0,    0,    0,    0,    305,    0,    -1033365552,    21908,    -701002784],\n[0,    0,    0,    0,    0,    18,    0,    -4096,    -1],\n[0,    0,    0,    0,    -1033365552,    21908,    -701002784,    32666,    -18],\n[0,    0,    0,    0,    0,    -4096,    -1,    -4096,    -1],\n[0,    0,    0,    0,    -1032241152,    21908,    -10,    -1,    22]]]"
    }
}
