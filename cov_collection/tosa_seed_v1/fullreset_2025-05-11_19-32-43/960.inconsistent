{
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v1/tosa.4f9adb6c2f49bb73.mlir -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --tosa-reduce-transposes --test-function-pass --test-func-insert-arg --test-func-erase-result --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --fold-tensor-subset-ops --loop-invariant-code-motion --test-func-set-type --test-arith-emulate-wide-int=\"widest-int-supported=8\" --mem2reg --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-func-erase-result --tosa-layerwise-constant-fold --topological-sort --test-func-insert-arg --tosa-test-quant-utils --remove-dead-values --sccp --topological-sort --duplicate-function-elimination --fold-tensor-subset-ops --sroa --arith-unsigned-when-equivalent --arith-unsigned-when-equivalent --test-arith-emulate-wide-int=\"widest-int-supported=8\" --arith-expand=\"include-bf16\" --topological-sort --arith-unsigned-when-equivalent --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-math-polynomial-approximation --arith-expand=\"include-bf16\" --canonicalize=\"test-convergence\" --test-func-set-type --test-expand-math --arith-expand --sccp --test-linalg-pad-fusion --linalg-specialize-generic-ops --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --topological-sort --test-linalg-data-layout-propagation --control-flow-sink --test-func-insert-arg --test-func-insert-arg --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-collapsing-control\" --loop-invariant-subset-hoisting --test-math-to-vcix --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --loop-invariant-subset-hoisting --linalg-generalize-named-ops --test-tensor-transform-patterns --symbol-dce --test-func-set-type --int-range-optimizations --int-range-optimizations --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --math-extend-to-supported-types --test-func-erase-result --test-linalg-rank-reduce-contraction-ops --linalg-fuse-elementwise-ops --test-linalg-transform-patterns=\"test-patterns\" --sroa --topological-sort --linalg-inline-scalar-operands --topological-sort --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse --test-func-erase-result --test-decompose-affine-ops --affine-expand-index-ops-as-affine --affine-scalrep --test-affine-loop-unswitch | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-unsupported-floats --arith-expand --arith-expand --symbol-dce --remove-dead-values | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sroa --loop-invariant-code-motion --symbol-dce --composite-fixed-point-pass --duplicate-function-elimination --remove-dead-values --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --topological-sort --inline --sroa --test-func-erase-result --inline --test-func-erase-arg --canonicalize=\"test-convergence top-down=0\" --topological-sort --loop-invariant-code-motion --test-func-set-type --cse --mem2reg=\"region-simplify\" --topological-sort --canonicalize --sroa --sccp --control-flow-sink --test-function-pass --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0]]]",
        "test_line": "[[[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v1/tosa.4f9adb6c2f49bb73.mlir -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --mem2reg=\"region-simplify\" --test-scf-while-op-builder --tosa-reduce-transposes --remove-dead-values --test-func-set-type --loop-invariant-subset-hoisting --test-scf-uplift-while-to-for --scf-for-loop-specialization --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --inline --tosa-make-broadcastable --remove-dead-values --tosa-reduce-transposes --test-func-insert-result --test-function-pass --test-function-pass --test-func-insert-arg --test-function-pass --sroa --sroa --tosa-reduce-transposes --tosa-test-quant-utils --symbol-dce --test-tensor-transform-patterns=\"test-drop-redundant-insert-slice-rank-expansion\" --loop-invariant-code-motion --fold-tensor-subset-ops --tosa-optional-decompositions | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-make-broadcastable --topological-sort --cse --loop-invariant-code-motion --tosa-infer-shapes --arith-expand=\"include-bf16\" --int-range-optimizations --arith-unsigned-when-equivalent --arith-expand --tosa-validate --test-func-insert-arg --arith-expand --fold-tensor-subset-ops --fold-tensor-subset-ops --sccp --arith-emulate-wide-int=\"widest-int-supported=32\" --canonicalize --sccp --remove-dead-values | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --mem2reg=\"region-simplify\" --inline --test-linalg-elementwise-fusion-patterns --test-linalg-pad-fusion --convert-elementwise-to-linalg --inline --duplicate-function-elimination --test-math-to-vcix --topological-sort --arith-int-range-narrowing --fold-tensor-subset-ops --math-extend-to-supported-types --int-range-optimizations --test-math-polynomial-approximation=\"enable-avx2\" --arith-int-range-narrowing --test-linalg-decompose-ops --linalg-fold-unit-extent-dims --linalg-generalize-named-ops --test-func-insert-arg --test-func-insert-result --linalg-inline-scalar-operands --duplicate-function-elimination --loop-invariant-subset-hoisting --test-linalg-drop-unit-dims --math-uplift-to-fma --test-func-insert-result --test-expand-math --test-func-insert-result --math-uplift-to-fma | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --test-func-insert-result --linalg-specialize-generic-ops --topological-sort --control-flow-sink --test-linalg-pad-fusion --test-linalg-elementwise-fusion-patterns=\"control-fusion-by-expansion\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-arg --loop-invariant-subset-hoisting --test-func-insert-result --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0]]]",
        "test_line": "[[[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v1/tosa.4f9adb6c2f49bb73.mlir --test-func-insert-arg --symbol-dce --tosa-infer-shapes --test-func-insert-result --sroa --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --cse --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-result --test-func-insert-arg --duplicate-function-elimination --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --test-func-insert-result --test-math-polynomial-approximation=\"enable-avx2\" --arith-unsigned-when-equivalent --test-func-insert-result --cse --test-func-insert-result --composite-fixed-point-pass --linalg-inline-scalar-operands --duplicate-function-elimination --topological-sort --test-expand-math --test-function-pass --linalg-fuse-elementwise-ops --test-linalg-drop-unit-dims --control-flow-sink --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-expansion\" --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-expansion\" --fold-tensor-subset-ops --fold-tensor-subset-ops --math-extend-to-supported-types --convert-elementwise-to-linalg --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --topological-sort --test-memref-dependence-check --loop-invariant-code-motion --test-linalg-rank-reduce-contraction-ops --linalg-inline-scalar-operands --test-linalg-transform-patterns=\"test-erase-unnecessary-inputs\" --cse --sroa --duplicate-function-elimination --symbol-dce --test-func-insert-result --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-collapsing\" --test-linalg-elementwise-fusion-patterns=\"fuse-generic-ops-control\" --sccp --test-func-set-type --convert-elementwise-to-linalg --fold-memref-alias-ops --duplicate-function-elimination --control-flow-sink --test-linalg-data-layout-propagation --expand-realloc --test-linalg-data-layout-propagation --sroa --test-memref-dependence-check --sccp --test-function-pass --test-linalg-greedy-fusion --test-func-erase-result --composite-fixed-point-pass --linalg-named-op-conversion --normalize-memrefs --linalg-inline-scalar-operands | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --scf-for-loop-peeling=\"peel-front\" --control-flow-sink --normalize-memrefs --expand-strided-metadata --memref-emulate-wide-int --test-arith-emulate-wide-int --loop-invariant-code-motion --scf-forall-to-for --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-memref-bound-check --memref-expand --canonicalize=\"test-convergence top-down=0\" --test-scf-for-utils=\"test-replace-with-new-yields\" --scf-for-to-while --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --scf-for-to-while --scf-for-loop-peeling=\"skip-partial\" --inline --scf-for-loop-peeling --scf-parallel-loop-tiling=\"parallel-loop-tile-sizes=1,4 no-min-max-bounds=true\" --test-func-insert-arg --canonicalize=\"test-convergence\" --topological-sort --canonicalize --test-func-set-type --scf-for-loop-peeling --int-range-optimizations | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --normalize-memrefs --remove-dead-values --cse --resolve-ranked-shaped-type-result-dims --fold-memref-alias-ops --memref-expand --test-func-insert-result --topological-sort --normalize-memrefs --sccp --mem2reg --inline --expand-realloc=\"emit-deallocs\" --memref-expand | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --expand-realloc --sccp --test-memref-dependence-check --memref-expand --fold-memref-alias-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize=\"test-convergence\" --sroa --control-flow-sink --canonicalize=\"test-convergence\" --remove-dead-values --test-func-insert-result --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0]]]",
        "test_line": "[[[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07]]]"
    }
}
