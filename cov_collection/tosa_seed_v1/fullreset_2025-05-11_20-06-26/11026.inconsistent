{
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v1/tosa.4f9adb6c2f49bb73.mlir --sccp --loop-invariant-code-motion --test-func-erase-arg --test-function-pass --tosa-optional-decompositions --sroa --tosa-test-quant-utils --tosa-validate --inline --mem2reg=\"region-simplify\" --canonicalize=\"test-convergence\" --sccp --inline --cse --test-func-erase-result --test-function-pass --cse --test-func-insert-result --duplicate-function-elimination --duplicate-function-elimination --mem2reg=\"region-simplify\" --tosa-make-broadcastable --tosa-layerwise-constant-fold --test-func-erase-arg --tosa-test-quant-utils --test-function-pass --sroa --test-func-set-type --sccp --tosa-infer-shapes | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --math-extend-to-supported-types --test-linalg-data-layout-propagation --scf-parallel-loop-specialization --test-func-set-type --loop-invariant-code-motion --test-linalg-drop-unit-dims --inline --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --tosa-test-quant-utils --test-linalg-transform-patterns=\"test-swap-subtensor-padtensor\" --control-flow-sink --arith-expand --tosa-reduce-transposes --test-linalg-rank-reduce-contraction-ops --test-tensor-transform-patterns=\"use-foreach\" --convert-elementwise-to-linalg --test-scf-if-utils --duplicate-function-elimination --tosa-infer-shapes --duplicate-function-elimination --math-extend-to-supported-types --convert-elementwise-to-linalg --int-range-optimizations --test-math-polynomial-approximation=\"enable-avx2\" --test-expand-math --test-func-insert-arg --canonicalize=\"test-convergence top-down=0\" --test-linalg-decompose-ops --convert-elementwise-to-linalg --test-scf-uplift-while-to-for --composite-fixed-point-pass --scf-forall-to-for --linalg-inline-scalar-operands --test-scf-if-utils --canonicalize=\"test-convergence top-down=0\" --inline --inline --scf-for-loop-specialization --test-expand-math --math-uplift-to-fma --test-linalg-data-layout-propagation --test-math-to-vcix --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --linalg-fuse-elementwise-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg=\"region-simplify\" --test-memref-dependence-check --duplicate-function-elimination --topological-sort --memref-expand --test-linalg-greedy-fusion --test-linalg-pad-fusion --duplicate-function-elimination --resolve-shaped-type-result-dims --memref-expand --linalg-specialize-generic-ops --test-memref-bound-check --topological-sort --linalg-named-op-conversion --test-linalg-elementwise-fusion-patterns=\"collapse-dimensions-control=2,3\" --test-linalg-pad-fusion --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --linalg-specialize-generic-ops --sroa --loop-invariant-code-motion --composite-fixed-point-pass --test-linalg-rank-reduce-contraction-ops --test-memref-bound-check --linalg-specialize-generic-ops --test-func-erase-result --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --convert-elementwise-to-linalg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --control-flow-sink --duplicate-function-elimination --loop-invariant-code-motion --test-func-set-type --linalg-named-op-conversion --duplicate-function-elimination --duplicate-function-elimination --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --topological-sort --resolve-ranked-shaped-type-result-dims --memref-expand --fold-memref-alias-ops --control-flow-sink --memref-emulate-wide-int --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-code-motion --mem2reg=\"region-simplify\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse --sccp --sccp --canonicalize=\"test-convergence\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0]]]",
        "test_line": "[[[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v1/tosa.4f9adb6c2f49bb73.mlir --test-tensor-copy-insertion=\"must-infer-memory-space\" --test-func-erase-arg --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-forall-to-parallel --test-scf-uplift-while-to-for --duplicate-function-elimination --sroa --test-scf-if-utils --duplicate-function-elimination --canonicalize --tosa-layerwise-constant-fold --scf-for-loop-specialization --mem2reg=\"region-simplify\" --test-func-set-type --scf-for-loop-canonicalization --test-func-erase-result --scf-parallel-loop-specialization --tosa-optional-decompositions --cse --remove-dead-values --scf-for-loop-peeling=\"skip-partial\" --scf-for-loop-canonicalization --scf-for-to-while --test-function-pass --topological-sort --symbol-dce --tosa-make-broadcastable --sccp --sccp --mem2reg --tosa-test-quant-utils | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-math-polynomial-approximation=\"enable-avx2\" --tosa-infer-shapes --tosa-infer-shapes --control-flow-sink --duplicate-function-elimination --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --test-linalg-transform-patterns=\"test-patterns\" --test-func-erase-result --test-math-algebraic-simplification --composite-fixed-point-pass --test-expand-math --scf-parallel-loop-tiling=\"parallel-loop-tile-sizes=1,4 no-min-max-bounds=true\" --test-func-erase-result --convert-elementwise-to-linalg --scf-for-loop-specialization --duplicate-function-elimination --math-uplift-to-fma --linalg-named-op-conversion --loop-invariant-code-motion --test-linalg-data-layout-propagation --test-scf-uplift-while-to-for --loop-invariant-subset-hoisting --tosa-infer-shapes --math-uplift-to-fma --test-tensor-transform-patterns=\"test-drop-redundant-insert-slice-rank-expansion\" --test-math-to-vcix --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --convert-elementwise-to-linalg --test-linalg-drop-unit-dims --test-linalg-elementwise-fusion-patterns=\"control-fusion-by-expansion\" --linalg-inline-scalar-operands --test-function-pass --linalg-specialize-generic-ops --test-linalg-elementwise-fusion-patterns=\"fuse-generic-ops-control\" --test-linalg-data-layout-propagation --test-linalg-greedy-fusion --duplicate-function-elimination --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-expansion\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --expand-strided-metadata --fold-memref-alias-ops --mem2reg=\"region-simplify\" --inline --test-memref-bound-check --test-linalg-pad-fusion --test-linalg-drop-unit-dims --test-func-erase-arg --test-linalg-transform-patterns=\"test-patterns\" --normalize-memrefs --memref-emulate-wide-int=\"widest-int-supported=32\" --loop-invariant-subset-hoisting --fold-memref-alias-ops --memref-emulate-wide-int --expand-realloc --resolve-shaped-type-result-dims --symbol-dce --resolve-shaped-type-result-dims --duplicate-function-elimination --memref-expand --linalg-named-op-conversion --linalg-named-op-conversion --test-linalg-data-layout-propagation --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-parallel-loop-tiling --normalize-memrefs --normalize-memrefs --test-scf-uplift-while-to-for --test-memref-dependence-check --test-scf-uplift-while-to-for --memref-emulate-wide-int --loop-invariant-subset-hoisting --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-unsigned-when-equivalent --test-func-insert-result --topological-sort --control-flow-sink --remove-dead-values --mem2reg --arith-unsigned-when-equivalent --test-func-erase-result --canonicalize=\"test-convergence\" --arith-unsigned-when-equivalent --control-flow-sink --arith-expand=\"include-bf16\" --loop-invariant-subset-hoisting --sccp --test-arith-emulate-wide-int=\"widest-int-supported=8\" --cse --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-arith-emulate-wide-int=\"widest-int-supported=8\" --duplicate-function-elimination --loop-invariant-subset-hoisting --control-flow-sink --loop-invariant-subset-hoisting --sccp --test-func-erase-result --sroa --arith-int-range-narrowing | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --duplicate-function-elimination --test-function-pass --cse --remove-dead-values --test-func-insert-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --loop-invariant-subset-hoisting --topological-sort --test-func-erase-arg --test-func-insert-arg --mem2reg --sroa --sccp --inline --test-func-set-type --topological-sort --remove-dead-values | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0]]]",
        "test_line": "[[[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v1/tosa.4f9adb6c2f49bb73.mlir --inline --canonicalize=\"test-convergence top-down=0\" --tosa-reduce-transposes --test-func-erase-result --duplicate-function-elimination --test-func-erase-result --canonicalize --inline --symbol-dce --symbol-dce --test-func-insert-arg --test-func-insert-result --tosa-reduce-transposes --tosa-make-broadcastable --test-func-erase-result --loop-invariant-code-motion --control-flow-sink --sccp --composite-fixed-point-pass --tosa-layerwise-constant-fold --test-tensor-transform-patterns=\"test-fold-consecutive-insert-extract-slice\" --canonicalize --control-flow-sink --test-func-insert-arg --test-func-insert-result --canonicalize --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-drop-unit-dims --test-func-erase-arg --int-range-optimizations --test-math-polynomial-approximation=\"enable-avx2\" --symbol-dce --test-linalg-pad-fusion --scf-for-loop-range-folding --scf-parallel-loop-fusion --test-math-algebraic-simplification --cse --test-scf-for-utils --arith-emulate-wide-int --test-linalg-data-layout-propagation --canonicalize=\"test-convergence\" --test-expand-math --test-scf-while-op-builder --linalg-generalize-named-ops --test-scf-if-utils | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-expand --canonicalize=\"test-convergence top-down=0\" --loop-invariant-subset-hoisting --test-linalg-transform-patterns=\"test-winograd-conv2d\" --canonicalize=\"test-convergence\" --composite-fixed-point-pass --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --sccp --arith-emulate-wide-int=\"widest-int-supported=32\" --test-math-polynomial-approximation=\"enable-avx2\" --linalg-inline-scalar-operands | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-arg --test-func-erase-arg --test-func-insert-result --linalg-fuse-elementwise-ops --test-linalg-pad-fusion --test-func-set-type --test-linalg-rank-reduce-contraction-ops --sroa --memref-expand --control-flow-sink --sccp --loop-invariant-subset-hoisting --linalg-fuse-elementwise-ops --test-linalg-data-layout-propagation --test-math-to-vcix --control-flow-sink --math-uplift-to-fma --fold-memref-alias-ops --duplicate-function-elimination --test-linalg-data-layout-propagation --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --test-linalg-drop-unit-dims --test-expand-math --test-func-erase-result --inline --loop-invariant-code-motion --symbol-dce --loop-invariant-subset-hoisting --test-linalg-pad-fusion --expand-strided-metadata --memref-expand --symbol-dce --resolve-ranked-shaped-type-result-dims --resolve-ranked-shaped-type-result-dims --linalg-generalize-named-ops --test-math-algebraic-simplification --math-uplift-to-fma --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --convert-elementwise-to-linalg --inline --mem2reg --math-extend-to-supported-types --expand-strided-metadata --expand-realloc=\"emit-deallocs\" --linalg-generalize-named-ops --test-memref-bound-check --normalize-memrefs --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-arg --test-func-set-type --scf-for-loop-specialization --control-flow-sink --scf-for-loop-specialization --scf-for-loop-specialization --sroa --inline --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --test-scf-pipelining --canonicalize --scf-parallel-loop-specialization --canonicalize --scf-for-loop-peeling=\"skip-partial\" --test-func-erase-arg --scf-forall-to-for --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --loop-invariant-code-motion --test-scf-uplift-while-to-for | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --control-flow-sink --arith-emulate-unsupported-floats --loop-invariant-code-motion --arith-emulate-wide-int=\"widest-int-supported=32\" --int-range-optimizations --inline --test-arith-emulate-wide-int=\"widest-int-supported=8\" --remove-dead-values --canonicalize=\"test-convergence\" --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --sccp --inline --test-func-insert-result --cse --arith-int-range-narrowing=\"int-bitwidths-supported=32\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --duplicate-function-elimination --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sroa --mem2reg --test-func-insert-result --cse --test-func-insert-arg --test-func-erase-arg --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize --inline --topological-sort --canonicalize=\"test-convergence\" --composite-fixed-point-pass --loop-invariant-subset-hoisting --sroa --duplicate-function-elimination --duplicate-function-elimination --topological-sort --canonicalize | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0]]]",
        "test_line": "[[[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v1/tosa.4f9adb6c2f49bb73.mlir --loop-invariant-code-motion --inline | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize --test-func-erase-arg --cse --inline --test-func-insert-result --topological-sort --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize=\"test-convergence\" --tosa-reduce-transposes --tosa-make-broadcastable --sroa --inline --tosa-optional-decompositions --composite-fixed-point-pass --tosa-reduce-transposes --canonicalize=\"test-convergence\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-named-op-conversion --topological-sort --test-func-insert-arg --scf-for-loop-specialization --sroa --inline --loop-invariant-subset-hoisting --test-func-erase-result --scf-for-loop-canonicalization --test-math-polynomial-approximation=\"enable-avx2\" --test-scf-pipelining --test-linalg-transform-patterns=\"test-swap-extract-slice-with-fill-pattern\" --test-expand-math --arith-emulate-unsupported-floats --tosa-make-broadcastable --linalg-specialize-generic-ops --test-math-polynomial-approximation --cse --test-linalg-transform-patterns=\"test-bubble-up-extract-slice-op-pattern\" --linalg-named-op-conversion --test-scf-pipelining --test-linalg-greedy-fusion --inline --test-scf-while-op-builder --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-result --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --test-tensor-copy-insertion --test-func-insert-result --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-collapsing\" --test-linalg-drop-unit-dims --test-tensor-transform-patterns=\"test-fold-constant-extract-slice\" --test-linalg-data-layout-propagation --linalg-fold-unit-extent-dims --loop-invariant-subset-hoisting --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-expansion\" --sroa --arith-emulate-wide-int --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --test-func-insert-result --inline --linalg-fold-unit-extent-dims --topological-sort --mem2reg --linalg-named-op-conversion --test-tensor-transform-patterns=\"use-foreach\" --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --loop-invariant-code-motion --sccp --composite-fixed-point-pass --int-range-optimizations --test-func-set-type --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --arith-unsigned-when-equivalent --test-linalg-pad-fusion --inline --linalg-specialize-generic-ops --arith-emulate-wide-int --composite-fixed-point-pass --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-tensor-transform-patterns=\"test-fold-consecutive-insert-extract-slice\" --test-function-pass --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-collapsing\" --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --linalg-fold-unit-extent-dims | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sroa --symbol-dce --test-func-insert-arg --sroa --linalg-generalize-named-ops --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --test-arith-emulate-wide-int --topological-sort --test-func-erase-result --linalg-specialize-generic-ops --linalg-named-op-conversion --test-arith-emulate-wide-int=\"widest-int-supported=8\" --canonicalize=\"test-convergence top-down=0\" --linalg-specialize-generic-ops --test-linalg-transform-patterns=\"test-decompose-winograd-ops\" --arith-unsigned-when-equivalent --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --sccp --sccp --test-func-erase-arg --inline --cse --test-arith-emulate-wide-int=\"widest-int-supported=8\" --cse --test-tensor-transform-patterns=\"test-rewrite-extract-slice-from-collapse-shape\" --loop-invariant-subset-hoisting --test-func-erase-result --test-linalg-data-layout-propagation --arith-int-range-narrowing --loop-invariant-subset-hoisting --test-func-erase-arg --canonicalize --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --arith-emulate-wide-int=\"widest-int-supported=32\" --sroa --symbol-dce --test-func-insert-arg --int-range-optimizations --loop-invariant-code-motion --test-arith-emulate-wide-int --test-func-insert-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --expand-strided-metadata --fold-memref-alias-ops --test-memref-bound-check --fold-memref-alias-ops --test-func-insert-result --test-function-pass --loop-invariant-code-motion --canonicalize=\"test-convergence\" --test-function-pass --memref-expand --normalize-memrefs --expand-strided-metadata --sroa --control-flow-sink --symbol-dce --expand-realloc=\"emit-deallocs\" --test-func-erase-arg --expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --test-func-erase-result --sroa | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-result --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0]]]",
        "test_line": "[[[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v1/tosa.4f9adb6c2f49bb73.mlir -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -test-math-polynomial-approximation | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-greedy-fusion --scf-forall-to-for --test-linalg-rank-reduce-contraction-ops --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --mem2reg=\"region-simplify\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --linalg-fold-unit-extent-dims --test-func-set-type --composite-fixed-point-pass --test-function-pass --test-linalg-data-layout-propagation --linalg-specialize-generic-ops --linalg-specialize-generic-ops --symbol-dce --test-func-insert-arg --linalg-inline-scalar-operands | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-expand-math --topological-sort --test-func-erase-arg --mem2reg --test-math-to-vcix --sccp --memref-expand --resolve-shaped-type-result-dims --test-linalg-decompose-ops --sccp --linalg-named-op-conversion --test-func-insert-arg --test-linalg-transform-patterns=\"test-erase-unnecessary-inputs\" --expand-strided-metadata --test-linalg-rank-reduce-contraction-ops --fold-memref-alias-ops --test-memref-bound-check --math-uplift-to-fma --expand-realloc=\"emit-deallocs\" --linalg-inline-scalar-operands --resolve-ranked-shaped-type-result-dims --resolve-ranked-shaped-type-result-dims --linalg-fold-unit-extent-dims --expand-strided-metadata --math-extend-to-supported-types --inline --test-linalg-transform-patterns=\"test-erase-unused-operands-and-results\" --memref-expand --test-math-polynomial-approximation=\"enable-avx2\" --test-linalg-rank-reduce-contraction-ops --test-memref-dependence-check --convert-elementwise-to-linalg --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --loop-invariant-code-motion --sccp --test-math-algebraic-simplification --linalg-fuse-elementwise-ops --test-linalg-data-layout-propagation --linalg-fuse-elementwise-ops --linalg-generalize-named-ops --test-math-to-vcix --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -lower-affine | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-result --loop-invariant-subset-hoisting --test-func-insert-result --test-func-set-type --control-flow-sink --test-func-set-type --duplicate-function-elimination --cse --test-memref-dependence-check --test-func-set-type --test-func-insert-arg --sccp --test-func-insert-arg --topological-sort --canonicalize=\"test-convergence top-down=0\" --normalize-memrefs --resolve-shaped-type-result-dims --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --remove-dead-values --test-function-pass --loop-invariant-code-motion --test-func-insert-result --canonicalize --loop-invariant-code-motion --composite-fixed-point-pass --topological-sort --sroa --topological-sort --mem2reg=\"region-simplify\" --canonicalize=\"test-convergence\" --topological-sort --control-flow-sink --cse --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --test-function-pass --cse --sroa --topological-sort --loop-invariant-subset-hoisting --canonicalize=\"test-convergence top-down=0\" --remove-dead-values | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0]]]",
        "test_line": "[[[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v1/tosa.4f9adb6c2f49bb73.mlir --test-func-erase-result --test-func-erase-result --symbol-dce --fold-tensor-subset-ops --test-func-insert-arg --tosa-validate --composite-fixed-point-pass --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --scf-forall-to-for --test-scf-if-utils --sccp --test-scf-if-utils --loop-invariant-subset-hoisting --control-flow-sink --test-func-set-type --tosa-reduce-transposes --control-flow-sink --test-function-pass --tosa-reduce-transposes --test-func-erase-arg --scf-parallel-loop-specialization --scf-for-loop-specialization --tosa-reduce-transposes --cse --fold-tensor-subset-ops --test-scf-if-utils --test-func-set-type --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --tosa-optional-decompositions --loop-invariant-subset-hoisting --sccp --scf-forall-to-parallel --test-scf-pipelining=\"no-epilogue-peeling\" --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-drop-unit-dims --linalg-inline-scalar-operands --fold-tensor-subset-ops --test-math-polynomial-approximation=\"enable-avx2\" --arith-expand=\"include-bf16\" --loop-invariant-subset-hoisting --test-expand-math --linalg-named-op-conversion --topological-sort --test-linalg-data-layout-propagation --linalg-specialize-generic-ops --mem2reg --test-linalg-drop-unit-dims --duplicate-function-elimination --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-linalg-greedy-fusion --fold-tensor-subset-ops --test-math-polynomial-approximation | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --tosa-optional-decompositions --math-uplift-to-fma --int-range-optimizations | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-result --canonicalize=\"test-convergence\" --int-range-optimizations | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --test-func-erase-result --control-flow-sink --sroa --test-linalg-data-layout-propagation --convert-elementwise-to-linalg --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --expand-strided-metadata --mem2reg --test-memref-bound-check --symbol-dce --memref-expand --memref-expand --resolve-shaped-type-result-dims --composite-fixed-point-pass --sccp --cse --remove-dead-values | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sroa --loop-invariant-subset-hoisting --sccp | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0]]]",
        "test_line": "[[[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v1/tosa.4f9adb6c2f49bb73.mlir --tosa-optional-decompositions --tosa-infer-shapes --test-function-pass --tosa-optional-decompositions --tosa-test-quant-utils | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --cse --control-flow-sink --symbol-dce --tosa-test-quant-utils --loop-invariant-code-motion --topological-sort --control-flow-sink --duplicate-function-elimination --test-function-pass --composite-fixed-point-pass --duplicate-function-elimination --inline --sccp --tosa-validate --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-make-broadcastable --duplicate-function-elimination --tosa-infer-shapes --tosa-test-quant-utils --test-func-erase-result --test-func-insert-result --test-tensor-transform-patterns=\"test-fold-constant-extract-slice\" --test-func-insert-arg --test-tensor-transform-patterns=\"test-fold-consecutive-insert-extract-slice\" --composite-fixed-point-pass --test-func-erase-result --tosa-make-broadcastable --fold-tensor-subset-ops --tosa-test-quant-utils | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-scf-pipelining --tosa-layerwise-constant-fold --test-scf-pipelining=\"no-epilogue-peeling\" --test-func-set-type --symbol-dce --control-flow-sink --test-func-erase-arg --tosa-optional-decompositions --mem2reg=\"region-simplify\" --mem2reg --test-scf-pipelining --scf-for-loop-specialization --tosa-reduce-transposes --test-scf-if-utils --scf-parallel-loop-specialization | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-data-layout-propagation | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-math-polynomial-approximation --test-expand-math --test-scf-for-utils=\"test-replace-with-new-yields\" --linalg-fold-unit-extent-dims --inline --linalg-specialize-generic-ops --tosa-reduce-transposes --linalg-generalize-named-ops --duplicate-function-elimination --scf-parallel-loop-specialization --test-func-insert-result --test-linalg-rank-reduce-contraction-ops --test-function-pass --canonicalize=\"test-convergence top-down=0\" --test-math-algebraic-simplification | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-affine-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --test-func-insert-result --symbol-dce --linalg-specialize-generic-ops --symbol-dce --canonicalize=\"test-convergence\" --sroa --symbol-dce --arith-unsigned-when-equivalent --test-linalg-pad-fusion --symbol-dce --loop-invariant-subset-hoisting --test-func-erase-result --linalg-inline-scalar-operands | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-elementwise-fusion-patterns=\"control-fusion-by-expansion\" --test-linalg-transform-patterns=\"test-erase-unused-operands-and-results\" --cse --normalize-memrefs --test-func-set-type --expand-strided-metadata --mem2reg=\"region-simplify\" --test-func-insert-arg --linalg-inline-scalar-operands --duplicate-function-elimination | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize=\"test-convergence top-down=0\" --cse --test-linalg-rank-reduce-contraction-ops --sroa --cse --canonicalize --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --sccp --symbol-dce --test-linalg-rank-reduce-contraction-ops --linalg-named-op-conversion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-expand=\"include-bf16\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-result --test-func-insert-result --test-scf-while-op-builder --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --loop-invariant-code-motion --arith-emulate-wide-int --arith-int-range-narrowing --arith-expand=\"include-bf16\" --scf-for-loop-specialization --arith-emulate-wide-int=\"widest-int-supported=32\" --test-scf-for-utils --composite-fixed-point-pass --composite-fixed-point-pass --test-scf-pipelining=\"no-epilogue-peeling\" --scf-for-loop-peeling --scf-for-loop-peeling --test-scf-for-utils=\"test-replace-with-new-yields\" --test-func-insert-result --scf-forall-to-parallel --test-arith-emulate-wide-int --arith-expand --loop-invariant-code-motion --scf-for-loop-canonicalization --scf-parallel-loop-fusion --arith-expand --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --loop-invariant-subset-hoisting --topological-sort --scf-parallel-loop-specialization --sccp --loop-invariant-subset-hoisting --mem2reg --arith-emulate-unsupported-floats --scf-for-loop-peeling --test-scf-pipelining | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --inline --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-func-erase-result --sroa --test-func-erase-result --test-func-insert-arg --sccp --remove-dead-values --symbol-dce --canonicalize=\"test-convergence top-down=0\" --test-func-insert-result --remove-dead-values | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --test-func-erase-result --test-func-erase-result --cse --loop-invariant-subset-hoisting --test-func-erase-arg --duplicate-function-elimination --test-func-erase-result --topological-sort --remove-dead-values --test-func-erase-arg --composite-fixed-point-pass --remove-dead-values --loop-invariant-subset-hoisting --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0]]]",
        "test_line": "[[[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v1/tosa.4f9adb6c2f49bb73.mlir --cse | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-math-polynomial-approximation=\"enable-avx2\" --test-func-erase-arg --test-math-polynomial-approximation=\"enable-avx2\" --sccp --math-extend-to-supported-types --test-expand-math --tosa-infer-shapes --sroa --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --loop-invariant-code-motion --math-extend-to-supported-types --tosa-optional-decompositions --test-arith-emulate-wide-int --test-func-set-type --test-expand-math --arith-expand=\"include-bf16\" --mem2reg=\"region-simplify\" --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --control-flow-sink --loop-invariant-subset-hoisting --mem2reg=\"region-simplify\" --canonicalize --test-function-pass --arith-expand | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-result --loop-invariant-code-motion --linalg-fuse-elementwise-ops --test-func-erase-arg --test-func-set-type --test-math-to-vcix --sccp --cse --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-tensor-copy-insertion --linalg-specialize-generic-ops --duplicate-function-elimination --linalg-named-op-conversion --test-expand-math | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --test-linalg-pad-fusion --test-function-pass --test-linalg-data-layout-propagation --fold-tensor-subset-ops --sroa --composite-fixed-point-pass --canonicalize=\"test-convergence\" --test-linalg-greedy-fusion --linalg-inline-scalar-operands --linalg-generalize-named-ops --sroa --sccp --tosa-reduce-transposes --tosa-layerwise-constant-fold --test-func-erase-arg --composite-fixed-point-pass --loop-invariant-code-motion --linalg-generalize-named-ops --test-func-insert-result --loop-invariant-subset-hoisting | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-transform-patterns=\"test-vector-transfer-forwarding-patterns\" --test-function-pass --linalg-generalize-named-ops --expand-realloc=\"emit-deallocs\" --test-linalg-elementwise-fusion-patterns=\"collapse-dimensions-control=2,3\" --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --scf-for-loop-range-folding --test-scf-uplift-while-to-for --arith-expand=\"include-bf16\" --test-func-erase-arg --topological-sort --inline --inline --test-scf-uplift-while-to-for --scf-forall-to-parallel --scf-parallel-loop-fusion --test-scf-uplift-while-to-for --composite-fixed-point-pass --scf-for-loop-canonicalization --test-scf-pipelining=\"annotate\" --loop-invariant-code-motion --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-insert-arg --int-range-optimizations --int-range-optimizations --cse --arith-emulate-wide-int --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --loop-invariant-code-motion --canonicalize --test-func-erase-arg --int-range-optimizations --int-range-optimizations --composite-fixed-point-pass --test-function-pass --test-func-set-type --arith-unsigned-when-equivalent --test-func-erase-arg --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --symbol-dce --remove-dead-values --composite-fixed-point-pass --sccp --control-flow-sink --test-func-erase-result --test-func-erase-arg --sroa --sccp --test-func-erase-result --mem2reg --test-func-erase-arg --test-func-insert-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-result --remove-dead-values --loop-invariant-code-motion --loop-invariant-code-motion --canonicalize=\"test-convergence top-down=0\" --test-func-set-type --loop-invariant-code-motion --test-func-erase-result --loop-invariant-code-motion --symbol-dce --test-func-insert-result --topological-sort --canonicalize --test-func-set-type | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0]]]",
        "test_line": "[[[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v1/tosa.4f9adb6c2f49bb73.mlir --sccp --tosa-reduce-transposes --topological-sort --test-func-set-type --sroa --sccp --test-function-pass --loop-invariant-subset-hoisting --test-func-insert-arg --fold-tensor-subset-ops --cse --test-tensor-transform-patterns=\"use-foreach\" --fold-tensor-subset-ops --test-function-pass --inline --cse --tosa-optional-decompositions --test-func-insert-arg --symbol-dce --control-flow-sink --loop-invariant-code-motion --test-tensor-transform-patterns=\"test-reassociative-reshape-folding\" --control-flow-sink --tosa-reduce-transposes --test-func-insert-arg --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-optional-decompositions --inline --test-arith-emulate-wide-int=\"widest-int-supported=8\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --canonicalize=\"test-convergence\" --duplicate-function-elimination --arith-emulate-wide-int=\"widest-int-supported=32\" --arith-expand=\"include-bf16\" --arith-unsigned-when-equivalent --test-linalg-greedy-fusion --sccp --cse --composite-fixed-point-pass --fold-tensor-subset-ops --linalg-fuse-elementwise-ops --convert-elementwise-to-linalg --test-linalg-greedy-fusion --test-function-pass --loop-invariant-code-motion --canonicalize --sccp --fold-tensor-subset-ops --loop-invariant-subset-hoisting --control-flow-sink --test-func-set-type --test-linalg-pad-fusion --test-func-erase-arg --canonicalize=\"test-convergence\" --test-linalg-drop-unit-dims --test-linalg-drop-unit-dims | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --math-extend-to-supported-types --test-memref-bound-check --test-math-algebraic-simplification --linalg-inline-scalar-operands --sccp --composite-fixed-point-pass --loop-invariant-subset-hoisting --test-memref-dependence-check --linalg-inline-scalar-operands --math-extend-to-supported-types --test-linalg-decompose-ops --loop-invariant-code-motion --test-linalg-rank-reduce-contraction-ops --symbol-dce --test-math-polynomial-approximation=\"enable-avx2\" --test-func-insert-result --test-expand-math --test-expand-math --mem2reg=\"region-simplify\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --expand-realloc --test-linalg-greedy-fusion --sccp --math-extend-to-supported-types --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --memref-expand --test-linalg-elementwise-fusion-patterns=\"fuse-with-reshape-by-collapsing-control\" --test-math-polynomial-approximation=\"enable-avx2\" --test-linalg-decompose-ops --math-extend-to-supported-types --test-linalg-elementwise-fusion-patterns=\"fuse-multiuse-producer\" --loop-invariant-code-motion --mem2reg --test-math-polynomial-approximation=\"enable-avx2\" --test-memref-dependence-check --test-linalg-elementwise-fusion-patterns=\"fuse-generic-ops-control\" --linalg-inline-scalar-operands --linalg-specialize-generic-ops --test-func-insert-arg --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --linalg-inline-scalar-operands --linalg-fold-unit-extent-dims=\"use-rank-reducing-slices\" --test-func-set-type --linalg-inline-scalar-operands --test-linalg-transform-patterns=\"test-vector-transfer-forwarding-patterns\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --normalize-memrefs --arith-emulate-wide-int --scf-for-loop-range-folding --memref-expand --topological-sort --test-scf-uplift-while-to-for --normalize-memrefs --canonicalize=\"test-convergence top-down=0\" --scf-for-to-while --scf-for-to-while --int-range-optimizations --symbol-dce --test-math-polynomial-approximation --test-math-polynomial-approximation=\"enable-avx2\" --loop-invariant-code-motion --test-scf-if-utils | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --memref-expand | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --arith-emulate-wide-int=\"widest-int-supported=32\" --loop-invariant-code-motion --arith-emulate-unsupported-floats --test-function-pass --control-flow-sink --canonicalize=\"test-convergence top-down=0\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-erase-result --test-func-insert-arg --topological-sort | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --composite-fixed-point-pass --test-function-pass --loop-invariant-subset-hoisting --loop-invariant-subset-hoisting --loop-invariant-subset-hoisting --mem2reg --test-func-erase-result --sccp --mem2reg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0]]]",
        "test_line": "[[[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v1/tosa.4f9adb6c2f49bb73.mlir --cse --test-func-erase-result --mem2reg --test-tensor-copy-insertion=\"must-infer-memory-space\" --test-func-set-type --symbol-dce --sroa --tosa-test-quant-utils --topological-sort --test-func-insert-arg --control-flow-sink --test-func-insert-result --cse --tosa-reduce-transposes --loop-invariant-code-motion --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --test-func-erase-arg --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --test-scf-while-op-builder --tosa-infer-shapes --test-scf-pipelining=\"annotate\" --sccp --scf-forall-to-for --test-scf-if-utils --test-scf-uplift-while-to-for --symbol-dce --tosa-infer-shapes --test-func-set-type --test-scf-uplift-while-to-for --mem2reg --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --tosa-make-broadcastable --canonicalize --fold-tensor-subset-ops --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --sccp --mem2reg=\"region-simplify\" --tosa-test-quant-utils --composite-fixed-point-pass --mem2reg=\"region-simplify\" --cse --canonicalize=\"test-convergence top-down=0\" --tosa-reduce-transposes --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --int-range-optimizations --remove-dead-values --arith-emulate-wide-int --composite-fixed-point-pass --tosa-reduce-transposes --test-tensor-copy-insertion=\"bufferize-function-boundaries\" --test-emulate-narrow-int=\"memref-load-bitwidth=32\" --inline --canonicalize=\"test-convergence top-down=0\" --test-tensor-copy-insertion=\"must-infer-memory-space\" --tosa-layerwise-constant-fold --canonicalize --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-pad-fusion --symbol-dce --linalg-fuse-elementwise-ops --test-linalg-greedy-fusion --control-flow-sink --test-func-set-type --test-func-erase-arg --linalg-named-op-conversion --test-func-set-type --topological-sort --test-function-pass --test-linalg-drop-unit-dims --sccp --test-math-to-vcix --linalg-specialize-generic-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-elementwise-fusion-patterns=\"collapse-dimensions-control=2,3\" --sccp --linalg-generalize-named-ops --composite-fixed-point-pass --test-linalg-drop-unit-dims --test-math-polynomial-approximation --topological-sort --canonicalize --topological-sort --memref-emulate-wide-int --test-arith-emulate-wide-int=\"widest-int-supported=8\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-rank-reduce-contraction-ops --test-func-set-type --test-memref-bound-check --resolve-ranked-shaped-type-result-dims --test-linalg-drop-unit-dims --test-expand-math | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-function-pass --test-linalg-rank-reduce-contraction-ops --linalg-specialize-generic-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --test-func-insert-result --inline --test-func-erase-result --test-func-insert-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --symbol-dce --arith-unsigned-when-equivalent --loop-invariant-subset-hoisting --arith-emulate-unsupported-floats --arith-expand=\"include-bf16\" --sccp --symbol-dce --sccp --sroa --duplicate-function-elimination --remove-dead-values --canonicalize=\"test-convergence\" --arith-int-range-narrowing --loop-invariant-subset-hoisting --mem2reg --inline --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sccp --arith-emulate-wide-int=\"widest-int-supported=32\" --test-function-pass --loop-invariant-code-motion --cse --loop-invariant-code-motion --test-func-erase-arg --canonicalize --loop-invariant-code-motion --test-arith-emulate-wide-int --composite-fixed-point-pass --composite-fixed-point-pass --arith-unsigned-when-equivalent --mem2reg=\"region-simplify\" --test-function-pass --test-func-set-type --duplicate-function-elimination --control-flow-sink --test-func-erase-result --arith-unsigned-when-equivalent --test-func-insert-arg --test-func-insert-arg --duplicate-function-elimination --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --inline --duplicate-function-elimination --duplicate-function-elimination --topological-sort --duplicate-function-elimination --remove-dead-values --loop-invariant-subset-hoisting --test-func-set-type --control-flow-sink --loop-invariant-code-motion --loop-invariant-subset-hoisting --canonicalize --test-func-erase-arg --duplicate-function-elimination --duplicate-function-elimination --duplicate-function-elimination --loop-invariant-subset-hoisting --remove-dead-values --duplicate-function-elimination --loop-invariant-code-motion | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0]]]",
        "test_line": "[[[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07]]]"
    },
    "//workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 //workspace/mlir-inconsistent/tosa_seed_v1/tosa.4f9adb6c2f49bb73.mlir --inline --canonicalize=\"test-convergence\" --sccp --cse --tosa-test-quant-utils --topological-sort --tosa-test-quant-utils --tosa-infer-shapes --test-func-erase-result --test-func-erase-result | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-scf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-func-set-type --tosa-infer-shapes --test-func-erase-arg --control-flow-sink --sccp --composite-fixed-point-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -tosa-to-arith | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --test-emulate-narrow-int=\"memref-load-bitwidth=32\" --test-tensor-copy-insertion=\"must-infer-memory-space\" --int-range-optimizations --arith-int-range-narrowing --arith-expand=\"include-bf16\" --test-function-pass --sccp --tosa-make-broadcastable --canonicalize=\"test-convergence top-down=0\" --inline --arith-expand --arith-expand --tosa-optional-decompositions --inline --tosa-infer-shapes --test-function-pass --tosa-make-broadcastable --test-tensor-copy-insertion=\"allow-return-allocs-from-loops\" --arith-emulate-wide-int=\"widest-int-supported=32\" --cse --tosa-layerwise-constant-fold=\"aggressive-reduce-constant\" --duplicate-function-elimination --sccp --test-func-set-type --tosa-reduce-transposes --loop-invariant-subset-hoisting --int-range-optimizations --control-flow-sink --test-func-erase-arg --tosa-reduce-transposes --arith-emulate-wide-int --duplicate-function-elimination --test-tensor-transform-patterns --test-function-pass --topological-sort --arith-int-range-narrowing=\"int-bitwidths-supported=32\" --test-emulate-narrow-int | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -pass-pipeline=\"builtin.module(func.func(tosa-to-linalg))\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-math-polynomial-approximation=\"enable-avx2\" --mem2reg --duplicate-function-elimination --test-linalg-elementwise-fusion-patterns --test-linalg-transform-patterns=\"test-bubble-up-extract-slice-op-pattern\" --test-linalg-transform-patterns=\"test-vector-transfer-forwarding-patterns\" --test-function-pass --math-uplift-to-fma --symbol-dce --linalg-named-op-conversion --test-expand-math --loop-invariant-code-motion --convert-elementwise-to-linalg --test-tensor-transform-patterns=\"test-rewrite-extract-slice-from-collapse-shape\" --test-func-insert-result --duplicate-function-elimination --arith-emulate-unsupported-floats=\"source-types=bf16,f8E4M3FNUZ target-type=f32\" --linalg-inline-scalar-operands --test-linalg-rank-reduce-contraction-ops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --symbol-dce --arith-int-range-narrowing --arith-emulate-wide-int=\"widest-int-supported=32\" --arith-emulate-wide-int=\"widest-int-supported=32\" --composite-fixed-point-pass --linalg-fuse-elementwise-ops --test-emulate-narrow-int=\"arith-compute-bitwidth=1 memref-load-bitwidth=32\" --cse --test-arith-emulate-wide-int=\"widest-int-supported=8\" --loop-invariant-subset-hoisting --test-tensor-transform-patterns=\"test-reassociative-reshape-folding\" --test-emulate-narrow-int --fold-tensor-subset-ops --test-func-insert-result --test-tensor-transform-patterns=\"test-reassociative-reshape-folding\" --test-linalg-decompose-ops --test-function-pass --canonicalize --test-func-erase-arg --int-range-optimizations --linalg-named-op-conversion --test-linalg-data-layout-propagation --test-func-insert-result --symbol-dce --control-flow-sink --test-func-insert-arg --inline --int-range-optimizations --test-func-insert-result --topological-sort --test-math-polynomial-approximation --sroa --sccp --test-func-insert-result --test-linalg-drop-unit-dims --symbol-dce | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-math-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-linalg-rank-reduce-contraction-ops --sroa --test-func-erase-arg --linalg-generalize-named-ops --linalg-inline-scalar-operands --test-func-erase-arg | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-index-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --control-flow-sink --sccp --test-linalg-decompose-ops=\"remove-dead-args-and-results\" --test-function-pass --test-func-insert-arg --arith-unsigned-when-equivalent | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -one-shot-bufferize=\"bufferize-function-boundaries\" | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --test-arith-emulate-wide-int=\"widest-int-supported=8\" --test-linalg-transform-patterns=\"test-swap-extract-slice-with-fill-pattern\" --test-linalg-transform-patterns=\"test-swap-extract-slice-with-fill-pattern\" --memref-expand --normalize-memrefs --test-linalg-transform-patterns=\"test-decompose-winograd-ops\" --test-func-erase-arg --test-memref-dependence-check --test-func-insert-arg --memref-emulate-wide-int --sccp --test-linalg-greedy-fusion --linalg-named-op-conversion --memref-expand --test-func-set-type --resolve-ranked-shaped-type-result-dims | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-linalg-to-parallel-loops | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --resolve-shaped-type-result-dims --scf-parallel-loop-fusion --mem2reg --canonicalize=\"test-convergence top-down=0\" --topological-sort --test-scf-if-utils --scf-for-loop-range-folding --test-scf-if-utils --cse --arith-int-range-narrowing --scf-forall-to-for --scf-parallel-loop-specialization --topological-sort --symbol-dce --arith-emulate-wide-int | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-scf-to-cf | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-arith-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -expand-strided-metadata | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -finalize-memref-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --sroa --test-func-set-type --test-function-pass | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-cf-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 --remove-dead-values --symbol-dce --test-function-pass --sccp --cse --loop-invariant-subset-hoisting --test-func-insert-result --composite-fixed-point-pass --loop-invariant-code-motion --control-flow-sink --sccp --duplicate-function-elimination --control-flow-sink --test-func-insert-arg --loop-invariant-code-motion --control-flow-sink | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -convert-func-to-llvm | //workspace/mlir-inconsistent/third_party_tools/mlir-opt-449e2f5d66 -reconcile-unrealized-casts | timeout 10 //MLIR/llvm-release/llvm-project/build/bin/mlir-cpu-runner -e main -entry-point-result=void --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_c_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_runner_utils.so --shared-libs=//MLIR/llvm-release/llvm-project/build/lib/libmlir_async_runtime.so": {
        "base_line": "[[[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0],\n[0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0]]]",
        "test_line": "[[[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07],\n[-1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07,    -1.78814e-07]]]"
    }
}
