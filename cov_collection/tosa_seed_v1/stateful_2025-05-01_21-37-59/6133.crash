{
    "llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) \nSignalHandler(int, siginfo_t*, void*) Signals.cpp:0:0\n__restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x14420)\nraise /build/glibc-e2p3jK/glibc-2.31/signal/../sysdeps/unix/sysv/linux/raise.c:51:1\nabort /build/glibc-e2p3jK/glibc-2.31/stdlib/abort.c:81:7\nget_sysdep_segment_value /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:509:8\n_nl_load_domain /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:970:34\n(/lib/x86_64-linux-gnu/libc.so.6+0x33fd6)\n(anonymous namespace)::TestMemRefStrideCalculation::runOnOperation() TestMemRefStrideCalculation.cpp:0:0\nmlir::detail::OpToOpPassAdaptor::run(mlir::Pass*, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int) \nmlir::detail::OpToOpPassAdaptor::runPipeline(mlir::OpPassManager&, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int, mlir::PassInstrumentor*, mlir::PassInstrumentation::PipelineParentInfo const*) \nmlir::PassManager::run(mlir::Operation*) \nperformActions(llvm::raw_ostream&, std::shared_ptr<llvm::SourceMgr> const&, mlir::MLIRContext*, mlir::MlirOptMainConfig const&) MlirOptMain.cpp:0:0\nprocessBuffer(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::MlirOptMainConfig const&, mlir::DialectRegistry&, llvm::ThreadPoolInterface*) MlirOptMain.cpp:0:0\nllvm::LogicalResult llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>::callback_fn<mlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&)::'lambda'(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>(long, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&) MlirOptMain.cpp:0:0\nmlir::splitAndProcessBuffer(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>, llvm::raw_ostream&, llvm::StringRef, llvm::StringRef) \nmlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, llvm::StringRef, mlir::DialectRegistry&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, mlir::DialectRegistry&) \nmain \n__libc_start_main /build/glibc-e2p3jK/glibc-2.31/csu/../csu/libc-start.c:342:3\n_start ": [
        "//workspace/mlir-inconsistent/crash_file/tosa.8687090d08df5a7e.mlir.eeafde521f464c88.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8687090d08df5a7e.mlir.eeafde521f464c88.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8687090d08df5a7e.mlir.9f31d443a13015d2.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8687090d08df5a7e.mlir.59b2ff3b05f512ce.mlir"
    ],
    "llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) \nSignalHandler(int, siginfo_t*, void*) Signals.cpp:0:0\n__restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x14420)\nraise /build/glibc-e2p3jK/glibc-2.31/signal/../sysdeps/unix/sysv/linux/raise.c:51:1\nabort /build/glibc-e2p3jK/glibc-2.31/stdlib/abort.c:81:7\nget_sysdep_segment_value /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:509:8\n_nl_load_domain /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:970:34\n(/lib/x86_64-linux-gnu/libc.so.6+0x33fd6)\n(anonymous namespace)::aliasingFuncOpBBArgsAnalysis(mlir::func::FuncOp, mlir::bufferization::OneShotAnalysisState&, mlir::bufferization::func_ext::FuncAnalysisState&) OneShotModuleBufferize.cpp:0:0\nmlir::bufferization::analyzeModuleOp(mlir::ModuleOp, mlir::bufferization::OneShotAnalysisState&, mlir::bufferization::BufferizationStatistics*) \nmlir::bufferization::insertTensorCopies(mlir::Operation*, mlir::bufferization::OneShotBufferizationOptions const&, mlir::bufferization::BufferizationStatistics*) \n(anonymous namespace)::TestTensorCopyInsertionPass::runOnOperation() TestTensorCopyInsertion.cpp:0:0\nmlir::detail::OpToOpPassAdaptor::run(mlir::Pass*, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int) \nmlir::detail::OpToOpPassAdaptor::runPipeline(mlir::OpPassManager&, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int, mlir::PassInstrumentor*, mlir::PassInstrumentation::PipelineParentInfo const*) \nmlir::PassManager::run(mlir::Operation*) \nperformActions(llvm::raw_ostream&, std::shared_ptr<llvm::SourceMgr> const&, mlir::MLIRContext*, mlir::MlirOptMainConfig const&) MlirOptMain.cpp:0:0\nprocessBuffer(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::MlirOptMainConfig const&, mlir::DialectRegistry&, llvm::ThreadPoolInterface*) MlirOptMain.cpp:0:0\nllvm::LogicalResult llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>::callback_fn<mlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&)::'lambda'(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>(long, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&) MlirOptMain.cpp:0:0\nmlir::splitAndProcessBuffer(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>, llvm::raw_ostream&, llvm::StringRef, llvm::StringRef) \nmlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, llvm::StringRef, mlir::DialectRegistry&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, mlir::DialectRegistry&) \nmain \n__libc_start_main /build/glibc-e2p3jK/glibc-2.31/csu/../csu/libc-start.c:342:3\n_start ": [
        "//workspace/mlir-inconsistent/crash_file/tosa.8687090d08df5a7e.mlir.fcead8936637dfde.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8687090d08df5a7e.mlir.fcead8936637dfde.mlir"
    ],
    "llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) \nSignalHandler(int, siginfo_t*, void*) Signals.cpp:0:0\n__restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x14420)\nraise /build/glibc-e2p3jK/glibc-2.31/signal/../sysdeps/unix/sysv/linux/raise.c:51:1\nabort /build/glibc-e2p3jK/glibc-2.31/stdlib/abort.c:81:7\nget_sysdep_segment_value /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:509:8\n_nl_load_domain /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:970:34\n(/lib/x86_64-linux-gnu/libc.so.6+0x33fd6)\n(anonymous namespace)::aliasingFuncOpBBArgsAnalysis(mlir::func::FuncOp, mlir::bufferization::OneShotAnalysisState&, mlir::bufferization::func_ext::FuncAnalysisState&) OneShotModuleBufferize.cpp:0:0\nmlir::bufferization::analyzeModuleOp(mlir::ModuleOp, mlir::bufferization::OneShotAnalysisState&, mlir::bufferization::BufferizationStatistics*) \nmlir::bufferization::insertTensorCopies(mlir::Operation*, mlir::bufferization::OneShotBufferizationOptions const&, mlir::bufferization::BufferizationStatistics*) \nmlir::bufferization::runOneShotModuleBufferize(mlir::ModuleOp, mlir::bufferization::OneShotBufferizationOptions const&, mlir::bufferization::BufferizationStatistics*) \n(anonymous namespace)::OneShotBufferizePass::runOnOperation() Bufferize.cpp:0:0\nmlir::detail::OpToOpPassAdaptor::run(mlir::Pass*, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int) \nmlir::detail::OpToOpPassAdaptor::runPipeline(mlir::OpPassManager&, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int, mlir::PassInstrumentor*, mlir::PassInstrumentation::PipelineParentInfo const*) \nmlir::PassManager::run(mlir::Operation*) \nperformActions(llvm::raw_ostream&, std::shared_ptr<llvm::SourceMgr> const&, mlir::MLIRContext*, mlir::MlirOptMainConfig const&) MlirOptMain.cpp:0:0\nprocessBuffer(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::MlirOptMainConfig const&, mlir::DialectRegistry&, llvm::ThreadPoolInterface*) MlirOptMain.cpp:0:0\nllvm::LogicalResult llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>::callback_fn<mlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&)::'lambda'(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>(long, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&) MlirOptMain.cpp:0:0\nmlir::splitAndProcessBuffer(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>, llvm::raw_ostream&, llvm::StringRef, llvm::StringRef) \nmlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, llvm::StringRef, mlir::DialectRegistry&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, mlir::DialectRegistry&) \nmain \n__libc_start_main /build/glibc-e2p3jK/glibc-2.31/csu/../csu/libc-start.c:342:3\n_start ": [
        "//workspace/mlir-inconsistent/crash_file/tosa.8687090d08df5a7e.mlir.b9457ec6e3af1714.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8687090d08df5a7e.mlir.b9457ec6e3af1714.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8687090d08df5a7e.mlir.e409e95be9c5c456.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8687090d08df5a7e.mlir.f5a83706bf3ba3e6.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8687090d08df5a7e.mlir.b2bff36d4cfb0cd1.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8687090d08df5a7e.mlir.d548b9d83f59d80f.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8687090d08df5a7e.mlir.56c944804ee4e423.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8687090d08df5a7e.mlir.af7ef70df2760b6d.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8687090d08df5a7e.mlir.44449f39328af9c1.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8687090d08df5a7e.mlir.148a80ab5c0ef637.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8687090d08df5a7e.mlir.34d698af5faa0212.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8687090d08df5a7e.mlir.5fea99f28becea13.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8687090d08df5a7e.mlir.28bcd873f28e8e3f.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8687090d08df5a7e.mlir.2fe109edba18bec2.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8687090d08df5a7e.mlir.49f17111bac2994e.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8687090d08df5a7e.mlir.53b0a87ba060e47b.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8687090d08df5a7e.mlir.e52938b9d7cf67cc.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8687090d08df5a7e.mlir.25056bfe0012962f.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8687090d08df5a7e.mlir.6fc97403724ffe04.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8687090d08df5a7e.mlir.70e48c7ca97327cb.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8687090d08df5a7e.mlir.442c952b0c1a14fc.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8687090d08df5a7e.mlir.7f1bee1066a12aae.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8687090d08df5a7e.mlir.5a2c83dfe534e300.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8687090d08df5a7e.mlir.824313c2d8df0b1e.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8687090d08df5a7e.mlir.65460d35807a2040.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8687090d08df5a7e.mlir.226ed6afe5843ae7.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8687090d08df5a7e.mlir.ad9088f574917a5f.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8687090d08df5a7e.mlir.71102b5106a8e4a6.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8687090d08df5a7e.mlir.653b333befc37655.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8687090d08df5a7e.mlir.903124ff1d96266e.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8687090d08df5a7e.mlir.79d68482a028e982.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8687090d08df5a7e.mlir.e5cb947e613049c3.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8687090d08df5a7e.mlir.3219251f1141d0e2.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8687090d08df5a7e.mlir.e35779791fa0495c.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8687090d08df5a7e.mlir.0b3461c062a4257f.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8687090d08df5a7e.mlir.63ecc846b7fbe526.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8687090d08df5a7e.mlir.f053a5e9e4309d57.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8687090d08df5a7e.mlir.c1517e0ef114d4d9.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8687090d08df5a7e.mlir.740f28f0a260b428.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.8687090d08df5a7e.mlir.2c9a0245de0f2135.mlir"
    ]
}
{
    "llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) \nSignalHandler(int, siginfo_t*, void*) Signals.cpp:0:0\n__restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x14420)\nraise /build/glibc-e2p3jK/glibc-2.31/signal/../sysdeps/unix/sysv/linux/raise.c:51:1\nabort /build/glibc-e2p3jK/glibc-2.31/stdlib/abort.c:81:7\nget_sysdep_segment_value /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:509:8\n_nl_load_domain /build/glibc-e2p3jK/glibc-2.31/intl/loadmsgcat.c:970:34\n(/lib/x86_64-linux-gnu/libc.so.6+0x33fd6)\n(anonymous namespace)::TestMemRefStrideCalculation::runOnOperation() TestMemRefStrideCalculation.cpp:0:0\nmlir::detail::OpToOpPassAdaptor::run(mlir::Pass*, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int) \nmlir::detail::OpToOpPassAdaptor::runPipeline(mlir::OpPassManager&, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int, mlir::PassInstrumentor*, mlir::PassInstrumentation::PipelineParentInfo const*) \nmlir::PassManager::run(mlir::Operation*) \nperformActions(llvm::raw_ostream&, std::shared_ptr<llvm::SourceMgr> const&, mlir::MLIRContext*, mlir::MlirOptMainConfig const&) MlirOptMain.cpp:0:0\nprocessBuffer(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::MlirOptMainConfig const&, mlir::DialectRegistry&, llvm::ThreadPoolInterface*) MlirOptMain.cpp:0:0\nllvm::LogicalResult llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>::callback_fn<mlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&)::'lambda'(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>(long, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&) MlirOptMain.cpp:0:0\nmlir::splitAndProcessBuffer(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::function_ref<llvm::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>, llvm::raw_ostream&, llvm::StringRef, llvm::StringRef) \nmlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, llvm::StringRef, mlir::DialectRegistry&) \nmlir::MlirOptMain(int, char**, llvm::StringRef, mlir::DialectRegistry&) \nmain \n__libc_start_main /build/glibc-e2p3jK/glibc-2.31/csu/../csu/libc-start.c:342:3\n_start ": [
        "//workspace/mlir-inconsistent/crash_file/tosa.aadc861f6932c13a.mlir.b43d21e78dedd239.mlir",
        "//workspace/mlir-inconsistent/crash_file/tosa.aadc861f6932c13a.mlir.b43d21e78dedd239.mlir"
    ]
}
